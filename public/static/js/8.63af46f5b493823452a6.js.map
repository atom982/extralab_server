{"version":3,"sources":["webpack:///static/js/8.63af46f5b493823452a6.js","webpack:///./src/components/obrada/Obrada.vue","webpack:///./src/components/obrada/functions/interpretacija.js","webpack:///./src/components/obrada/data-izbornik/izbornik.js","webpack:///./src/components/obrada/BadgeColumn.vue?ddde","webpack:///./src/components/obrada/Obrada.vue?5ffa","webpack:///./src/components/obrada/Obrada.vue?2f4e","webpack:///./src/components/obrada/BadgeColumn.vue?e141","webpack:///./src/components/obrada/BadgeColumn.vue?1751","webpack:///./node_modules/core-js/library/modules/es6.object.get-own-property-names.js","webpack:///src/components/obrada/Obrada.vue","webpack:///./node_modules/vue-loading-overlay/dist/vue-loading.css","webpack:///src/components/obrada/BadgeColumn.vue","webpack:///./node_modules/core-js/library/modules/_object-gopn-ext.js","webpack:///./node_modules/vue-loading-overlay/dist/vue-loading.css?ff3f","webpack:///./node_modules/pdfobject/pdfobject.js","webpack:///./src/components/obrada/BadgeColumn.vue","webpack:///./src/components/obrada/Obrada.vue?5677","webpack:///./node_modules/vue-loading-overlay/dist/vue-loading.min.js","webpack:///./node_modules/babel-runtime/core-js/object/get-own-property-names.js","webpack:///./src/components/obrada/functions/reference.js","webpack:///./node_modules/core-js/library/fn/object/get-own-property-names.js","webpack:///./src/services/utils.js","webpack:///./node_modules/core-js/library/modules/_object-gopn.js"],"names":["webpackJsonp","0fl9","module","__webpack_exports__","__webpack_require__","injectStyle","ssrContext","Object","defineProperty","value","__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Obrada_vue__","__WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_340b1f55_hasScoped_true_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Obrada_vue__","normalizeComponent","__vue_styles__","Component","3r/r","exports","None","result","dref","gref","replace","Standard","rezultat","isNaN","Number","Math","abs","Less","LessEqual","LessPlus","Greater","GreaterNoInterp","GreaterEqual","Negativan","includes","Reaktivan","Normalan","toLowerCase","Uredan","Plus","trim","Infekcija","TSH","TRG","HOL","HDL","LDL","fPSA","Sedimentacija","rez1","split","rez2","Bistar","Boja","BojaSpermiogram","Nesto","Exists","Nema","Blasti","Morf","LeuErc","rez","Titar","Specific","8472","data","test","neg","reakt","8LKc","content","i","locals","C8Lq","push","version","sources","names","mappings","file","sourcesContent","sourceRoot","Cprh","render","_vm","this","_h","$createElement","_c","_self","staticClass","directives","name","rawName","main","pdf","expression","on","click","$event","preventDefault","Nazad","_v","_s","verificiran","email_button","attrs","disabled","Email","email","MailDialog","size","id","title","required","domProps","input","target","composing","for","headerText","header","pagination","data_pid","data_length","rezultati_length","Results","length","spol","data_spol","data_min","datum","query_date","today","today_date","forward_disabled","backward_disabled","_l","uzorak","removed","key","sid","sample","retest","save_retest","slot","staticStyle","line-height","tip","align","status","_e","MicrobiologyScenario","text-transform","index","labassay_id","class","table-danger","rezultat_m","pozitivan","table-success","negativan","table-warning","padding","padding-left","MicroResultSelect","padding-right","ResetSample","analit","ime","OpenMicro","unit","font-size","color","opacity","OpenMicroSelect","fa fa-exclamation-triangle icon-right input-icon error-icon","Exclamation","fa fa-check success-icon icon-right input-icon","calculated","Interpretacija","dRef","gRef","$store","state","site","interp","extend","spec","multidata","SelectAnalyser","contextmenu","LabAssayEval","Evaluation","edit","display","undefined","select_options","width","change","$$selectedVal","Array","prototype","filter","call","options","o","selected","map","_value","$set","multiple","option","vise","GetResults","realizovan","MultiGet","odobren","multi_count","GetResultsMulti","Reference","Calculate","manual","RetestEnable","RetestDisable","min-height","final","final_pdf","samples","link","pacijent","prezime","Povratak","partials_condition","Partials","ref","show","cancelText","okText","update:show","naslov","labID","opis","jedinica","refd","refg","rezultat_multiple","flag","naziv","kod","min-width","ExclamationMulti","CurrentTest","large","select","update","ShowAntibiotics","ShowBacteries","povratak","empty","TemporaryAntibiotics","TemporaryBacteriesAdd","TemporaryBacteries","filteredBacteries","bactery","_id","type","checked","isArray","chosen","_i","AddBacteries","$$a","$$el","$$c","$$i","concat","slice","Antibiotics","filteredAntibiotics","antibiotik","AddAntibiotics","SelectedBacteries","BacteryTabs","tab","CurrentTab","prikazi","antibiogram","abtk","label","model","callback","$$v","ShowAllBacteries","ModalNegative","pos","ModalPositive","ModalPositiveCondition","MicrobiologyModalHeader","border","MicrobiologyResult","desc","NegativeDescriptions","NegativeResultSelection","DefaultBacteries","PositiveDescriptions","PositiveResultSelection","bakt","SelectBactery","href","action","labassay","sample_status","rezultat_f","jedinice_f","anaassay","aparat","JSON","stringify","updated_at","izabran","IzborTesta","warning","analiza","control","text","reference","access","level","interpretacije","jedinice","element","analyser","multi_test","Procjena","graph","vrijeme","text-align","table_header","showLineChart","optionsLineChart","dataLineChart","analiza_eval","multiparam_izbor","multiparam_izbornik","spinner","flex-direction","justify-content","align-items","float","vertical-align","animation-duration","active","isLoading","can-cancel","on-cancel","onCancel","is-full-page","fullPage","update:active","staticRenderFns","esExports","DQ8Z","FC28","classObject","G5/o","f","KUw5","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_own_property_names__","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_own_property_names___default","n","__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray__","__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray___default","__WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify__","__WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default","__WEBPACK_IMPORTED_MODULE_3_vue__","__WEBPACK_IMPORTED_MODULE_4__router__","__WEBPACK_IMPORTED_MODULE_5_vuex_store__","__WEBPACK_IMPORTED_MODULE_6_services_utils__","__WEBPACK_IMPORTED_MODULE_7__config_config_js__","__WEBPACK_IMPORTED_MODULE_8__BadgeColumn_vue__","__WEBPACK_IMPORTED_MODULE_9__main__","__WEBPACK_IMPORTED_MODULE_10__functions_reference_js__","__WEBPACK_IMPORTED_MODULE_10__functions_reference_js___default","__WEBPACK_IMPORTED_MODULE_11__data_izbornik_izbornik__","__WEBPACK_IMPORTED_MODULE_12_vue_loading_overlay__","__WEBPACK_IMPORTED_MODULE_12_vue_loading_overlay___default","__WEBPACK_IMPORTED_MODULE_13_vue_loading_overlay_dist_vue_loading_css__","__WEBPACK_IMPORTED_MODULE_13_vue_loading_overlay_dist_vue_loading_css___default","__WEBPACK_IMPORTED_MODULE_14__vuestic_components_vuestic_chart_chart_types_LineChart__","__WEBPACK_IMPORTED_MODULE_15_epic_spinners__","__WEBPACK_IMPORTED_MODULE_16_pdfobject__","__WEBPACK_IMPORTED_MODULE_16_pdfobject___default","component","AllowGetSample","MicrobiologyOrder","MicrobiologySample","Antibiograms","Bacteries","negative","positive","BUG","F_RESULT","M_RESULT","RemainingBacteries","klijent","multiparam_id","multiparams","Response","lokacija","timestamp","jmbg","pid","email_tmp","approved","verified","partials","count","nalaz","report","path","url","uzorci","multi_rezultati","check","testovi","rezultati","analysers","analyser_selected","analyser_patient","analitiprikaz","analiti","show_table","resdata","email_changed","Previous","Next","Datum","query","next","previous","toastText","toastIcon","toastPosition","toastDuration","isToastFullWidth","className","components","Loading","a","AtomSpinner","watch","console","log","beforeCreate","_this","get","token","then","res","mounted","_this2","$on","forEach","_","isEmpty","palette","getters","obj","Multi","multi","param","Date","time","getTime","getTimezoneOffset","toISOString","substring","kontrola","sort","b","parse","responsive","maintainAspectRatio","scales","xAxes","gridLines","yAxes","labels","danger","primary","info","datasets","backgroundColor","hex2rgb","css","pointBorderColor","pointBackgroundColor","borderColor","transparent","setTimeout","$refs","staticModalDeleteSample","open","staticModalEditSample","staticModalComment","BarcodePrint","SaveResults","Approve","Verify","Disapprove","UnVerify","height","embed","staticModalError","pdf_exists","dispatch","GetSingleSample","DeletedSample","EditSample","SaveMultiResults","SendMail","warn","AnalyserSelected","Sljedeci","Prethodni","staticModalFind","$route","params","patient","date","document","getElementById","post","userId","RetestSave","antibiotici","ant","Scenario","results","zaprimljen","status_uzorka","stat","localeCompare","numeric","sensitivity","$emit","bakterija","rbr_a","Antibiotici","largeModalneg","largeModalpos","antibgr","antbtk","__v","beforeDestroy","$off","destroyed","created","Created","setDate","getDate","methods","_this3","success","napomena","m_interp","m_opis","multiparam","interpretacija","snizeno","poviseno","staticModalExclamation","e","_this4","response","staticModalLabAssayEvalMulti","staticModalLabAssayEvalSingle","_this5","staticModalEvaluationMulti","staticModalEvaluationSingle","column","columns","_this6","item","indexOf","_this7","splice","_this8","topcije","grupa","grouporder","sifra","IDE","kategorija","eval","sekcija","bakterije","neg_description","pos_description","refSet","unshift","bakterioloski","bakterijed","bakterijei","neg_rezultati","poz_rezultati","counter","ima","maxVal","reduce","max","val","bact","staticModalMicroBacterySelect","_this9","staticModalMicroBactery","event","_this10","staticModalSelectResult","staticModalResetSample","_this11","found","toString","_this12","_this13","customer","antibiogrami","_this14","_this15","anaassays","staticModalAparati","_this16","close","staticModalReference","_this17","printEPL","surname","pacijentRBr","godiste","code","from","_this18","_this19","idNalaza","location","memo","_this20","ana","_this21","single","module_sn","mparam","izbornik","tmpOptionsAna","nazivTesta","sn","dilucija","rezultat_i","izbor","largeModalMulti","staticModalSendMail","_this22","showToast","icon","position","duration","fullWidth","false","_this23","edited","_this24","_this25","_this26","_this27","verify","sendEmail","staticModalVerifyPrivilege","_this28","_this29","created_at","staticModalAllResults","_this30","picked","_this31","MbHo","R7hf","props","rowData","rowIndex","badge-warning","badge-primary","badge-danger","badge-info","badge-violet","badge-dark-blue","Rrel","toIObject","gOPN","windowNames","window","getOwnPropertyNames","getWindowNames","it","SYh3","UqI+","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","root","factory","apply","navigator","supportsPDFs","isIE","supportsPdfActiveX","createAXO","buildFragmentString","embedError","getTargetElement","generatePDFJSiframe","generateEmbedElement","ua","userAgent","supportsPdfMimeType","mimeTypes","isModernBrowser","Promise","isFirefox","isFirefoxWithPDFJS","parseInt","isIOS","ax","ActiveXObject","pdfParams","prop","string","hasOwnProperty","encodeURIComponent","msg","targetSelector","targetNode","body","querySelector","jQuery","nodeType","pdfOpenFragment","PDFJS_URL","fullURL","scrollfix","iframe","style","overflow","innerHTML","getElementsByTagName","page","pdfOpenParams","fallbackLink","assumptionMode","forcePDFJS","fallbackHTML","c","pdfobjectversion","XMpX","__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_BadgeColumn_vue__","__WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_61c2f4b3_hasScoped_true_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_BadgeColumn_vue__","ZPH3","ZZvs","t","self","r","l","m","d","enumerable","Symbol","toStringTag","__esModule","create","bind","default","p","s","u","_compiled","functional","_scopeId","$vnode","parent","__VUE_SSR_CONTEXT__","_registeredComponents","add","_ssrRegister","$root","$options","shadowRoot","_injectStyles","HTMLElement","addEventListener","focusIn","isActive","$el","contains","container","isFullPage","parentElement","focus","removeEventListener","String","viewBox","xmlns","stroke","fill","fill-rule","transform","stroke-width","stroke-opacity","cx","cy","attributeName","to","dur","repeatCount","begin","values","calcMode","fill-opacity","x","y","attributeType","mixins","Boolean","programmatic","Function","transition","canCancel","zIndex","loader","Spinner","Dots","Bars","beforeMount","appendChild","keyPress","cancel","hide","arguments","$destroy","remove","parentNode","removeChild","keyCode","tabindex","aria-busy","aria-label","background","_t","tag","assign","el","createElement","propsData","keys","$slots","install","$loading","aFK5","d5lM","Interpretation","gAsd","$Object","hLWQ","hex","rgb","match","g","n0T6","$keys","hiddenKeys","O"],"mappings":"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","file":"static/js/8.63af46f5b493823452a6.js","sourcesContent":["webpackJsonp([8,53],{\n\n/***/ \"0fl9\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Obrada_vue__ = __webpack_require__(\"KUw5\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_340b1f55_hasScoped_true_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Obrada_vue__ = __webpack_require__(\"Cprh\");\nfunction injectStyle (ssrContext) {\n  __webpack_require__(\"ZPH3\")\n}\nvar normalizeComponent = __webpack_require__(\"VU/8\")\n/* script */\n\n/* template */\n\n/* template functional */\n  var __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-340b1f55\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Obrada_vue__[\"a\" /* default */],\n  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_340b1f55_hasScoped_true_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Obrada_vue__[\"a\" /* default */],\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Component.exports);\n\n\n/***/ }),\n\n/***/ \"3r/r\":\n/***/ (function(module, exports) {\n\nmodule.exports = {\n  None: function None(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    return [\" \", \"No Class\"];\n  },\n\n  Standard: function Standard(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (isNaN(rezultat) || rezultat === \"\" || dref == \"0\" && gref == \"0\") {\n      return [\" \", \"No Class\"];\n    } else if (Number(rezultat) < Number(Math.abs(dref))) {\n      return [\"L\", \"Red\"];\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\n      return [\"H\", \"Red\"];\n    } else if (Number(rezultat) === Number(Math.abs(dref)) || Number(rezultat) === Number(Math.abs(gref))) {\n      return [\" \", \"Yellow\"];\n    } else {\n      return [\" \", \"Green\"];\n    }\n  },\n\n  Less: function Less(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (isNaN(rezultat) || rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\n      return [\"H\", \"Red\"];\n    } else if (Number(rezultat) <= Number(Math.abs(gref)) && Number(rezultat) >= Number(Math.abs(dref))) {\n      return [\" \", \"Yellow\"];\n    } else {\n      return [\" \", \"Green\"];\n    }\n  },\n\n  LessEqual: function LessEqual(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (isNaN(rezultat) || rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\n      return [\"L\", \"Red\"];\n    } else if (Number(rezultat) == Number(Math.abs(gref))) {\n      return [\" \", \"Green\"];\n    } else {\n      return [\" \", \"Green\"];\n    }\n  },\n\n  LessPlus: function LessPlus(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (isNaN(rezultat)) {\n      return [\"H\", \"Red\"];\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\n      return [\"H\", \"Red\"];\n    } else if (Number(rezultat) <= Number(Math.abs(gref)) && Number(rezultat) >= Number(Math.abs(dref))) {\n      return [\" \", \"Yellow\"];\n    } else {\n      return [\" \", \"Green\"];\n    }\n  },\n\n  Greater: function Greater(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (isNaN(rezultat) || rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (Number(rezultat) < Number(Math.abs(gref))) {\n      return [\"L\", \"Red\"];\n    } else if (Number(rezultat) == Number(Math.abs(gref))) {\n      return [\" \", \"Yellow\"];\n    } else {\n      return [\" \", \"Green\"];\n    }\n  },\n\n  GreaterNoInterp: function GreaterNoInterp(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (isNaN(rezultat) || rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (Number(rezultat) < Number(Math.abs(gref))) {\n      return [\" \", \"No Class\"];\n    } else if (Number(rezultat) == Number(Math.abs(gref))) {\n      return [\" \", \"No Class\"];\n    } else {\n      return [\" \", \"No Class\"];\n    }\n  },\n\n  GreaterEqual: function GreaterEqual(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (isNaN(rezultat) || rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (Number(rezultat) < Number(Math.abs(gref))) {\n      return [\"L\", \"Red\"];\n    } else if (Number(rezultat) == Number(Math.abs(gref))) {\n      return [\" \", \"Green\"];\n    } else {\n      return [\" \", \"Green\"];\n    }\n  },\n\n  Negativan: function Negativan(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (rezultat.includes(\"pozitivan\")) {\n      return [\"H\", \"Red\"];\n    } else if (rezultat.includes(\"negativan\")) {\n      return [\" \", \"Green\"];\n    } else if (rezultat.includes(\"graničan\")) {\n      return [\" \", \"Yellow\"];\n    } else {\n      return [\" \", \"Red\"];\n    }\n  },\n\n  Reaktivan: function Reaktivan(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (rezultat.includes(\"reaktivan\")) {\n      return [\"H\", \"Red\"];\n    } else if (rezultat.includes(\"negativan\")) {\n      return [\" \", \"Green\"];\n    } else if (rezultat.includes(\"graničan\")) {\n      return [\" \", \"Yellow\"];\n    } else {\n      return [\" \", \"No Class\"];\n    }\n  },\n\n  Normalan: function Normalan(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (rezultat.toLowerCase().includes(\"norm\") && !rezultat.toLowerCase().includes(\"nije\")) {\n      return [\" \", \"Green\"];\n    } else {\n      return [\"H\", \"Red\"];\n    }\n  },\n\n  Uredan: function Uredan(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (rezultat.toLowerCase().includes(\"ured\") && !rezultat.toLowerCase().includes(\"nije\")) {\n      return [\" \", \"Green\"];\n    } else {\n      return [\"H\", \"Red\"];\n    }\n  },\n\n  Plus: function Plus(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (rezultat.trim() === \"+++\" || rezultat.trim() === \"+ + +\") {\n      return [\" \", \"Green\"];\n    } else {\n      return [\"H\", \"Red\"];\n    }\n  },\n\n  Infekcija: function Infekcija(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (isNaN(rezultat) || rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\n      return [\"pasivna infekcija\", \"Green\"];\n    } else if (Number(rezultat) <= Number(Math.abs(gref)) && Number(rezultat) >= Number(Math.abs(dref))) {\n      return [\"siva zona\", \"Yellow\"];\n    } else {\n      return [\"svježa infekcija\", \"Red\"];\n    }\n  },\n\n  TSH: function TSH(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (isNaN(rezultat) || rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\n      return [\"hipotireoza\", \"Red\"];\n    } else if (Number(rezultat) <= Number(Math.abs(gref)) && Number(rezultat) >= Number(Math.abs(dref))) {\n      return [\"eutireoza\", \"Green\"];\n    } else {\n      return [\"hipertireoza\", \"Red\"];\n    }\n  },\n\n  TRG: function TRG(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (isNaN(rezultat) || rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\n      return [\"visoko\", \"Red\"];\n    } else if (Number(rezultat) <= Number(Math.abs(gref)) && Number(rezultat) >= Number(Math.abs(dref))) {\n      return [\"granično\", \"Yellow\"];\n    } else {\n      return [\"idealno\", \"Green\"];\n    }\n  },\n\n  HOL: function HOL(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (isNaN(rezultat) || rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\n      return [\"visoko\", \"Red\"];\n    } else if (Number(rezultat) <= Number(Math.abs(gref)) && Number(rezultat) >= Number(Math.abs(dref))) {\n      return [\"granično\", \"Yellow\"];\n    } else {\n      return [\"idealno\", \"Green\"];\n    }\n  },\n\n  HDL: function HDL(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (isNaN(rezultat) || rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\n      return [\"nema rizika\", \"Green\"];\n    } else if (Number(rezultat) <= Number(Math.abs(gref)) && Number(rezultat) >= Number(Math.abs(dref))) {\n      return [\"rizik\", \"Yellow\"];\n    } else {\n      return [\"visok rizik\", \"Red\"];\n    }\n  },\n\n  LDL: function LDL(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (isNaN(rezultat) || rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\n      return [\"visok rizik\", \"Red\"];\n    } else if (Number(rezultat) <= Number(Math.abs(gref)) && Number(rezultat) >= Number(Math.abs(dref))) {\n      return [\"granično\", \"Yellow\"];\n    } else {\n      return [\"optimalno\", \"Green\"];\n    }\n  },\n\n  fPSA: function fPSA(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (isNaN(rezultat) || rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\n      return [\"benigni proces\", \"Green\"];\n    } else if (Number(rezultat) <= Number(Math.abs(gref)) && Number(rezultat) >= Number(Math.abs(dref))) {\n      return [\"siva zona\", \"Yellow\"];\n    } else {\n      return [\"H\", \"Red\"];\n    }\n  },\n\n  Sedimentacija: function Sedimentacija(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (rezultat.includes(\"/\")) {\n      var rez1 = rezultat.split(\"/\")[0].trim();\n      var rez2 = rezultat.split(\"/\")[1].trim();\n    } else {\n      var rez1 = rezultat.trim();\n      var rez2 = rezultat.trim();\n    }\n\n    if (isNaN(rez1) || rez1 === \"\" || isNaN(rez2) || rez2 === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (Number(rez1) > Number(Math.abs(gref))) {\n      return [\"H\", \"Red\"];\n    } else if (Number(rez1) === Number(Math.abs(gref))) {\n      return [\" \", \"Yellow\"];\n    } else {\n      return [\" \", \"Green\"];\n    }\n  },\n\n  Bistar: function Bistar(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (rezultat === \"bistar\") {\n      return [\" \", \"Green\"];\n    } else {\n      return [\"H\", \"Red\"];\n    }\n  },\n\n  Boja: function Boja(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (rezultat === \"svjetlo žut\" || rezultat === \"žut\") {\n      return [\" \", \"Green\"];\n    } else {\n      return [\"H\", \"Red\"];\n    }\n  },\n\n  BojaSpermiogram: function BojaSpermiogram(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (rezultat === \"blijedo žut\") {\n      return [\" \", \"Green\"];\n    } else {\n      return [\"H\", \"Red\"];\n    }\n  },\n\n  Nesto: function Nesto(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (rezultat.includes(\"masa\") || rezultat.includes(\"dosta\")) {\n      return [\"H\", \"Red\"];\n    } else {\n      return [\" \", \"Green\"];\n    }\n  },\n\n  Exists: function Exists(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else {\n      return [\"H\", \"Red\"];\n    }\n  },\n\n  Nema: function Nema(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else {\n      return [\"H\", \"Red\"];\n    }\n  },\n\n  Blasti: function Blasti(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (isNaN(rezultat) || rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (Number(rezultat) < Number(Math.abs(dref))) {\n      return [\" \", \"No Class\"];\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\n      return [\"H\", \"Red\"];\n    } else if (Number(rezultat) === Number(Math.abs(dref)) || Number(rezultat) === Number(Math.abs(gref))) {\n      return [\" \", \"No Class\"];\n    } else {\n      return [\" \", \"Green\"];\n    }\n  },\n\n  Morf: function Morf(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (isNaN(rezultat) || rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (Number(rezultat) === Number(Math.abs(dref)) || Number(rezultat) === Number(Math.abs(gref))) {\n      return [\" \", \"Green\"];\n    } else {\n      return [\"H\", \"Red\"];\n    }\n  },\n\n  LeuErc: function LeuErc(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (rezultat.includes(\"-\")) {\n      var rez = rezultat.split(\"-\")[1].trim();\n    } else {\n      var rez = rezultat.trim();\n    }\n\n    if (rez === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (isNaN(rez)) {\n      return [\"H\", \"Red\"];\n    } else if (Number(rez) > Number(gref)) {\n      return [\"H\", \"Red\"];\n    } else if (Number(rez) === Number(gref)) {\n      return [\" \", \"Yellow\"];\n    } else {\n      return [\" \", \"Green\"];\n    }\n  },\n\n  Titar: function Titar(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (rezultat.includes(\":\")) {\n      var rez1 = rezultat.split(\":\")[0].trim();\n      var rez2 = rezultat.split(\":\")[1].trim();\n    } else {\n      var rez1 = rezultat.trim();\n      var rez2 = \"\";\n    }\n\n    if (isNaN(rez1) || rez1 === \"\" || rez1 != \"1\" || isNaN(rez2) || rez2 === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (Number(rez2) > Number(Math.abs(gref))) {\n      return [\"H\", \"Red\"];\n    } else if (Number(rez2) === Number(Math.abs(gref))) {\n      return [\" \", \"Yellow\"];\n    } else {\n      return [\" \", \"Green\"];\n    }\n  },\n\n  Specific: function Specific(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    return [\" \", \"No Class\"];\n  }\n};\n\n/***/ }),\n\n/***/ \"8472\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar data = {\n  test: [\"\", \"test\"]\n};\n\nvar rez = {\n  neg: [\"\", \"negativan\", \"graničan\", \"pozitivan\"],\n  reakt: [\"\", \"negativan\", \"graničan\", \"reaktivan\"]\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  data: data,\n  rez: rez\n});\n\n/***/ }),\n\n/***/ \"8LKc\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(\"DQ8Z\");\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(\"rjj0\")(\"23890cab\", content, true);\n\n/***/ }),\n\n/***/ \"C8Lq\":\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(\"FZ+f\")(true);\n// imports\n\n\n// module\nexports.push([module.i, \".collapse-page__content[data-v-340b1f55]{padding:2rem}.collapse-page__content__title[data-v-340b1f55]{font-size:1.375rem;font-weight:700}.icon-bar a[data-v-340b1f55]{color:#fff;text-decoration:none}.icon-bar a[data-v-340b1f55]:hover{color:#4ae387}i[data-v-340b1f55]:hover{color:#4ae387!important}.circle[data-v-340b1f55]{width:1rem;opacity:.5;height:1rem;border-radius:50%;display:inline-block}\", \"\", {\"version\":3,\"sources\":[\"C:/Users/atom/Desktop/ATOM Projects/ACTIVE Projects/185.62.136.71 (A2 Hosting)/10020 - ExtraLab Laboratorij/elt_client/src/components/obrada/Obrada.vue\"],\"names\":[],\"mappings\":\"AACA,yCACE,YAAc,CACf,AACD,gDACI,mBAAoB,AACpB,eAAkB,CACrB,AACD,6BACE,WAAY,AACZ,oBAAsB,CACvB,AACD,mCACE,aAAe,CAChB,AACD,yBACE,uBAA0B,CAC3B,AACD,yBACE,WAAY,AACZ,WAAa,AACb,YAAa,AACb,kBAAmB,AACnB,oBAAsB,CACvB\",\"file\":\"Obrada.vue\",\"sourcesContent\":[\"\\n.collapse-page__content[data-v-340b1f55] {\\n  padding: 2rem;\\n}\\n.collapse-page__content__title[data-v-340b1f55] {\\n    font-size: 1.375rem;\\n    font-weight: bold;\\n}\\n.icon-bar a[data-v-340b1f55] {\\n  color: #fff;\\n  text-decoration: none;\\n}\\n.icon-bar a[data-v-340b1f55]:hover {\\n  color: #4ae387;\\n}\\ni[data-v-340b1f55]:hover {\\n  color: #4ae387 !important;\\n}\\n.circle[data-v-340b1f55] {\\n  width: 1rem;\\n  opacity: 0.5;\\n  height: 1rem;\\n  border-radius: 50%;\\n  display: inline-block;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n\n/***/ \"Cprh\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"collapse-page\"},[(_vm.show)?_c('div',{staticClass:\"flex md12\"},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.main && _vm.pdf),expression:\"!main && pdf\"}]},[_c('div',{staticClass:\"btn-container\"},[_c('button',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.verificiran),expression:\"verificiran\"}],staticClass:\"btn btn-secondary btn-sm\",on:{\"click\":function($event){$event.preventDefault();_vm.Nazad()}}},[_c('span',{staticClass:\"fa fa-step-backward\"}),_vm._v(\"\\n            \"+_vm._s(' NAZAD')+\"\\n          \")]),_vm._v(\" \"),_c('button',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.verificiran),expression:\"!verificiran\"}],staticClass:\"btn btn-secondary-danger btn-sm\",on:{\"click\":function($event){$event.preventDefault();_vm.Nazad()}}},[_c('span',{staticClass:\"fa fa-step-backward\"}),_vm._v(\"\\n            \"+_vm._s(' NAZAD')+\"\\n          \")]),_vm._v(\" \"),_c('button',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.email_button && _vm.verificiran),expression:\"email_button && verificiran\"}],staticClass:\"btn btn-secondary btn-sm pull-right\",attrs:{\"disabled\":!_vm.Email(_vm.email)},on:{\"click\":function($event){$event.preventDefault();_vm.MailDialog()}}},[_c('span',{staticClass:\"glyphicon glyphicon-send\"}),_vm._v(\"\\n            \"+_vm._s(' Pošalji')+\"\\n          \")]),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.email_button && _vm.verificiran),expression:\"email_button && verificiran\"}],staticClass:\"form-group with-icon-left pull-right\"},[_c('div',{staticClass:\"input-group\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.email),expression:\"email\"}],attrs:{\"size\":\"40\",\"id\":\"input-icon-left\",\"name\":\"input-icon-left\",\"title\":\" \",\"required\":\"\"},domProps:{\"value\":(_vm.email)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.email=$event.target.value}}}),_vm._v(\" \"),_c('i',{staticClass:\"fa fa-envelope-o icon-left input-icon\"}),_vm._v(\" \"),_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"input-icon-left\"}},[_vm._v(_vm._s('Email adresa'))]),_vm._v(\" \"),_c('i',{staticClass:\"bar\"})])])]),_vm._v(\" \"),_c('hr'),_vm._v(\" \"),_c('div',{attrs:{\"id\":\"pdf-container\"}})]),_vm._v(\" \"),_c('vuestic-widget',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.main),expression:\"main\"}],attrs:{\"headerText\":_vm.header,\"pagination\":_vm.pagination,\"main\":_vm.main,\"data_pid\":Number(_vm.data_pid),\"data_length\":Number(_vm.data_length),\"rezultati_length\":_vm.Results.length,\"spol\":_vm.data_spol,\"data_min\":Number(_vm.data_min),\"datum\":_vm.query_date,\"today\":_vm.today_date,\"forward_disabled\":_vm.forward_disabled,\"backward_disabled\":_vm.backward_disabled}},[_c('vuestic-accordion-obrada',_vm._l((_vm.uzorci),function(uzorak){return _c('vuestic-collapse-obrada',{directives:[{name:\"show\",rawName:\"v-show\",value:(!uzorak.removed),expression:\"!uzorak.removed\"}],key:uzorak.sid,attrs:{\"id\":uzorak.sid,\"sample\":uzorak,\"retest\":_vm.save_retest}},[_c('span',{attrs:{\"slot\":\"header\",\"id\":uzorak.sid},slot:\"header\"},[_vm._v(_vm._s(uzorak.sid))]),_vm._v(\" \"),_c('div',{attrs:{\"slot\":\"body\"},slot:\"body\"},[_c('div',{staticStyle:{\"line-height\":\"10px\"}},[_vm._v(\" \")]),_vm._v(\" \"),(uzorak.tip.includes('Mikrobiologija'))?_c('div',{staticClass:\"va-row\"},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.show_table),expression:\"show_table\"}],staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped first-td-padding\"},[_c('thead',[_c('tr',{attrs:{\"align\":\"middle\"}},[(uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN')?_c('td'):_vm._e(),_vm._v(\" \"),_c('td',[_vm._v(_vm._s('ANALIZA'))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s('REZULTAT'))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s('JEDINICA'))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s('REFERENCE'))]),_vm._v(\" \"),(uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN')?_c('td'):_vm._e(),_vm._v(\" \"),(uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN' && _vm.MicrobiologyScenario != 'MAIBPoR')?_c('td',[_vm._v(_vm._s('PONOVI'))]):_vm._e(),_vm._v(\" \"),(_vm.MicrobiologyScenario === 'MAIBPoR')?_c('td',{staticStyle:{\"text-transform\":\"none\"}},[_vm._v(_vm._s('Bakterije'))]):_vm._e(),_vm._v(\" \"),_c('td')])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.rezultati),function(test,index){return _c('tr',{directives:[{name:\"show\",rawName:\"v-show\",value:(index < 1),expression:\"index < 1\"}],key:test.labassay_id,class:{\n                          'table-danger': (test.rezultat_m.length && test.rezultat_m[0].pozitivan), \n                          'table-success': (test.rezultat_m.length && test.rezultat_m[0].negativan),\n                          'table-warning': false\n                        },attrs:{\"align\":\"middle\"}},[(uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN')?_c('td',[(uzorak.status === 'ZAPRIMLJEN')?_c('button',{staticClass:\"btn btn-secondary-danger btn-micro\",staticStyle:{\"padding\":\"0.4px\",\"padding-left\":\"2px\"},on:{\"click\":function($event){$event.preventDefault();_vm.MicroResultSelect($event)}}},[_c('i',{staticClass:\"fa fa-bug\",on:{\"click\":function($event){$event.preventDefault();_vm.MicroResultSelect($event)}}})]):_vm._e(),_vm._v(\" \"),(uzorak.status != 'ZAPRIMLJEN')?_c('button',{staticClass:\"btn btn-secondary-danger btn-micro\",staticStyle:{\"padding\":\"0.6px\",\"padding-right\":\"1px\",\"padding-left\":\"1.2px\"},on:{\"click\":function($event){$event.preventDefault();_vm.ResetSample($event)}}},[_c('i',{staticClass:\"fa fa-backward\",on:{\"click\":function($event){$event.preventDefault();_vm.ResetSample($event)}}})]):_vm._e()]):_vm._e(),_vm._v(\" \"),_c('td',{attrs:{\"title\":test.analit}},[_c('span',[_vm._v(_vm._s(test.ime))])]),_vm._v(\" \"),(test.rezultat_m.length > 0)?_c('td',[_c('button',{staticClass:\"btn btn-primary btn-micro\",attrs:{\"id\":test.labassay_id},on:{\"click\":function($event){$event.preventDefault();_vm.OpenMicro($event, test)}}},[_c('span',{staticClass:\"glyphicon glyphicon-search\",attrs:{\"id\":test.labassay_id}}),_vm._v(\"\\n                            \"+_vm._s('VIŠE')+\"\\n                          \")])]):_vm._e(),_vm._v(\" \"),(test.rezultat_m.length < 1)?_c('td',[_c('button',{staticClass:\"btn btn-pale btn-micro\",attrs:{\"id\":test.labassay_id}},[_c('span',{staticClass:\"glyphicon glyphicon-ban-circle\",attrs:{\"id\":test.labassay_id}}),_vm._v(\"\\n                            \"+_vm._s('VIŠE')+\"\\n                          \")])]):_vm._e(),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(test.unit))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s('/'))]),_vm._v(\" \"),(uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN')?_c('td',[_c('i',{staticClass:\"glyphicon glyphicon-stats\",staticStyle:{\"font-size\":\"15px\",\"color\":\"#f7cc36\",\"opacity\":\"0\"},attrs:{\"id\":\"reference\",\"title\":\" \"}})]):_vm._e(),_vm._v(\" \"),(uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN' && _vm.MicrobiologyScenario != 'MAIBPoR')?_c('td',[_c('button',{staticClass:\"btn btn-pale btn-micro\"},[_c('span',{staticClass:\"glyphicon glyphicon-ban-circle\"})])]):_vm._e(),_vm._v(\" \"),(_vm.MicrobiologyScenario === 'MAIBPoR')?_c('td',[_c('button',{staticClass:\"btn btn-primary btn-micro\",on:{\"click\":function($event){$event.preventDefault();_vm.OpenMicroSelect($event, test)}}},[_c('span',{staticClass:\"fa fa-bug\"})])]):_vm._e(),_vm._v(\" \"),_c('td',[_c('i',{class:{'fa fa-exclamation-triangle icon-right input-icon error-icon' : false},on:{\"click\":function($event){$event.preventDefault();_vm.Exclamation(test)}}}),_vm._v(\" \"),_c('i',{class:{'fa fa-check success-icon icon-right input-icon' : false}})])])}))])])]):_vm._e(),_vm._v(\" \"),(!uzorak.tip.includes('Mikrobiologija'))?_c('div',{staticClass:\"va-row\"},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.show_table),expression:\"show_table\"}],staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped first-td-padding\"},[_c('thead',[_c('tr',{attrs:{\"align\":\"middle\"}},[(uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN')?_c('td'):_vm._e(),_vm._v(\" \"),_c('td',[_vm._v(_vm._s('ANALIZA'))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s('REZULTAT'))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s('JEDINICA'))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s('REFERENCE'))]),_vm._v(\" \"),(uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN')?_c('td'):_vm._e(),_vm._v(\" \"),(uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN' && _vm.calculated)?_c('td',[_vm._v(_vm._s('AKCIJA'))]):_vm._e(),_vm._v(\" \"),(uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN')?_c('td',[_vm._v(_vm._s('PONOVI'))]):_vm._e(),_vm._v(\" \"),_c('td')])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.rezultati),function(test){return _c('tr',{key:test.labassay_id,class:{\n                          'table-danger': _vm.Interpretacija(test.analit, test.rezultat, test.unit, test.dRef, test.gRef, _vm.$store.state.site, test.interp, test.extend, _vm.spec)[5] === 'Red' && !test.multidata, \n                          'table-success': _vm.Interpretacija(test.analit, test.rezultat, test.unit, test.dRef, test.gRef, _vm.$store.state.site, test.interp, test.extend, _vm.spec)[5] === 'Green' && !test.multidata,\n                          'table-warning': _vm.Interpretacija(test.analit, test.rezultat, test.unit, test.dRef, test.gRef, _vm.$store.state.site, test.interp, test.extend, _vm.spec)[5] === 'Yellow' && !test.multidata\n                        },attrs:{\"align\":\"middle\"}},[(uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN')?_c('td',[(!test.multidata)?_c('i',{staticClass:\"glyphicon glyphicon-object-align-bottom\",staticStyle:{\"color\":\"#4ae387\"},on:{\"click\":function($event){$event.preventDefault();_vm.SelectAnalyser(test)}}}):_vm._e(),_vm._v(\" \"),(test.multidata)?_c('span',{staticClass:\"glyphicon glyphicon-object-align-bottom\",staticStyle:{\"color\":\"#d9d9d9\"}}):_vm._e()]):_vm._e(),_vm._v(\" \"),_c('td',{attrs:{\"title\":test.analit}},[_c('span',{on:{\"contextmenu\":function($event){_vm.LabAssayEval($event, test)},\"click\":function($event){$event.preventDefault();_vm.Evaluation(test)}}},[_vm._v(_vm._s(test.ime))])]),_vm._v(\" \"),(!test.multidata)?_c('td',[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.edit == false),expression:\"test.edit == false\"}],staticStyle:{\"display\":\"inline\",\"font-size\":\"14px\",\"line-height\":\"4.5px\"}},[_c('label',[_c('strong',[_vm._v(_vm._s(test.rezultat))])])]),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.edit == true),expression:\"test.edit == true\"}],staticStyle:{\"display\":\"inline\",\"line-height\":\"5px\"}},[(test.select_options != undefined)?_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(test.rezultat),expression:\"test.rezultat\"}],staticStyle:{\"width\":\"110px\"},on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.$set(test, \"rezultat\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},_vm._l((test.select_options),function(option){return _c('option',{key:option},[_vm._v(_vm._s(option))])})):_vm._e()]),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.edit == true),expression:\"test.edit == true\"}],staticStyle:{\"display\":\"inline\"}},[(test.select_options === undefined)?_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(test.rezultat),expression:\"test.rezultat\"}],staticStyle:{\"width\":\"110px\",\"font-size\":\"12px\",\"line-height\":\"7px\"},domProps:{\"value\":(test.rezultat)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(test, \"rezultat\", $event.target.value)}}}):_vm._e()]),_vm._v(\" \"),_c('sup',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.vise > 2),expression:\"test.vise > 2\"}],on:{\"click\":function($event){$event.preventDefault();_vm.GetResults(test, uzorak.status)}}},[_c('i',{staticClass:\"fa fa-star\",staticStyle:{\"font-size\":\"5px\",\"color\":\"#e34a4a\"},attrs:{\"id\":\"star\",\"title\":\" \"}})]),_vm._v(\" \"),_c('sup',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.vise < 3),expression:\"test.vise < 3\"}]},[_c('i',{staticClass:\"fa fa-star-o\",staticStyle:{\"font-size\":\"5px\",\"opacity\":\"0\"},attrs:{\"id\":\"star\",\"title\":\" \"}})])]):_vm._e(),_vm._v(\" \"),(test.multidata && test.realizovan)?_c('td',[_c('button',{staticClass:\"btn btn-primary btn-micro\",attrs:{\"id\":test.labassay_id},on:{\"click\":function($event){$event.preventDefault();_vm.MultiGet($event, test.ime, test.analit, test.rezultat, test.odobren)}}},[_c('span',{staticClass:\"glyphicon glyphicon-search\",attrs:{\"id\":test.labassay_id},on:{\"click\":function($event){$event.preventDefault();_vm.MultiGet($event, test.ime, test.analit, test.rezultat, test.odobren)}}}),_vm._v(\"\\n                            \"+_vm._s('VIŠE')+\"\\n                          \")]),_vm._v(\" \"),_c('sup',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.multi_count > 2),expression:\"test.multi_count > 2\"}],on:{\"click\":function($event){$event.preventDefault();_vm.GetResultsMulti(test, uzorak.status)}}},[_c('i',{staticClass:\"fa fa-star\",staticStyle:{\"font-size\":\"5px\",\"color\":\"#e34a4a\"},attrs:{\"id\":\"star\",\"title\":\" \"}})]),_vm._v(\" \"),_c('sup',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.multi_count < 3),expression:\"test.multi_count < 3\"}]},[_c('i',{staticClass:\"fa fa-star-o\",staticStyle:{\"font-size\":\"5px\",\"opacity\":\"0\"},attrs:{\"id\":\"star\",\"title\":\" \"}})])]):_vm._e(),_vm._v(\" \"),(test.multidata && !test.realizovan)?_c('td',[_c('button',{staticClass:\"btn btn-warning btn-micro\",attrs:{\"id\":test.labassay_id},on:{\"click\":function($event){$event.preventDefault();_vm.MultiGet($event, test.ime, test.analit, test.rezultat, test.odobren)}}},[_c('span',{staticClass:\"glyphicon glyphicon-search\",attrs:{\"id\":test.labassay_id},on:{\"click\":function($event){$event.preventDefault();_vm.MultiGet($event, test.ime, test.analit, test.rezultat, test.odobren)}}}),_vm._v(\"\\n                            \"+_vm._s('VIŠE')+\"\\n                          \")]),_vm._v(\" \"),_c('sup',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.multi_count > 2),expression:\"test.multi_count > 2\"}],on:{\"click\":function($event){$event.preventDefault();_vm.GetResultsMulti(test, uzorak.status)}}},[_c('i',{staticClass:\"fa fa-star\",staticStyle:{\"font-size\":\"5px\",\"color\":\"#e34a4a\"},attrs:{\"id\":\"star\",\"title\":\" \"}})]),_vm._v(\" \"),_c('sup',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.multi_count < 3),expression:\"test.multi_count < 3\"}]},[_c('i',{staticClass:\"fa fa-star-o\",staticStyle:{\"font-size\":\"5px\",\"opacity\":\"0\"},attrs:{\"id\":\"star\",\"title\":\" \"}})])]):_vm._e(),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(test.unit))]),_vm._v(\" \"),(!test.multidata)?_c('td',[_vm._v(_vm._s(_vm.Interpretacija(test.analit, test.rezultat, test.unit, test.dRef, test.gRef, _vm.$store.state.site, test.interp, test.extend, _vm.spec)[4]))]):_vm._e(),_vm._v(\" \"),(test.multidata)?_c('td',[_vm._v(_vm._s('/'))]):_vm._e(),_vm._v(\" \"),(uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN')?_c('td',[(!test.multidata)?_c('i',{staticClass:\"glyphicon glyphicon-stats\",staticStyle:{\"font-size\":\"15px\",\"color\":\"#f7cc36\"},attrs:{\"id\":\"reference\",\"title\":\" \"},on:{\"click\":function($event){$event.preventDefault();_vm.Reference($event, test)}}}):_vm._e(),_vm._v(\" \"),(test.multidata)?_c('i',{staticClass:\"glyphicon glyphicon-stats\",staticStyle:{\"font-size\":\"15px\",\"color\":\"#f7cc36\",\"opacity\":\"0\"},attrs:{\"id\":\"reference\",\"title\":\" \"}}):_vm._e()]):_vm._e(),_vm._v(\" \"),(uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN' && _vm.calculated && !test.calculated)?_c('td',[_c('button',{staticClass:\"btn btn-pale btn-micro\"},[_c('span',{staticClass:\"glyphicon glyphicon-ban-circle\"})])]):_vm._e(),_vm._v(\" \"),(uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN' && _vm.calculated && test.calculated)?_c('td',[_c('button',{staticClass:\"btn btn-primary btn-micro\",attrs:{\"id\":test.test},on:{\"click\":function($event){$event.preventDefault();_vm.Calculate($event, test.labassay_id, test.ime, test.id)}}},[_c('span',{staticClass:\"fa fa-calculator\",attrs:{\"id\":test.test}})])]):_vm._e(),_vm._v(\" \"),(uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN' \n                          && (test.rezultat === '' || test.manual || test.calculated))?_c('td',[_c('button',{staticClass:\"btn btn-pale btn-micro\"},[_c('span',{staticClass:\"glyphicon glyphicon-ban-circle\"})])]):_vm._e(),_vm._v(\" \"),(uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN' \n                          && test.rezultat != '' && !test.manual && !test.calculated)?_c('td',[(!test.retest)?_c('button',{staticClass:\"btn btn-primary btn-micro\",attrs:{\"id\":test.test},on:{\"click\":function($event){$event.preventDefault();_vm.RetestEnable($event)}}},[_c('span',{staticClass:\"fa fa-refresh\",attrs:{\"id\":test.test}})]):_vm._e(),_vm._v(\" \"),(test.retest)?_c('button',{staticClass:\"btn btn-info btn-micro\",attrs:{\"id\":test.test},on:{\"click\":function($event){$event.preventDefault();_vm.RetestDisable($event)}}},[_c('span',{staticClass:\"glyphicon glyphicon-duplicate\",attrs:{\"id\":test.test}})]):_vm._e()]):_vm._e(),_vm._v(\" \"),_c('td',[_c('i',{class:{'fa fa-exclamation-triangle icon-right input-icon error-icon' : _vm.Interpretacija(test.analit, test.rezultat, test.unit, test.dRef, test.gRef, _vm.$store.state.site, test.interp, test.extend, _vm.spec)[5] === 'Red' && !test.multidata},on:{\"click\":function($event){$event.preventDefault();_vm.Exclamation(test)}}}),_vm._v(\" \"),_c('i',{class:{'fa fa-check success-icon icon-right input-icon' : _vm.Interpretacija(test.analit, test.rezultat, test.unit, test.dRef, test.gRef, _vm.$store.state.site, test.interp, test.extend, _vm.spec)[5] === 'Green' && !test.multidata}})])])}))])])]):_vm._e()])])})),_vm._v(\" \"),_c('div',{staticStyle:{\"min-height\":\"10px\"}}),_vm._v(\" \"),(_vm.verificiran)?_c('div',{staticClass:\"va-row\"},[_c('div',{staticClass:\"flex md12\"},[_c('vuestic-collapse-nalaz',{attrs:{\"final\":_vm.verificiran,\"final_pdf\":_vm.final_pdf,\"samples\":_vm.samples,\"pdf\":_vm.link,\"pacijent\":_vm.ime + ' ' + _vm.prezime}},[_c('span',{attrs:{\"slot\":\"header\"},slot:\"header\"},[_vm._v(\"Nalaz\")]),_vm._v(\" \"),_c('div',{attrs:{\"slot\":\"body\"},slot:\"body\"},[_c('div',{staticClass:\"va-row\"})])])],1)]):_vm._e(),_vm._v(\" \"),_c('div',[_c('hr')]),_vm._v(\" \"),_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-3\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-6\"},[_c('div',{staticClass:\"btn-container\"},[_c('button',{staticClass:\"btn btn-secondary btn-sm wizard-back pull-left\",on:{\"click\":function($event){$event.preventDefault();_vm.Povratak()}}},[_c('span',{staticClass:\"fa fa-backward\"}),_vm._v(\"\\n                \"+_vm._s(' POVRATAK')+\"\\n              \")]),_vm._v(\" \"),(_vm.partials_condition && !_vm.verificiran)?_c('button',{staticClass:\"btn btn-secondary-warning btn-sm wizard-back pull-right\",staticStyle:{\"text-transform\":\"none\",\"color\":\"#e34a4a\"},on:{\"click\":function($event){$event.preventDefault();_vm.Partials()}}},[_c('span',{staticClass:\"fa fa-file-pdf-o\",staticStyle:{\"color\":\"#e34a4a\"}}),_vm._v(\"\\n                \"+_vm._s(' Djelimični nalaz')+\"\\n              \")]):_vm._e()])])])],1),_vm._v(\" \"),_c('vuestic-modal-multi',{ref:\"largeModalMulti\",attrs:{\"show\":_vm.show,\"sample\":_vm.sample,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(_vm._s(_vm.naslov))]),_vm._v(\" \"),_c('div',{staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped first-td-padding\"},[_c('thead',[_c('tr',{attrs:{\"align\":\"middle\"}},[_c('td',{attrs:{\"width\":\"10%\"}}),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('ANALIT'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"30%\"}},[_vm._v(_vm._s('REZULTAT'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"10%\"}},[_vm._v(_vm._s('JEDINICA'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('REFERENCE'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"10%\"}})])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.analiti),function(test){return _c('tr',{key:test.labID,class:{\n                    'table-danger': _vm.Interpretacija(test.opis, test.rezultat, test.jedinica, test.refd, test.refg, _vm.$store.state.site, test.interp, test.extend, _vm.spec)[5] === 'Red' && !test.rezultat_multiple.length, \n                    'table-success': _vm.Interpretacija(test.opis, test.rezultat, test.jedinica, test.refd, test.refg, _vm.$store.state.site, test.interp, test.extend, _vm.spec)[5] === 'Green' && !test.rezultat_multiple.length, \n                    'table-warning': _vm.Interpretacija(test.opis, test.rezultat, test.jedinica, test.refd, test.refg, _vm.$store.state.site, test.interp, test.extend, _vm.spec)[5] === 'Yellow' && !test.rezultat_multiple.length                                  \n                  },attrs:{\"align\":\"middle\"}},[(test.flag != '')?_c('td',[_vm._v(_vm._s(test.flag))]):_vm._e(),_vm._v(\" \"),(test.flag === '')?_c('td',[_vm._v(\" \")]):_vm._e(),_vm._v(\" \"),_c('td',{attrs:{\"title\":test.opis}},[_vm._v(_vm._s(test.naziv))]),_vm._v(\" \"),_c('td',{attrs:{\"id\":test.analit}},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.edit == false),expression:\"test.edit == false\"}]},[_c('label',[_c('strong',[_vm._v(_vm._s(test.rezultat))])])]),_vm._v(\" \"),(test.select_options != undefined && (test.kod === 's03' || test.kod === 's04' || test.kod === 's08' || test.kod === 's09'))?_c('select',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.edit == true),expression:\"test.edit == true\"},{name:\"model\",rawName:\"v-model\",value:(test.rezultat_multiple),expression:\"test.rezultat_multiple\"}],staticStyle:{\"min-width\":\"200px\"},attrs:{\"multiple\":\"\",\"size\":test.select_options.length},on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.$set(test, \"rezultat_multiple\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},_vm._l((test.select_options),function(option){return _c('option',{key:option},[_vm._v(_vm._s(option))])})):_vm._e(),_vm._v(\" \"),(test.select_options != undefined && (test.kod != 's03' && test.kod != 's04' && test.kod != 's08' && test.kod != 's09'))?_c('select',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.edit == true),expression:\"test.edit == true\"},{name:\"model\",rawName:\"v-model\",value:(test.rezultat),expression:\"test.rezultat\"}],staticStyle:{\"width\":\"200px\"},on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.$set(test, \"rezultat\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},_vm._l((test.select_options),function(option){return _c('option',{key:option},[_vm._v(_vm._s(option))])})):_vm._e(),_vm._v(\" \"),(test.select_options === undefined)?_c('input',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.edit == true),expression:\"test.edit == true\"},{name:\"model\",rawName:\"v-model\",value:(test.rezultat),expression:\"test.rezultat\"}],staticStyle:{\"width\":\"200px\"},domProps:{\"value\":(test.rezultat)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(test, \"rezultat\", $event.target.value)}}}):_vm._e()]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(_vm.Interpretacija(test.opis, test.rezultat, test.jedinica, test.refd, test.refg, _vm.$store.state.site, test.interp, test.extend, _vm.spec)[3]))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(_vm.Interpretacija(test.opis, test.rezultat, test.jedinica, test.refd, test.refg, _vm.$store.state.site, test.interp, test.extend, _vm.spec)[4]))]),_vm._v(\" \"),_c('td',[_c('i',{class:{'fa fa-exclamation-triangle icon-right input-icon error-icon' : _vm.Interpretacija(test.opis, test.rezultat, test.jedinica, test.refd, test.refg, _vm.$store.state.site, test.interp, test.extend, _vm.spec)[5] === 'Red' && !test.rezultat_multiple.length},on:{\"click\":function($event){$event.preventDefault();_vm.ExclamationMulti(test)}}}),_vm._v(\" \"),_c('i',{class:{'fa fa-check success-icon icon-right input-icon' : _vm.Interpretacija(test.opis, test.rezultat, test.jedinica, test.refd, test.refg, _vm.$store.state.site, test.interp, test.extend, _vm.spec)[5] === 'Green' && !test.rezultat_multiple.length}})])])}))])])]),_vm._v(\" \"),_c('vuestic-modal-micro-reset',{ref:\"staticModalResetSample\",attrs:{\"show\":_vm.show,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',{staticStyle:{\"color\":\"#acb5be\"}},[_vm._v(_vm._s('Brisanje rezultata: '))]),_vm._v(\" \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(_vm.CurrentTest))])]),_vm._v(\" \"),_c('div',[_c('h5',[_vm._v(_vm._s('Jeste li sigurni da želite obrisati rezultat?'))])])]),_vm._v(\" \"),_c('vuestic-modal-micro-bactery',{ref:\"staticModalMicroBacterySelect\",attrs:{\"show\":_vm.show,\"large\":true,\"sample\":_vm.sample,\"select\":true,\"update\":!_vm.ShowAntibiotics && !_vm.ShowBacteries && _vm.MicrobiologyScenario === 'MAIBPoR',\"povratak\":_vm.ShowAntibiotics || _vm.ShowBacteries,\"empty\":_vm.TemporaryAntibiotics.length > 0 || _vm.TemporaryBacteriesAdd.length > 0,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[(!_vm.ShowAntibiotics && !_vm.ShowBacteries)?_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',{staticStyle:{\"color\":\"#acb5be\"}},[_vm._v(_vm._s('Rezultat analize: '))]),_vm._v(\" \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(_vm.CurrentTest))])]):_vm._e(),_vm._v(\" \"),(_vm.ShowAntibiotics && !_vm.ShowBacteries)?_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',{staticStyle:{\"color\":\"#acb5be\"}},[_vm._v(_vm._s('Antibiotici | '))]),_vm._v(\" \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"Izbornik\"))])]):_vm._e(),_vm._v(\" \"),(!_vm.ShowAntibiotics && _vm.ShowBacteries)?_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',{staticStyle:{\"color\":\"#acb5be\"}},[_vm._v(_vm._s('Bakterije | '))]),_vm._v(\" \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"Izbornik\"))])]):_vm._e(),_vm._v(\" \"),_c('div',[(_vm.show_table)?_c('div',{staticClass:\"row\"},[(_vm.MicrobiologyScenario === 'MAIBPoR' && _vm.ShowBacteries && !_vm.ShowAntibiotics)?_c('div',{staticClass:\"col-md-1\"}):_vm._e(),_vm._v(\" \"),(_vm.MicrobiologyScenario === 'MAIBPoR' && _vm.ShowBacteries && !_vm.ShowAntibiotics)?_c('div',{staticClass:\"col-md-10\"},[(_vm.TemporaryBacteries.length)?_c('div',{staticClass:\"col-md-12\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-4\"},_vm._l((_vm.filteredBacteries(1, 3)),function(bactery){return _c('div',{key:bactery._id,staticClass:\"form-check abc-checkbox abc-checkbox-primary\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(bactery.chosen),expression:\"bactery.chosen\"}],staticClass:\"form-check-input\",attrs:{\"id\":bactery._id,\"type\":\"checkbox\",\"disabled\":bactery.disabled},domProps:{\"checked\":Array.isArray(bactery.chosen)?_vm._i(bactery.chosen,null)>-1:(bactery.chosen)},on:{\"click\":function($event){_vm.AddBacteries(bactery)},\"change\":function($event){var $$a=bactery.chosen,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(bactery.chosen=$$a.concat([$$v]))}else{$$i>-1&&(bactery.chosen=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.$set(bactery, \"chosen\", $$c)}}}}),_vm._v(\" \"),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":bactery._id}},[(!bactery.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(bactery.opis))]):_vm._e(),_vm._v(\" \"),(bactery.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#4ae387\"}},[_vm._v(_vm._s(bactery.opis))]):_vm._e()])])})),_vm._v(\" \"),_c('div',{staticClass:\"col-md-4\"},_vm._l((_vm.filteredBacteries(2, 3)),function(bactery){return _c('div',{key:bactery._id,staticClass:\"form-check abc-checkbox abc-checkbox-primary\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(bactery.chosen),expression:\"bactery.chosen\"}],staticClass:\"form-check-input\",attrs:{\"id\":bactery._id,\"type\":\"checkbox\",\"disabled\":bactery.disabled},domProps:{\"checked\":Array.isArray(bactery.chosen)?_vm._i(bactery.chosen,null)>-1:(bactery.chosen)},on:{\"click\":function($event){_vm.AddBacteries(bactery)},\"change\":function($event){var $$a=bactery.chosen,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(bactery.chosen=$$a.concat([$$v]))}else{$$i>-1&&(bactery.chosen=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.$set(bactery, \"chosen\", $$c)}}}}),_vm._v(\" \"),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":bactery._id}},[(!bactery.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(bactery.opis))]):_vm._e(),_vm._v(\" \"),(bactery.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#4ae387\"}},[_vm._v(_vm._s(bactery.opis))]):_vm._e()])])})),_vm._v(\" \"),_c('div',{staticClass:\"col-md-4\"},_vm._l((_vm.filteredBacteries(3, 3)),function(bactery){return _c('div',{key:bactery._id,staticClass:\"form-check abc-checkbox abc-checkbox-primary\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(bactery.chosen),expression:\"bactery.chosen\"}],staticClass:\"form-check-input\",attrs:{\"id\":bactery._id,\"type\":\"checkbox\",\"disabled\":bactery.disabled},domProps:{\"checked\":Array.isArray(bactery.chosen)?_vm._i(bactery.chosen,null)>-1:(bactery.chosen)},on:{\"click\":function($event){_vm.AddBacteries(bactery)},\"change\":function($event){var $$a=bactery.chosen,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(bactery.chosen=$$a.concat([$$v]))}else{$$i>-1&&(bactery.chosen=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.$set(bactery, \"chosen\", $$c)}}}}),_vm._v(\" \"),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":bactery._id}},[(!bactery.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(bactery.opis))]):_vm._e(),_vm._v(\" \"),(bactery.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#4ae387\"}},[_vm._v(_vm._s(bactery.opis))]):_vm._e()])])}))])]):_vm._e()]):_vm._e(),_vm._v(\" \"),(_vm.MicrobiologyScenario === 'MAIBPoR' && _vm.ShowAntibiotics && !_vm.ShowBacteries)?_c('div',{staticClass:\"col-md-1\"}):_vm._e(),_vm._v(\" \"),(_vm.MicrobiologyScenario === 'MAIBPoR' && _vm.ShowAntibiotics && !_vm.ShowBacteries)?_c('div',{staticClass:\"col-md-10\"},[(_vm.Antibiotics.length)?_c('div',{staticClass:\"col-md-12\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-4\"},_vm._l((_vm.filteredAntibiotics(1, 3)),function(antibiotik){return _c('div',{key:antibiotik._id,staticClass:\"form-check abc-checkbox abc-checkbox-primary\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(antibiotik.chosen),expression:\"antibiotik.chosen\"}],staticClass:\"form-check-input\",attrs:{\"id\":antibiotik._id,\"type\":\"checkbox\",\"disabled\":antibiotik.disabled},domProps:{\"checked\":Array.isArray(antibiotik.chosen)?_vm._i(antibiotik.chosen,null)>-1:(antibiotik.chosen)},on:{\"click\":function($event){_vm.AddAntibiotics(antibiotik)},\"change\":function($event){var $$a=antibiotik.chosen,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(antibiotik.chosen=$$a.concat([$$v]))}else{$$i>-1&&(antibiotik.chosen=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.$set(antibiotik, \"chosen\", $$c)}}}}),_vm._v(\" \"),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":antibiotik._id}},[(!antibiotik.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(antibiotik.opis))]):_vm._e(),_vm._v(\" \"),(antibiotik.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#4ae387\"}},[_vm._v(_vm._s(antibiotik.opis))]):_vm._e()])])})),_vm._v(\" \"),_c('div',{staticClass:\"col-md-4\"},_vm._l((_vm.filteredAntibiotics(2, 3)),function(antibiotik){return _c('div',{key:antibiotik._id,staticClass:\"form-check abc-checkbox abc-checkbox-primary\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(antibiotik.chosen),expression:\"antibiotik.chosen\"}],staticClass:\"form-check-input\",attrs:{\"id\":antibiotik._id,\"type\":\"checkbox\",\"disabled\":antibiotik.disabled},domProps:{\"checked\":Array.isArray(antibiotik.chosen)?_vm._i(antibiotik.chosen,null)>-1:(antibiotik.chosen)},on:{\"click\":function($event){_vm.AddAntibiotics(antibiotik)},\"change\":function($event){var $$a=antibiotik.chosen,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(antibiotik.chosen=$$a.concat([$$v]))}else{$$i>-1&&(antibiotik.chosen=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.$set(antibiotik, \"chosen\", $$c)}}}}),_vm._v(\" \"),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":antibiotik._id}},[(!antibiotik.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(antibiotik.opis))]):_vm._e(),_vm._v(\" \"),(antibiotik.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#4ae387\"}},[_vm._v(_vm._s(antibiotik.opis))]):_vm._e()])])})),_vm._v(\" \"),_c('div',{staticClass:\"col-md-4\"},_vm._l((_vm.filteredAntibiotics(3, 3)),function(antibiotik){return _c('div',{key:antibiotik._id,staticClass:\"form-check abc-checkbox abc-checkbox-primary\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(antibiotik.chosen),expression:\"antibiotik.chosen\"}],staticClass:\"form-check-input\",attrs:{\"id\":antibiotik._id,\"type\":\"checkbox\",\"disabled\":antibiotik.disabled},domProps:{\"checked\":Array.isArray(antibiotik.chosen)?_vm._i(antibiotik.chosen,null)>-1:(antibiotik.chosen)},on:{\"click\":function($event){_vm.AddAntibiotics(antibiotik)},\"change\":function($event){var $$a=antibiotik.chosen,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(antibiotik.chosen=$$a.concat([$$v]))}else{$$i>-1&&(antibiotik.chosen=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.$set(antibiotik, \"chosen\", $$c)}}}}),_vm._v(\" \"),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":antibiotik._id}},[(!antibiotik.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(antibiotik.opis))]):_vm._e(),_vm._v(\" \"),(antibiotik.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#4ae387\"}},[_vm._v(_vm._s(antibiotik.opis))]):_vm._e()])])}))])]):_vm._e()]):_vm._e(),_vm._v(\" \"),(_vm.MicrobiologyScenario === 'MAIBPoR' && !_vm.ShowAntibiotics && !_vm.ShowBacteries)?_c('div',{staticClass:\"col-md-1\"}):_vm._e(),_vm._v(\" \"),(_vm.MicrobiologyScenario === 'MAIBPoR' && !_vm.ShowAntibiotics && !_vm.ShowBacteries)?_c('div',{staticClass:\"col-md-10\"},[(_vm.SelectedBacteries.length)?_c('vuestic-tabs-bactery',{ref:\"tabs\",attrs:{\"names\":_vm.BacteryTabs,\"tab\":_vm.CurrentTab,\"id\":_vm.CurrentTab,\"prikazi\":_vm.sample.status != 'VERIFICIRAN' && _vm.sample.status != 'ODOBREN'}},_vm._l((_vm.SelectedBacteries),function(test){return _c('div',{key:test._id,attrs:{\"slot\":_vm.CurrentTab},slot:_vm.CurrentTab},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.opis === _vm.CurrentTab),expression:\"test.opis === CurrentTab\"}],staticClass:\"row\"},[_c('div',{staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped first-td-padding\"},[_c('thead',[_c('tr',{attrs:{\"align\":\"left\"}},[_c('td',{staticStyle:{\"text-transform\":\"none\"},attrs:{\"width\":\"30%\"}},[_vm._v(_vm._s(test.antibiogram.opis))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"10%\"}},[_vm._v(_vm._s(''))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(''))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(''))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(''))])])]),_vm._v(\" \"),_c('tbody',_vm._l((test.antibiogram.antibiotici),function(abtk){return _c('tr',{key:abtk._id,class:{'table-danger': false, 'table-success': false,'table-warning': false},attrs:{\"align\":\"left\"}},[_c('td',{attrs:{\"title\":abtk.opis}},[_vm._v(_vm._s(abtk.opis))]),_vm._v(\" \"),_c('td',[_c('bactery-radio-button',{attrs:{\"disabled\":_vm.sample.status === 'ODOBREN' || _vm.sample.status === 'VERIFICIRAN',\"label\":'',\"value\":'',\"id\":'' + test._id + abtk._id,\"name\":test._id + abtk._id},model:{value:(abtk.rezultat),callback:function ($$v) {_vm.$set(abtk, \"rezultat\", $$v)},expression:\"abtk.rezultat\"}})],1),_vm._v(\" \"),_c('td',[_c('postavke-radio-button',{attrs:{\"disabled\":_vm.sample.status === 'ODOBREN' || _vm.sample.status === 'VERIFICIRAN',\"label\":'Senzitivan',\"value\":'S',\"id\":'S' + test._id + abtk._id,\"name\":test._id + abtk._id},model:{value:(abtk.rezultat),callback:function ($$v) {_vm.$set(abtk, \"rezultat\", $$v)},expression:\"abtk.rezultat\"}})],1),_vm._v(\" \"),_c('td',[_c('postavke-radio-button',{attrs:{\"disabled\":_vm.sample.status === 'ODOBREN' || _vm.sample.status === 'VERIFICIRAN',\"label\":'Intermedijaran',\"value\":'I',\"id\":'I' + test._id + abtk._id,\"name\":test._id + abtk._id},model:{value:(abtk.rezultat),callback:function ($$v) {_vm.$set(abtk, \"rezultat\", $$v)},expression:\"abtk.rezultat\"}})],1),_vm._v(\" \"),_c('td',[_c('postavke-radio-button',{attrs:{\"disabled\":_vm.sample.status === 'ODOBREN' || _vm.sample.status === 'VERIFICIRAN',\"label\":'Rezistentan',\"value\":'R',\"id\":'R' + test._id + abtk._id,\"name\":test._id + abtk._id},model:{value:(abtk.rezultat),callback:function ($$v) {_vm.$set(abtk, \"rezultat\", $$v)},expression:\"abtk.rezultat\"}})],1)])}))])])])])})):_vm._e()],1):_vm._e(),_vm._v(\" \"),(_vm.MicrobiologyScenario === 'MANBNeR' || _vm.MicrobiologyScenario === 'MANBPoR' || _vm.MicrobiologyScenario === 'MAIBNeR')?_c('div',{staticClass:\"col-md-12\"},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.show_table),expression:\"show_table\"}],staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped first-td-padding\"},[_c('thead',[_c('tr',{attrs:{\"align\":\"left\"}},[_c('td',[_vm._v(_vm._s('REZULTAT'))])])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.rezultati),function(test,index){return _c('tr',{directives:[{name:\"show\",rawName:\"v-show\",value:(index < 1),expression:\"index < 1\"}],key:test.labassay_id,class:{\n                          'table-danger':  (test.rezultat_m.length && test.rezultat_m[0].pozitivan), \n                          'table-success':  (test.rezultat_m.length && test.rezultat_m[0].negativan),\n                          'table-warning': false\n                        },attrs:{\"align\":\"left\"}},[(_vm.sample.status != 'ODOBREN' &&  _vm.sample.status != 'VERIFICIRAN')?_c('td',[_c('div',{staticClass:\"form-group\"},[_c('div',{staticClass:\"input-group\"},[_c('textarea',{directives:[{name:\"model\",rawName:\"v-model\",value:(test.rezultat),expression:\"test.rezultat\"}],attrs:{\"type\":\"text\",\"id\":\"simple-textarea\",\"required\":\"\"},domProps:{\"value\":(test.rezultat)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(test, \"rezultat\", $event.target.value)}}}),_vm._v(\" \"),_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"simple-textarea\"}},[_vm._v(_vm._s(''))]),_vm._v(\" \"),_c('i',{staticClass:\"bar\"})])])]):_vm._e(),_vm._v(\" \"),(_vm.sample.status === 'ODOBREN' ||  _vm.sample.status === 'VERIFICIRAN')?_c('td',[_c('div',{staticClass:\"form-group\"},[_c('div',{staticClass:\"input-group\"},[_c('input',{attrs:{\"id\":\"input-icon-left\",\"title\":\" \",\"name\":\"input-icon-left\",\"disabled\":\"\"}}),_vm._v(\" \"),(test.rezultat.length)?_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"input-icon-left\"}},[_vm._v(_vm._s(test.rezultat))]):_vm._e(),_vm._v(\" \"),(!test.rezultat.length)?_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"input-icon-left\"}},[_vm._v(_vm._s(\"Nema podataka.\"))]):_vm._e(),_vm._v(\" \"),_c('i',{staticClass:\"bar\"})])])]):_vm._e()])}))])])]):_vm._e()]):_vm._e()])]),_vm._v(\" \"),_c('vuestic-modal-micro-bactery',{ref:\"staticModalMicroBactery\",attrs:{\"show\":_vm.show,\"large\":true,\"sample\":_vm.sample,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',{staticStyle:{\"color\":\"#acb5be\"}},[_vm._v(_vm._s('Rezultat analize: '))]),_vm._v(\" \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(_vm.CurrentTest))])]),_vm._v(\" \"),_c('div',[(_vm.show_table)?_c('div',{staticClass:\"row\"},[(true)?_c('div',{staticClass:\"col-md-12\"},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.show_table),expression:\"show_table\"}],staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped first-td-padding\"},[_c('thead',[_c('tr',{attrs:{\"align\":\"left\"}},[_c('td',[_vm._v(_vm._s('REZULTAT'))])])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.rezultati),function(test,index){return _c('tr',{directives:[{name:\"show\",rawName:\"v-show\",value:(index < 1),expression:\"index < 1\"}],key:test.labassay_id,class:{\n                          'table-danger':  (test.rezultat_m.length && test.rezultat_m[0].pozitivan), \n                          'table-success':  (test.rezultat_m.length && test.rezultat_m[0].negativan),\n                          'table-warning': false\n                        },attrs:{\"align\":\"left\"}},[(_vm.sample.status != 'ODOBREN' &&  _vm.sample.status != 'VERIFICIRAN')?_c('td',[_c('div',{staticClass:\"form-group\"},[_c('div',{staticClass:\"input-group\"},[_c('textarea',{directives:[{name:\"model\",rawName:\"v-model\",value:(test.rezultat),expression:\"test.rezultat\"}],attrs:{\"type\":\"text\",\"id\":\"simple-textarea\",\"required\":\"\"},domProps:{\"value\":(test.rezultat)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(test, \"rezultat\", $event.target.value)}}}),_vm._v(\" \"),_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"simple-textarea\"}},[_vm._v(_vm._s(''))]),_vm._v(\" \"),_c('i',{staticClass:\"bar\"})])])]):_vm._e(),_vm._v(\" \"),(_vm.sample.status === 'ODOBREN' ||  _vm.sample.status === 'VERIFICIRAN')?_c('td',[_c('div',{staticClass:\"form-group\"},[_c('div',{staticClass:\"input-group\"},[_c('input',{attrs:{\"id\":\"input-icon-left\",\"title\":\" \",\"name\":\"input-icon-left\",\"disabled\":\"\"}}),_vm._v(\" \"),(test.rezultat.length)?_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"input-icon-left\"}},[_vm._v(_vm._s(test.rezultat))]):_vm._e(),_vm._v(\" \"),(!test.rezultat.length)?_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"input-icon-left\"}},[_vm._v(_vm._s(\"Nema podataka.\"))]):_vm._e(),_vm._v(\" \"),_c('i',{staticClass:\"bar\"})])])]):_vm._e()])}))])])]):_vm._e()]):_vm._e()])]),_vm._v(\" \"),_c('vuestic-modal-micro-result',{ref:\"staticModalSelectResult\",attrs:{\"show\":_vm.show,\"sample\":_vm.sample,\"large\":_vm.ShowAllBacteries,\"neg\":_vm.ModalNegative,\"pos\":_vm.ModalPositive,\"selected\":_vm.ModalPositiveCondition,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',{staticStyle:{\"color\":\"#acb5be\"}},[_vm._v(_vm._s(_vm.MicrobiologyModalHeader)+\" |\")]),_vm._v(\" \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"Izbornik\"))])]),_vm._v(\" \"),(!_vm.ModalNegative && !_vm.ModalPositive)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-6\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-3\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-6\"},[_c('button',{staticClass:\"btn btn-secondary btn-sm wizard-back pull-left\",staticStyle:{\"text-transform\":\"none\",\"border\":\"0px\"},on:{\"click\":function($event){_vm.ModalNegative = true; _vm.ModalPositive = false;}}},[_vm._v(_vm._s('Negativan'))])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-3\"})])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-6\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-2\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-6\"},[_c('button',{staticClass:\"btn btn-secondary-danger btn-sm wizard-next pull-right\",staticStyle:{\"text-transform\":\"none\",\"border\":\"0px\"},on:{\"click\":function($event){_vm.ModalPositive = true; _vm.ModalNegative = false;}}},[_vm._v(_vm._s('Pozitivan'))])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-4\"})])])]):_vm._e(),_vm._v(\" \"),(_vm.ModalNegative && !_vm.ModalPositive)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-1\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-11\"},_vm._l((_vm.MicrobiologyResult.NegativeDescriptions),function(desc,index){return _c('vuestic-radio-button',{key:index,attrs:{\"label\":_vm.MicrobiologyResult.NegativeDescriptions[index],\"id\":_vm.MicrobiologyResult.NegativeDescriptions[index],\"value\":_vm.MicrobiologyResult.NegativeDescriptions[index],\"name\":_vm.MicrobiologyResult.NegativeDescriptions[index],\"disabled\":false},model:{value:(_vm.NegativeResultSelection),callback:function ($$v) {_vm.NegativeResultSelection=$$v},expression:\"NegativeResultSelection\"}})}))]):_vm._e(),_vm._v(\" \"),(!_vm.ModalNegative && _vm.ModalPositive && !_vm.MicrobiologyResult.DefaultBacteries.length)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-1\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-11\"},_vm._l((_vm.MicrobiologyResult.PositiveDescriptions),function(desc,index){return _c('vuestic-radio-button',{key:index,attrs:{\"label\":_vm.MicrobiologyResult.PositiveDescriptions[index],\"id\":_vm.MicrobiologyResult.PositiveDescriptions[index],\"value\":_vm.MicrobiologyResult.PositiveDescriptions[index],\"name\":_vm.MicrobiologyResult.PositiveDescriptions[index],\"disabled\":false},model:{value:(_vm.PositiveResultSelection),callback:function ($$v) {_vm.PositiveResultSelection=$$v},expression:\"PositiveResultSelection\"}})}))]):_vm._e(),_vm._v(\" \"),(!_vm.ModalNegative && _vm.ModalPositive && _vm.MicrobiologyResult.DefaultBacteries.length)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-6\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-2\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-10\"},_vm._l((_vm.MicrobiologyResult.DefaultBacteries),function(bakt,index){return _c('div',{key:index,staticClass:\"form-check abc-checkbox abc-checkbox-primary\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(bakt.chosen),expression:\"bakt.chosen\"}],staticClass:\"form-check-input\",attrs:{\"id\":bakt._id,\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(bakt.chosen)?_vm._i(bakt.chosen,null)>-1:(bakt.chosen)},on:{\"click\":function($event){_vm.SelectBactery(bakt, index)},\"change\":function($event){var $$a=bakt.chosen,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(bakt.chosen=$$a.concat([$$v]))}else{$$i>-1&&(bakt.chosen=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.$set(bakt, \"chosen\", $$c)}}}}),_vm._v(\" \"),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":bakt._id}},[_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(bakt.opis))])])])}))])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-6\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-1\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-6\"},[(!_vm.ShowAllBacteries)?_c('a',{staticStyle:{\"font-size\":\"16px\",\"color\":\"#4ae387\"},attrs:{\"href\":\"#\"},on:{\"click\":function($event){$event.preventDefault();_vm.ShowAllBacteries = true}}},[_vm._v(\"Prikaži više\")]):_vm._e()]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-5\"})]),_vm._v(\" \"),(_vm.ShowAllBacteries)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-1\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-10\"},_vm._l((_vm.MicrobiologyResult.RemainingBacteries),function(bakt,index){return _c('div',{key:index,staticClass:\"form-check abc-checkbox abc-checkbox-primary\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(bakt.chosen),expression:\"bakt.chosen\"}],staticClass:\"form-check-input\",attrs:{\"id\":bakt._id,\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(bakt.chosen)?_vm._i(bakt.chosen,null)>-1:(bakt.chosen)},on:{\"click\":function($event){_vm.SelectBactery(bakt, index)},\"change\":function($event){var $$a=bakt.chosen,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(bakt.chosen=$$a.concat([$$v]))}else{$$i>-1&&(bakt.chosen=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.$set(bakt, \"chosen\", $$c)}}}}),_vm._v(\" \"),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":bakt._id}},[_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(bakt.opis))])])])}))]):_vm._e()])]):_vm._e()]),_vm._v(\" \"),_c('vuestic-modal-delete',{ref:\"staticModalDeleteSample\",attrs:{\"show\":_vm.show,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',{staticStyle:{\"color\":\"#acb5be\"}},[_vm._v(_vm._s('Brisanje uzorka: '))]),_vm._v(\" \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(_vm.sid))])]),_vm._v(\" \"),_c('div',[_c('h5',[_vm._v(_vm._s('Jeste li sigurni da želite obrisati uzorak?'))])])]),_vm._v(\" \"),_c('vuestic-modal-comment',{ref:\"staticModalComment\",attrs:{\"show\":_vm.show,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(_vm._s('Unos komentara za uzorak: ' + _vm.sid))]),_vm._v(\" \"),_c('div',[_c('h5')])]),_vm._v(\" \"),_c('vuestic-modal-edit',{ref:\"staticModalEditSample\",attrs:{\"show\":_vm.show,\"sample\":_vm.sid,\"action\":\"Edit\",\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(_vm._s('Uređivanje uzorka: ' + _vm.sid))]),_vm._v(\" \"),_c('div',[_c('h5')])]),_vm._v(\" \"),_c('vuestic-modal-mail',{ref:\"staticModalSendMail\",attrs:{\"show\":_vm.show,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"\\n          \"+_vm._s('Slanje nalaza na adresu: ')+\"\\n          \"),_c('span',{staticStyle:{\"color\":\"#4ae387\"}},[_vm._v(_vm._s(_vm.email))])]),_vm._v(\" \"),_c('div',[_c('h5',[_vm._v(_vm._s('Jeste li sigurni da želite poslati nalaz?'))])])]),_vm._v(\" \"),_c('vuestic-modal-all-results',{ref:\"staticModalAllResults\",attrs:{\"show\":_vm.show,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"\\n          \"+_vm._s('Izbor rezultata: ')+\"\\n          \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(_vm.labassay))])]),_vm._v(\" \"),_c('div',[_c('div',{staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped first-td-padding\"},[_c('thead',[_c('tr',[_c('td',[_vm._v(\"analizator\")]),_vm._v(\" \"),_c('td',[_vm._v(\"vrijeme\")]),_vm._v(\" \"),_c('td',[_vm._v(\"rezultat\")]),_vm._v(\" \"),_c('td',[_vm._v(\"jedinica\")]),_vm._v(\" \"),_c('td',[_vm._v(\"reference\")]),_vm._v(\" \"),(_vm.sample_status != 'ODOBREN' &&  _vm.sample_status != 'VERIFICIRAN')?_c('td',[_vm._v(\"izbor\")]):_vm._e(),_vm._v(\" \"),_c('td',{attrs:{\"align\":\"middle\"}})])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.vise.rezultat),function(test){return _c('tr',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.rezultat_f != ''),expression:\"test.rezultat_f != ''\"}],key:test._id,class:{\n                    'table-danger': _vm.Interpretacija(_vm.vise.labassay.analit, test.rezultat_f, test.jedinice_f, _vm.vise.refd, _vm.vise.refg, _vm.$store.state.site, _vm.vise.interp, _vm.vise.extend, _vm.spec)[5] === 'Red' && !test.multidata, \n                    'table-success': _vm.Interpretacija(_vm.vise.labassay.analit, test.rezultat_f, test.jedinice_f, _vm.vise.refd, _vm.vise.refg, _vm.$store.state.site, _vm.vise.interp, _vm.vise.extend, _vm.spec)[5] === 'Green' && !test.multidata,\n                    'table-warning': _vm.Interpretacija(_vm.vise.labassay.analit, test.rezultat_f, test.jedinice_f, _vm.vise.refd, _vm.vise.refg, _vm.$store.state.site, _vm.vise.interp, _vm.vise.extend, _vm.spec)[5] === 'Yellow' && !test.multidata\n                  }},[_c('td',[_vm._v(_vm._s(test.anaassay.aparat.ime))]),_vm._v(\" \"),_c('td',[_vm._v(\"\\n                    \"+_vm._s(JSON.stringify(\n                    test.updated_at\n                    ).slice(9, 11) +\n                    \".\" +\n                    JSON.stringify(\n                    test.updated_at\n                    ).slice(6, 8) +\n                    \".\" +\n                    JSON.stringify(\n                    test.updated_at\n                    ).slice(1, 5) + ' | ')+\"\\n                    \"),_c('sub',[_vm._v(\"\\n                      \"+_vm._s(JSON.stringify(\n                      test.updated_at\n                      ).slice(12, 20))+\"\\n                    \")])]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(test.rezultat_f))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(test.jedinice_f))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(_vm.Interpretacija(_vm.vise.labassay.analit, test.rezultat_f, test.jedinice_f, _vm.vise.refd, _vm.vise.refg, _vm.$store.state.site, _vm.vise.interp, _vm.vise.extend, _vm.spec)[4]))]),_vm._v(\" \"),(_vm.sample_status != 'ODOBREN' &&  _vm.sample_status != 'VERIFICIRAN')?_c('td',[(!test.izabran)?_c('i',{staticClass:\"glyphicon glyphicon-unchecked\",staticStyle:{\"font-size\":\"18px\",\"color\":\"#e34a4a\"},on:{\"click\":function($event){$event.preventDefault();_vm.IzborTesta(_vm.vise, test)}}}):_vm._e(),_vm._v(\" \"),(test.izabran)?_c('i',{staticClass:\"glyphicon glyphicon-check\",staticStyle:{\"font-size\":\"18px\",\"color\":\"#4ae387\"}}):_vm._e()]):_vm._e(),_vm._v(\" \"),_c('td',[_c('i',{class:{'fa fa-exclamation-triangle icon-right input-icon error-icon' : _vm.Interpretacija(_vm.vise.labassay.analit, test.rezultat_f, test.jedinice_f, _vm.vise.refd, _vm.vise.refg, _vm.$store.state.site, _vm.vise.interp, _vm.vise.extend, _vm.spec)[5] === 'Red'}}),_vm._v(\" \"),_c('i',{class:{'fa fa-check success-icon icon-right input-icon' : _vm.Interpretacija(_vm.vise.labassay.analit, test.rezultat_f, test.jedinice_f, _vm.vise.refd, _vm.vise.refg, _vm.$store.state.site, _vm.vise.interp, _vm.vise.extend, _vm.spec)[5] === 'Green'}})])])}))])])])]),_vm._v(\" \"),_c('vuestic-modal-error',{ref:\"staticModalError\",attrs:{\"show\":_vm.show,\"cancelText\":\"ZATVORI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"\\n          \"+_vm._s('')+\"\\n          \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s('404: Not Found'))])]),_vm._v(\" \"),_c('div',[_c('h5',[_vm._v(_vm._s('Greška prilikom čitanja nalaza.'))])])]),_vm._v(\" \"),_c('vuestic-modal-error',{ref:\"staticModalVerifyPrivilege\",attrs:{\"show\":_vm.show,\"cancelText\":\"ZATVORI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"\\n          \"+_vm._s('')+\"\\n          \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s('401: Not Authorized'))])]),_vm._v(\" \"),_c('div',[_c('h5',[_vm._v(_vm._s('Nemate odgovarajuće privilegije.'))])])]),_vm._v(\" \"),_c('vuestic-modal-exclamation',{ref:\"staticModalExclamation\",attrs:{\"show\":_vm.show,\"cancelText\":\"ZATVORI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"\\n          \"+_vm._s('')+\"\\n          \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(_vm.warning.analiza))])]),_vm._v(\" \"),_c('div',[_c('h5',[_vm._v(_vm._s(_vm.warning.control))]),_vm._v(\" \"),_c('p',[_vm._v(_vm._s(_vm.warning.text))])])]),_vm._v(\" \"),_c('vuestic-modal-reference',{ref:\"staticModalReference\",attrs:{\"show\":_vm.show,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"\\n          \"+_vm._s('Referentne vrijednosti: ')+\"\\n          \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(_vm.reference.naziv)+\" (\"+_vm._s(_vm.reference.opis)+\")\")])]),_vm._v(\" \"),_c('div',[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-1\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-2\"},[_c('div',{staticClass:\"form-group\"},[_c('div',{staticClass:\"input-group\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.reference.dref),expression:\"reference.dref\"}],staticStyle:{\"color\":\"#e34a4a\"},attrs:{\"id\":\"input-icon-left\",\"title\":\" \",\"name\":\"input-icon-left\",\"required\":\"\"},domProps:{\"value\":(_vm.reference.dref)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.reference, \"dref\", $event.target.value)}}}),_vm._v(\" \"),_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"input-icon-left\"}},[_vm._v(_vm._s('Donja'))]),_vm._v(\" \"),_c('i',{staticClass:\"bar\"})])])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-1\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-2\"},[_c('div',{staticClass:\"form-group\"},[_c('div',{staticClass:\"input-group\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.reference.gref),expression:\"reference.gref\"}],staticStyle:{\"color\":\"#e34a4a\"},attrs:{\"id\":\"input-icon-left\",\"title\":\" \",\"name\":\"input-icon-left\",\"required\":\"\"},domProps:{\"value\":(_vm.reference.gref)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.reference, \"gref\", $event.target.value)}}}),_vm._v(\" \"),_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"input-icon-left\"}},[_vm._v(_vm._s('Gornja'))]),_vm._v(\" \"),_c('i',{staticClass:\"bar\"})])])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-1\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-4\"},[(_vm.$store.state.access.level < 1)?_c('vuestic-simple-select',{staticStyle:{\"font-size\":\"14px\"},attrs:{\"label\":\"Interpretacija\",\"title\":\" \",\"options\":_vm.interpretacije},model:{value:(_vm.reference.interp),callback:function ($$v) {_vm.$set(_vm.reference, \"interp\", $$v)},expression:\"reference.interp\"}}):_vm._e(),_vm._v(\" \"),(_vm.$store.state.access.level > 0)?_c('div',{staticClass:\"form-group\"},[_c('div',{staticClass:\"input-group\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.reference.interp),expression:\"reference.interp\"}],attrs:{\"id\":\"input-icon-left\",\"title\":\" \",\"name\":\"input-icon-left\",\"required\":\"\",\"disabled\":true},domProps:{\"value\":(_vm.reference.interp)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.reference, \"interp\", $event.target.value)}}}),_vm._v(\" \"),_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"input-icon-left\"}},[_vm._v(_vm._s(_vm.reference.interp))]),_vm._v(\" \"),_c('i',{staticClass:\"bar\"})])]):_vm._e()],1),_vm._v(\" \"),_c('div',{staticClass:\"col-md-1\"})]),_vm._v(\" \"),_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-1\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-2\"},[_c('vuestic-simple-select',{staticStyle:{\"font-size\":\"14px\"},attrs:{\"label\":\"Jedinica\",\"title\":\" \",\"options\":_vm.jedinice},model:{value:(_vm.reference.jedinica),callback:function ($$v) {_vm.$set(_vm.reference, \"jedinica\", $$v)},expression:\"reference.jedinica\"}})],1),_vm._v(\" \"),_c('div',{staticClass:\"col-md-1\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-7\"},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.reference.interp != 'spec'),expression:\"reference.interp != 'spec'\"}],staticClass:\"form-group\"},[_c('div',{staticClass:\"input-group\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.reference.extend),expression:\"reference.extend\"}],staticStyle:{\"color\":\"#e34a4a\"},attrs:{\"id\":\"input-icon-left\",\"title\":\" \",\"name\":\"input-icon-left\",\"required\":\"\"},domProps:{\"value\":(_vm.reference.extend)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.reference, \"extend\", $event.target.value)}}}),_vm._v(\" \"),_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"input-icon-left\"}},[_vm._v(_vm._s('Proširena referentna vrijednost'))]),_vm._v(\" \"),_c('i',{staticClass:\"bar\"})])]),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.reference.interp === 'spec'),expression:\"reference.interp === 'spec'\"}],staticClass:\"form-group\"},[_c('div',{staticClass:\"input-group\"},[_c('textarea',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.reference.extend),expression:\"reference.extend\"}],staticStyle:{\"color\":\"#e34a4a\"},attrs:{\"type\":\"text\",\"id\":\"simple-textarea\",\"required\":\"\"},domProps:{\"value\":(_vm.reference.extend)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.reference, \"extend\", $event.target.value)}}}),_vm._v(\" \"),_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"simple-textarea\"}},[_vm._v(_vm._s('Specifična interpretacija rezultata'))]),_vm._v(\" \"),_c('i',{staticClass:\"bar\"})])])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-1\"})])])]),_vm._v(\" \"),_c('vuestic-modal-find',{ref:\"staticModalFind\",attrs:{\"show\":_vm.show,\"data_pid\":Number(_vm.data_pid),\"data_length\":Number(_vm.data_length),\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"\\n          \"+_vm._s('')+\"\\n          \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s('Redni broj pacijenta'))])]),_vm._v(\" \"),_c('div',[_c('h5')])]),_vm._v(\" \"),_c('vuestic-modal-aparati',{ref:\"staticModalAparati\",attrs:{\"show\":_vm.show,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"\\n          \"+_vm._s('Izbor analizatora: ')+\"\\n          \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(this.analiza.ime + ' (' + this.analiza.analit + ')'))])]),_vm._v(\" \"),_c('div',[_c('vuestic-accordion-obrada',_vm._l((_vm.analysers),function(element){return _c('vuestic-collapse-aparati',{key:element._id,attrs:{\"analyser\":element}},[_c('span',{attrs:{\"slot\":\"header\"},slot:\"header\"},[_vm._v(_vm._s(element.ime + ', ' + element.site.naziv))]),_vm._v(\" \"),_c('div',{attrs:{\"slot\":\"body\"},slot:\"body\"},[_c('div',{staticClass:\"va-row\"})])])}))],1)]),_vm._v(\" \"),_c('vuestic-modal-results-multi',{ref:\"staticModalResultsMulti\",attrs:{\"show\":_vm.show,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"\\n          \"+_vm._s('Izbor rezultata: ')+\"\\n          \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(_vm.multi_test))])]),_vm._v(\" \"),_c('div')]),_vm._v(\" \"),_c('patient-evaluation-single',{ref:\"staticModalEvaluationSingle\",attrs:{\"show\":_vm.show,\"cancelText\":\"ZATVORI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',[_vm._v(_vm._s(_vm.ime + ' ' + _vm.prezime))])]),_vm._v(\" \"),(_vm.Procjena.length && !_vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',{staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped table-sm color-icon-label-table\"},[_c('thead',[_c('tr',{attrs:{\"align\":\"middle\"}},[_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('REZULTAT'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('JEDINICA'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('REFERENCE'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('DATUM'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"15%\"}},[_vm._v(_vm._s('VRIJEME'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"5%\",\"align\":\"middle\"}})])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.Procjena),function(element,index){return _c('tr',{key:index,class:{\n                          'table-danger': _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Red', \n                          'table-success': _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Green',\n                          'table-warning': _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Yellow'\n                        },attrs:{\"align\":\"middle\"}},[_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.rezultat))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.jedinica))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(_vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[4]))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.datum))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"15%\"}},[_vm._v(_vm._s(element.vrijeme))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"9%\",\"align\":\"middle\"}},[_c('i',{class:{'fa fa-exclamation-triangle icon-right input-icon error-icon' : _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Red'}}),_vm._v(\" \"),_c('i',{class:{'fa fa-check success-icon icon-right input-icon' : _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Green'}})])])}))]),_vm._v(\" \"),_c('div',{staticStyle:{\"text-align\":\"center\"}},[_c('span',{staticClass:\"circle badge-info\"}),_vm._v(\"\\n                \"+_vm._s(_vm.table_header)+\"\\n              \")])])])]):_vm._e(),_vm._v(\" \"),(_vm.showLineChart && _vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('line-chart',{attrs:{\"options\":_vm.optionsLineChart,\"data\":_vm.dataLineChart,\"type\":\"line\"}})],1)]):_vm._e(),_vm._v(\" \"),(!_vm.showLineChart && _vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',[_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"Nema podataka.\"))])])])]):_vm._e()]),_vm._v(\" \"),_c('patient-evaluation-single',{ref:\"staticModalLabAssayEvalSingle\",attrs:{\"show\":_vm.show,\"cancelText\":\"ZATVORI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',{staticStyle:{\"color\":\"#4ae387\"}},[_vm._v(_vm._s(_vm.analiza_eval.ime + ' (' + _vm.analiza_eval.analit + ')'))]),_vm._v(\" \"),_c('span',[_vm._v(_vm._s(\" - Rezultati analize u zadnjih 14 dana\"))])]),_vm._v(\" \"),(_vm.Procjena.length && !_vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',{staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped table-sm color-icon-label-table\"},[_c('thead',[_c('tr',{attrs:{\"align\":\"middle\"}},[_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('REZULTAT'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('JEDINICA'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('REFERENCE'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('DATUM'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"15%\"}},[_vm._v(_vm._s('VRIJEME'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"5%\",\"align\":\"middle\"}})])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.Procjena),function(element,index){return _c('tr',{key:index,class:{\n                      'table-danger': _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Red', \n                      'table-success': _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Green',\n                      'table-warning': _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Yellow'\n                    },attrs:{\"align\":\"middle\"}},[_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.rezultat))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.jedinica))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(_vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[4]))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.datum))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"15%\"}},[_vm._v(_vm._s(element.vrijeme))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"9%\",\"align\":\"middle\"}},[_c('i',{class:{'fa fa-exclamation-triangle icon-right input-icon error-icon' : _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Red'}}),_vm._v(\" \"),_c('i',{class:{'fa fa-check success-icon icon-right input-icon' : _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Green'}})])])}))]),_vm._v(\" \"),_c('div',{staticStyle:{\"text-align\":\"center\"}},[_c('span',{staticClass:\"circle badge-info\"}),_vm._v(\"\\n                \"+_vm._s(_vm.table_header)+\"\\n              \")])])])]):_vm._e(),_vm._v(\" \"),(_vm.showLineChart && _vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('line-chart',{attrs:{\"options\":_vm.optionsLineChart,\"data\":_vm.dataLineChart,\"type\":\"line\"}})],1)]):_vm._e(),_vm._v(\" \"),(!_vm.showLineChart && _vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',[_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"Nema podataka.\"))])])])]):_vm._e()]),_vm._v(\" \"),_c('patient-evaluation-multi',{ref:\"staticModalEvaluationMulti\",attrs:{\"show\":_vm.show,\"multiparam_izbor\":_vm.multiparam_izbor,\"multiparam_izbornik\":_vm.multiparam_izbornik,\"cancelText\":\"ZATVORI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',[_vm._v(_vm._s(_vm.ime + ' ' + _vm.prezime))])]),_vm._v(\" \"),(_vm.Procjena.length && !_vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',{staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped table-sm color-icon-label-table\"},[_c('thead',[_c('tr',{attrs:{\"align\":\"middle\"}},[_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('REZULTAT'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('JEDINICA'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('REFERENCE'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('DATUM'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"15%\"}},[_vm._v(_vm._s('VRIJEME'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"5%\",\"align\":\"middle\"}})])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.Procjena),function(element,index){return _c('tr',{key:index,class:{\n                      'table-danger': _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Red', \n                      'table-success': _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Green',\n                      'table-warning': _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Yellow'\n                    },attrs:{\"align\":\"middle\"}},[_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.rezultat))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.jedinica))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(_vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[4]))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.datum))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"15%\"}},[_vm._v(_vm._s(element.vrijeme))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"9%\",\"align\":\"middle\"}},[_c('i',{class:{'fa fa-exclamation-triangle icon-right input-icon error-icon' : _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Red'}}),_vm._v(\" \"),_c('i',{class:{'fa fa-check success-icon icon-right input-icon' : _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Green'}})])])}))]),_vm._v(\" \"),_c('div',{staticStyle:{\"text-align\":\"center\"}},[_c('span',{staticClass:\"circle badge-info\"}),_vm._v(\"\\n                \"+_vm._s(_vm.table_header)+\"\\n              \")])])])]):_vm._e(),_vm._v(\" \"),(!_vm.Procjena.length && !_vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',[_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"Nema podataka.\"))])])])]):_vm._e(),_vm._v(\" \"),(_vm.showLineChart && _vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('line-chart',{attrs:{\"options\":_vm.optionsLineChart,\"data\":_vm.dataLineChart,\"type\":\"line\"}})],1)]):_vm._e(),_vm._v(\" \"),(!_vm.showLineChart && _vm.graph)?_c('div',{staticClass:\"row\"},[(!_vm.showLineChart && !_vm.spinner)?_c('div',{staticClass:\"col-md-12\"},[_c('div',[_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"Nema podataka.\"))])])]):_vm._e(),_vm._v(\" \"),(!_vm.showLineChart && _vm.spinner)?_c('div',{staticClass:\"col-md-12\",staticStyle:{\"min-height\":\"400px\"}},[_c('div',{staticStyle:{\"display\":\"flex\",\"flex-direction\":\"row\",\"justify-content\":\"center\",\"align-items\":\"center\"}},[_c('div',{staticStyle:{\"float\":\"left\"}}),_vm._v(\" \"),_c('span',{staticStyle:{\"vertical-align\":\"middle\"}},[_c('atom-spinner',{staticStyle:{\"opacity\":\"0.25\"},attrs:{\"animation-duration\":1000,\"size\":300,\"color\":'#4ae387'}})],1)])]):_vm._e()]):_vm._e()]),_vm._v(\" \"),_c('patient-evaluation-multi',{ref:\"staticModalLabAssayEvalMulti\",attrs:{\"show\":_vm.show,\"multiparam_izbor\":_vm.multiparam_izbor,\"multiparam_izbornik\":_vm.multiparam_izbornik,\"cancelText\":\"ZATVORI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',{staticStyle:{\"color\":\"#4ae387\"}},[_vm._v(_vm._s(_vm.analiza_eval.ime + ' (' + _vm.analiza_eval.analit + ')'))]),_vm._v(\" \"),_c('span',[_vm._v(_vm._s(\" - Rezultati analize u zadnjih 14 dana\"))])]),_vm._v(\" \"),(_vm.Procjena.length && !_vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',{staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped table-sm color-icon-label-table\"},[_c('thead',[_c('tr',{attrs:{\"align\":\"middle\"}},[_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('REZULTAT'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('JEDINICA'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('REFERENCE'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('DATUM'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"15%\"}},[_vm._v(_vm._s('VRIJEME'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"5%\",\"align\":\"middle\"}})])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.Procjena),function(element,index){return _c('tr',{key:index,class:{\n                      'table-danger': _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Red', \n                      'table-success': _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Green',\n                      'table-warning': _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Yellow'\n                    },attrs:{\"align\":\"middle\"}},[_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.rezultat))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.jedinica))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(_vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[4]))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.datum))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"15%\"}},[_vm._v(_vm._s(element.vrijeme))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"9%\",\"align\":\"middle\"}},[_c('i',{class:{'fa fa-exclamation-triangle icon-right input-icon error-icon' : _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Red'}}),_vm._v(\" \"),_c('i',{class:{'fa fa-check success-icon icon-right input-icon' : _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Green'}})])])}))]),_vm._v(\" \"),_c('div',{staticStyle:{\"text-align\":\"center\"}},[_c('span',{staticClass:\"circle badge-info\"}),_vm._v(\"\\n                \"+_vm._s(_vm.table_header)+\"\\n              \")])])])]):_vm._e(),_vm._v(\" \"),(!_vm.Procjena.length && !_vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',[_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"Nema podataka.\"))])])])]):_vm._e(),_vm._v(\" \"),(_vm.showLineChart && _vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('line-chart',{attrs:{\"options\":_vm.optionsLineChart,\"data\":_vm.dataLineChart,\"type\":\"line\"}})],1)]):_vm._e(),_vm._v(\" \"),(!_vm.showLineChart && _vm.graph)?_c('div',{staticClass:\"row\"},[(!_vm.showLineChart && !_vm.spinner)?_c('div',{staticClass:\"col-md-12\"},[_c('div',[_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"Nema podataka.\"))])])]):_vm._e(),_vm._v(\" \"),(!_vm.showLineChart && _vm.spinner)?_c('div',{staticClass:\"col-md-12\",staticStyle:{\"min-height\":\"400px\"}},[_c('div',{staticStyle:{\"display\":\"flex\",\"flex-direction\":\"row\",\"justify-content\":\"center\",\"align-items\":\"center\"}},[_c('div',{staticStyle:{\"float\":\"left\"}}),_vm._v(\" \"),_c('span',{staticStyle:{\"vertical-align\":\"middle\"}},[_c('atom-spinner',{staticStyle:{\"opacity\":\"0.25\"},attrs:{\"animation-duration\":1000,\"size\":300,\"color\":'#4ae387'}})],1)])]):_vm._e()]):_vm._e()])],1):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',{staticClass:\"col-md-6\"},[_c('loading',{attrs:{\"active\":_vm.isLoading,\"can-cancel\":false,\"on-cancel\":_vm.onCancel,\"color\":\"#4ae387\",\"is-full-page\":_vm.fullPage},on:{\"update:active\":function($event){_vm.isLoading=$event}}})],1),_vm._v(\" \"),_c('div',{staticClass:\"col-md-6\"},[(false)?_c('button',{on:{\"click\":function($event){$event.preventDefault();_vm.Test($event)}}},[_vm._v(_vm._s('Loading...'))]):_vm._e()])])])])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\n/* harmony default export */ __webpack_exports__[\"a\"] = (esExports);\n\n/***/ }),\n\n/***/ \"DQ8Z\":\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(\"FZ+f\")(true);\n// imports\n\n\n// module\nexports.push([module.i, \".circle[data-v-61c2f4b3]{width:.4rem;height:.4rem;border-radius:50%;display:inline-block}\", \"\", {\"version\":3,\"sources\":[\"C:/Users/atom/Desktop/ATOM Projects/ACTIVE Projects/185.62.136.71 (A2 Hosting)/10020 - ExtraLab Laboratorij/elt_client/src/components/obrada/BadgeColumn.vue\"],\"names\":[],\"mappings\":\"AACA,yBACE,YAAc,AACd,aAAe,AACf,kBAAmB,AACnB,oBAAsB,CACvB\",\"file\":\"BadgeColumn.vue\",\"sourcesContent\":[\"\\n.circle[data-v-61c2f4b3] {\\n  width: 0.4rem;\\n  height: 0.4rem;\\n  border-radius: 50%;\\n  display: inline-block;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n\n/***/ \"FC28\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('span',{staticClass:\"circle\",class:_vm.classObject})}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\n/* harmony default export */ __webpack_exports__[\"a\"] = (esExports);\n\n/***/ }),\n\n/***/ \"G5/o\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// 19.1.2.7 Object.getOwnPropertyNames(O)\n__webpack_require__(\"uqUo\")('getOwnPropertyNames', function () {\n  return __webpack_require__(\"Rrel\").f;\n});\n\n\n/***/ }),\n\n/***/ \"KUw5\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_own_property_names__ = __webpack_require__(\"aFK5\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_own_property_names___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_own_property_names__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray__ = __webpack_require__(\"Gu7T\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify__ = __webpack_require__(\"mvHQ\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_vue__ = __webpack_require__(\"7+uW\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__router__ = __webpack_require__(\"YaEn\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_vuex_store__ = __webpack_require__(\"IcnI\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_services_utils__ = __webpack_require__(\"hLWQ\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__config_config_js__ = __webpack_require__(\"1wn0\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__BadgeColumn_vue__ = __webpack_require__(\"XMpX\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__main__ = __webpack_require__(\"NHnr\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__functions_reference_js__ = __webpack_require__(\"d5lM\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__functions_reference_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_10__functions_reference_js__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__data_izbornik_izbornik__ = __webpack_require__(\"8472\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12_vue_loading_overlay__ = __webpack_require__(\"ZZvs\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12_vue_loading_overlay___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_12_vue_loading_overlay__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13_vue_loading_overlay_dist_vue_loading_css__ = __webpack_require__(\"SYh3\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13_vue_loading_overlay_dist_vue_loading_css___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_13_vue_loading_overlay_dist_vue_loading_css__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__vuestic_components_vuestic_chart_chart_types_LineChart__ = __webpack_require__(\"eDOj\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15_epic_spinners__ = __webpack_require__(\"pyJd\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16_pdfobject__ = __webpack_require__(\"UqI+\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16_pdfobject___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_16_pdfobject__);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n__WEBPACK_IMPORTED_MODULE_3_vue__[\"default\"].component(\"line-chart\", __WEBPACK_IMPORTED_MODULE_14__vuestic_components_vuestic_chart_chart_types_LineChart__[\"a\" /* default */]);\n__WEBPACK_IMPORTED_MODULE_3_vue__[\"default\"].component(\"badge-column\", __WEBPACK_IMPORTED_MODULE_8__BadgeColumn_vue__[\"default\"]);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n\n  name: \"collapse-obrada\",\n\n  data: function data() {\n    return {\n\n      AllowGetSample: true,\n      MicrobiologyOrder: false,\n      MicrobiologySample: false,\n      ModalNegative: false,\n      ModalPositive: false,\n      ModalPositiveCondition: false,\n      ShowAllBacteries: false,\n      ShowAntibiotics: false,\n      ShowBacteries: false,\n      BacteryTabs: [\"\"],\n      CurrentTab: \"\",\n      CurrentTest: \"\",\n      MicrobiologyModalHeader: \"Predefinisani rezultati\",\n      SelectedBacteries: [],\n      NegativeResultSelection: \"\",\n      PositiveResultSelection: \"\",\n      MicrobiologyScenario: \"Unknown\",\n      Antibiotics: [],\n      TemporaryAntibiotics: [],\n      TemporaryBacteries: [],\n      TemporaryBacteriesAdd: [],\n      Antibiograms: [],\n      Bacteries: [],\n\n      MicrobiologyResult: {\n        negative: null,\n        positive: null,\n        BUG: null,\n        F_RESULT: \"\",\n        M_RESULT: [],\n        DefaultBacteries: [],\n        RemainingBacteries: [],\n        NegativeDescriptions: [],\n        PositiveDescriptions: []\n      },\n\n      save_retest: false,\n      multiparam_izbor: \"\",\n      klijent: null,\n      multiparam_id: \"\",\n      analit: {},\n      multiparams: [],\n      Response: {},\n      spinner: false,\n      multiparam_izbornik: [],\n      warning: { analiza: \"\", text: \"\", control: \"\" },\n      main: false,\n      show: true,\n      pdf: false,\n      header: \"\",\n      lokacija: {},\n      timestamp: \"\",\n      pacijent: \"\",\n      ime: \"\",\n      prezime: \"\",\n      jmbg: \"\",\n      pid: \"\",\n      sid: \"\",\n      email: \"\",\n      email_tmp: \"\",\n      verificiran: false,\n      email_button: false,\n      final_pdf: false,\n      odobren: false,\n      approved: 0,\n      verified: 0,\n      partials: [],\n      partials_condition: false,\n      count: 0,\n      nalaz: {},\n      report: {},\n      path: \"\",\n      url: \"\",\n      uzorci: [],\n      vise: [],\n      samples: [],\n      sample_status: \"\",\n      labassay: \"\",\n      multi_test: \"\",\n      multi_rezultati: [],\n      check: \"\",\n      link: \"\",\n      spec: \"*\",\n      testovi: [],\n      rezultati: [],\n      analysers: [],\n      analyser: {},\n      analiza: {},\n      analyser_selected: {},\n      analyser_patient: {},\n      analitiprikaz: [],\n      analiti: [],\n      naslov: \"\",\n      calculated: false,\n      show_table: false,\n      sample: {},\n      resdata: {},\n      email_changed: false,\n      Previous: { pid: null },\n      Next: { pid: null },\n      Results: [],\n      Datum: { today: null, query: null, next: null, previous: null },\n      pagination: false,\n      forward_disabled: false,\n      backward_disabled: false,\n      data_length: 0,\n      data_min: 1,\n      data_pid: 0,\n      data_spol: \"\",\n      query_date: \"\",\n      today_date: \"\",\n      reference: {},\n      interpretacije: [\"none\", \"A\", \"ogtt\", \"insul\", \"less\", \"lesseq\", \"lesspl\", \"infekc\", \"grt\", \"grtpl\", \"grtepl\", \"grtno\", \"grte\", \"neg\", \"nema\", \"urbl\", \"reakt\", \"norm\", \"norma\", \"ured\", \"plus\", \"morf\", \"titar\", \"tsh\", \"trg\", \"hol\", \"hdl\", \"ldl\", \"fpsa\", \"sediment\", \"bistar\", \"boja\", \"bojasp\", \"nesto\", \"exists\", \"blst\", \"leu\", \"spec\"],\n\n      toastText: \"\",\n      toastIcon: \"\",\n      toastPosition: \"\",\n      toastDuration: 2500,\n      isToastFullWidth: false,\n      className: \"\",\n\n      isLoading: false,\n      fullPage: true,\n\n      analiza_eval: {},\n      showLineChart: false,\n      optionsLineChart: {},\n      dataLineChart: {},\n      Procjena: [],\n\n      jedinica: \"\",\n      jedinice: [],\n      graph: false,\n      table_header: \"\"\n    };\n  },\n\n  components: {\n    Loading: __WEBPACK_IMPORTED_MODULE_12_vue_loading_overlay___default.a,\n    AtomSpinner: __WEBPACK_IMPORTED_MODULE_15_epic_spinners__[\"a\" /* AtomSpinner */]\n  },\n\n  watch: {\n    email: function email() {\n      if (this.email.trim() != this.email_tmp.trim()) {\n        this.email_changed = true;\n      }\n    },\n\n    ModalNegative: function ModalNegative() {\n      if (this.ModalNegative) {\n\n        console.log(\"Izbor: negativan\");\n\n        this.MicrobiologyModalHeader = \"Predefinisani rezultati\";\n        if (this.MicrobiologyScenario.includes(\"MANB\")) {\n          this.ModalPositiveCondition = true;\n        } else {\n          this.ModalPositiveCondition = false;\n        }\n      }\n    },\n\n    ModalPositive: function ModalPositive() {\n      if (this.ModalPositive) {\n\n        console.log(\"Izbor: pozitivan\");\n\n        if (this.MicrobiologyScenario === \"MAIBNoR\") {\n          this.MicrobiologyModalHeader = \"Bakterije\";\n        } else {\n          this.MicrobiologyModalHeader = \"Predefinisani rezultati\";\n        }\n\n        if (this.MicrobiologyScenario.includes(\"MANB\")) {\n          this.ModalPositiveCondition = true;\n        } else {\n          this.ModalPositiveCondition = false;\n        }\n      }\n    },\n\n    MicrobiologyScenario: function MicrobiologyScenario() {\n      switch (this.MicrobiologyScenario) {\n        case \"MAIBNoR\":\n          this.ModalNegative = false;\n          this.ModalPositive = false;\n          this.ModalPositiveCondition = false;\n          this.MicrobiologyModalHeader = \"Predefinisani rezultati\";\n          this.NegativeResultSelection = \"\";\n          this.PositiveResultSelection = \"\";\n          this.SelectedBacteries = [];\n          this.ShowAllBacteries = false;\n\n          break;\n\n        case \"MAIBNeR\":\n          this.SelectedBacteries = [];\n\n          break;\n\n        case \"MAIBPoR\":\n          break;\n\n        case \"MANBNoR\":\n          this.ModalNegative = false;\n          this.ModalPositive = false;\n          this.ModalPositiveCondition = false;\n          this.MicrobiologyModalHeader = \"Predefinisani rezultati\";\n          this.NegativeResultSelection = \"\";\n          this.PositiveResultSelection = \"\";\n          this.SelectedBacteries = [];\n          this.ShowAllBacteries = false;\n\n          break;\n\n        case \"MANBNeR\":\n          this.SelectedBacteries = [];\n\n          break;\n\n        case \"MANBPoR\":\n          this.SelectedBacteries = [];\n\n          break;\n\n        default:\n          break;\n      }\n    }\n\n  },\n  beforeCreate: function beforeCreate() {\n    var _this = this;\n\n    __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"l\" /* http */].get(\"postavke/jedinice/mount/list?token=\" + this.$store.state.token + \"&site=\" + this.$store.state.site, {}).then(function (res) {\n      _this.jedinice = res.data.jedinica;\n    });\n  },\n  mounted: function mounted() {\n    var _this2 = this;\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"Parametar\", function (data) {\n\n      _this2.spinner = true;\n\n      _this2.analit = {};\n\n      _this2.multiparams.forEach(function (element) {\n        if (element.opis === data) {\n          _this2.analit = element;\n          _this2.multiparam_id = element._id;\n          _this2.multiparam_izbor = data;\n        }\n      });\n\n      if (_.isEmpty(_this2.analit)) {} else {\n        if (!_.isEmpty(_this2.Response)) {\n          _this2.showLineChart = false;\n          var palette = __WEBPACK_IMPORTED_MODULE_5_vuex_store__[\"a\" /* default */].getters.palette;\n\n          _this2.Procjena = [];\n\n          var obj = {};\n          var count = 0;\n\n          _this2.Response.Multi.forEach(function (element) {\n            count++;\n            element.multi.forEach(function (param) {\n              if (_this2.multiparam_id == param.labassay && param.rezultat[0].rezultat_f.trim() != \"\") {\n                obj.rezultat = param.rezultat[0].rezultat_f;\n                obj.jedinica = param.rezultat[0].jedinice_f;\n                obj.analit = \"Nema podataka\";\n                obj.interp = param.interp;\n                obj.extend = param.extend;\n                obj.refd = param.refd;\n                obj.refg = param.refg;\n                obj.sid = \"Nema podataka\";\n                obj.updated_at = new Date(param.rezultat[0].updated_at);\n\n                var datum = __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(new Date(param.rezultat[0].updated_at)).slice(9, 11) + \".\" + __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(new Date(param.rezultat[0].updated_at)).slice(6, 8) + \".\" + __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(new Date(param.rezultat[0].updated_at)).slice(1, 5);\n                var time = __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(new Date(new Date(param.rezultat[0].updated_at).getTime() - new Date(param.rezultat[0].updated_at).getTimezoneOffset() * 60000).toISOString()).substring(12, 17);\n                obj.datum = datum;\n                obj.vrijeme = time;\n                obj.kontrola = _this2.Interpretacija(\"\", obj.rezultat, obj.jedinica, obj.refd, obj.refg, _this2.$store.state.site, obj.interp, obj.extend, _this2.spec)[5];\n\n                _this2.Procjena.push(obj);\n                obj = {};\n              }\n            });\n\n            if (count == _this2.Response.Multi.length) {\n              _this2.Procjena.sort(function (a, b) {\n                return Date.parse(a.updated_at) == Date.parse(b.updated_at) ? 0 : +(Date.parse(a.updated_at) < Date.parse(b.updated_at)) || -1;\n              });\n\n              var data = [];\n\n              if (_this2.Procjena.length) {\n                _this2.optionsLineChart = {\n                  responsive: true,\n                  maintainAspectRatio: false,\n                  title: {\n                    display: true,\n                    text: \"\"\n                  },\n                  scales: {\n                    xAxes: [{\n                      display: true,\n                      gridLines: {\n                        display: true,\n                        color: \"#eee\"\n                      }\n                    }],\n                    yAxes: [{\n                      display: true,\n                      gridLines: {\n                        display: true,\n                        color: \"#eee\"\n                      }\n                    }]\n                  }\n                };\n\n                var labels = [];\n                var kontrola = [];\n                var temp = \"\";\n\n                _this2.Procjena.forEach(function (element) {\n                  if (!isNaN(element.rezultat.trim())) {\n                    switch (element.kontrola) {\n                      case \"Red\":\n                        kontrola.push(palette.danger);\n                        break;\n                      case \"Green\":\n                        kontrola.push(palette.primary);\n                        break;\n                      case \"Yellow\":\n                        kontrola.push(palette.warning);\n                        break;\n\n                      default:\n                        kontrola.push(palette.info);\n                        break;\n                    }\n\n                    labels.push(element.datum);\n                    data.push(element.rezultat);\n                  }\n                });\n\n                _this2.dataLineChart = {\n                  labels: labels,\n                  datasets: [{\n                    label: _this2.table_header,\n                    backgroundColor: __WEBPACK_IMPORTED_MODULE_6_services_utils__[\"a\" /* default */].hex2rgb(palette.info, 0.5).css,\n                    pointBorderColor: kontrola,\n                    pointBackgroundColor: kontrola,\n                    borderColor: palette.transparent,\n                    data: data\n                  }]\n                };\n\n                if (data.length) {\n                  setTimeout(function () {\n                    _this2.showLineChart = true;\n                  }, 500);\n                }\n              } else {\n\n                _this2.spinner = false;\n              }\n            }\n          });\n        } else {}\n      }\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"graph\", function () {\n      _this2.Procjena.sort(function (a, b) {\n        return Date.parse(a.updated_at) == Date.parse(b.updated_at) ? 0 : +(Date.parse(a.updated_at) < Date.parse(b.updated_at)) || -1;\n      });\n\n      var data = [];\n\n      if (_this2.Procjena.length) {\n        var palette = __WEBPACK_IMPORTED_MODULE_5_vuex_store__[\"a\" /* default */].getters.palette;\n        _this2.optionsLineChart = {\n          responsive: true,\n          maintainAspectRatio: false,\n          title: {\n            display: true,\n            text: \"\"\n          },\n          scales: {\n            xAxes: [{\n              display: true,\n              gridLines: {\n                display: true,\n                color: \"#eee\"\n              }\n            }],\n            yAxes: [{\n              display: true,\n              gridLines: {\n                display: true,\n                color: \"#eee\"\n              }\n            }]\n          }\n        };\n\n        var labels = [];\n        var kontrola = [];\n        var temp = \"\";\n\n        _this2.Procjena.forEach(function (element) {\n          if (!isNaN(element.rezultat.trim())) {\n            switch (element.kontrola) {\n              case \"Red\":\n                kontrola.push(palette.danger);\n                break;\n              case \"Green\":\n                kontrola.push(palette.primary);\n                break;\n              case \"Yellow\":\n                kontrola.push(palette.warning);\n                break;\n\n              default:\n                kontrola.push(palette.info);\n                break;\n            }\n\n            labels.push(element.datum);\n            data.push(element.rezultat);\n          }\n        });\n\n        _this2.dataLineChart = {\n          labels: labels,\n          datasets: [{\n            label: _this2.analiza_eval.ime + \" | \" + _this2.analiza_eval.analit,\n            backgroundColor: __WEBPACK_IMPORTED_MODULE_6_services_utils__[\"a\" /* default */].hex2rgb(palette.info, 0.5).css,\n            pointBorderColor: kontrola,\n            pointBackgroundColor: kontrola,\n            borderColor: palette.transparent,\n            data: data\n          }]\n        };\n\n        if (data.length) {\n          _this2.showLineChart = true;\n        }\n      } else {}\n      _this2.graph = false;\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"table\", function () {\n      _this2.Procjena.sort(function (a, b) {\n        return Date.parse(a.updated_at) == Date.parse(b.updated_at) ? 0 : +(Date.parse(a.updated_at) > Date.parse(b.updated_at)) || -1;\n      });\n\n      var data = [];\n\n      if (_this2.Procjena.length) {\n        var palette = __WEBPACK_IMPORTED_MODULE_5_vuex_store__[\"a\" /* default */].getters.palette;\n        _this2.optionsLineChart = {\n          responsive: true,\n          maintainAspectRatio: false,\n          title: {\n            display: true,\n            text: \"\"\n          },\n          scales: {\n            xAxes: [{\n              display: true,\n              gridLines: {\n                display: true,\n                color: \"#eee\"\n              }\n            }],\n            yAxes: [{\n              display: true,\n              gridLines: {\n                display: true,\n                color: \"#eee\"\n              }\n            }]\n          }\n        };\n\n        var labels = [];\n        var kontrola = [];\n        var temp = \"\";\n\n        _this2.Procjena.forEach(function (element) {\n          if (!isNaN(element.rezultat.trim())) {\n            switch (element.kontrola) {\n              case \"Red\":\n                kontrola.push(palette.danger);\n                break;\n              case \"Green\":\n                kontrola.push(palette.primary);\n                break;\n              case \"Yellow\":\n                kontrola.push(palette.warning);\n                break;\n\n              default:\n                kontrola.push(palette.info);\n                break;\n            }\n\n            labels.push(element.datum);\n            data.push(element.rezultat);\n          }\n        });\n\n        _this2.dataLineChart = {\n          labels: labels,\n          datasets: [{\n            label: _this2.analiza_eval.ime + \" | \" + _this2.analiza_eval.analit,\n            backgroundColor: __WEBPACK_IMPORTED_MODULE_6_services_utils__[\"a\" /* default */].hex2rgb(palette.info, 0.5).css,\n            pointBorderColor: kontrola,\n            pointBackgroundColor: kontrola,\n            borderColor: palette.transparent,\n            data: data\n          }]\n        };\n\n        if (data.length) {\n          _this2.showLineChart = true;\n        }\n      } else {}\n      _this2.graph = true;\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"trash\", function (data) {\n      _this2.sid = data.sid;\n      _this2.$refs.staticModalDeleteSample.open();\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"edit\", function (data) {\n      _this2.sid = data.sid;\n      _this2.$refs.staticModalEditSample.open();\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"comment\", function (data) {\n      _this2.sid = data.sid;\n      _this2.$refs.staticModalComment.open();\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"barcode\", function (data) {\n      _this2.BarcodePrint(data);\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"save\", function (data) {\n      _this2.SaveResults(_this2.rezultati, \"save\");\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"check\", function (data) {\n      _this2.Approve(_this2.rezultati);\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"verify\", function (data) {\n      _this2.Verify(data, \"verify\");\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"undo\", function (data) {\n      _this2.Disapprove(_this2.rezultati, \"undo\");\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"unlock\", function (data) {\n      _this2.UnVerify(data, \"unlock\");\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"Nalaz\", function (data) {\n      if (!data.final_pdf) {\n        _this2.$refs.staticModalError.open();\n      } else {\n        _this2.path = _this2.timestamp + \".pdf\";\n\n        _this2.url = __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"m\" /* server */] + \"nalazi/\" + _this2.path;\n\n        var options = {\n          width: \"100%\",\n          height: \"800px\"\n        };\n        __WEBPACK_IMPORTED_MODULE_16_pdfobject___default.a.embed(_this2.url, \"#pdf-container\", options);\n\n        _this2.email_button = true;\n        _this2.main = false;\n        _this2.pdf = true;\n      }\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"pdf\", function (data) {\n      if (!data.pdf_exists) {\n        _this2.$refs.staticModalError.open();\n      } else {\n        _this2.path = \"samples/\" + data.sid + \".pdf\";\n\n        _this2.url = __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"m\" /* server */] + \"nalazi/samples/\" + data.sid + \".pdf\";\n\n        var options = {\n          width: \"100%\",\n          height: \"800px\"\n        };\n        __WEBPACK_IMPORTED_MODULE_16_pdfobject___default.a.embed(_this2.url, \"#pdf-container\", options);\n\n        _this2.main = false;\n        _this2.pdf = true;\n      }\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"Sample\", function (data) {\n\n      if (data.tip.includes(\"Mikrobiologija\")) {\n        _this2.MicrobiologySample = true;\n      } else {\n        _this2.MicrobiologySample = false;\n      }\n\n      _this2.$store.dispatch(\"SetSample\", data.sid);\n      _this2.GetSingleSample(data);\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"Deleted\", function (data) {\n      _this2.DeletedSample(data);\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"Edited\", function (data) {\n      _this2.EditSample(data);\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"SaveMulti\", function (data) {\n      _this2.SaveMultiResults(_this2.analiti, data);\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"Mail\", function () {\n      _this2.SendMail(_this2.email);\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"Error\", function () {\n      console.warn(\"Greška prilikom čitanja nalaza.\");\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"Analyser\", function (data) {\n      _this2.AnalyserSelected(data);\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"Sljedeci\", function () {\n      _this2.Sljedeci();\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"Prethodni\", function () {\n      _this2.Prethodni();\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"Search\", function () {\n      _this2.$refs.staticModalFind.open();\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"Push\", function (data) {\n      if (_this2.$route.params.id != data) {\n        _this2.Results.forEach(function (element) {\n          if (element.pid == data) {\n            __WEBPACK_IMPORTED_MODULE_4__router__[\"a\" /* default */].push(\"/obrada/rezultati/\" + element.patient + \"/\" + element.pid + \"?date=\" + element.date);\n          }\n        });\n      } else {}\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"Reference\", function () {\n\n      _this2.reference.dref = _this2.reference.dref.replace(/,/g, \".\").trim();\n      _this2.reference.gref = _this2.reference.gref.replace(/,/g, \".\").trim();\n\n      if (_this2.reference.interp != \"spec\") {\n        _this2.reference.extend = _this2.reference.extend.replace(/(\\r\\n|\\n|\\r)/gm, \" \");\n      }\n\n      if (isNaN(_this2.reference.dref) || isNaN(_this2.reference.gref) || _this2.reference.dref === \"\" || _this2.reference.gref === \"\" || Number(_this2.reference.dref) > Number(_this2.reference.gref)) {\n        console.warn(\"Invalid value.\");\n        console.log(_this2.reference.dref);\n        console.log(_this2.reference.gref);\n        console.log(isNaN(_this2.reference.dref));\n        console.log(isNaN(_this2.reference.gref));\n        console.log(_this2.reference.dref > _this2.reference.gref);\n      } else {\n        document.getElementById(_this2.$store.state.sid).click();\n        console.warn('bus.$on(\"Reference\", () => { -> POST');\n        console.log(_this2.reference);\n\n        __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"l\" /* http */].post(\"/rezultati/odobravanje/reference/\", {\n          email: _this2.$store.state.userId,\n          token: _this2.$store.state.token,\n          site: _this2.$store.state.site,\n          reference: _this2.reference\n        }).then(function (res) {\n          setTimeout(function () {\n            document.getElementById(_this2.$store.state.sid).click();\n          }, 500);\n        });\n      }\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"retest\", function (data) {\n      _this2.RetestSave(data);\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"Antibiotik\", function (data) {\n      if (_this2.sample.status != \"ODOBREN\" && _this2.sample.status != \"VERIFICIRAN\") {\n        _this2.TemporaryAntibiotics = [];\n        _this2.TemporaryBacteries = [];\n        _this2.TemporaryBacteriesAdd = [];\n\n        _this2.Antibiotics.forEach(function (element) {\n          element.chosen = false;\n          element.disabled = false;\n        });\n\n        _this2.SelectedBacteries.forEach(function (selected) {\n          if (selected.opis == data) {\n            selected.antibiogram.antibiotici.forEach(function (ant) {\n              _this2.Antibiotics.forEach(function (antibiotik) {\n                if (antibiotik._id == ant._id) {\n                  antibiotik.disabled = true;\n                  antibiotik.chosen = true;\n                  antibiotik.rezultat = ant.rezultat;\n                }\n              });\n            });\n          }\n        });\n\n        _this2.ShowAntibiotics = true;\n      }\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"tabChanged\", function (data) {\n      _this2.CurrentTab = data;\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"AllowClick\", function (data) {\n      if (_this2.MicrobiologySample) {\n        if (data) {\n          _this2.AllowGetSample = false;\n        } else {\n          _this2.AllowGetSample = true;\n        }\n      }\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"MicroReset\", function () {\n\n      console.log(\"Reset: \" + _this2.$store.state.sid);\n      var Scenario = _this2.MicrobiologyScenario;\n\n      _this2.rezultati[0].rezultat = \"\";\n      _this2.rezultati[0].rezultat_m = [];\n      _this2.rezultati[0].realizovan = false;\n\n      _this2.MicrobiologyResult.DefaultBacteries.forEach(function (element) {\n        element.chosen = false;\n      });\n\n      _this2.MicrobiologyResult.RemainingBacteries.forEach(function (element) {\n        element.chosen = false;\n      });\n\n      _this2.SelectedBacteries = [];\n      _this2.ShowAllBacteries = false;\n\n      if (_this2.MicrobiologyScenario.includes(\"MAIB\")) {\n        _this2.main = false;\n\n\n        __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"l\" /* http */].post(\"/rezultati/odobravanje/sacuvaj/\" + _this2.$store.state.sid, {\n          email: _this2.$store.state.userId,\n          token: _this2.$store.state.token,\n          site: _this2.$store.state.site,\n          rezultati: _this2.rezultati\n        }).then(function (res) {\n          __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"l\" /* http */].get(\"rezultati/odobravanje/samples/\" + _this2.$route.params.patient + \"/\" + _this2.$route.params.id + \"?token=\" + _this2.$store.state.token + \"&site=\" + _this2.$store.state.site + \"&date=\" + _this2.$route.query.date, {}).then(function (res) {\n            _this2.uzorci = [];\n\n            res.data.results.forEach(function (element) {\n\n              if (_this2.$store.state.sid === element.id) {\n                console.log(element.rezultati[0].rezultat[0]);\n              }\n\n              var check = 0;\n              var zaprimljen = 0;\n              var realizovan = 0;\n\n              if (element.verificiran) {\n                var status_uzorka = \"VERIFICIRAN\";\n              } else {\n                var status_uzorka = element.status;\n              }\n\n              element.rezultati.forEach(function (test) {\n                check++;\n\n                if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n                  zaprimljen++;\n                }\n\n                if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n                  realizovan++;\n                }\n\n                if (check === element.rezultati.length) {\n\n                  if (status_uzorka === \"VERIFICIRAN\") {\n                    _this2.uzorci.push({\n                      sid: element.id,\n                      status: \"VERIFICIRAN\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else if (status_uzorka === \"ODOBREN\") {\n                    _this2.uzorci.push({\n                      sid: element.id,\n                      status: \"ODOBREN\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else if (zaprimljen < 1) {\n                    _this2.uzorci.push({\n                      sid: element.id,\n                      status: \"REALIZOVAN\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else if (realizovan < 1) {\n                    var stat = \"ZAPRIMLJEN\";\n                    if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                      if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                        stat = \"REALIZOVAN\";\n                      }\n                    }\n                    _this2.uzorci.push({\n                      sid: element.id,\n                      status: stat,\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else {\n                    _this2.uzorci.push({\n                      sid: element.id,\n                      status: \"U OBRADI\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  }\n                }\n              });\n            });\n\n            _this2.uzorci = _this2.uzorci.sort(function (a, b) {\n              return a.sid.localeCompare(b.sid, undefined, {\n                numeric: true,\n                sensitivity: \"base\"\n              });\n            });\n          }).then(function (res) {\n            _this2.MicrobiologyScenario = \"MAIBNoR\";\n            console.log(\"Scenario: \" + Scenario + \" - > \" + _this2.MicrobiologyScenario);\n            _this2.main = true;\n            __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$emit(\"CloseMicroReset\");\n          });\n        });\n      } else if (_this2.MicrobiologyScenario.includes(\"MANB\")) {\n        _this2.main = false;\n\n        __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"l\" /* http */].post(\"/rezultati/odobravanje/sacuvaj/\" + _this2.$store.state.sid, {\n          email: _this2.$store.state.userId,\n          token: _this2.$store.state.token,\n          site: _this2.$store.state.site,\n          rezultati: _this2.rezultati\n        }).then(function (res) {\n          __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"l\" /* http */].get(\"rezultati/odobravanje/samples/\" + _this2.$route.params.patient + \"/\" + _this2.$route.params.id + \"?token=\" + _this2.$store.state.token + \"&site=\" + _this2.$store.state.site + \"&date=\" + _this2.$route.query.date, {}).then(function (res) {\n            _this2.uzorci = [];\n\n            res.data.results.forEach(function (element) {\n\n              if (_this2.$store.state.sid === element.id) {\n                console.log(element.rezultati[0].rezultat[0]);\n              }\n\n              var check = 0;\n              var zaprimljen = 0;\n              var realizovan = 0;\n\n              if (element.verificiran) {\n                var status_uzorka = \"VERIFICIRAN\";\n              } else {\n                var status_uzorka = element.status;\n              }\n\n              element.rezultati.forEach(function (test) {\n                check++;\n\n                if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n                  zaprimljen++;\n                }\n\n                if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n                  realizovan++;\n                }\n\n                if (check === element.rezultati.length) {\n                  if (status_uzorka === \"VERIFICIRAN\") {\n                    _this2.uzorci.push({\n                      sid: element.id,\n                      status: \"VERIFICIRAN\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else if (status_uzorka === \"ODOBREN\") {\n                    _this2.uzorci.push({\n                      sid: element.id,\n                      status: \"ODOBREN\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else if (zaprimljen < 1) {\n                    _this2.uzorci.push({\n                      sid: element.id,\n                      status: \"REALIZOVAN\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else if (realizovan < 1) {\n                    var stat = \"ZAPRIMLJEN\";\n                    if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                      if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                        stat = \"REALIZOVAN\";\n                      }\n                    }\n                    _this2.uzorci.push({\n                      sid: element.id,\n                      status: stat,\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else {\n                    _this2.uzorci.push({\n                      sid: element.id,\n                      status: \"U OBRADI\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  }\n                }\n              });\n            });\n\n            _this2.uzorci = _this2.uzorci.sort(function (a, b) {\n              return a.sid.localeCompare(b.sid, undefined, {\n                numeric: true,\n                sensitivity: \"base\"\n              });\n            });\n          }).then(function (res) {\n            _this2.MicrobiologyScenario = \"MANBNoR\";\n            console.log(\"Scenario: \" + Scenario + \" - > \" + _this2.MicrobiologyScenario);\n            _this2.main = true;\n            __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$emit(\"CloseMicroReset\");\n          });\n        });\n      } else {}\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"MicroResult\", function () {\n      console.log(\"Defining result...\");\n\n      var Scenario = _this2.MicrobiologyScenario;\n\n      switch (_this2.MicrobiologyScenario) {\n        case \"MAIBNoR\":\n          _this2.rezultati[0].rezultat_m = [];\n          _this2.rezultati[0].rezultat_m.push({\n            bakterija: false,\n            negativan: _this2.ModalNegative,\n            pozitivan: _this2.ModalPositive,\n            _id: null,\n            naziv: null,\n            opis: null,\n            antibiogram: {\n              _id: null,\n              naziv: null,\n              opis: null,\n              antibiotici: [{\n                _id: null,\n                rbr_a: null,\n                naziv: null,\n                opis: null,\n                rezultat: null\n              }]\n            }\n          });\n\n          if (_this2.ModalNegative) {\n            _this2.rezultati[0].rezultat = _this2.NegativeResultSelection;\n            _this2.isLoading = true;\n            _this2.main = false;\n\n            __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"l\" /* http */].post(\"/rezultati/odobravanje/sacuvaj/\" + _this2.$store.state.sid, {\n              email: _this2.$store.state.userId,\n              token: _this2.$store.state.token,\n              site: _this2.$store.state.site,\n              rezultati: _this2.rezultati\n            }).then(function (res) {\n              __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"l\" /* http */].get(\"rezultati/odobravanje/samples/\" + _this2.$route.params.patient + \"/\" + _this2.$route.params.id + \"?token=\" + _this2.$store.state.token + \"&site=\" + _this2.$store.state.site + \"&date=\" + _this2.$route.query.date, {}).then(function (res) {\n                _this2.uzorci = [];\n\n                res.data.results.forEach(function (element) {\n\n                  if (_this2.$store.state.sid === element.id) {\n                    console.log(element.rezultati[0].rezultat[0]);\n                  }\n\n                  var check = 0;\n                  var zaprimljen = 0;\n                  var realizovan = 0;\n\n                  if (element.verificiran) {\n                    var status_uzorka = \"VERIFICIRAN\";\n                  } else {\n                    var status_uzorka = element.status;\n                  }\n\n                  element.rezultati.forEach(function (test) {\n                    check++;\n\n                    if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n                      zaprimljen++;\n                    }\n\n                    if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n                      realizovan++;\n                    }\n\n                    if (check === element.rezultati.length) {\n                      if (status_uzorka === \"VERIFICIRAN\") {\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: \"VERIFICIRAN\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else if (status_uzorka === \"ODOBREN\") {\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: \"ODOBREN\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else if (zaprimljen < 1) {\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: \"REALIZOVAN\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else if (realizovan < 1) {\n                        var stat = \"ZAPRIMLJEN\";\n                        if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                          if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                            stat = \"REALIZOVAN\";\n                          }\n                        }\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: stat,\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else {\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: \"U OBRADI\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      }\n                    }\n                  });\n                });\n\n                _this2.uzorci = _this2.uzorci.sort(function (a, b) {\n                  return a.sid.localeCompare(b.sid, undefined, {\n                    numeric: true,\n                    sensitivity: \"base\"\n                  });\n                });\n              }).then(function (res) {\n                __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$emit(\"CloseMicroResult\");\n                _this2.rezultati[0].realizovan = true;\n                _this2.MicrobiologyScenario = \"MAIBNeR\";\n                console.log(\"Scenario: \" + Scenario + \" - > \" + _this2.MicrobiologyScenario);\n                _this2.main = true;\n                _this2.isLoading = false;\n              });\n            });\n          } else {\n            _this2.PositiveResultSelection = \"\";\n            _this2.SelectedBacteries.forEach(function (element) {\n              _this2.PositiveResultSelection = _this2.PositiveResultSelection + element.opis + \"\\n\";\n              var Antibiotici = [];\n              var antibiotik = {};\n\n              _this2.Antibiotics.forEach(function (antibiotik) {\n                element.antibiogram.antibiotici.forEach(function (ant) {\n                  if (antibiotik._id == ant) {\n                    antibiotik = {\n                      _id: antibiotik._id,\n                      rbr_a: antibiotik.rbr_a,\n                      naziv: antibiotik.naziv,\n                      opis: antibiotik.opis,\n                      disabled: false,\n                      rezultat: \"\"\n                    };\n                    Antibiotici.push(antibiotik);\n                    antibiotik = {};\n                  }\n                });\n              });\n\n              _this2.rezultati[0].rezultat_m.push({\n                bakterija: true,\n                negativan: _this2.largeModalneg,\n                pozitivan: _this2.largeModalpos,\n                _id: element._id,\n                naziv: element.naziv,\n                opis: element.opis,\n                antibiogram: {\n                  _id: element.antibiogram._id,\n                  naziv: element.antibiogram.naziv,\n                  opis: element.antibiogram.opis,\n                  antibiotici: [].concat(Antibiotici)\n                }\n              });\n            });\n\n            _this2.rezultati[0].rezultat = _this2.PositiveResultSelection.trim();\n            _this2.isLoading = true;\n            _this2.main = false;\n\n            __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"l\" /* http */].post(\"/rezultati/odobravanje/sacuvaj/\" + _this2.$store.state.sid, {\n              email: _this2.$store.state.userId,\n              token: _this2.$store.state.token,\n              site: _this2.$store.state.site,\n              rezultati: _this2.rezultati\n            }).then(function (res) {\n              __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"l\" /* http */].get(\"rezultati/odobravanje/samples/\" + _this2.$route.params.patient + \"/\" + _this2.$route.params.id + \"?token=\" + _this2.$store.state.token + \"&site=\" + _this2.$store.state.site + \"&date=\" + _this2.$route.query.date, {}).then(function (res) {\n                _this2.uzorci = [];\n\n                res.data.results.forEach(function (element) {\n\n                  if (_this2.$store.state.sid === element.id) {\n                    console.log(element.rezultati[0].rezultat[0]);\n                  }\n\n                  var check = 0;\n                  var zaprimljen = 0;\n                  var realizovan = 0;\n\n                  if (element.verificiran) {\n                    var status_uzorka = \"VERIFICIRAN\";\n                  } else {\n                    var status_uzorka = element.status;\n                  }\n\n                  element.rezultati.forEach(function (test) {\n                    check++;\n\n                    if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n                      zaprimljen++;\n                    }\n\n                    if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n                      realizovan++;\n                    }\n\n                    if (check === element.rezultati.length) {\n                      if (status_uzorka === \"VERIFICIRAN\") {\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: \"VERIFICIRAN\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else if (status_uzorka === \"ODOBREN\") {\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: \"ODOBREN\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else if (zaprimljen < 1) {\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: \"REALIZOVAN\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else if (realizovan < 1) {\n                        var stat = \"ZAPRIMLJEN\";\n                        if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                          if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                            stat = \"REALIZOVAN\";\n                          }\n                        }\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: stat,\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else {\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: \"U OBRADI\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      }\n                    }\n                  });\n                });\n\n                _this2.uzorci = _this2.uzorci.sort(function (a, b) {\n                  return a.sid.localeCompare(b.sid, undefined, {\n                    numeric: true,\n                    sensitivity: \"base\"\n                  });\n                });\n              }).then(function (res) {\n                __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$emit(\"CloseMicroResult\");\n                _this2.rezultati[0].realizovan = true;\n                _this2.MicrobiologyScenario = \"MAIBPoR\";\n                console.log(\"Scenario: \" + Scenario + \" - > \" + _this2.MicrobiologyScenario);\n                _this2.main = true;\n                _this2.isLoading = false;\n              });\n            });\n          }\n\n          break;\n\n        case \"MANBNoR\":\n          _this2.rezultati[0].rezultat_m = [{\n            bakterija: false,\n            negativan: _this2.ModalNegative,\n            pozitivan: _this2.ModalPositive,\n            _id: null,\n            naziv: null,\n            opis: null,\n            antibiogram: {\n              _id: null,\n              naziv: null,\n              opis: null,\n              antibiotici: [{\n                _id: null,\n                rbr_a: null,\n                naziv: null,\n                opis: null,\n                rezultat: null\n              }]\n            }\n          }];\n\n          if (_this2.ModalNegative) {\n            _this2.rezultati[0].rezultat = _this2.NegativeResultSelection;\n            _this2.isLoading = true;\n            _this2.main = false;\n\n            __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"l\" /* http */].post(\"/rezultati/odobravanje/sacuvaj/\" + _this2.$store.state.sid, {\n              email: _this2.$store.state.userId,\n              token: _this2.$store.state.token,\n              site: _this2.$store.state.site,\n              rezultati: _this2.rezultati\n            }).then(function (res) {\n              __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"l\" /* http */].get(\"rezultati/odobravanje/samples/\" + _this2.$route.params.patient + \"/\" + _this2.$route.params.id + \"?token=\" + _this2.$store.state.token + \"&site=\" + _this2.$store.state.site + \"&date=\" + _this2.$route.query.date, {}).then(function (res) {\n                _this2.uzorci = [];\n\n                res.data.results.forEach(function (element) {\n\n                  if (_this2.$store.state.sid === element.id) {\n                    console.log(element.rezultati[0].rezultat[0]);\n                  }\n\n                  var check = 0;\n                  var zaprimljen = 0;\n                  var realizovan = 0;\n\n                  if (element.verificiran) {\n                    var status_uzorka = \"VERIFICIRAN\";\n                  } else {\n                    var status_uzorka = element.status;\n                  }\n\n                  element.rezultati.forEach(function (test) {\n                    check++;\n\n                    if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n                      zaprimljen++;\n                    }\n\n                    if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n                      realizovan++;\n                    }\n\n                    if (check === element.rezultati.length) {\n                      if (status_uzorka === \"VERIFICIRAN\") {\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: \"VERIFICIRAN\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else if (status_uzorka === \"ODOBREN\") {\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: \"ODOBREN\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else if (zaprimljen < 1) {\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: \"REALIZOVAN\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else if (realizovan < 1) {\n                        var stat = \"ZAPRIMLJEN\";\n                        if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                          if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                            stat = \"REALIZOVAN\";\n                          }\n                        }\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: stat,\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else {\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: \"U OBRADI\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      }\n                    }\n                  });\n                });\n\n                _this2.uzorci = _this2.uzorci.sort(function (a, b) {\n                  return a.sid.localeCompare(b.sid, undefined, {\n                    numeric: true,\n                    sensitivity: \"base\"\n                  });\n                });\n              }).then(function (res) {\n                __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$emit(\"CloseMicroResult\");\n                _this2.rezultati[0].realizovan = true;\n                _this2.MicrobiologyScenario = \"MANBNeR\";\n                console.log(\"Scenario: \" + Scenario + \" - > \" + _this2.MicrobiologyScenario);\n                _this2.main = true;\n                _this2.isLoading = false;\n              });\n            });\n          } else {\n            _this2.rezultati[0].rezultat = _this2.PositiveResultSelection;\n            _this2.isLoading = true;\n            _this2.main = false;\n\n            __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"l\" /* http */].post(\"/rezultati/odobravanje/sacuvaj/\" + _this2.$store.state.sid, {\n              email: _this2.$store.state.userId,\n              token: _this2.$store.state.token,\n              site: _this2.$store.state.site,\n              rezultati: _this2.rezultati\n            }).then(function (res) {\n              __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"l\" /* http */].get(\"rezultati/odobravanje/samples/\" + _this2.$route.params.patient + \"/\" + _this2.$route.params.id + \"?token=\" + _this2.$store.state.token + \"&site=\" + _this2.$store.state.site + \"&date=\" + _this2.$route.query.date, {}).then(function (res) {\n                _this2.uzorci = [];\n\n                res.data.results.forEach(function (element) {\n\n                  if (_this2.$store.state.sid === element.id) {\n                    console.log(element.rezultati[0].rezultat[0]);\n                  }\n\n                  var check = 0;\n                  var zaprimljen = 0;\n                  var realizovan = 0;\n\n                  if (element.verificiran) {\n                    var status_uzorka = \"VERIFICIRAN\";\n                  } else {\n                    var status_uzorka = element.status;\n                  }\n\n                  element.rezultati.forEach(function (test) {\n                    check++;\n\n                    if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n                      zaprimljen++;\n                    }\n\n                    if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n                      realizovan++;\n                    }\n\n                    if (check === element.rezultati.length) {\n                      if (status_uzorka === \"VERIFICIRAN\") {\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: \"VERIFICIRAN\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else if (status_uzorka === \"ODOBREN\") {\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: \"ODOBREN\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else if (zaprimljen < 1) {\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: \"REALIZOVAN\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else if (realizovan < 1) {\n                        var stat = \"ZAPRIMLJEN\";\n                        if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                          if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                            stat = \"REALIZOVAN\";\n                          }\n                        }\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: stat,\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else {\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: \"U OBRADI\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      }\n                    }\n                  });\n                });\n\n                _this2.uzorci = _this2.uzorci.sort(function (a, b) {\n                  return a.sid.localeCompare(b.sid, undefined, {\n                    numeric: true,\n                    sensitivity: \"base\"\n                  });\n                });\n              }).then(function (res) {\n                __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$emit(\"CloseMicroResult\");\n                _this2.rezultati[0].realizovan = true;\n                _this2.MicrobiologyScenario = \"MANBPoR\";\n                console.log(\"Scenario: \" + Scenario + \" - > \" + _this2.MicrobiologyScenario);\n                _this2.main = true;\n                _this2.isLoading = false;\n              });\n            });\n          }\n\n          break;\n\n        default:\n          break;\n      }\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"ResetResultSelection\", function () {\n      switch (_this2.MicrobiologyScenario) {\n        case \"MAIBNoR\":\n          _this2.ModalNegative = false;\n          _this2.ModalPositive = false;\n          _this2.ModalPositiveCondition = false;\n          _this2.MicrobiologyModalHeader = \"Predefinisani rezultati\";\n          _this2.NegativeResultSelection = \"\";\n          _this2.PositiveResultSelection = \"\";\n          _this2.SelectedBacteries = [];\n          _this2.ShowAllBacteries = false;\n\n          break;\n\n        case \"MAIBNeR\":\n          _this2.SelectedBacteries = [];\n\n          break;\n\n        case \"MAIBPoR\":\n          break;\n\n        case \"MANBNoR\":\n          _this2.ModalNegative = false;\n          _this2.ModalPositive = false;\n          _this2.ModalPositiveCondition = false;\n          _this2.MicrobiologyModalHeader = \"Predefinisani rezultati\";\n          _this2.NegativeResultSelection = \"\";\n          _this2.PositiveResultSelection = \"\";\n          _this2.SelectedBacteries = [];\n          _this2.ShowAllBacteries = false;\n\n          break;\n\n        case \"MANBNeR\":\n          _this2.SelectedBacteries = [];\n\n          break;\n\n        case \"MANBPoR\":\n          _this2.SelectedBacteries = [];\n\n          break;\n\n        default:\n          break;\n      }\n\n      _this2.MicrobiologyResult.DefaultBacteries.forEach(function (element) {\n        element.chosen = false;\n      });\n\n      _this2.MicrobiologyResult.RemainingBacteries.forEach(function (element) {\n        element.chosen = false;\n      });\n\n      _this2.SelectedBacteries = [];\n      _this2.ShowAllBacteries = false;\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"CancelMicroResult\", function () {\n\n      switch (_this2.MicrobiologyScenario) {\n        case \"MAIBNoR\":\n          _this2.ModalNegative = false;\n          _this2.ModalPositive = false;\n          _this2.ModalPositiveCondition = false;\n          _this2.MicrobiologyModalHeader = \"Predefinisani rezultati\";\n          _this2.NegativeResultSelection = \"\";\n          _this2.PositiveResultSelection = \"\";\n          _this2.SelectedBacteries = [];\n          _this2.ShowAllBacteries = false;\n\n          break;\n\n        case \"MAIBNeR\":\n          _this2.SelectedBacteries = [];\n\n          break;\n\n        case \"MAIBPoR\":\n          break;\n\n        case \"MANBNoR\":\n          _this2.ModalNegative = false;\n          _this2.ModalPositive = false;\n          _this2.ModalPositiveCondition = false;\n          _this2.MicrobiologyModalHeader = \"Predefinisani rezultati\";\n          _this2.NegativeResultSelection = \"\";\n          _this2.PositiveResultSelection = \"\";\n          _this2.SelectedBacteries = [];\n          _this2.ShowAllBacteries = false;\n\n          break;\n\n        case \"MANBNeR\":\n          _this2.SelectedBacteries = [];\n\n          break;\n\n        case \"MANBPoR\":\n          _this2.SelectedBacteries = [];\n\n          break;\n\n        default:\n          break;\n      }\n\n      _this2.MicrobiologyResult.DefaultBacteries.forEach(function (element) {\n        element.chosen = false;\n      });\n\n      _this2.MicrobiologyResult.RemainingBacteries.forEach(function (element) {\n        element.chosen = false;\n      });\n\n      _this2.SelectedBacteries = [];\n      _this2.ShowAllBacteries = false;\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"MicroBactery\", function () {\n\n      console.log('Saving main result...');\n\n      _this2.isLoading = true;\n      _this2.main = false;\n\n      __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"l\" /* http */].post(\"/rezultati/odobravanje/sacuvaj/\" + _this2.$store.state.sid, {\n        email: _this2.$store.state.userId,\n        token: _this2.$store.state.token,\n        site: _this2.$store.state.site,\n        rezultati: _this2.rezultati\n      }).then(function (res) {\n        __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"l\" /* http */].get(\"rezultati/odobravanje/samples/\" + _this2.$route.params.patient + \"/\" + _this2.$route.params.id + \"?token=\" + _this2.$store.state.token + \"&site=\" + _this2.$store.state.site + \"&date=\" + _this2.$route.query.date, {}).then(function (res) {\n          _this2.uzorci = [];\n\n          res.data.results.forEach(function (element) {\n\n            if (_this2.$store.state.sid === element.id) {\n              console.log(element.rezultati[0].rezultat[0]);\n            }\n\n            var check = 0;\n            var zaprimljen = 0;\n            var realizovan = 0;\n\n            if (element.verificiran) {\n              var status_uzorka = \"VERIFICIRAN\";\n            } else {\n              var status_uzorka = element.status;\n            }\n\n            element.rezultati.forEach(function (test) {\n              check++;\n\n              if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n                zaprimljen++;\n              }\n\n              if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n                realizovan++;\n              }\n\n              if (check === element.rezultati.length) {\n                if (status_uzorka === \"VERIFICIRAN\") {\n                  _this2.uzorci.push({\n                    sid: element.id,\n                    status: \"VERIFICIRAN\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else if (status_uzorka === \"ODOBREN\") {\n                  _this2.uzorci.push({\n                    sid: element.id,\n                    status: \"ODOBREN\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else if (zaprimljen < 1) {\n                  _this2.uzorci.push({\n                    sid: element.id,\n                    status: \"REALIZOVAN\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else if (realizovan < 1) {\n                  var stat = \"ZAPRIMLJEN\";\n                  if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                    if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                      stat = \"REALIZOVAN\";\n                    }\n                  }\n                  _this2.uzorci.push({\n                    sid: element.id,\n                    status: stat,\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else {\n                  _this2.uzorci.push({\n                    sid: element.id,\n                    status: \"U OBRADI\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                }\n              }\n            });\n          });\n\n          _this2.uzorci = _this2.uzorci.sort(function (a, b) {\n            return a.sid.localeCompare(b.sid, undefined, {\n              numeric: true,\n              sensitivity: \"base\"\n            });\n          });\n        }).then(function (res) {\n          _this2.main = true;\n          _this2.isLoading = false;\n          __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$emit(\"CloseMicroBactery\");\n        });\n      });\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"CancelMicroBactery\", function () {});\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"PovratakMicroBactery\", function () {\n      _this2.ShowAntibiotics = false;\n      _this2.ShowBacteries = false;\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"SpasiMicroBactery\", function () {\n\n      if (_this2.TemporaryBacteriesAdd.length) {\n        console.log('Dodavanje bakterija...');\n        var bakterija = {};\n        var antibiogram = {};\n        var antibiotik = {};\n\n        _this2.TemporaryBacteriesAdd.forEach(function (element) {\n          _this2.Antibiograms.forEach(function (antibgr) {\n            if (__WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(element.antibiogram._id) === __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(antibgr._id)) {\n              antibiogram = antibgr;\n            }\n          });\n\n          antibiogram.antibiotici.forEach(function (antbtk) {\n            antbtk.disabled = false;\n            antbtk.rezultat = \"\";\n          });\n\n          bakterija.bakterija = true;\n          bakterija._id = element._id;\n          bakterija.naziv = element.naziv;\n          bakterija.opis = element.opis;\n          bakterija.antibiogram = antibiogram;\n\n          console.log(bakterija);\n\n          _this2.SelectedBacteries.push(bakterija);\n          _this2.BacteryTabs.push(bakterija.opis);\n          _this2.rezultati[0].rezultat_m.push(bakterija);\n          _this2.rezultati[0].rezultat = _this2.rezultati[0].rezultat + \"\\n\" + bakterija.opis;\n          bakterija = {};\n          antibiogram = {};\n        });\n      } else {\n        console.log('Dodavanje antibiotika...');\n      }\n\n      if (_this2.TemporaryAntibiotics.length || _this2.TemporaryBacteriesAdd.length) {\n        _this2.TemporaryAntibiotics.forEach(function (element) {\n          _this2.rezultati[0].rezultat_m.forEach(function (selected) {\n            if (selected.opis == _this2.CurrentTab) {\n              selected.antibiogram.antibiotici.push(element);\n            }\n          });\n        });\n\n        _this2.isLoading = true;\n        _this2.main = false;\n\n        __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"l\" /* http */].post(\"/rezultati/odobravanje/sacuvaj/\" + _this2.$store.state.sid, {\n          email: _this2.$store.state.userId,\n          token: _this2.$store.state.token,\n          site: _this2.$store.state.site,\n          rezultati: _this2.rezultati\n        }).then(function (res) {\n          __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"l\" /* http */].get(\"rezultati/odobravanje/samples/\" + _this2.$route.params.patient + \"/\" + _this2.$route.params.id + \"?token=\" + _this2.$store.state.token + \"&site=\" + _this2.$store.state.site + \"&date=\" + _this2.$route.query.date, {}).then(function (res) {\n            _this2.uzorci = [];\n\n            res.data.results.forEach(function (element) {\n\n              if (_this2.$store.state.sid === element.id) {\n                console.log(element.rezultati[0].rezultat[0]);\n              }\n\n              var check = 0;\n              var zaprimljen = 0;\n              var realizovan = 0;\n\n              if (element.verificiran) {\n                var status_uzorka = \"VERIFICIRAN\";\n              } else {\n                var status_uzorka = element.status;\n              }\n\n              element.rezultati.forEach(function (test) {\n                check++;\n\n                if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n                  zaprimljen++;\n                }\n\n                if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n                  realizovan++;\n                }\n\n                if (check === element.rezultati.length) {\n                  if (status_uzorka === \"VERIFICIRAN\") {\n                    _this2.uzorci.push({\n                      sid: element.id,\n                      status: \"VERIFICIRAN\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else if (status_uzorka === \"ODOBREN\") {\n                    _this2.uzorci.push({\n                      sid: element.id,\n                      status: \"ODOBREN\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else if (zaprimljen < 1) {\n                    _this2.uzorci.push({\n                      sid: element.id,\n                      status: \"REALIZOVAN\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else if (realizovan < 1) {\n                    var stat = \"ZAPRIMLJEN\";\n                    if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                      if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                        stat = \"REALIZOVAN\";\n                      }\n                    }\n                    _this2.uzorci.push({\n                      sid: element.id,\n                      status: stat,\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else {\n                    _this2.uzorci.push({\n                      sid: element.id,\n                      status: \"U OBRADI\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  }\n                }\n              });\n            });\n\n            _this2.uzorci = _this2.uzorci.sort(function (a, b) {\n              return a.sid.localeCompare(b.sid, undefined, {\n                numeric: true,\n                sensitivity: \"base\"\n              });\n            });\n          }).then(function (res) {\n            _this2.MicrobiologyScenario = \"MAIBPoR\";\n            _this2.ShowAntibiotics = false;\n            _this2.ShowBacteries = false;\n\n            _this2.main = true;\n            _this2.isLoading = false;\n\n            if (_this2.TemporaryBacteriesAdd.length) {\n              _this2.CurrentTab = _this2.BacteryTabs[_this2.BacteryTabs.length - 1];\n            }\n          });\n        });\n      } else {\n        _this2.MicrobiologyScenario = \"MAIBPoR\";\n        _this2.ShowAntibiotics = false;\n        _this2.ShowBacteries = false;\n      }\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"UpdateMicroBactery\", function (data) {\n\n      if (!_this2.ShowAntibiotics && !_this2.ShowBacteries && _this2.MicrobiologyScenario === \"MAIBPoR\") {\n        if (_this2.sample.status != \"ODOBREN\" && _this2.sample.status != \"VERIFICIRAN\") {\n          _this2.TemporaryAntibiotics = [];\n          _this2.TemporaryBacteries = [];\n          _this2.TemporaryBacteriesAdd = [];\n          var obj = {};\n\n          _this2.Bacteries.forEach(function (element) {\n            obj.chosen = false;\n            obj.disabled = false;\n            obj._id = element._id;\n            obj.naziv = element.naziv;\n            obj.opis = element.opis;\n            obj.antibiogram = element.antibiogram;\n            obj.__v = element.__v;\n            obj.chosen = element.chosen;\n            _this2.TemporaryBacteries.push(obj);\n            obj = {};\n          });\n\n          _this2.TemporaryBacteries.forEach(function (element) {\n            _this2.SelectedBacteries.forEach(function (selected) {\n              if (selected._id == element._id) {\n                element.chosen = true;\n                element.disabled = true;\n              }\n            });\n          });\n\n          _this2.ShowBacteries = true;\n        }\n      }\n    });\n  },\n  beforeDestroy: function beforeDestroy() {\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"Parametar\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"trash\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"edit\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"comment\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"barcode\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"save\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"check\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"verify\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"undo\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"unlock\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"Nalaz\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"pdf\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"Sample\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"Deleted\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"Edited\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"SaveMulti\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"Mail\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"Error\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"Analyser\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"Sljedeci\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"Prethodni\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"Search\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"Push\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"Reference\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"graph\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"table\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"retest\");\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"tabChanged\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"Antibiotik\");\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"MicroResult\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"ResetResultSelection\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"CancelMicroResult\");\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"MicroReset\");\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"AllowClick\");\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"MicroBactery\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"CancelMicroBactery\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"PovratakMicroBactery\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"SpasiMicroBactery\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"UpdateMicroBactery\");\n  },\n  destroyed: function destroyed() {\n    console.log(\"Component is being destroyed...\");\n  },\n  created: function created() {\n    this.Created();\n\n    this.Previous.pid = Number(this.$route.params.id) - 1;\n    this.Next.pid = Number(this.$route.params.id) + 1;\n    this.query_date = this.$route.query.date.substring(8, 10) + \".\" + this.$route.query.date.substring(5, 7) + \".\" + this.$route.query.date.substring(0, 4);\n\n    this.Datum.today = new Date(__WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(new Date(new Date().setDate(new Date().getDate()))).substring(1, 11) + \"T00:00:00\");\n\n    this.today_date = __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(new Date(new Date().setDate(new Date().getDate()))).substring(1, 11).substring(8, 10) + \".\" + __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(new Date(new Date().setDate(new Date().getDate()))).substring(1, 11).substring(5, 7) + \".\" + __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(new Date(new Date().setDate(new Date().getDate()))).substring(1, 11).substring(0, 4);\n\n    this.Datum.query = new Date(this.$route.query.date.substring(0, 10) + \"T00:00:00\");\n\n    this.Datum.next = new Date(new Date(this.$route.query.date.substring(0, 10) + \"T00:00:00\").setDate(this.Datum.query.getDate() + 1));\n\n    this.Datum.previous = new Date(new Date(this.$route.query.date.substring(0, 10) + \"T00:00:00\").setDate(this.Datum.query.getDate() - 1));\n\n    if (new Date(this.Datum.today) > new Date(this.Datum.query)) {\n      this.pagination = false;\n    } else if (new Date(this.Datum.today) < new Date(this.Datum.query)) {\n      this.pagination = false;\n    } else {\n      this.pagination = true;\n    }\n\n    this.interpretacije = this.interpretacije.sort(function (a, b) {\n      return a.localeCompare(b, undefined, {\n        numeric: true,\n        sensitivity: \"base\"\n      });\n    });\n  },\n\n\n  methods: {\n    RetestSave: function RetestSave(data) {\n      var _this3 = this;\n\n      this.isLoading = true;\n\n      __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"l\" /* http */].post(\"rezultati/odobravanje/retest/save/\", {\n        sid: this.$store.state.sid,\n        rezultati: this.rezultati,\n        site: this.$store.state.site,\n        token: this.$store.state.token\n      }).then(function (res) {\n        if (res.data.success) {\n          _this3.isLoading = false;\n          _this3.save_retest = false;\n        } else {}\n      });\n    },\n    ExclamationMulti: function ExclamationMulti(test) {\n      this.warning = { analiza: \"\", text: \"\", napomena: \"\", control: \"\" };\n      var rezultat = test.rezultat.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n      var m_interp = {};\n      var m_opis = \"\";\n\n      this.analitiprikaz.forEach(function (element) {\n        element.labassay.multiparam.forEach(function (param) {\n          if (__WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(param._id) == __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(test.analit)) {\n\n            m_interp = param.interpretacija;\n            m_opis = param.opis;\n          }\n        });\n      });\n\n      switch (this.Interpretacija(test.opis, rezultat, test.jedinica, test.refd, test.refg, this.$store.state.site, test.interp, \"\", this.spec)[2]) {\n        case \"L\":\n          this.warning = {\n            analiza: m_opis,\n            text: m_interp.snizeno.text.trim(),\n            napomena: m_interp.napomena.trim(),\n            control: \"Sniženo\"\n          };\n          break;\n\n        case \"H\":\n          switch (test.interp) {\n            case \"neg\":\n              this.warning = {\n                analiza: m_opis,\n                text: m_interp.poviseno.text.trim(),\n                napomena: m_interp.napomena.trim(),\n                control: \"Pozitivan\"\n              };\n              break;\n\n            default:\n              this.warning = {\n                analiza: m_opis,\n                text: m_interp.poviseno.text.trim(),\n                napomena: m_interp.napomena.trim(),\n                control: \"Povišeno\"\n              };\n              break;\n          }\n\n          break;\n\n        default:\n          this.warning = { analiza: \"\", text: \"\", napomena: \"\", control: \"\" };\n          break;\n      }\n\n      if (this.warning.text && this.warning.text != \"\") {}\n    },\n    Exclamation: function Exclamation(test) {\n      this.warning = { analiza: \"\", text: \"\", napomena: \"\", control: \"\" };\n      var rezultat = test.rezultat.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n      switch (this.Interpretacija(test.opis, rezultat, test.jedinica, test.dRef, test.gRef, this.$store.state.site, test.interp, test.extend, this.spec)[2]) {\n        case \"L\":\n          this.warning = {\n            analiza: test.analit,\n            text: test.interpretacija.snizeno.text.trim(),\n            napomena: test.interpretacija.napomena.trim(),\n            control: \"Sniženo\"\n          };\n          break;\n\n        case \"H\":\n          switch (test.interp) {\n            case \"neg\":\n              this.warning = {\n                analiza: test.analit,\n                text: test.interpretacija.poviseno.text.trim(),\n                napomena: test.interpretacija.napomena.trim(),\n                control: \"Pozitivan\"\n              };\n              break;\n\n            default:\n              this.warning = {\n                analiza: test.analit,\n                text: test.interpretacija.poviseno.text.trim(),\n                napomena: test.interpretacija.napomena.trim(),\n                control: \"Povišeno\"\n              };\n              break;\n          }\n\n          break;\n\n        default:\n          this.warning = { analiza: \"\", text: \"\", napomena: \"\", control: \"\" };\n          break;\n      }\n\n      if (this.warning.text && this.warning.text != \"\") {\n        this.$refs.staticModalExclamation.open();\n      }\n    },\n    LabAssayEval: function LabAssayEval(e, test) {\n      var _this4 = this;\n\n      this.analiza_eval = test;\n      e.preventDefault();\n      this.spinner = false;\n      this.showLineChart = false;\n      var palette = __WEBPACK_IMPORTED_MODULE_5_vuex_store__[\"a\" /* default */].getters.palette;\n      this.table_header = test.ime + \" | \" + test.analit;\n      if (!test.multidata) {\n        this.isLoading = true;\n        this.Procjena = [];\n\n        __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"l\" /* http */].get(\"/labassay/evaluation/single\" + \"?token=\" + this.$store.state.token + \"&site=\" + this.$store.state.site + \"&range=\" + \"14\", {}).then(function (response) {\n          if (response.data.Results.length) {\n            var obj = {};\n            var count = 0;\n\n            response.data.Results.forEach(function (element) {\n              count++;\n              element.rezultati.forEach(function (rez) {\n                if (rez.labassay === test.labassay_id && element.verificiran && rez.rezultat[rez.rezultat.length - 1].rezultat_f.trim() != \"\") {\n                  obj.rezultat = rez.rezultat[rez.rezultat.length - 1].rezultat_f;\n                  obj.jedinica = rez.rezultat[rez.rezultat.length - 1].jedinice_f;\n                  obj.analit = \"\";\n                  obj.interp = rez.interp;\n                  obj.extend = rez.extend;\n                  obj.refd = rez.refd;\n                  obj.refg = rez.refg;\n                  obj.sid = element.id;\n                  obj.updated_at = rez.rezultat[rez.rezultat.length - 1].updated_at;\n\n                  var datum = __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(rez.rezultat[rez.rezultat.length - 1].updated_at).slice(9, 11) + \".\" + __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(rez.rezultat[rez.rezultat.length - 1].updated_at).slice(6, 8) + \".\" + __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(rez.rezultat[rez.rezultat.length - 1].updated_at).slice(1, 5);\n                  var time = __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(new Date(new Date(rez.rezultat[rez.rezultat.length - 1].updated_at).getTime() - new Date(rez.rezultat[rez.rezultat.length - 1].updated_at).getTimezoneOffset() * 60000).toISOString()).substring(12, 17);\n\n                  obj.datum = datum;\n                  obj.vrijeme = time;\n                  obj.kontrola = _this4.Interpretacija(\"\", obj.rezultat, obj.jedinica, obj.refd, obj.refg, _this4.$store.state.site, obj.interp, obj.extend, _this4.spec)[5];\n\n                  _this4.Procjena.push(obj);\n                  obj = {};\n                }\n              });\n\n              if (count == response.data.Results.length) {\n                _this4.Procjena.sort(function (a, b) {\n                  return Date.parse(a.updated_at) == Date.parse(b.updated_at) ? 0 : +(Date.parse(a.updated_at) < Date.parse(b.updated_at)) || -1;\n                });\n\n                var data = [];\n\n                if (_this4.Procjena.length) {\n                  _this4.optionsLineChart = {\n                    responsive: true,\n                    maintainAspectRatio: false,\n                    title: {\n                      display: true,\n                      text: \"\"\n                    },\n                    scales: {\n                      xAxes: [{\n                        display: true,\n                        gridLines: {\n                          display: true,\n                          color: \"#eee\"\n                        }\n                      }],\n                      yAxes: [{\n                        display: true,\n                        gridLines: {\n                          display: true,\n                          color: \"#eee\"\n                        }\n                      }]\n                    }\n                  };\n\n                  var labels = [];\n                  var kontrola = [];\n                  var temp = \"\";\n\n                  _this4.Procjena.forEach(function (element) {\n                    if (!isNaN(element.rezultat.trim())) {\n                      switch (element.kontrola) {\n                        case \"Red\":\n                          kontrola.push(palette.danger);\n                          break;\n                        case \"Green\":\n                          kontrola.push(palette.primary);\n                          break;\n                        case \"Yellow\":\n                          kontrola.push(palette.warning);\n                          break;\n\n                        default:\n                          kontrola.push(palette.info);\n                          break;\n                      }\n\n                      labels.push(element.datum);\n                      data.push(element.rezultat);\n                    }\n                  });\n\n                  _this4.dataLineChart = {\n                    labels: labels,\n                    datasets: [{\n                      label: test.ime + \" | \" + test.analit,\n                      backgroundColor: __WEBPACK_IMPORTED_MODULE_6_services_utils__[\"a\" /* default */].hex2rgb(palette.info, 0.5).css,\n                      pointBorderColor: kontrola,\n                      pointBackgroundColor: kontrola,\n                      borderColor: palette.transparent,\n                      data: data\n                    }]\n                  };\n\n                  if (data.length) {\n                    _this4.showLineChart = true;\n                  }\n\n                  _this4.$refs.staticModalLabAssayEvalSingle.open();\n                } else {}\n              }\n            });\n          } else {}\n          _this4.isLoading = false;\n        });\n      } else {\n\n        this.multiparam_izbor = test.multiparam[0].opis;\n        this.multiparam_id = test.multiparam[0]._id;\n\n        this.multiparams = [];\n\n        this.multiparam_izbornik = [];\n\n        test.multiparam.forEach(function (element) {\n          _this4.multiparam_izbornik.push(element.opis);\n          _this4.multiparams.push(element);\n        });\n\n        this.isLoading = true;\n        this.Procjena = [];\n\n        __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"l\" /* http */].get(\"/labassay/evaluation/multi\" + \"?token=\" + this.$store.state.token + \"&site=\" + this.$store.state.site + \"&labassay=\" + test.labassay_id + \"&range=\" + \"14\", {}).then(function (response) {\n          if (response.data.Multi.length) {\n            _this4.Response = response.data;\n\n            var obj = {};\n            var count = 0;\n\n            response.data.Multi.forEach(function (element) {\n              count++;\n              element.multi.forEach(function (param) {\n                if (_this4.multiparam_id == param.labassay && param.rezultat[0].rezultat_f.trim() != \"\") {\n                  obj.rezultat = param.rezultat[0].rezultat_f;\n                  obj.jedinica = param.rezultat[0].jedinice_f;\n                  obj.analit = \"Nema podataka\";\n                  obj.interp = param.interp;\n                  obj.extend = param.extend;\n                  obj.refd = param.refd;\n                  obj.refg = param.refg;\n                  obj.sid = \"Nema podataka\";\n                  obj.updated_at = new Date(param.rezultat[0].updated_at);\n\n                  var datum = __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(new Date(param.rezultat[0].updated_at)).slice(9, 11) + \".\" + __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(new Date(param.rezultat[0].updated_at)).slice(6, 8) + \".\" + __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(new Date(param.rezultat[0].updated_at)).slice(1, 5);\n                  var time = __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(new Date(new Date(param.rezultat[0].updated_at).getTime() - new Date(param.rezultat[0].updated_at).getTimezoneOffset() * 60000).toISOString()).substring(12, 17);\n                  obj.datum = datum;\n                  obj.vrijeme = time;\n                  obj.kontrola = _this4.Interpretacija(\"\", obj.rezultat, obj.jedinica, obj.refd, obj.refg, _this4.$store.state.site, obj.interp, obj.extend, _this4.spec)[5];\n\n                  _this4.Procjena.push(obj);\n                  obj = {};\n                }\n              });\n\n              if (count == response.data.Multi.length) {\n                _this4.Procjena.sort(function (a, b) {\n                  return Date.parse(a.updated_at) == Date.parse(b.updated_at) ? 0 : +(Date.parse(a.updated_at) < Date.parse(b.updated_at)) || -1;\n                });\n\n                var data = [];\n\n                if (_this4.Procjena.length) {\n                  _this4.optionsLineChart = {\n                    responsive: true,\n                    maintainAspectRatio: false,\n                    title: {\n                      display: true,\n                      text: \"\"\n                    },\n                    scales: {\n                      xAxes: [{\n                        display: true,\n                        gridLines: {\n                          display: true,\n                          color: \"#eee\"\n                        }\n                      }],\n                      yAxes: [{\n                        display: true,\n                        gridLines: {\n                          display: true,\n                          color: \"#eee\"\n                        }\n                      }]\n                    }\n                  };\n\n                  var labels = [];\n                  var kontrola = [];\n                  var temp = \"\";\n\n                  _this4.Procjena.forEach(function (element) {\n                    if (!isNaN(element.rezultat.trim())) {\n                      switch (element.kontrola) {\n                        case \"Red\":\n                          kontrola.push(palette.danger);\n                          break;\n                        case \"Green\":\n                          kontrola.push(palette.primary);\n                          break;\n                        case \"Yellow\":\n                          kontrola.push(palette.warning);\n                          break;\n\n                        default:\n                          kontrola.push(palette.info);\n                          break;\n                      }\n\n                      labels.push(element.datum);\n                      data.push(element.rezultat);\n                    }\n                  });\n\n                  _this4.dataLineChart = {\n                    labels: labels,\n                    datasets: [{\n                      label: test.ime + \" | \" + test.analit,\n                      backgroundColor: __WEBPACK_IMPORTED_MODULE_6_services_utils__[\"a\" /* default */].hex2rgb(palette.info, 0.5).css,\n                      pointBorderColor: kontrola,\n                      pointBackgroundColor: kontrola,\n                      borderColor: palette.transparent,\n                      data: data\n                    }]\n                  };\n\n                  if (data.length) {\n                    _this4.showLineChart = true;\n                  }\n\n                  _this4.$refs.staticModalLabAssayEvalMulti.open();\n                } else {}\n              }\n            });\n          } else {}\n          _this4.isLoading = false;\n        });\n      }\n    },\n    Evaluation: function Evaluation(test) {\n      var _this5 = this;\n\n      this.analiza_eval = test;\n      this.spinner = false;\n      if (true) {\n        this.showLineChart = false;\n        var palette = __WEBPACK_IMPORTED_MODULE_5_vuex_store__[\"a\" /* default */].getters.palette;\n        this.table_header = test.ime + \" | \" + test.analit;\n\n        if (test.multidata) {\n          this.multiparam_izbor = test.multiparam[0].opis;\n          this.multiparam_id = test.multiparam[0]._id;\n\n          this.multiparams = [];\n\n          this.multiparam_izbornik = [];\n\n          test.multiparam.forEach(function (element) {\n            _this5.multiparam_izbornik.push(element.opis);\n            _this5.multiparams.push(element);\n          });\n\n          this.isLoading = true;\n          this.Procjena = [];\n\n          __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"l\" /* http */].get(\"/patient/evaluation/multi\" + \"?token=\" + this.$store.state.token + \"&site=\" + this.$store.state.site + \"&patient=\" + this.pacijent + \"&labassay=\" + test.labassay_id, {}).then(function (response) {\n            if (response.data.Multi.length) {\n              _this5.Response = response.data;\n\n              var obj = {};\n              var count = 0;\n\n              response.data.Multi.forEach(function (element) {\n                count++;\n                element.multi.forEach(function (param) {\n                  if (_this5.multiparam_id == param.labassay && param.rezultat[0].rezultat_f.trim() != \"\") {\n                    obj.rezultat = param.rezultat[0].rezultat_f;\n                    obj.jedinica = param.rezultat[0].jedinice_f;\n                    obj.analit = \"Nema podataka\";\n                    obj.interp = param.interp;\n                    obj.extend = param.extend;\n                    obj.refd = param.refd;\n                    obj.refg = param.refg;\n                    obj.sid = \"Nema podataka\";\n                    obj.updated_at = new Date(param.rezultat[0].updated_at);\n\n                    var datum = __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(new Date(param.rezultat[0].updated_at)).slice(9, 11) + \".\" + __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(new Date(param.rezultat[0].updated_at)).slice(6, 8) + \".\" + __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(new Date(param.rezultat[0].updated_at)).slice(1, 5);\n                    var time = __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(new Date(new Date(param.rezultat[0].updated_at).getTime() - new Date(param.rezultat[0].updated_at).getTimezoneOffset() * 60000).toISOString()).substring(12, 17);\n                    obj.datum = datum;\n                    obj.vrijeme = time;\n                    obj.kontrola = _this5.Interpretacija(\"\", obj.rezultat, obj.jedinica, obj.refd, obj.refg, _this5.$store.state.site, obj.interp, obj.extend, _this5.spec)[5];\n\n                    _this5.Procjena.push(obj);\n                    obj = {};\n                  }\n                });\n\n                if (count == response.data.Multi.length) {\n                  _this5.Procjena.sort(function (a, b) {\n                    return Date.parse(a.updated_at) == Date.parse(b.updated_at) ? 0 : +(Date.parse(a.updated_at) < Date.parse(b.updated_at)) || -1;\n                  });\n\n                  var data = [];\n\n                  if (_this5.Procjena.length) {\n                    _this5.optionsLineChart = {\n                      responsive: true,\n                      maintainAspectRatio: false,\n                      title: {\n                        display: true,\n                        text: \"\"\n                      },\n                      scales: {\n                        xAxes: [{\n                          display: true,\n                          gridLines: {\n                            display: true,\n                            color: \"#eee\"\n                          }\n                        }],\n                        yAxes: [{\n                          display: true,\n                          gridLines: {\n                            display: true,\n                            color: \"#eee\"\n                          }\n                        }]\n                      }\n                    };\n\n                    var labels = [];\n                    var kontrola = [];\n                    var temp = \"\";\n\n                    _this5.Procjena.forEach(function (element) {\n                      if (!isNaN(element.rezultat.trim())) {\n                        switch (element.kontrola) {\n                          case \"Red\":\n                            kontrola.push(palette.danger);\n                            break;\n                          case \"Green\":\n                            kontrola.push(palette.primary);\n                            break;\n                          case \"Yellow\":\n                            kontrola.push(palette.warning);\n                            break;\n\n                          default:\n                            kontrola.push(palette.info);\n                            break;\n                        }\n\n                        labels.push(element.datum);\n                        data.push(element.rezultat);\n                      }\n                    });\n\n                    _this5.dataLineChart = {\n                      labels: labels,\n                      datasets: [{\n                        label: test.ime + \" | \" + test.analit,\n                        backgroundColor: __WEBPACK_IMPORTED_MODULE_6_services_utils__[\"a\" /* default */].hex2rgb(palette.info, 0.5).css,\n                        pointBorderColor: kontrola,\n                        pointBackgroundColor: kontrola,\n                        borderColor: palette.transparent,\n                        data: data\n                      }]\n                    };\n\n                    if (data.length) {\n                      _this5.showLineChart = true;\n                    }\n\n                    _this5.$refs.staticModalEvaluationMulti.open();\n                  } else {}\n                }\n              });\n            } else {}\n            _this5.isLoading = false;\n          });\n        } else {\n          this.isLoading = true;\n          this.Procjena = [];\n\n          __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"l\" /* http */].get(\"/patient/evaluation/single\" + \"?token=\" + this.$store.state.token + \"&site=\" + this.$store.state.site + \"&patient=\" + this.pacijent, {}).then(function (response) {\n            if (response.data.Results.length) {\n              var obj = {};\n              var count = 0;\n\n              response.data.Results.forEach(function (element) {\n                count++;\n                element.rezultati.forEach(function (rez) {\n                  if (rez.labassay === test.labassay_id && element.verificiran && rez.rezultat[rez.rezultat.length - 1].rezultat_f.trim() != \"\") {\n                    obj.rezultat = rez.rezultat[rez.rezultat.length - 1].rezultat_f;\n                    obj.jedinica = rez.rezultat[rez.rezultat.length - 1].jedinice_f;\n                    obj.analit = \"\";\n                    obj.interp = rez.interp;\n                    obj.extend = rez.extend;\n                    obj.refd = rez.refd;\n                    obj.refg = rez.refg;\n                    obj.sid = element.id;\n                    obj.updated_at = rez.rezultat[rez.rezultat.length - 1].updated_at;\n\n                    var datum = __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(rez.rezultat[rez.rezultat.length - 1].updated_at).slice(9, 11) + \".\" + __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(rez.rezultat[rez.rezultat.length - 1].updated_at).slice(6, 8) + \".\" + __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(rez.rezultat[rez.rezultat.length - 1].updated_at).slice(1, 5);\n                    var time = __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(new Date(new Date(rez.rezultat[rez.rezultat.length - 1].updated_at).getTime() - new Date(rez.rezultat[rez.rezultat.length - 1].updated_at).getTimezoneOffset() * 60000).toISOString()).substring(12, 17);\n\n                    obj.datum = datum;\n                    obj.vrijeme = time;\n                    obj.kontrola = _this5.Interpretacija(\"\", obj.rezultat, obj.jedinica, obj.refd, obj.refg, _this5.$store.state.site, obj.interp, obj.extend, _this5.spec)[5];\n\n                    _this5.Procjena.push(obj);\n                    obj = {};\n                  }\n                });\n\n                if (count == response.data.Results.length) {\n                  _this5.Procjena.sort(function (a, b) {\n                    return Date.parse(a.updated_at) == Date.parse(b.updated_at) ? 0 : +(Date.parse(a.updated_at) < Date.parse(b.updated_at)) || -1;\n                  });\n\n                  var data = [];\n\n                  if (_this5.Procjena.length) {\n                    _this5.optionsLineChart = {\n                      responsive: true,\n                      maintainAspectRatio: false,\n                      title: {\n                        display: true,\n                        text: \"\"\n                      },\n                      scales: {\n                        xAxes: [{\n                          display: true,\n                          gridLines: {\n                            display: true,\n                            color: \"#eee\"\n                          }\n                        }],\n                        yAxes: [{\n                          display: true,\n                          gridLines: {\n                            display: true,\n                            color: \"#eee\"\n                          }\n                        }]\n                      }\n                    };\n\n                    var labels = [];\n                    var kontrola = [];\n                    var temp = \"\";\n\n                    _this5.Procjena.forEach(function (element) {\n                      if (!isNaN(element.rezultat.trim())) {\n                        switch (element.kontrola) {\n                          case \"Red\":\n                            kontrola.push(palette.danger);\n                            break;\n                          case \"Green\":\n                            kontrola.push(palette.primary);\n                            break;\n                          case \"Yellow\":\n                            kontrola.push(palette.warning);\n                            break;\n\n                          default:\n                            kontrola.push(palette.info);\n                            break;\n                        }\n\n                        labels.push(element.datum);\n                        data.push(element.rezultat);\n                      }\n                    });\n\n                    _this5.dataLineChart = {\n                      labels: labels,\n                      datasets: [{\n                        label: test.ime + \" | \" + test.analit,\n                        backgroundColor: __WEBPACK_IMPORTED_MODULE_6_services_utils__[\"a\" /* default */].hex2rgb(palette.info, 0.5).css,\n                        pointBorderColor: kontrola,\n                        pointBackgroundColor: kontrola,\n                        borderColor: palette.transparent,\n                        data: data\n                      }]\n                    };\n\n                    if (data.length) {\n                      _this5.showLineChart = true;\n                    }\n\n                    _this5.$refs.staticModalEvaluationSingle.open();\n                  } else {}\n                }\n              });\n            } else {}\n            _this5.isLoading = false;\n          });\n        }\n      }\n    },\n    filteredAntibiotics: function filteredAntibiotics(column, columns) {\n      var _this6 = this;\n\n      return this.Antibiotics.filter(function (item) {\n        return _this6.Antibiotics.indexOf(item) % columns === column - 1;\n      });\n    },\n    filteredBacteries: function filteredBacteries(column, columns) {\n      var _this7 = this;\n\n      return this.TemporaryBacteries.filter(function (item) {\n        return _this7.TemporaryBacteries.indexOf(item) % columns === column - 1;\n      });\n    },\n    AddAntibiotics: function AddAntibiotics(data) {\n      var obj = {};\n\n      if (!data.chosen) {\n        obj._id = data._id, obj.rbr_a = data.rbr_a, obj.naziv = data.naziv, obj.opis = data.opis, obj.rezultat = \"\";\n        this.TemporaryAntibiotics.push(obj);\n      } else {\n        for (var i = 0; i < this.TemporaryAntibiotics.length; i++) {\n          if (this.TemporaryAntibiotics[i]._id === data._id) {\n            this.TemporaryAntibiotics.splice(i, 1);\n            break;\n          }\n        }\n      }\n    },\n    AddBacteries: function AddBacteries(data) {\n      if (!data.chosen) {\n        this.TemporaryBacteriesAdd.push(data);\n      } else {\n        for (var i = 0; i < this.TemporaryBacteriesAdd.length; i++) {\n          if (this.TemporaryBacteriesAdd[i]._id === data._id) {\n            this.TemporaryBacteriesAdd.splice(i, 1);\n            break;\n          }\n        }\n      }\n    },\n    OpenMicroSelect: function OpenMicroSelect($event, test) {\n      var _this8 = this;\n\n      console.log(\"Select Modal opening...\");\n\n      this.CurrentTab = \"\";\n      this.testovi = [];\n      this.rezultati = [];\n      this.analitiprikaz = [];\n      this.calculated = false;\n      this.show_table = false;\n      this.main = false;\n\n      var topcije = null;\n      topcije = __WEBPACK_IMPORTED_MODULE_11__data_izbornik_izbornik__[\"a\" /* default */].rez;\n\n      __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"l\" /* http */].get(\"rezultati/showsingle/\" + this.$store.state.sid + \"?token=\" + this.$store.state.token + \"&site=\" + this.$store.state.site, {}).then(function (res) {\n        console.log(res.data);\n        var test = {};\n\n        if (res.data.data.length) {\n          res.data.data.sort(function (a, b) {\n            return a.testovi.labassay.grupa + a.testovi.labassay.grouporder == b.testovi.labassay.grupa + b.testovi.labassay.grouporder ? 0 : +(a.testovi.labassay.grupa + a.testovi.labassay.grouporder > b.testovi.labassay.grupa + b.testovi.labassay.grouporder) || -1;\n          });\n\n          _this8.testovi = res.data.data;\n          _this8.analitiprikaz = res.data.multidata;\n\n          res.data.data.forEach(function (element) {\n            test = {};\n            test.realizovan = false;\n\n            test.ime = element.testovi.labassay.naziv;\n            test.test = element.testovi.labassay.sifra;\n            test.analit = element.testovi.labassay.analit;\n            test.IDE = element.testovi._id;\n            test.labassay_id = element.testovi.labassay._id;\n\n            test.multi_count = 0;\n            test.multi_rezultati = [];\n\n            res.data.multidata.forEach(function (multi) {\n              if (multi.labassay._id === element.testovi.labassay._id) {\n                test.multi_rezultati = multi.rezultat;\n                test.multi_count = multi.rezultat[0].rezultat.length;\n              }\n            });\n\n            test.kategorija = element.testovi.labassay.kategorija;\n            test.analyser = element.testovi.labassay.analyser;\n            test.multiparam = element.testovi.labassay.multiparam;\n            test.vise = element.testovi.rezultat.length;\n            test.calculated = element.testovi.labassay.calculated;\n            test.manual = element.testovi.labassay.manual;\n\n            test.select_options = eval(\"topcije.\" + element.testovi.interp.replace(\"%\", \"_\").replace(\"/\", \"_\").replace(\" \", \"_\").replace(/-/g, \"_\").replace(\"#\", \"_\").replace(/^\\d+/, \"\"));\n\n            element.testovi.rezultat.forEach(function (rezultat) {\n              test.sekcija = rezultat.anaassay.sekcija;\n              test.rezultat = rezultat.rezultat_f;\n              test.result = rezultat;\n              test.anaassay = rezultat.anaassay;\n\n              if (rezultat.rezultat_f != \"\") {\n                test.realizovan = true;\n              }\n\n              test.unit = rezultat.jedinice_f;\n\n              if (res.data.verificiran || res.data.status === \"ODOBREN\") {\n                test.odobren = \"ODOBREN\";\n                test.edit = false;\n              } else {\n                test.odobren != \"ODOBREN\";\n                test.edit = true;\n              }\n\n              test.jedinica = rezultat.jedinice_f;\n              test.id = rezultat._id;\n              test.multidata = element.testovi.labassay.multi;\n              test.rezultat_m = rezultat.rezultat_m;\n              test.bakterije = element.testovi.labassay.bakterije;\n              test.neg_description = element.testovi.labassay.neg_description;\n              test.pos_description = element.testovi.labassay.pos_description;\n              test.refSet = element.testovi.grupa;\n              test.dRef = element.testovi.refd;\n              test.gRef = element.testovi.refg;\n              test.interp = element.testovi.interp;\n              test.extend = element.testovi.extend;\n              test.retest = element.testovi.retest;\n              test.interpretacija = element.testovi.labassay.interpretacija;\n            });\n\n            if (test.select_options != undefined && !test.select_options.includes(test.rezultat)) {\n              test.select_options.unshift(test.rezultat);\n            }\n            _this8.rezultati.push(test);\n          });\n\n          if (_this8.MicrobiologySample && _this8.AllowGetSample) {\n            var bakterioloski = false;\n            var negativan = false;\n            var pozitivan = false;\n            var bakterijed = [];\n            var bakterijei = [];\n            var neg_rezultati = [];\n            var poz_rezultati = [];\n\n            _this8.CurrentTest = _this8.rezultati[0].analit;\n\n            neg_rezultati = [].concat(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray___default()(_this8.rezultati[0].neg_description));\n            poz_rezultati = [].concat(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray___default()(_this8.rezultati[0].pos_description));\n\n            if (_this8.rezultati[0].bakterije.length) {\n              bakterioloski = true;\n\n              var counter = 0;\n              var ima = false;\n\n              _this8.Bacteries.forEach(function (element) {\n                element.chosen = false;\n                counter = 0;\n                ima = false;\n                _this8.rezultati[0].bakterije.forEach(function (bakt) {\n                  counter++;\n                  if (element._id == bakt) {\n                    ima = true;\n                  }\n\n                  if (counter === _this8.rezultati[0].bakterije.length && !ima) {\n                    bakterijed.push(element);\n                  }\n\n                  if (counter === _this8.rezultati[0].bakterije.length && ima) {\n                    bakterijei.push(element);\n                  }\n                });\n              });\n\n              switch (_this8.rezultati[0].rezultat_m.length) {\n                case 0:\n                  _this8.MicrobiologyScenario = \"MAIBNoR\";\n                  _this8.SelectedBacteries = [];\n                  break;\n                case 1:\n                  _this8.MicrobiologyScenario = \"MAIBNeR\";\n                  _this8.SelectedBacteries = [];\n\n                  negativan = true;\n\n                  if (!neg_rezultati.includes(_this8.rezultati[0].rezultat.trim())) {\n                    neg_rezultati.unshift(_this8.rezultati[0].rezultat.trim());\n                  }\n\n                  break;\n\n                default:\n                  _this8.MicrobiologyScenario = \"MAIBPoR\";\n                  _this8.SelectedBacteries = [];\n                  _this8.BacteryTabs = [];\n\n                  _this8.rezultati[0].rezultat_m.forEach(function (element) {\n                    if (element.bakterija) {\n                      _this8.SelectedBacteries.push(element);\n                      _this8.BacteryTabs.push(element.opis);\n                    }\n                  });\n\n                  console.log(\"Izabrane bakterije:\");\n                  console.log(_this8.SelectedBacteries);\n\n                  var maxVal = _this8.SelectedBacteries.reduce(function (max, val) {\n                    return max.antibiogram.antibiotici.length > val.antibiogram.antibiotici.length ? max : val;\n                  });\n\n                  if (_this8.CurrentTab == \"\") {}\n                  _this8.CurrentTab = _this8.SelectedBacteries[0].opis;\n\n                  bakterijed.forEach(function (element) {\n                    _this8.SelectedBacteries.forEach(function (bact) {\n                      if (element._id == bact._id) {\n                        element.chosen = true;\n                      }\n                    });\n                  });\n\n                  bakterijei.forEach(function (element) {\n                    _this8.SelectedBacteries.forEach(function (bact) {\n                      if (element._id == bact._id) {\n                        element.chosen = true;\n                      }\n                    });\n                  });\n\n                  pozitivan = true;\n                  if (!poz_rezultati.includes(_this8.rezultati[0].rezultat.trim())) {\n                    poz_rezultati.unshift(_this8.rezultati[0].rezultat.trim());\n                  }\n\n                  break;\n              }\n            } else {\n              bakterioloski = false;\n              _this8.SelectedBacteries = [];\n\n              switch (_this8.rezultati[0].rezultat_m.length) {\n                case 0:\n                  _this8.MicrobiologyScenario = \"MANBNoR\";\n                  neg_rezultati = _this8.rezultati[0].neg_description;\n                  poz_rezultati = _this8.rezultati[0].pos_description;\n\n                  break;\n\n                case 1:\n                  if (_this8.rezultati[0].rezultat_m[0].negativan === true) {\n                    _this8.MicrobiologyScenario = \"MANBNeR\";\n\n                    negativan = true;\n\n                    if (!neg_rezultati.includes(_this8.rezultati[0].rezultat.trim())) {\n                      neg_rezultati.unshift(_this8.rezultati[0].rezultat.trim());\n                    }\n                  } else {\n                    _this8.MicrobiologyScenario = \"MANBPoR\";\n\n                    pozitivan = true;\n\n                    if (!poz_rezultati.includes(_this8.rezultati[0].rezultat.trim())) {\n                      poz_rezultati.unshift(_this8.rezultati[0].rezultat.trim());\n                    }\n                  }\n\n                  break;\n\n                default:\n                  _this8.MicrobiologyScenario = \"Unknown\";\n\n                  break;\n              }\n            }\n\n            _this8.MicrobiologyResult = {\n              negative: negativan,\n              positive: pozitivan,\n              BUG: bakterioloski,\n              F_RESULT: _this8.rezultati[0].rezultat,\n              M_RESULT: [].concat(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray___default()(_this8.rezultati[0].rezultat_m)),\n              DefaultBacteries: [].concat(bakterijei),\n              RemainingBacteries: [].concat(bakterijed),\n              NegativeDescriptions: [].concat(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray___default()(neg_rezultati)),\n              PositiveDescriptions: [].concat(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray___default()(poz_rezultati))\n            };\n          } else {\n            _this8.MicrobiologyScenario = \"Unknown\";\n\n            _this8.MicrobiologyResult = {\n              negative: null,\n              positive: null,\n              BUG: null,\n              F_RESULT: \"\",\n              M_RESULT: [],\n              DefaultBacteries: [],\n              RemainingBacteries: [],\n              NegativeDescriptions: [],\n              PositiveDescriptions: []\n            };\n          }\n\n          _this8.rezultati.forEach(function (element) {\n            if (element.calculated) {\n              _this8.calculated = true;\n            }\n          });\n        }\n      }).then(function () {\n        _this8.ShowAntibiotics = false;\n        _this8.ShowBacteries = false;\n        _this8.show_table = true;\n        _this8.main = true;\n        _this8.$refs.staticModalMicroBacterySelect.open();\n      });\n    },\n    OpenMicro: function OpenMicro($event, test) {\n      var _this9 = this;\n\n      console.log(\"Result Modal opening...\");\n      this.CurrentTab = \"\";\n      this.testovi = [];\n      this.rezultati = [];\n      this.analitiprikaz = [];\n      this.calculated = false;\n      this.show_table = false;\n      this.main = false;\n\n      var topcije = null;\n      topcije = __WEBPACK_IMPORTED_MODULE_11__data_izbornik_izbornik__[\"a\" /* default */].rez;\n\n      __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"l\" /* http */].get(\"rezultati/showsingle/\" + this.$store.state.sid + \"?token=\" + this.$store.state.token + \"&site=\" + this.$store.state.site, {}).then(function (res) {\n        console.log(res.data);\n        var test = {};\n\n        if (res.data.data.length) {\n          res.data.data.sort(function (a, b) {\n            return a.testovi.labassay.grupa + a.testovi.labassay.grouporder == b.testovi.labassay.grupa + b.testovi.labassay.grouporder ? 0 : +(a.testovi.labassay.grupa + a.testovi.labassay.grouporder > b.testovi.labassay.grupa + b.testovi.labassay.grouporder) || -1;\n          });\n\n          _this9.testovi = res.data.data;\n          _this9.analitiprikaz = res.data.multidata;\n\n          res.data.data.forEach(function (element) {\n            test = {};\n            test.realizovan = false;\n\n            test.ime = element.testovi.labassay.naziv;\n            test.test = element.testovi.labassay.sifra;\n            test.analit = element.testovi.labassay.analit;\n            test.IDE = element.testovi._id;\n            test.labassay_id = element.testovi.labassay._id;\n\n            test.multi_count = 0;\n            test.multi_rezultati = [];\n\n            res.data.multidata.forEach(function (multi) {\n              if (multi.labassay._id === element.testovi.labassay._id) {\n                test.multi_rezultati = multi.rezultat;\n                test.multi_count = multi.rezultat[0].rezultat.length;\n              }\n            });\n\n            test.kategorija = element.testovi.labassay.kategorija;\n            test.analyser = element.testovi.labassay.analyser;\n            test.multiparam = element.testovi.labassay.multiparam;\n            test.vise = element.testovi.rezultat.length;\n            test.calculated = element.testovi.labassay.calculated;\n            test.manual = element.testovi.labassay.manual;\n\n            test.select_options = eval(\"topcije.\" + element.testovi.interp.replace(\"%\", \"_\").replace(\"/\", \"_\").replace(\" \", \"_\").replace(/-/g, \"_\").replace(\"#\", \"_\").replace(/^\\d+/, \"\"));\n\n            element.testovi.rezultat.forEach(function (rezultat) {\n              test.sekcija = rezultat.anaassay.sekcija;\n              test.rezultat = rezultat.rezultat_f;\n              test.result = rezultat;\n              test.anaassay = rezultat.anaassay;\n\n              if (rezultat.rezultat_f != \"\") {\n                test.realizovan = true;\n              }\n\n              test.unit = rezultat.jedinice_f;\n\n              if (res.data.verificiran || res.data.status === \"ODOBREN\") {\n                test.odobren = \"ODOBREN\";\n                test.edit = false;\n              } else {\n                test.odobren != \"ODOBREN\";\n                test.edit = true;\n              }\n\n              test.jedinica = rezultat.jedinice_f;\n              test.id = rezultat._id;\n              test.multidata = element.testovi.labassay.multi;\n              test.rezultat_m = rezultat.rezultat_m;\n              test.bakterije = element.testovi.labassay.bakterije;\n              test.neg_description = element.testovi.labassay.neg_description;\n              test.pos_description = element.testovi.labassay.pos_description;\n              test.refSet = element.testovi.grupa;\n              test.dRef = element.testovi.refd;\n              test.gRef = element.testovi.refg;\n              test.interp = element.testovi.interp;\n              test.extend = element.testovi.extend;\n              test.retest = element.testovi.retest;\n              test.interpretacija = element.testovi.labassay.interpretacija;\n            });\n\n            if (test.select_options != undefined && !test.select_options.includes(test.rezultat)) {\n              test.select_options.unshift(test.rezultat);\n            }\n            _this9.rezultati.push(test);\n          });\n\n          if (_this9.MicrobiologySample && _this9.AllowGetSample) {\n            var bakterioloski = false;\n            var negativan = false;\n            var pozitivan = false;\n            var bakterijed = [];\n            var bakterijei = [];\n            var neg_rezultati = [];\n            var poz_rezultati = [];\n\n            _this9.CurrentTest = _this9.rezultati[0].analit;\n\n            neg_rezultati = [].concat(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray___default()(_this9.rezultati[0].neg_description));\n            poz_rezultati = [].concat(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray___default()(_this9.rezultati[0].pos_description));\n\n            if (_this9.rezultati[0].bakterije.length) {\n              bakterioloski = true;\n\n              var counter = 0;\n              var ima = false;\n\n              _this9.Bacteries.forEach(function (element) {\n                element.chosen = false;\n                counter = 0;\n                ima = false;\n                _this9.rezultati[0].bakterije.forEach(function (bakt) {\n                  counter++;\n                  if (element._id == bakt) {\n                    ima = true;\n                  }\n\n                  if (counter === _this9.rezultati[0].bakterije.length && !ima) {\n                    bakterijed.push(element);\n                  }\n\n                  if (counter === _this9.rezultati[0].bakterije.length && ima) {\n                    bakterijei.push(element);\n                  }\n                });\n              });\n\n              switch (_this9.rezultati[0].rezultat_m.length) {\n                case 0:\n                  _this9.MicrobiologyScenario = \"MAIBNoR\";\n                  _this9.SelectedBacteries = [];\n                  break;\n                case 1:\n                  _this9.MicrobiologyScenario = \"MAIBNeR\";\n                  _this9.SelectedBacteries = [];\n\n                  negativan = true;\n\n                  if (!neg_rezultati.includes(_this9.rezultati[0].rezultat.trim())) {\n                    neg_rezultati.unshift(_this9.rezultati[0].rezultat.trim());\n                  }\n\n                  break;\n\n                default:\n                  _this9.MicrobiologyScenario = \"MAIBPoR\";\n                  _this9.SelectedBacteries = [];\n                  _this9.BacteryTabs = [];\n\n                  _this9.rezultati[0].rezultat_m.forEach(function (element) {\n                    if (element.bakterija) {\n                      _this9.SelectedBacteries.push(element);\n                      _this9.BacteryTabs.push(element.opis);\n                    }\n                  });\n\n                  console.log(\"Izabrane bakterije:\");\n                  console.log(_this9.SelectedBacteries);\n\n                  var maxVal = _this9.SelectedBacteries.reduce(function (max, val) {\n                    return max.antibiogram.antibiotici.length > val.antibiogram.antibiotici.length ? max : val;\n                  });\n\n                  if (_this9.CurrentTab == \"\") {}\n                  _this9.CurrentTab = _this9.SelectedBacteries[0].opis;\n\n                  bakterijed.forEach(function (element) {\n                    _this9.SelectedBacteries.forEach(function (bact) {\n                      if (element._id == bact._id) {\n                        element.chosen = true;\n                      }\n                    });\n                  });\n\n                  bakterijei.forEach(function (element) {\n                    _this9.SelectedBacteries.forEach(function (bact) {\n                      if (element._id == bact._id) {\n                        element.chosen = true;\n                      }\n                    });\n                  });\n\n                  pozitivan = true;\n                  if (!poz_rezultati.includes(_this9.rezultati[0].rezultat.trim())) {\n                    poz_rezultati.unshift(_this9.rezultati[0].rezultat.trim());\n                  }\n\n                  break;\n              }\n            } else {\n              bakterioloski = false;\n              _this9.SelectedBacteries = [];\n\n              switch (_this9.rezultati[0].rezultat_m.length) {\n                case 0:\n                  _this9.MicrobiologyScenario = \"MANBNoR\";\n                  neg_rezultati = _this9.rezultati[0].neg_description;\n                  poz_rezultati = _this9.rezultati[0].pos_description;\n\n                  break;\n\n                case 1:\n                  if (_this9.rezultati[0].rezultat_m[0].negativan === true) {\n                    _this9.MicrobiologyScenario = \"MANBNeR\";\n\n                    negativan = true;\n\n                    if (!neg_rezultati.includes(_this9.rezultati[0].rezultat.trim())) {\n                      neg_rezultati.unshift(_this9.rezultati[0].rezultat.trim());\n                    }\n                  } else {\n                    _this9.MicrobiologyScenario = \"MANBPoR\";\n\n                    pozitivan = true;\n\n                    if (!poz_rezultati.includes(_this9.rezultati[0].rezultat.trim())) {\n                      poz_rezultati.unshift(_this9.rezultati[0].rezultat.trim());\n                    }\n                  }\n\n                  break;\n\n                default:\n                  _this9.MicrobiologyScenario = \"Unknown\";\n\n                  break;\n              }\n            }\n\n            _this9.MicrobiologyResult = {\n              negative: negativan,\n              positive: pozitivan,\n              BUG: bakterioloski,\n              F_RESULT: _this9.rezultati[0].rezultat,\n              M_RESULT: [].concat(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray___default()(_this9.rezultati[0].rezultat_m)),\n              DefaultBacteries: [].concat(bakterijei),\n              RemainingBacteries: [].concat(bakterijed),\n              NegativeDescriptions: [].concat(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray___default()(neg_rezultati)),\n              PositiveDescriptions: [].concat(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray___default()(poz_rezultati))\n            };\n          } else {\n            _this9.MicrobiologyScenario = \"Unknown\";\n\n            _this9.MicrobiologyResult = {\n              negative: null,\n              positive: null,\n              BUG: null,\n              F_RESULT: \"\",\n              M_RESULT: [],\n              DefaultBacteries: [],\n              RemainingBacteries: [],\n              NegativeDescriptions: [],\n              PositiveDescriptions: []\n            };\n          }\n\n          _this9.rezultati.forEach(function (element) {\n            if (element.calculated) {\n              _this9.calculated = true;\n            }\n          });\n        }\n      }).then(function () {\n        _this9.ShowAntibiotics = false;\n        _this9.ShowBacteries = false;\n        _this9.show_table = true;\n        _this9.main = true;\n        _this9.$refs.staticModalMicroBactery.open();\n      });\n    },\n    SelectBactery: function SelectBactery(data) {\n      if (!data.chosen) {\n        this.SelectedBacteries.push(data);\n      } else {\n        for (var i = this.SelectedBacteries.length - 1; i >= 0; i--) {\n          if (this.SelectedBacteries[i]._id === data._id) {\n            this.SelectedBacteries.splice(i, 1);\n          }\n        }\n      }\n\n      if (this.SelectedBacteries.length > 0) {\n        this.ModalPositiveCondition = true;\n      } else {\n        this.ModalPositiveCondition = false;\n      }\n    },\n    MicroResultSelect: function MicroResultSelect(event) {\n      var _this10 = this;\n\n      this.uzorci.forEach(function (element) {\n        if (element.sid === _this10.$store.state.sid) {\n          _this10.sample.status = \"ZAPRIMLJEN\";\n        }\n      });\n      this.$refs.staticModalSelectResult.open();\n    },\n    ResetSample: function ResetSample(event) {\n      this.$refs.staticModalResetSample.open();\n    },\n    onCancel: function onCancel() {},\n    Prethodni: function Prethodni() {\n      var _this11 = this;\n\n      this.pagination = false;\n\n      var check = 0;\n      var found = false;\n      this.Results.forEach(function (element) {\n        check++;\n        if (element.pid == _this11.Previous.pid) {\n          found = true;\n          __WEBPACK_IMPORTED_MODULE_4__router__[\"a\" /* default */].push(\"/obrada/rezultati/\" + element.patient + \"/\" + element.pid + \"?date=\" + element.date);\n        }\n      });\n\n      if (check === this.Results.length) {\n        if (found) {\n          __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"l\" /* http */].get(\"/rezultati/pagination\" + \"?token=\" + this.$store.state.token + \"&site=\" + this.$store.state.site + \"&pid=\" + this.Previous.pid.toString() + \"&date=\" + this.$route.query.date, {}).then(function (res) {\n            res.data.rezultati = res.data.rezultati.sort(function (a, b) {\n              return a.pid.localeCompare(b.pid, undefined, {\n                numeric: true,\n                sensitivity: \"base\"\n              });\n            });\n\n            _this11.data_length = res.data.rezultati[res.data.rezultati.length - 1].pid;\n            _this11.data_min = res.data.rezultati[0].pid;\n            if (__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_own_property_names___default()(res.data).length === 0) {\n\n              _this11.pagination = true;\n              _this11.backward_disabled = true;\n            } else {\n              _this11.data_pid = res.data.data.pid;\n              _this11.Results = res.data.rezultati;\n\n              __WEBPACK_IMPORTED_MODULE_4__router__[\"a\" /* default */].push(\"/obrada/rezultati/\" + res.data.data.patient + \"/\" + res.data.data.pid + \"?date=\" + res.data.data.date);\n            }\n          });\n        } else {\n          this.Previous.pid = this.Previous.pid - 1;\n          if (this.Previous.pid > 0) {\n            this.Prethodni();\n          } else {}\n        }\n      } else {}\n    },\n    Sljedeci: function Sljedeci() {\n      var _this12 = this;\n\n      this.pagination = false;\n\n      var check = 0;\n      var found = false;\n      this.Results.forEach(function (element) {\n        check++;\n        if (element.pid == _this12.Next.pid) {\n          found = true;\n          __WEBPACK_IMPORTED_MODULE_4__router__[\"a\" /* default */].push(\"/obrada/rezultati/\" + element.patient + \"/\" + element.pid + \"?date=\" + element.date);\n        }\n      });\n\n      if (check === this.Results.length) {\n        if (found) {\n          __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"l\" /* http */].get(\"/rezultati/pagination\" + \"?token=\" + this.$store.state.token + \"&site=\" + this.$store.state.site + \"&pid=\" + this.Next.pid.toString() + \"&date=\" + this.$route.query.date, {}).then(function (res) {\n            res.data.rezultati = res.data.rezultati.sort(function (a, b) {\n              return a.pid.localeCompare(b.pid, undefined, {\n                numeric: true,\n                sensitivity: \"base\"\n              });\n            });\n\n            _this12.data_length = res.data.rezultati[res.data.rezultati.length - 1].pid;\n            _this12.data_min = res.data.rezultati[0].pid;\n            if (__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_own_property_names___default()(res.data).length === 0) {\n\n              _this12.pagination = true;\n              _this12.forward_disabled = true;\n            } else {\n              _this12.data_pid = res.data.data.pid;\n              _this12.Results = res.data.rezultati;\n\n              __WEBPACK_IMPORTED_MODULE_4__router__[\"a\" /* default */].push(\"/obrada/rezultati/\" + res.data.data.patient + \"/\" + res.data.data.pid + \"?date=\" + res.data.data.date);\n            }\n          });\n        } else {\n          this.Next.pid = this.Next.pid + 1;\n          this.Sljedeci();\n        }\n      } else {}\n    },\n    Created: function Created() {\n      var _this13 = this;\n\n      this.MicrobiologyOrder = false;\n\n      __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"l\" /* http */].get(\"rezultati/odobravanje/samples/\" + this.$route.params.patient + \"/\" + this.$route.params.id + \"?token=\" + this.$store.state.token + \"&site=\" + this.$store.state.site + \"&date=\" + this.$route.query.date, {}).then(function (res) {\n        _this13.header = res.data.results[0].patient.ime + \" \" + res.data.results[0].patient.prezime;\n        _this13.lokacija = res.data.lokacija;\n        _this13.klijent = res.data.results[0].customer;\n        console.log(_this13.klijent);\n        _this13.final_pdf = res.data.final_pdf;\n\n        _this13.analyser_patient = res.data.results[0].patient;\n\n        _this13.timestamp = res.data.results[0].timestamp;\n\n        _this13.pacijent = res.data.results[0].patient._id;\n        _this13.ime = res.data.results[0].patient.ime;\n        _this13.prezime = res.data.results[0].patient.prezime;\n        _this13.data_spol = res.data.results[0].patient.spol;\n        _this13.jmbg = res.data.results[0].patient.jmbg;\n        _this13.pid = res.data.results[0].sample.pid;\n\n        _this13.email = res.data.results[0].patient.email.trim();\n        _this13.email_tmp = res.data.results[0].patient.email.trim();\n\n        if (!_this13.Email(_this13.email)) {\n          _this13.email = \"\";\n          _this13.email_tmp = \"\";\n        }\n\n        _this13.count = res.data.results.length;\n        _this13.approved = 0;\n        _this13.verified = 0;\n\n        _this13.odobren = true;\n        _this13.verificiran = true;\n        _this13.partials = [];\n        _this13.partials_condition = false;\n\n        res.data.results.forEach(function (element) {\n          if (element.verificiran) {\n            _this13.verified++;\n            _this13.partials.push(element._id);\n          }\n          if (element.status === \"ODOBREN\" || element.status === \"VERIFICIRAN\") {\n            _this13.approved++;\n          }\n          if (element.status != \"ODOBREN\" && element.status != \"VERIFICIRAN\") {\n            _this13.odobren = false;\n          }\n          if (!element.verificiran) {\n            _this13.verificiran = false;\n          }\n        });\n\n        if (_this13.count > _this13.verified && _this13.verified > 1) {\n          _this13.partials_condition = true;\n        }\n\n        _this13.uzorci = [];\n\n        _this13.nalaz.patient = res.data.results[0].patient._id;\n        _this13.nalaz.samples = [];\n\n        res.data.results.forEach(function (element) {\n          var check = 0;\n          var zaprimljen = 0;\n          var realizovan = 0;\n\n          if (element.verificiran) {\n            var status_uzorka = \"VERIFICIRAN\";\n          } else {\n            var status_uzorka = element.status;\n          }\n\n          _this13.nalaz.samples.push(element._id);\n\n          element.rezultati.forEach(function (test) {\n            check++;\n\n            if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n              zaprimljen++;\n            }\n\n            if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n              realizovan++;\n            }\n\n            if (check === element.rezultati.length) {\n\n              if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                _this13.MicrobiologyOrder = true;\n              }\n\n              if (status_uzorka === \"VERIFICIRAN\") {\n                _this13.uzorci.push({\n                  sid: element.id,\n                  status: \"VERIFICIRAN\",\n                  pdf_exists: element.pdf_exists,\n                  tip: element.sample.tip,\n                  _id: element._id,\n                  removed: false\n                });\n              } else if (status_uzorka === \"ODOBREN\") {\n                _this13.uzorci.push({\n                  sid: element.id,\n                  status: \"ODOBREN\",\n                  pdf_exists: element.pdf_exists,\n                  tip: element.sample.tip,\n                  _id: element._id,\n                  removed: false\n                });\n              } else if (zaprimljen < 1) {\n                _this13.uzorci.push({\n                  sid: element.id,\n                  status: \"REALIZOVAN\",\n                  pdf_exists: element.pdf_exists,\n                  tip: element.sample.tip,\n                  _id: element._id,\n                  removed: false\n                });\n              } else if (realizovan < 1) {\n                var stat = \"ZAPRIMLJEN\";\n                if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                  if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                    stat = \"REALIZOVAN\";\n                  }\n                }\n                _this13.uzorci.push({\n                  sid: element.id,\n                  status: stat,\n                  pdf_exists: element.pdf_exists,\n                  tip: element.sample.tip,\n                  _id: element._id,\n                  removed: false\n                });\n              } else {\n                _this13.uzorci.push({\n                  sid: element.id,\n                  status: \"U OBRADI\",\n                  pdf_exists: element.pdf_exists,\n                  tip: element.sample.tip,\n                  _id: element._id,\n                  removed: false\n                });\n              }\n            }\n          });\n        });\n\n        _this13.uzorci = _this13.uzorci.sort(function (a, b) {\n          return a.sid.localeCompare(b.sid, undefined, {\n            numeric: true,\n            sensitivity: \"base\"\n          });\n        });\n        _this13.main = true;\n\n        _this13.pagination = true;\n\n        __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"l\" /* http */].get(\"/rezultati/pagination\" + \"?token=\" + _this13.$store.state.token + \"&site=\" + _this13.$store.state.site + \"&pid=\" + _this13.$route.params.id + \"&date=\" + _this13.$route.query.date, {}).then(function (res) {\n          res.data.rezultati = res.data.rezultati.sort(function (a, b) {\n            return a.pid.localeCompare(b.pid, undefined, {\n              numeric: true,\n              sensitivity: \"base\"\n            });\n          });\n\n          _this13.data_length = res.data.rezultati[res.data.rezultati.length - 1].pid;\n          _this13.data_min = res.data.rezultati[0].pid;\n          if (__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_own_property_names___default()(res.data).length === 0) {\n\n            _this13.pagination = true;\n          } else {\n            _this13.data_pid = res.data.data.pid;\n            _this13.Results = res.data.rezultati;\n          }\n\n          if (_this13.MicrobiologyOrder) {\n            __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"l\" /* http */].get(\"mikrobiologija/bakterije/get?token=\" + _this13.$store.state.token + \"&site=\" + _this13.$store.state.site, {}).then(function (res) {\n              _this13.Bacteries = res.data.bakterije;\n              __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"l\" /* http */].get(\"mikrobiologija/antibiogrami/get?token=\" + _this13.$store.state.token + \"&site=\" + _this13.$store.state.site, {}).then(function (res) {\n                _this13.Antibiograms = res.data.antibiogrami;\n\n                _this13.Antibiograms.sort(function (a, b) {\n                  return a.naziv.localeCompare(b.naziv, undefined, {\n                    numeric: true,\n                    sensitivity: \"base\"\n                  });\n                });\n\n                __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"l\" /* http */].get(\"mikrobiologija/antibiotici/get?token=\" + _this13.$store.state.token + \"&site=\" + _this13.$store.state.site, {}).then(function (res) {\n                  res.data.antibiotici.sort(function (a, b) {\n                    return a.rbr_a.localeCompare(b.rbr_a, undefined, {\n                      numeric: true,\n                      sensitivity: \"base\"\n                    });\n                  });\n\n                  _this13.Antibiotics = [];\n\n                  res.data.antibiotici.forEach(function (element) {\n                    element.chosen = false;\n                    element.disabled = false;\n                    _this13.Antibiotics.push(element);\n                  });\n                });\n              });\n            });\n          }\n        });\n      });\n    },\n    Povratak: function Povratak() {\n      __WEBPACK_IMPORTED_MODULE_4__router__[\"a\" /* default */].push(\"/obrada/pregled/\" + \"?sekcija=\" + \"SVE\");\n    },\n    Nazad: function Nazad() {\n      this.email_button = false;\n      this.main = true;\n      this.pdf = false;\n    },\n\n\n    Email: function Email(email) {\n      if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email)) {\n        return true;\n      } else {\n        return false;\n      }\n    },\n\n    GetSingleSample: function GetSingleSample(data) {\n      var _this14 = this;\n\n      this.testovi = [];\n      this.rezultati = [];\n      this.analitiprikaz = [];\n      this.calculated = false;\n\n      var topcije = null;\n      topcije = __WEBPACK_IMPORTED_MODULE_11__data_izbornik_izbornik__[\"a\" /* default */].rez;\n\n      this.show_table = false;\n\n      __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"l\" /* http */].get(\"rezultati/showsingle/\" + data.sid + \"?token=\" + this.$store.state.token + \"&site=\" + this.$store.state.site, {}).then(function (res) {\n        var test = {};\n\n        if (res.data.data.length) {\n          res.data.data.sort(function (a, b) {\n            return a.testovi.labassay.grupa + a.testovi.labassay.grouporder == b.testovi.labassay.grupa + b.testovi.labassay.grouporder ? 0 : +(a.testovi.labassay.grupa + a.testovi.labassay.grouporder > b.testovi.labassay.grupa + b.testovi.labassay.grouporder) || -1;\n          });\n\n          _this14.testovi = res.data.data;\n          _this14.analitiprikaz = res.data.multidata;\n\n          res.data.data.forEach(function (element) {\n            test = {};\n            test.realizovan = false;\n\n            test.ime = element.testovi.labassay.naziv;\n            test.test = element.testovi.labassay.sifra;\n            test.analit = element.testovi.labassay.analit;\n            test.IDE = element.testovi._id;\n            test.labassay_id = element.testovi.labassay._id;\n\n            test.multi_count = 0;\n            test.multi_rezultati = [];\n\n            res.data.multidata.forEach(function (multi) {\n              if (multi.labassay._id === element.testovi.labassay._id) {\n                test.multi_rezultati = multi.rezultat;\n                test.multi_count = multi.rezultat[0].rezultat.length;\n              }\n            });\n\n            test.kategorija = element.testovi.labassay.kategorija;\n            test.analyser = element.testovi.labassay.analyser;\n            test.multiparam = element.testovi.labassay.multiparam;\n            test.vise = element.testovi.rezultat.length;\n            test.calculated = element.testovi.labassay.calculated;\n            test.manual = element.testovi.labassay.manual;\n\n            test.select_options = eval(\"topcije.\" + element.testovi.interp.replace(\"%\", \"_\").replace(\"/\", \"_\").replace(\" \", \"_\").replace(/-/g, \"_\").replace(\"#\", \"_\").replace(/^\\d+/, \"\"));\n\n            element.testovi.rezultat.forEach(function (rezultat) {\n              test.sekcija = rezultat.anaassay.sekcija;\n              test.rezultat = rezultat.rezultat_f;\n              test.result = rezultat;\n              test.anaassay = rezultat.anaassay;\n\n              if (rezultat.rezultat_f != \"\") {\n                test.realizovan = true;\n              }\n\n              test.unit = rezultat.jedinice_f;\n\n              if (res.data.verificiran || res.data.status === \"ODOBREN\") {\n                test.odobren = \"ODOBREN\";\n                test.edit = false;\n              } else {\n                test.odobren != \"ODOBREN\";\n                test.edit = true;\n              }\n\n              test.jedinica = rezultat.jedinice_f;\n              test.id = rezultat._id;\n              test.multidata = element.testovi.labassay.multi;\n              test.rezultat_m = rezultat.rezultat_m;\n              test.bakterije = element.testovi.labassay.bakterije;\n              test.neg_description = element.testovi.labassay.neg_description;\n              test.pos_description = element.testovi.labassay.pos_description;\n              test.refSet = element.testovi.grupa;\n              test.dRef = element.testovi.refd;\n              test.gRef = element.testovi.refg;\n              test.interp = element.testovi.interp;\n              test.extend = element.testovi.extend;\n              test.retest = element.testovi.retest;\n              test.interpretacija = element.testovi.labassay.interpretacija;\n            });\n\n            if (test.select_options != undefined && !test.select_options.includes(test.rezultat)) {\n              test.select_options.unshift(test.rezultat);\n            }\n            _this14.rezultati.push(test);\n          });\n\n          if (_this14.MicrobiologySample) {\n\n            var bakterioloski = false;\n            var negativan = false;\n            var pozitivan = false;\n            var bakterijed = [];\n            var bakterijei = [];\n            var neg_rezultati = [];\n            var poz_rezultati = [];\n\n            _this14.CurrentTest = _this14.rezultati[0].analit;\n\n            neg_rezultati = [].concat(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray___default()(_this14.rezultati[0].neg_description));\n            poz_rezultati = [].concat(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray___default()(_this14.rezultati[0].pos_description));\n\n            if (_this14.rezultati[0].bakterije.length) {\n\n              console.log(\"Ima bakterije.\");\n\n              bakterioloski = true;\n\n              var counter = 0;\n              var ima = false;\n\n              _this14.Bacteries.forEach(function (element) {\n                element.chosen = false;\n                counter = 0;\n                ima = false;\n                _this14.rezultati[0].bakterije.forEach(function (bakt) {\n                  counter++;\n                  if (element._id == bakt) {\n                    ima = true;\n                  }\n\n                  if (counter === _this14.rezultati[0].bakterije.length && !ima) {\n                    bakterijed.push(element);\n                  }\n\n                  if (counter === _this14.rezultati[0].bakterije.length && ima) {\n                    bakterijei.push(element);\n                  }\n                });\n              });\n\n              switch (_this14.rezultati[0].rezultat_m.length) {\n                case 0:\n                  _this14.MicrobiologyScenario = \"MAIBNoR\";\n                  _this14.SelectedBacteries = [];\n                  break;\n                case 1:\n                  _this14.MicrobiologyScenario = \"MAIBNeR\";\n                  _this14.SelectedBacteries = [];\n\n                  negativan = true;\n\n                  if (!neg_rezultati.includes(_this14.rezultati[0].rezultat.trim())) {\n                    neg_rezultati.unshift(_this14.rezultati[0].rezultat.trim());\n                  }\n\n                  break;\n\n                default:\n                  _this14.MicrobiologyScenario = \"MAIBPoR\";\n                  _this14.SelectedBacteries = [];\n                  _this14.BacteryTabs = [];\n\n                  _this14.rezultati[0].rezultat_m.forEach(function (element) {\n                    if (element.bakterija) {\n                      _this14.SelectedBacteries.push(element);\n                      _this14.BacteryTabs.push(element.opis);\n                    }\n                  });\n\n                  console.log(\"Izabrane bakterije:\");\n                  console.log(_this14.SelectedBacteries);\n\n                  var maxVal = _this14.SelectedBacteries.reduce(function (max, val) {\n                    return max.antibiogram.antibiotici.length > val.antibiogram.antibiotici.length ? max : val;\n                  });\n\n                  if (_this14.CurrentTab == \"\") {}\n                  _this14.CurrentTab = _this14.SelectedBacteries[0].opis;\n\n                  bakterijed.forEach(function (element) {\n                    _this14.SelectedBacteries.forEach(function (bact) {\n                      if (element._id == bact._id) {\n                        element.chosen = true;\n                      }\n                    });\n                  });\n\n                  bakterijei.forEach(function (element) {\n                    _this14.SelectedBacteries.forEach(function (bact) {\n                      if (element._id == bact._id) {\n                        element.chosen = true;\n                      }\n                    });\n                  });\n\n                  pozitivan = true;\n                  if (!poz_rezultati.includes(_this14.rezultati[0].rezultat.trim())) {\n                    poz_rezultati.unshift(_this14.rezultati[0].rezultat.trim());\n                  }\n\n                  break;\n              }\n            } else {\n              bakterioloski = false;\n\n              console.log(\"Nema bakterije.\");\n\n              _this14.SelectedBacteries = [];\n\n              switch (_this14.rezultati[0].rezultat_m.length) {\n                case 0:\n                  _this14.MicrobiologyScenario = \"MANBNoR\";\n                  neg_rezultati = _this14.rezultati[0].neg_description;\n                  poz_rezultati = _this14.rezultati[0].pos_description;\n\n                  break;\n\n                case 1:\n                  if (_this14.rezultati[0].rezultat_m[0].negativan === true) {\n                    _this14.MicrobiologyScenario = \"MANBNeR\";\n\n                    negativan = true;\n\n                    if (!neg_rezultati.includes(_this14.rezultati[0].rezultat.trim())) {\n                      neg_rezultati.unshift(_this14.rezultati[0].rezultat.trim());\n                    }\n                  } else {\n                    _this14.MicrobiologyScenario = \"MANBPoR\";\n\n                    pozitivan = true;\n\n                    if (!poz_rezultati.includes(_this14.rezultati[0].rezultat.trim())) {\n                      poz_rezultati.unshift(_this14.rezultati[0].rezultat.trim());\n                    }\n                  }\n\n                  break;\n\n                default:\n                  _this14.MicrobiologyScenario = \"Unknown\";\n\n                  break;\n              }\n            }\n\n            _this14.MicrobiologyResult = {\n              negative: negativan,\n              positive: pozitivan,\n              BUG: bakterioloski,\n              F_RESULT: _this14.rezultati[0].rezultat,\n              M_RESULT: [].concat(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray___default()(_this14.rezultati[0].rezultat_m)),\n              DefaultBacteries: [].concat(bakterijei),\n              RemainingBacteries: [].concat(bakterijed),\n              NegativeDescriptions: [].concat(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray___default()(neg_rezultati)),\n              PositiveDescriptions: [].concat(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray___default()(poz_rezultati))\n            };\n          } else {\n\n            _this14.MicrobiologyScenario = \"Unknown\";\n\n            _this14.MicrobiologyResult = {\n              negative: null,\n              positive: null,\n              BUG: null,\n              F_RESULT: \"\",\n              M_RESULT: [],\n              DefaultBacteries: [],\n              RemainingBacteries: [],\n              NegativeDescriptions: [],\n              PositiveDescriptions: []\n            };\n          }\n\n          _this14.rezultati.forEach(function (element) {\n            if (element.calculated) {\n              _this14.calculated = true;\n            }\n          });\n\n          _this14.sample = data;\n          _this14.show_table = true;\n        }\n      }).then(function () {\n        __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$emit(\"SetClientHeight\", data.sid);\n      });\n    },\n    SelectAnalyser: function SelectAnalyser(test) {\n      var _this15 = this;\n\n      __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"l\" /* http */].get(\"rezultati/odobravanje/analysers\" + \"?token=\" + this.$store.state.token + \"&site=\" + this.$store.state.site + \"&test=\" + test.labassay_id, {}).then(function (res) {\n        _this15.analysers = [];\n\n        res.data.anaassays.forEach(function (element) {\n          element.aparat.site = element.site;\n          _this15.analysers.push(element.aparat);\n        });\n\n        _this15.analysers.forEach(function (analyser) {\n          analyser.selected = false;\n        });\n\n        _this15.analiza = test;\n\n        _this15.rezultati.forEach(function (element) {\n          _this15.analysers.forEach(function (analyser) {\n            if (element.ime === _this15.analiza.ime && element.anaassay.aparat === analyser._id) {\n              analyser.selected = true;\n              _this15.analyser_selected = analyser;\n            }\n          });\n        });\n        _this15.$refs.staticModalAparati.open();\n      });\n    },\n    AnalyserSelected: function AnalyserSelected(analyser) {\n      var _this16 = this;\n\n      this.analyser = analyser;\n\n      if (this.analyser_selected._id === analyser._id) {\n        this.$refs.staticModalAparati.close();\n      } else {\n        __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"l\" /* http */].post(\"rezultati/odobravanje/references\", {\n          token: this.$store.state.token,\n          site: this.$store.state.site,\n          id: this.sample.sid,\n          pacijent: this.analyser_patient,\n          analiza: this.analiza,\n          analyser: this.analyser\n        }).then(function (res) {\n          if (res.data.success) {\n            var data = {};\n\n            _this16.uzorci.forEach(function (element) {\n              if (element.sid === _this16.$store.state.sid) {\n                data = element;\n              }\n            });\n\n            _this16.testovi = [];\n            _this16.rezultati = [];\n            _this16.analitiprikaz = [];\n            _this16.calculated = false;\n\n            var topcije = null;\n            topcije = __WEBPACK_IMPORTED_MODULE_11__data_izbornik_izbornik__[\"a\" /* default */].rez;\n\n            _this16.show_table = false;\n\n            __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"l\" /* http */].get(\"rezultati/showsingle/\" + data.sid + \"?token=\" + _this16.$store.state.token + \"&site=\" + _this16.$store.state.site, {}).then(function (res) {\n              var test = {};\n\n              if (res.data.data.length) {\n                res.data.data.sort(function (a, b) {\n                  return a.testovi.labassay.grupa + a.testovi.labassay.grouporder == b.testovi.labassay.grupa + b.testovi.labassay.grouporder ? 0 : +(a.testovi.labassay.grupa + a.testovi.labassay.grouporder > b.testovi.labassay.grupa + b.testovi.labassay.grouporder) || -1;\n                });\n\n                _this16.testovi = res.data.data;\n                _this16.analitiprikaz = res.data.multidata;\n\n                res.data.data.forEach(function (element) {\n                  test = {};\n                  test.realizovan = false;\n\n                  test.ime = element.testovi.labassay.naziv;\n                  test.test = element.testovi.labassay.sifra;\n                  test.analit = element.testovi.labassay.analit;\n                  test.IDE = element.testovi._id;\n                  test.labassay_id = element.testovi.labassay._id;\n\n                  test.multi_count = 0;\n                  test.multi_rezultati = [];\n\n                  res.data.multidata.forEach(function (multi) {\n                    if (multi.labassay._id === element.testovi.labassay._id) {\n                      test.multi_rezultati = multi.rezultat;\n                      test.multi_count = multi.rezultat[0].rezultat.length;\n                    }\n                  });\n\n                  test.kategorija = element.testovi.labassay.kategorija;\n                  test.analyser = element.testovi.labassay.analyser;\n                  test.multiparam = element.testovi.labassay.multiparam;\n                  test.vise = element.testovi.rezultat.length;\n                  test.calculated = element.testovi.labassay.calculated;\n                  test.manual = element.testovi.labassay.manual;\n\n                  test.select_options = eval(\"topcije.\" + element.testovi.interp.replace(\"%\", \"_\").replace(\"/\", \"_\").replace(\" \", \"_\").replace(/-/g, \"_\").replace(\"#\", \"_\").replace(/^\\d+/, \"\"));\n\n                  element.testovi.rezultat.forEach(function (rezultat) {\n                    test.sekcija = rezultat.anaassay.sekcija;\n                    test.rezultat = rezultat.rezultat_f;\n                    test.result = rezultat;\n                    test.anaassay = rezultat.anaassay;\n\n                    if (rezultat.rezultat_f != \"\") {\n                      test.realizovan = true;\n                    }\n\n                    test.unit = rezultat.jedinice_f;\n\n                    if (res.data.verificiran || res.data.status === \"ODOBREN\") {\n                      test.odobren = \"ODOBREN\";\n                      test.edit = false;\n                    } else {\n                      test.odobren != \"ODOBREN\";\n                      test.edit = true;\n                    }\n\n                    test.jedinica = rezultat.jedinice_f;\n                    test.id = rezultat._id;\n                    test.multidata = element.testovi.labassay.multi;\n                    test.rezultat_m = rezultat.rezultat_m;\n                    test.bakterije = element.testovi.labassay.bakterije;\n                    test.neg_description = element.testovi.labassay.neg_description;\n                    test.pos_description = element.testovi.labassay.pos_description;\n                    test.refSet = element.testovi.grupa;\n                    test.dRef = element.testovi.refd;\n                    test.gRef = element.testovi.refg;\n                    test.interp = element.testovi.interp;\n                    test.extend = element.testovi.extend;\n                    test.retest = element.testovi.retest;\n                    test.interpretacija = element.testovi.labassay.interpretacija;\n                  });\n\n                  if (test.select_options != undefined && !test.select_options.includes(test.rezultat)) {\n                    test.select_options.unshift(test.rezultat);\n                  }\n                  _this16.rezultati.push(test);\n                });\n\n                _this16.rezultati.forEach(function (element) {\n                  if (element.calculated) {\n                    _this16.calculated = true;\n                  }\n                });\n\n                _this16.sample = data;\n                _this16.show_table = true;\n              }\n            });\n            _this16.$refs.staticModalAparati.close();\n          } else {}\n        });\n      }\n    },\n    Reference: function Reference(event, test) {\n      this.reference = {\n        sample: this.$store.state.sid,\n        labassay: test.labassay_id,\n        naziv: test.ime,\n        opis: test.analit,\n        dref: test.dRef,\n        gref: test.gRef,\n        interp: test.interp,\n        extend: test.extend,\n        jedinica: test.jedinica\n      };\n      this.$refs.staticModalReference.open();\n    },\n    BarcodePrint: function BarcodePrint(data) {\n      var _this17 = this;\n\n      var link = __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"k\" /* barcode */] + data.sid + \".png\";\n\n      __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"l\" /* http */].get(\"uzorci/barcode/\" + data.sid + \"?token=\" + this.$store.state.token + \"&site=\" + this.$store.state.site, {}).then(function (res) {\n        printEPL(res.data.name + \" \" + res.data.surname, _this17.sid, res.data.pacijentRBr, res.data.godiste, res.data.datum, link, res.data.code, _this17.$store.state.site, undefined, undefined);\n      });\n    },\n    SaveResults: function SaveResults(rezultati, from) {\n      var _this18 = this;\n\n      this.isLoading = true;\n\n      if (!this.MicrobiologySample) {\n        rezultati.forEach(function (element) {\n          element.rezultat = element.rezultat.replace(/,/g, \".\");\n        });\n\n        rezultati[0].rezultat_m = [];\n      }\n\n      __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"l\" /* http */].post(\"/rezultati/odobravanje/sacuvaj/\" + this.$store.state.sid, {\n        email: this.$store.state.userId,\n        token: this.$store.state.token,\n        site: this.$store.state.site,\n        rezultati: rezultati\n      }).then(function (res) {\n        __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"l\" /* http */].get(\"rezultati/odobravanje/samples/\" + _this18.$route.params.patient + \"/\" + _this18.$route.params.id + \"?token=\" + _this18.$store.state.token + \"&site=\" + _this18.$store.state.site + \"&date=\" + _this18.$route.query.date, {}).then(function (res) {\n          _this18.uzorci = [];\n\n          res.data.results.forEach(function (element) {\n            var check = 0;\n            var zaprimljen = 0;\n            var realizovan = 0;\n\n            if (element.verificiran) {\n              var status_uzorka = \"VERIFICIRAN\";\n            } else {\n              var status_uzorka = element.status;\n            }\n\n            element.rezultati.forEach(function (test) {\n              check++;\n\n              if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n                zaprimljen++;\n              }\n\n              if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n                realizovan++;\n              }\n\n              if (check === element.rezultati.length) {\n\n                if (status_uzorka === \"VERIFICIRAN\") {\n                  _this18.uzorci.push({\n                    sid: element.id,\n                    status: \"VERIFICIRAN\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else if (status_uzorka === \"ODOBREN\") {\n                  _this18.uzorci.push({\n                    sid: element.id,\n                    status: \"ODOBREN\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else if (zaprimljen < 1) {\n                  _this18.uzorci.push({\n                    sid: element.id,\n                    status: \"REALIZOVAN\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else if (realizovan < 1) {\n                  var stat = \"ZAPRIMLJEN\";\n                  if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                    if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                      stat = \"REALIZOVAN\";\n                    }\n                  }\n                  _this18.uzorci.push({\n                    sid: element.id,\n                    status: stat,\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else {\n                  _this18.uzorci.push({\n                    sid: element.id,\n                    status: \"U OBRADI\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                }\n              }\n            });\n          });\n\n          _this18.uzorci = _this18.uzorci.sort(function (a, b) {\n            return a.sid.localeCompare(b.sid, undefined, {\n              numeric: true,\n              sensitivity: \"base\"\n            });\n          });\n\n          _this18.isLoading = false;\n        });\n      });\n    },\n    DeletedSample: function DeletedSample(data) {\n      var _this19 = this;\n\n      this.uzorci.forEach(function (element) {\n        if (element.sid === data) {\n          element.removed = false;\n        }\n      });\n\n      for (var i = 0; i < this.uzorci.length; i++) {\n        if (this.uzorci[i].sid === data) {\n          this.uzorci.splice(i, 1);\n          break;\n        }\n      }\n\n      if (this.uzorci.length) {\n        this.show = false;\n        this.main = false;\n        __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"l\" /* http */].get(\"rezultati/odobravanje/samples/\" + this.$route.params.patient + \"/\" + this.$route.params.id + \"?token=\" + this.$store.state.token + \"&site=\" + this.$store.state.site + \"&date=\" + this.$route.query.date, {}).then(function (res) {\n          _this19.count = res.data.results.length;\n          _this19.approved = 0;\n\n          _this19.odobren = true;\n          _this19.verificiran = true;\n\n          _this19.resdata = {};\n\n          _this19.resdata = res.data.results;\n\n          res.data.results.forEach(function (element) {\n            if (element.status === \"ODOBREN\" || element.status === \"VERIFICIRAN\") {\n              _this19.approved++;\n            }\n            if (element.status != \"ODOBREN\" && element.status != \"VERIFICIRAN\") {\n              _this19.odobren = false;\n            }\n            if (!element.verificiran) {\n              _this19.verificiran = false;\n            }\n          });\n\n          if (_this19.count == _this19.approved) {\n            var report = [];\n\n            _this19.uzorci.forEach(function (element) {\n              report.push(element._id);\n            });\n\n            __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"l\" /* http */].post(\"nalazi/create\", {\n              token: _this19.$store.state.token,\n              site: _this19.$store.state.site,\n              type: \"multi\",\n              uzorci: _this19.uzorci,\n              samples: report,\n              timestamp: _this19.timestamp,\n              napomena: \"\",\n              status: false,\n              idNalaza: \"\",\n              location: \"/\",\n              klijent: _this19.klijent,\n              naziv: _this19.timestamp\n            }).then(function (res) {\n              if (res.data.success) {\n                __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"l\" /* http */].post(\"nalazi/memo\", {\n                  token: _this19.$store.state.token,\n                  site: _this19.$store.state.site,\n                  timestamp: _this19.timestamp,\n                  height: res.data.memo,\n                  location: \"/\",\n                  naziv: _this19.timestamp\n                }).then(function (res) {\n                  _this19.final_pdf = true;\n\n                  _this19.uzorci = [];\n\n                  _this19.resdata.forEach(function (element) {\n                    var check = 0;\n                    var zaprimljen = 0;\n                    var realizovan = 0;\n\n                    if (element.verificiran) {\n                      var status_uzorka = \"VERIFICIRAN\";\n                    } else {\n                      var status_uzorka = element.status;\n                    }\n\n                    element.rezultati.forEach(function (test) {\n                      check++;\n\n                      if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n                        zaprimljen++;\n                      }\n\n                      if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n                        realizovan++;\n                      }\n\n                      if (check === element.rezultati.length) {\n\n                        if (status_uzorka === \"VERIFICIRAN\") {\n                          _this19.uzorci.push({\n                            sid: element.id,\n                            status: \"VERIFICIRAN\",\n                            pdf_exists: element.pdf_exists,\n                            tip: element.sample.tip,\n                            _id: element._id,\n                            removed: false\n                          });\n                        } else if (status_uzorka === \"ODOBREN\") {\n                          _this19.uzorci.push({\n                            sid: element.id,\n                            status: \"ODOBREN\",\n                            pdf_exists: element.pdf_exists,\n                            tip: element.sample.tip,\n                            _id: element._id,\n                            removed: false\n                          });\n                        } else if (zaprimljen < 1) {\n                          _this19.uzorci.push({\n                            sid: element.id,\n                            status: \"REALIZOVAN\",\n                            pdf_exists: element.pdf_exists,\n                            tip: element.sample.tip,\n                            _id: element._id,\n                            removed: false\n                          });\n                        } else if (realizovan < 1) {\n                          var stat = \"ZAPRIMLJEN\";\n                          if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                            if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                              stat = \"REALIZOVAN\";\n                            }\n                          }\n                          _this19.uzorci.push({\n                            sid: element.id,\n                            status: stat,\n                            pdf_exists: element.pdf_exists,\n                            tip: element.sample.tip,\n                            _id: element._id,\n                            removed: false\n                          });\n                        } else {\n                          _this19.uzorci.push({\n                            sid: element.id,\n                            status: \"U OBRADI\",\n                            pdf_exists: element.pdf_exists,\n                            tip: element.sample.tip,\n                            _id: element._id,\n                            removed: false\n                          });\n                        }\n                      }\n                    });\n                  });\n\n                  _this19.uzorci = _this19.uzorci.sort(function (a, b) {\n                    return a.sid.localeCompare(b.sid, undefined, {\n                      numeric: true,\n                      sensitivity: \"base\"\n                    });\n                  });\n\n                  _this19.main = true;\n                  _this19.show = true;\n                });\n              }\n            });\n          } else {\n            _this19.uzorci = [];\n\n            res.data.results.forEach(function (element) {\n              var check = 0;\n              var zaprimljen = 0;\n              var realizovan = 0;\n\n              if (element.verificiran) {\n                var status_uzorka = \"VERIFICIRAN\";\n              } else {\n                var status_uzorka = element.status;\n              }\n\n              element.rezultati.forEach(function (test) {\n                check++;\n\n                if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n                  zaprimljen++;\n                }\n\n                if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n                  realizovan++;\n                }\n\n                if (check === element.rezultati.length) {\n\n                  if (status_uzorka === \"VERIFICIRAN\") {\n                    _this19.uzorci.push({\n                      sid: element.id,\n                      status: \"VERIFICIRAN\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else if (status_uzorka === \"ODOBREN\") {\n                    _this19.uzorci.push({\n                      sid: element.id,\n                      status: \"ODOBREN\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else if (zaprimljen < 1) {\n                    _this19.uzorci.push({\n                      sid: element.id,\n                      status: \"REALIZOVAN\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else if (realizovan < 1) {\n                    var stat = \"ZAPRIMLJEN\";\n                    if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                      if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                        stat = \"REALIZOVAN\";\n                      }\n                    }\n                    _this19.uzorci.push({\n                      sid: element.id,\n                      status: stat,\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else {\n                    _this19.uzorci.push({\n                      sid: element.id,\n                      status: \"U OBRADI\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  }\n                }\n              });\n            });\n\n            _this19.uzorci = _this19.uzorci.sort(function (a, b) {\n              return a.sid.localeCompare(b.sid, undefined, {\n                numeric: true,\n                sensitivity: \"base\"\n              });\n            });\n\n            _this19.main = true;\n            _this19.show = true;\n          }\n        });\n      } else {\n        __WEBPACK_IMPORTED_MODULE_4__router__[\"a\" /* default */].push(\"/obrada/pregled\");\n      }\n    },\n    EditSample: function EditSample(data) {\n      var _this20 = this;\n\n      document.getElementById(data).click();\n\n      __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"l\" /* http */].get(\"rezultati/odobravanje/samples/\" + this.$route.params.patient + \"/\" + this.$route.params.id + \"?token=\" + this.$store.state.token + \"&site=\" + this.$store.state.site + \"&date=\" + this.$route.query.date, {}).then(function (res) {\n        _this20.uzorci = [];\n\n        res.data.results.forEach(function (element) {\n          var check = 0;\n          var zaprimljen = 0;\n          var realizovan = 0;\n\n          if (element.verificiran) {\n            var status_uzorka = \"VERIFICIRAN\";\n          } else {\n            var status_uzorka = element.status;\n          }\n\n          element.rezultati.forEach(function (test) {\n            check++;\n\n            if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n              zaprimljen++;\n            }\n\n            if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n              realizovan++;\n            }\n\n            if (check === element.rezultati.length) {\n\n              if (status_uzorka === \"VERIFICIRAN\") {\n                _this20.uzorci.push({\n                  sid: element.id,\n                  status: \"VERIFICIRAN\",\n                  pdf_exists: element.pdf_exists,\n                  tip: element.sample.tip,\n                  _id: element._id,\n                  removed: false\n                });\n              } else if (status_uzorka === \"ODOBREN\") {\n                _this20.uzorci.push({\n                  sid: element.id,\n                  status: \"ODOBREN\",\n                  pdf_exists: element.pdf_exists,\n                  tip: element.sample.tip,\n                  _id: element._id,\n                  removed: false\n                });\n              } else if (zaprimljen < 1) {\n                _this20.uzorci.push({\n                  sid: element.id,\n                  status: \"REALIZOVAN\",\n                  pdf_exists: element.pdf_exists,\n                  tip: element.sample.tip,\n                  _id: element._id,\n                  removed: false\n                });\n              } else if (realizovan < 1) {\n                var stat = \"ZAPRIMLJEN\";\n                if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                  if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                    stat = \"REALIZOVAN\";\n                  }\n                }\n                _this20.uzorci.push({\n                  sid: element.id,\n                  status: stat,\n                  pdf_exists: element.pdf_exists,\n                  tip: element.sample.tip,\n                  _id: element._id,\n                  removed: false\n                });\n              } else {\n                _this20.uzorci.push({\n                  sid: element.id,\n                  status: \"U OBRADI\",\n                  pdf_exists: element.pdf_exists,\n                  tip: element.sample.tip,\n                  _id: element._id,\n                  removed: false\n                });\n              }\n            }\n          });\n        });\n\n        _this20.uzorci = _this20.uzorci.sort(function (a, b) {\n          return a.sid.localeCompare(b.sid, undefined, {\n            numeric: true,\n            sensitivity: \"base\"\n          });\n        });\n      }).then(function () {\n        setTimeout(function () {\n          document.getElementById(_this20.$store.state.sid).click();\n        }, 500);\n      });\n    },\n\n\n    RetestEnable: function RetestEnable(event) {\n\n      this.rezultati.forEach(function (element) {\n        if (element.test === event.target.id) {\n          element.retest = true;\n        }\n      });\n\n      this.save_retest = true;\n    },\n\n    RetestDisable: function RetestDisable(event) {\n\n      this.rezultati.forEach(function (element) {\n        if (element.test === event.target.id) {\n          element.retest = false;\n        }\n      });\n\n      this.save_retest = true;\n    },\n\n    MultiGet: function MultiGet(event, naziv, ana, rezultat, odobren) {\n      var _this21 = this;\n\n      this.naslov = \"Rezultati testa: \" + naziv + \" (\" + ana + \")\";\n      this.analiti = [];\n      var single = {};\n      var i = 0;\n      var kontrola = false;\n\n      this.uzorci.forEach(function (element) {\n        if (element.sid === _this21.$store.state.sid) {\n          _this21.check = element.status;\n        }\n      });\n\n      this.analitiprikaz.forEach(function (element) {\n        i++;\n        single = {};\n\n        var opcije = null;\n        opcije = __WEBPACK_IMPORTED_MODULE_11__data_izbornik_izbornik__[\"a\" /* default */].data;\n\n        if (event.target.id === element.labassay._id) {\n          element.rezultat.forEach(function (analit) {\n            single.kod = analit.rezultat[0].module_sn;\n\n            element.labassay.multiparam.forEach(function (mparam) {\n              if (mparam.kod === single.kod) {\n                if (mparam.izbornik.length) {\n                  single.select_options = mparam.izbornik;\n                } else {\n                  single.select_options = undefined;\n                }\n              }\n            });\n\n            var tmpOptionsAna = [];\n            if (single.select_options != undefined) {\n              tmpOptionsAna = single.select_options.slice();\n              single.select_options = tmpOptionsAna.slice();\n            }\n\n            if (analit.rezultat[0].rezultat_f.trim() != \"\" && single.select_options != undefined && !single.select_options.includes(analit.rezultat[0].rezultat_f)) {\n              if (single.kod != \"s03\" && single.kod != \"s04\" && single.kod != \"s08\" && single.kod != \"s09\") {\n                single.select_options.unshift(analit.rezultat[0].rezultat_f);\n              }\n            }\n\n            single.refd = analit.refd;\n            single.labID = event.target.id;\n            single.refg = analit.refg;\n            single.interp = analit.interp;\n            single.interpretacija = null;\n            single.nazivTesta = naziv;\n            single.grupa = analit.grupa;\n            single.naziv = analit.rezultat[0].sn;\n            single.opis = analit.rezultat[0].dilucija;\n            single.jedinica = analit.rezultat[0].jedinice_f;\n            single.rezultat = analit.rezultat[0].rezultat_f;\n            single.flag = analit.rezultat[0].rezultat_i;\n            single.manual = element.labassay.manual;\n            single.odobren = odobren;\n\n            if (single.select_options != undefined && (single.kod === \"s03\" || single.kod === \"s04\" || single.kod === \"s08\" || single.kod === \"s09\")) {\n              single.rezultat_multiple = single.rezultat.split(\";\");\n              for (var i = single.rezultat_multiple.length - 1; i >= 0; i--) {\n                single.rezultat_multiple[i] = single.rezultat_multiple[i].trim();\n                if (single.rezultat_multiple[i] === \"\") {\n                  single.rezultat_multiple.splice(i, 1);\n                }\n              }\n            } else {\n              single.rezultat_multiple = [];\n            }\n\n            if (_this21.check === \"ODOBREN\" || _this21.check === \"VERIFICIRAN\") {\n              single.edit = false;\n            } else {\n              single.edit = true;\n            }\n\n            if (ana === \"Opšti pregled urina\" && _this21.check != \"ODOBREN\" && _this21.check != \"VERIFICIRAN\") {\n              if (analit.rezultat[0].rezultat_f === \"\" && single.select_options != undefined) {\n                single.rezultat = single.select_options[1];\n              }\n            }\n\n            single.analit = analit.rezultat[0].anaassay;\n            single.izbor = ana;\n\n            if (single.kod === \"o12\" && single.rezultat.trim() === \"\") {\n              single.rezultat = \"16\";\n            }\n\n            _this21.analiti.push(single);\n\n            single = {};\n          });\n        }\n\n        if (i === _this21.analitiprikaz.length) {\n          kontrola = true;\n        }\n      });\n\n      if (kontrola) {\n        this.$refs.largeModalMulti.open();\n      }\n    },\n\n    Interpretacija: function Interpretacija(test, rezultat, jedinica, refd, refg, site, interp, extend, spec) {\n      return Object(__WEBPACK_IMPORTED_MODULE_10__functions_reference_js__[\"Interpretation\"])(test, rezultat, jedinica, refd, refg, site, interp, extend, spec);\n    },\n\n    MailDialog: function MailDialog() {\n      this.$refs.staticModalSendMail.open();\n    },\n    SendMail: function SendMail(email) {\n      var _this22 = this;\n\n      this.isLoading = true;\n\n      __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"l\" /* http */].post(\"nalazi/mail\", {\n        token: this.$store.state.token,\n        site: this.$store.state.site,\n        email: email,\n        timestamp: this.timestamp,\n        location: \"/\",\n        naziv: this.timestamp\n      }).then(function (res) {\n        _this22.isLoading = false;\n\n        if (res.data.success) {\n          _this22.toastText = \"Nalaz uspješno poslan.\";\n          _this22.toastIcon = \"fa-check\";\n          _this22.toastPosition = \"top-right\";\n          _this22.className = \"vuestic-toast-primary\";\n\n          _this22.showToast(_this22.toastText, {\n            icon: _this22.toastIcon,\n            position: _this22.toastPosition,\n            duration: 2500,\n            fullWidth: _this22.false,\n            className: _this22.className\n          });\n\n          if (_this22.email_changed) {\n            __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"l\" /* http */].post(\"pacijenti/detalji/update/\" + _this22.pacijent, {\n              email: email.trim(),\n              token: _this22.$store.state.token,\n              site: _this22.$store.state.site\n            }).then(function (res) {});\n          }\n        } else {\n          _this22.toastText = \"Greška prilikom slanja nalaza!\";\n          _this22.toastIcon = \"fa-remove\";\n          _this22.toastPosition = \"top-right\";\n          _this22.className = \"vuestic-toast-danger\";\n\n          _this22.showToast(_this22.toastText, {\n            icon: _this22.toastIcon,\n            position: _this22.toastPosition,\n            duration: 2500,\n            fullWidth: _this22.false,\n            className: _this22.className\n          });\n        }\n      });\n    },\n    SaveMultiResults: function SaveMultiResults(analiti, data) {\n      var _this23 = this;\n\n      analiti.forEach(function (analit) {\n        analit.rezultat = analit.rezultat.replace(/,/g, \".\");\n\n        if (analit.rezultat_multiple.length) {\n          analit.rezultat = \"\";\n\n          analit.rezultat_multiple.forEach(function (element) {\n            if (element === \"\") {} else {\n              analit.rezultat = analit.rezultat + element + \";\";\n            }\n          });\n\n          analit.rezultat = analit.rezultat.trim().slice(0, analit.rezultat.length - 1);\n        }\n      });\n\n      this.isLoading = true;\n\n      __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"l\" /* http */].post(\"/rezultati/odobravanje/analiti/\" + this.$store.state.sid, {\n        analiti: analiti,\n        site: this.$store.state.site,\n        token: this.$store.state.token\n      }).then(function (res) {\n        __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"l\" /* http */].get(\"rezultati/odobravanje/samples/\" + _this23.$route.params.patient + \"/\" + _this23.$route.params.id + \"?token=\" + _this23.$store.state.token + \"&site=\" + _this23.$store.state.site + \"&date=\" + _this23.$route.query.date, {}).then(function (res) {\n          _this23.uzorci = [];\n\n          res.data.results.forEach(function (element) {\n            var check = 0;\n            var zaprimljen = 0;\n            var realizovan = 0;\n\n            if (element.verificiran) {\n              var status_uzorka = \"VERIFICIRAN\";\n            } else {\n              var status_uzorka = element.status;\n            }\n\n            element.rezultati.forEach(function (test) {\n              check++;\n\n              if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n                zaprimljen++;\n              }\n\n              if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n                realizovan++;\n              }\n\n              if (check === element.rezultati.length) {\n\n                if (status_uzorka === \"VERIFICIRAN\") {\n                  _this23.uzorci.push({\n                    sid: element.id,\n                    status: \"VERIFICIRAN\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else if (status_uzorka === \"ODOBREN\") {\n                  _this23.uzorci.push({\n                    sid: element.id,\n                    status: \"ODOBREN\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else if (zaprimljen < 1) {\n                  _this23.uzorci.push({\n                    sid: element.id,\n                    status: \"REALIZOVAN\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else if (realizovan < 1) {\n                  var stat = \"ZAPRIMLJEN\";\n                  if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                    if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                      stat = \"REALIZOVAN\";\n                    }\n                  }\n                  _this23.uzorci.push({\n                    sid: element.id,\n                    status: stat,\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else {\n                  _this23.uzorci.push({\n                    sid: element.id,\n                    status: \"U OBRADI\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                }\n              }\n            });\n          });\n\n          _this23.uzorci = _this23.uzorci.sort(function (a, b) {\n            return a.sid.localeCompare(b.sid, undefined, {\n              numeric: true,\n              sensitivity: \"base\"\n            });\n          });\n\n          _this23.isLoading = false;\n        });\n      }).then(function (res) {\n        var data = {};\n\n        _this23.uzorci.forEach(function (element) {\n          if (element.sid === _this23.$store.state.sid) {\n            data = element;\n          }\n        });\n\n        _this23.testovi = [];\n        _this23.rezultati = [];\n        _this23.analitiprikaz = [];\n        _this23.calculated = false;\n\n        var topcije = null;\n        topcije = __WEBPACK_IMPORTED_MODULE_11__data_izbornik_izbornik__[\"a\" /* default */].rez;\n\n        _this23.show_table = false;\n\n        __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"l\" /* http */].get(\"rezultati/showsingle/\" + data.sid + \"?token=\" + _this23.$store.state.token + \"&site=\" + _this23.$store.state.site, {}).then(function (res) {\n          var test = {};\n\n          if (res.data.data.length) {\n            res.data.data.sort(function (a, b) {\n              return a.testovi.labassay.grupa + a.testovi.labassay.grouporder == b.testovi.labassay.grupa + b.testovi.labassay.grouporder ? 0 : +(a.testovi.labassay.grupa + a.testovi.labassay.grouporder > b.testovi.labassay.grupa + b.testovi.labassay.grouporder) || -1;\n            });\n\n            _this23.testovi = res.data.data;\n            _this23.analitiprikaz = res.data.multidata;\n\n            res.data.data.forEach(function (element) {\n              test = {};\n              test.realizovan = false;\n\n              test.ime = element.testovi.labassay.naziv;\n              test.test = element.testovi.labassay.sifra;\n              test.analit = element.testovi.labassay.analit;\n              test.IDE = element.testovi._id;\n              test.labassay_id = element.testovi.labassay._id;\n\n              test.multi_count = 0;\n              test.multi_rezultati = [];\n\n              res.data.multidata.forEach(function (multi) {\n                if (multi.labassay._id === element.testovi.labassay._id) {\n                  test.multi_rezultati = multi.rezultat;\n                  test.multi_count = multi.rezultat[0].rezultat.length;\n                }\n              });\n\n              test.kategorija = element.testovi.labassay.kategorija;\n              test.analyser = element.testovi.labassay.analyser;\n              test.multiparam = element.testovi.labassay.multiparam;\n              test.vise = element.testovi.rezultat.length;\n              test.calculated = element.testovi.labassay.calculated;\n              test.manual = element.testovi.labassay.manual;\n\n              test.select_options = eval(\"topcije.\" + element.testovi.interp.replace(\"%\", \"_\").replace(\"/\", \"_\").replace(\" \", \"_\").replace(/-/g, \"_\").replace(\"#\", \"_\").replace(/^\\d+/, \"\"));\n\n              element.testovi.rezultat.forEach(function (rezultat) {\n                test.sekcija = rezultat.anaassay.sekcija;\n                test.rezultat = rezultat.rezultat_f;\n                test.result = rezultat;\n                test.anaassay = rezultat.anaassay;\n\n                if (rezultat.rezultat_f != \"\") {\n                  test.realizovan = true;\n                }\n\n                test.unit = rezultat.jedinice_f;\n\n                if (res.data.verificiran || res.data.status === \"ODOBREN\") {\n                  test.odobren = \"ODOBREN\";\n                  test.edit = false;\n                } else {\n                  test.odobren != \"ODOBREN\";\n                  test.edit = true;\n                }\n\n                test.jedinica = rezultat.jedinice_f;\n                test.id = rezultat._id;\n                test.multidata = element.testovi.labassay.multi;\n                test.rezultat_m = rezultat.rezultat_m;\n                test.bakterije = element.testovi.labassay.bakterije;\n                test.neg_description = element.testovi.labassay.neg_description;\n                test.pos_description = element.testovi.labassay.pos_description;\n                test.refSet = element.testovi.grupa;\n                test.dRef = element.testovi.refd;\n                test.gRef = element.testovi.refg;\n                test.interp = element.testovi.interp;\n                test.extend = element.testovi.extend;\n                test.retest = element.testovi.retest;\n                test.interpretacija = element.testovi.labassay.interpretacija;\n              });\n\n              if (test.select_options != undefined && !test.select_options.includes(test.rezultat)) {\n                test.select_options.unshift(test.rezultat);\n              }\n              _this23.rezultati.push(test);\n            });\n\n            _this23.rezultati.forEach(function (element) {\n              if (element.calculated) {\n                _this23.calculated = true;\n              }\n            });\n\n            _this23.sample = data;\n            _this23.show_table = true;\n          }\n        });\n      });\n    },\n\n\n    Calculate: function Calculate(event, id, ime, edited) {\n      var _this24 = this;\n\n      __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"l\" /* http */].post(\"/rezultati/odobravanje/calculate/\" + this.$store.state.sid, {\n        _id: id,\n        token: this.$store.state.token,\n        site: this.$store.state.site,\n        ime: ime,\n        pid: this.pid\n      }).then(function (res) {\n        __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"l\" /* http */].get(\"rezultati/odobravanje/samples/\" + _this24.$route.params.patient + \"/\" + _this24.$route.params.id + \"?token=\" + _this24.$store.state.token + \"&site=\" + _this24.$store.state.site + \"&date=\" + _this24.$route.query.date, {}).then(function (res) {\n          _this24.uzorci = [];\n\n          res.data.results.forEach(function (element) {\n            var check = 0;\n            var zaprimljen = 0;\n            var realizovan = 0;\n\n            if (element.verificiran) {\n              var status_uzorka = \"VERIFICIRAN\";\n            } else {\n              var status_uzorka = element.status;\n            }\n\n            element.rezultati.forEach(function (test) {\n              check++;\n\n              if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n                zaprimljen++;\n              }\n\n              if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n                realizovan++;\n              }\n\n              if (check === element.rezultati.length) {\n\n                if (status_uzorka === \"VERIFICIRAN\") {\n                  _this24.uzorci.push({\n                    sid: element.id,\n                    status: \"VERIFICIRAN\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else if (status_uzorka === \"ODOBREN\") {\n                  _this24.uzorci.push({\n                    sid: element.id,\n                    status: \"ODOBREN\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else if (zaprimljen < 1) {\n                  _this24.uzorci.push({\n                    sid: element.id,\n                    status: \"REALIZOVAN\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else if (realizovan < 1) {\n                  var stat = \"ZAPRIMLJEN\";\n                  if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                    if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                      stat = \"REALIZOVAN\";\n                    }\n                  }\n                  _this24.uzorci.push({\n                    sid: element.id,\n                    status: stat,\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else {\n                  _this24.uzorci.push({\n                    sid: element.id,\n                    status: \"U OBRADI\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                }\n              }\n            });\n          });\n\n          _this24.uzorci = _this24.uzorci.sort(function (a, b) {\n            return a.sid.localeCompare(b.sid, undefined, {\n              numeric: true,\n              sensitivity: \"base\"\n            });\n          });\n        });\n      }).then(function (res) {\n        var data = {};\n\n        _this24.uzorci.forEach(function (element) {\n          if (element.sid === _this24.$store.state.sid) {\n            data = element;\n          }\n        });\n\n        _this24.testovi = [];\n        _this24.rezultati = [];\n        _this24.analitiprikaz = [];\n        _this24.calculated = false;\n\n        var topcije = null;\n        topcije = __WEBPACK_IMPORTED_MODULE_11__data_izbornik_izbornik__[\"a\" /* default */].rez;\n\n        __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"l\" /* http */].get(\"rezultati/showsingle/\" + data.sid + \"?token=\" + _this24.$store.state.token + \"&site=\" + _this24.$store.state.site, {}).then(function (res) {\n          var test = {};\n\n          if (res.data.data.length) {\n            res.data.data.sort(function (a, b) {\n              return a.testovi.labassay.grupa + a.testovi.labassay.grouporder == b.testovi.labassay.grupa + b.testovi.labassay.grouporder ? 0 : +(a.testovi.labassay.grupa + a.testovi.labassay.grouporder > b.testovi.labassay.grupa + b.testovi.labassay.grouporder) || -1;\n            });\n\n            _this24.testovi = res.data.data;\n            _this24.analitiprikaz = res.data.multidata;\n\n            res.data.data.forEach(function (element) {\n              test = {};\n              test.realizovan = false;\n\n              test.ime = element.testovi.labassay.naziv;\n              test.test = element.testovi.labassay.sifra;\n              test.analit = element.testovi.labassay.analit;\n              test.IDE = element.testovi._id;\n              test.labassay_id = element.testovi.labassay._id;\n\n              test.multi_count = 0;\n              test.multi_rezultati = [];\n\n              res.data.multidata.forEach(function (multi) {\n                if (multi.labassay._id === element.testovi.labassay._id) {\n                  test.multi_rezultati = multi.rezultat;\n                  test.multi_count = multi.rezultat[0].rezultat.length;\n                }\n              });\n\n              test.kategorija = element.testovi.labassay.kategorija;\n              test.analyser = element.testovi.labassay.analyser;\n              test.multiparam = element.testovi.labassay.multiparam;\n              test.vise = element.testovi.rezultat.length;\n              test.calculated = element.testovi.labassay.calculated;\n              test.manual = element.testovi.labassay.manual;\n\n              test.select_options = eval(\"topcije.\" + element.testovi.interp.replace(\"%\", \"_\").replace(\"/\", \"_\").replace(\" \", \"_\").replace(/-/g, \"_\").replace(\"#\", \"_\").replace(/^\\d+/, \"\"));\n\n              element.testovi.rezultat.forEach(function (rezultat) {\n                test.sekcija = rezultat.anaassay.sekcija;\n                test.rezultat = rezultat.rezultat_f;\n                test.result = rezultat;\n                test.anaassay = rezultat.anaassay;\n\n                if (rezultat.rezultat_f != \"\") {\n                  test.realizovan = true;\n                }\n\n                test.unit = rezultat.jedinice_f;\n\n                if (res.data.verificiran || res.data.status === \"ODOBREN\") {\n                  test.odobren = \"ODOBREN\";\n                  test.edit = false;\n                } else {\n                  test.odobren != \"ODOBREN\";\n                  test.edit = true;\n                }\n\n                test.jedinica = rezultat.jedinice_f;\n                test.id = rezultat._id;\n                test.multidata = element.testovi.labassay.multi;\n                test.rezultat_m = rezultat.rezultat_m;\n                test.bakterije = element.testovi.labassay.bakterije;\n                test.neg_description = element.testovi.labassay.neg_description;\n                test.pos_description = element.testovi.labassay.pos_description;\n                test.refSet = element.testovi.grupa;\n                test.dRef = element.testovi.refd;\n                test.gRef = element.testovi.refg;\n                test.interp = element.testovi.interp;\n                test.extend = element.testovi.extend;\n                test.retest = element.testovi.retest;\n                test.interpretacija = element.testovi.labassay.interpretacija;\n              });\n\n              if (test.select_options != undefined && !test.select_options.includes(test.rezultat)) {\n                test.select_options.unshift(test.rezultat);\n              }\n              _this24.rezultati.push(test);\n            });\n\n            _this24.rezultati.forEach(function (element) {\n              if (element.calculated) {\n                _this24.calculated = true;\n              }\n            });\n\n            _this24.sample = data;\n          }\n        });\n      });\n    },\n\n    Approve: function Approve(rezultati) {\n      var _this25 = this;\n\n      this.rezultati.forEach(function (element) {\n        element.edit = false;\n      });\n\n      this.calculated = false;\n\n      if (!this.MicrobiologySample) {\n        rezultati.forEach(function (element) {\n          element.rezultat = element.rezultat.replace(/,/g, \".\");\n        });\n\n        rezultati[0].rezultat_m = [];\n      }\n\n      __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"l\" /* http */].post(\"/rezultati/odobravanje/sacuvaj/\" + this.$store.state.sid, {\n        email: this.$store.state.userId,\n        token: this.$store.state.token,\n        site: this.$store.state.site,\n        rezultati: rezultati\n      }).then(function (res) {\n        _this25.isLoading = true;\n\n        __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"l\" /* http */].post(\"/rezultati/odobravanje/odobri/\" + _this25.$store.state.sid, {\n          testovi: rezultati,\n          site: _this25.$store.state.site,\n          token: _this25.$store.state.token\n        }).then(function (res) {\n          _this25.sample.status = \"ODOBREN\";\n\n          _this25.report = {};\n\n          _this25.uzorci.forEach(function (element) {\n            if (element.sid === _this25.$store.state.sid) {\n              _this25.report = element;\n            }\n          });\n\n          var sample = [];\n          sample.push(_this25.report._id);\n\n          __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"l\" /* http */].post(\"nalazi/create\", {\n            token: _this25.$store.state.token,\n            site: _this25.$store.state.site,\n            type: \"single\",\n            uzorci: _this25.uzorci,\n            samples: sample,\n            timestamp: _this25.timestamp,\n            napomena: \"\",\n            status: false,\n            idNalaza: \"\",\n            location: \"/samples\",\n            klijent: _this25.klijent,\n            naziv: _this25.report.sid\n          }).then(function (res) {\n            __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"l\" /* http */].get(\"rezultati/odobravanje/samples/\" + _this25.$route.params.patient + \"/\" + _this25.$route.params.id + \"?token=\" + _this25.$store.state.token + \"&site=\" + _this25.$store.state.site + \"&date=\" + _this25.$route.query.date, {}).then(function (res) {\n              _this25.final_pdf = res.data.final_pdf;\n\n              _this25.count = res.data.results.length;\n              _this25.approved = 0;\n\n              _this25.odobren = true;\n              _this25.verificiran = true;\n\n              res.data.results.forEach(function (element) {\n                if (element.status === \"ODOBREN\" || element.status === \"VERIFICIRAN\") {\n                  _this25.approved++;\n                }\n                if (element.status != \"ODOBREN\" && element.status != \"VERIFICIRAN\") {\n                  _this25.odobren = false;\n                }\n                if (!element.verificiran) {\n                  _this25.verificiran = false;\n                }\n              });\n\n              var response = res.data.results;\n\n              if (_this25.count == _this25.approved) {\n\n                var report = [];\n\n                _this25.uzorci.forEach(function (element) {\n                  report.push(element._id);\n                });\n\n                __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"l\" /* http */].post(\"nalazi/create\", {\n                  token: _this25.$store.state.token,\n                  site: _this25.$store.state.site,\n                  type: \"multi\",\n                  uzorci: _this25.uzorci,\n                  samples: report,\n                  timestamp: _this25.timestamp,\n                  napomena: \"\",\n                  status: false,\n                  idNalaza: \"\",\n                  location: \"/\",\n                  klijent: _this25.klijent,\n                  naziv: _this25.timestamp\n                }).then(function (res) {\n                  if (res.data.success) {\n                    __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"l\" /* http */].post(\"nalazi/memo\", {\n                      token: _this25.$store.state.token,\n                      site: _this25.$store.state.site,\n                      timestamp: _this25.timestamp,\n                      height: res.data.memo,\n                      location: \"/\",\n                      naziv: _this25.timestamp\n                    }).then(function (res) {\n                      _this25.uzorci = [];\n\n                      response.forEach(function (element) {\n                        var check = 0;\n                        var zaprimljen = 0;\n                        var realizovan = 0;\n\n                        if (element.verificiran) {\n                          var status_uzorka = \"VERIFICIRAN\";\n                        } else {\n                          var status_uzorka = element.status;\n                        }\n\n                        element.rezultati.forEach(function (test) {\n                          check++;\n\n                          if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n                            zaprimljen++;\n                          }\n\n                          if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n                            realizovan++;\n                          }\n\n                          if (check === element.rezultati.length) {\n\n                            if (status_uzorka === \"VERIFICIRAN\") {\n                              _this25.uzorci.push({\n                                sid: element.id,\n                                status: \"VERIFICIRAN\",\n                                pdf_exists: element.pdf_exists,\n                                tip: element.sample.tip,\n                                _id: element._id,\n                                removed: false\n                              });\n                            } else if (status_uzorka === \"ODOBREN\") {\n                              _this25.uzorci.push({\n                                sid: element.id,\n                                status: \"ODOBREN\",\n                                pdf_exists: element.pdf_exists,\n                                tip: element.sample.tip,\n                                _id: element._id,\n                                removed: false\n                              });\n                            } else if (zaprimljen < 1) {\n                              _this25.uzorci.push({\n                                sid: element.id,\n                                status: \"REALIZOVAN\",\n                                pdf_exists: element.pdf_exists,\n                                tip: element.sample.tip,\n                                _id: element._id,\n                                removed: false\n                              });\n                            } else if (realizovan < 1) {\n                              var stat = \"ZAPRIMLJEN\";\n                              if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                                if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                                  stat = \"REALIZOVAN\";\n                                }\n                              }\n                              _this25.uzorci.push({\n                                sid: element.id,\n                                status: stat,\n                                pdf_exists: element.pdf_exists,\n                                tip: element.sample.tip,\n                                _id: element._id,\n                                removed: false\n                              });\n                            } else {\n                              _this25.uzorci.push({\n                                sid: element.id,\n                                status: \"U OBRADI\",\n                                pdf_exists: element.pdf_exists,\n                                tip: element.sample.tip,\n                                _id: element._id,\n                                removed: false\n                              });\n                            }\n                          }\n                        });\n                      });\n\n                      _this25.uzorci = _this25.uzorci.sort(function (a, b) {\n                        return a.sid.localeCompare(b.sid, undefined, {\n                          numeric: true,\n                          sensitivity: \"base\"\n                        });\n                      });\n\n                      _this25.main = true;\n\n                      _this25.isLoading = false;\n                    });\n                  }\n                });\n              } else {\n                _this25.uzorci = [];\n\n                res.data.results.forEach(function (element) {\n                  var check = 0;\n                  var zaprimljen = 0;\n                  var realizovan = 0;\n\n                  if (element.verificiran) {\n                    var status_uzorka = \"VERIFICIRAN\";\n                  } else {\n                    var status_uzorka = element.status;\n                  }\n\n                  element.rezultati.forEach(function (test) {\n                    check++;\n\n                    if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n                      zaprimljen++;\n                    }\n\n                    if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n                      realizovan++;\n                    }\n\n                    if (check === element.rezultati.length) {\n\n                      if (status_uzorka === \"VERIFICIRAN\") {\n                        _this25.uzorci.push({\n                          sid: element.id,\n                          status: \"VERIFICIRAN\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else if (status_uzorka === \"ODOBREN\") {\n                        _this25.uzorci.push({\n                          sid: element.id,\n                          status: \"ODOBREN\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else if (zaprimljen < 1) {\n                        _this25.uzorci.push({\n                          sid: element.id,\n                          status: \"REALIZOVAN\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else if (realizovan < 1) {\n                        var stat = \"ZAPRIMLJEN\";\n                        if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                          if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                            stat = \"REALIZOVAN\";\n                          }\n                        }\n                        _this25.uzorci.push({\n                          sid: element.id,\n                          status: stat,\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else {\n                        _this25.uzorci.push({\n                          sid: element.id,\n                          status: \"U OBRADI\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      }\n                    }\n                  });\n                });\n\n                _this25.uzorci = _this25.uzorci.sort(function (a, b) {\n                  return a.sid.localeCompare(b.sid, undefined, {\n                    numeric: true,\n                    sensitivity: \"base\"\n                  });\n                });\n\n                _this25.main = true;\n\n                _this25.isLoading = false;\n              }\n            }).then(function (res) {});\n          });\n        });\n      });\n    },\n    Disapprove: function Disapprove(rezultati, from) {\n      var _this26 = this;\n\n      this.rezultati.forEach(function (element) {\n        if (element.calculated) {\n          _this26.calculated = true;\n        }\n      });\n\n      __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"l\" /* http */].post(\"/rezultati/odobravanje/ukloni/\" + this.$store.state.sid, {\n        testovi: rezultati,\n        site: this.$store.state.site,\n        token: this.$store.state.token\n      }).then(function (res) {\n        _this26.isLoading = true;\n\n        __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"l\" /* http */].get(\"rezultati/odobravanje/samples/\" + _this26.$route.params.patient + \"/\" + _this26.$route.params.id + \"?token=\" + _this26.$store.state.token + \"&site=\" + _this26.$store.state.site + \"&date=\" + _this26.$route.query.date, {}).then(function (res) {\n          _this26.sample.status = \"REALIZOVAN\";\n\n          _this26.final_pdf = res.data.final_pdf;\n\n          _this26.count = res.data.results.length;\n          _this26.approved = 0;\n\n          _this26.odobren = true;\n          _this26.verificiran = true;\n\n          res.data.results.forEach(function (element) {\n            if (element.status === \"ODOBREN\" || element.status === \"VERIFICIRAN\") {\n              _this26.approved++;\n            }\n            if (element.status != \"ODOBREN\" && element.status != \"VERIFICIRAN\") {\n              _this26.odobren = false;\n            }\n            if (!element.verificiran) {\n              _this26.verificiran = false;\n            }\n          });\n\n          _this26.uzorci = [];\n\n          res.data.results.forEach(function (element) {\n            var check = 0;\n            var zaprimljen = 0;\n            var realizovan = 0;\n\n            if (element.verificiran) {\n              var status_uzorka = \"VERIFICIRAN\";\n            } else {\n              var status_uzorka = element.status;\n            }\n\n            element.rezultati.forEach(function (test) {\n              check++;\n\n              if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n                zaprimljen++;\n              }\n\n              if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n                realizovan++;\n              }\n\n              if (check === element.rezultati.length) {\n\n                if (status_uzorka === \"VERIFICIRAN\") {\n                  _this26.uzorci.push({\n                    sid: element.id,\n                    status: \"VERIFICIRAN\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else if (status_uzorka === \"ODOBREN\") {\n                  _this26.uzorci.push({\n                    sid: element.id,\n                    status: \"ODOBREN\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else if (zaprimljen < 1) {\n                  _this26.uzorci.push({\n                    sid: element.id,\n                    status: \"REALIZOVAN\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else if (realizovan < 1) {\n                  var stat = \"ZAPRIMLJEN\";\n                  if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                    if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                      stat = \"REALIZOVAN\";\n                    }\n                  }\n                  _this26.uzorci.push({\n                    sid: element.id,\n                    status: stat,\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else {\n                  _this26.uzorci.push({\n                    sid: element.id,\n                    status: \"U OBRADI\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                }\n              }\n            });\n          });\n\n          _this26.uzorci = _this26.uzorci.sort(function (a, b) {\n            return a.sid.localeCompare(b.sid, undefined, {\n              numeric: true,\n              sensitivity: \"base\"\n            });\n          });\n\n          _this26.main = true;\n        });\n\n        _this26.rezultati.forEach(function (element) {\n          element.edit = true;\n        });\n\n        _this26.isLoading = false;\n      });\n    },\n    Verify: function Verify(data) {\n      var _this27 = this;\n\n      if (!this.$store.state.access.verify) {\n        this.$refs.staticModalVerifyPrivilege.open();\n      } else {\n        __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"l\" /* http */].post(\"/rezultati/obrada/verifikacija/\" + this.$store.state.sid, {\n          site: this.$store.state.site,\n          token: this.$store.state.token,\n          verify: true\n        }).then(function (res) {\n          __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"l\" /* http */].get(\"rezultati/odobravanje/samples/\" + _this27.$route.params.patient + \"/\" + _this27.$route.params.id + \"?token=\" + _this27.$store.state.token + \"&site=\" + _this27.$store.state.site + \"&date=\" + _this27.$route.query.date, {}).then(function (res) {\n            _this27.sample.status = \"VERIFICIRAN\";\n\n            _this27.final_pdf = res.data.final_pdf;\n\n            _this27.count = res.data.results.length;\n            _this27.approved = 0;\n            _this27.verified = 0;\n\n            _this27.odobren = true;\n            _this27.verificiran = true;\n            _this27.partials = [];\n            _this27.partials_condition = false;\n\n            res.data.results.forEach(function (element) {\n              if (element.verificiran) {\n                _this27.partials.push(element._id);\n                _this27.verified++;\n              }\n              if (element.status === \"ODOBREN\" || element.status === \"VERIFICIRAN\") {\n                _this27.approved++;\n              }\n              if (element.status != \"ODOBREN\" && element.status != \"VERIFICIRAN\") {\n                _this27.odobren = false;\n              }\n              if (!element.verificiran) {\n                _this27.verificiran = false;\n              }\n            });\n\n            if (_this27.count > _this27.verified && _this27.verified > 1) {\n              _this27.partials_condition = true;\n            }\n\n            _this27.uzorci = [];\n\n            res.data.results.forEach(function (element) {\n              var check = 0;\n              var zaprimljen = 0;\n              var realizovan = 0;\n\n              if (element.verificiran) {\n                var status_uzorka = \"VERIFICIRAN\";\n              } else {\n                var status_uzorka = element.status;\n              }\n\n              element.rezultati.forEach(function (test) {\n                check++;\n\n                if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n                  zaprimljen++;\n                }\n\n                if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n                  realizovan++;\n                }\n\n                if (check === element.rezultati.length) {\n\n                  if (status_uzorka === \"VERIFICIRAN\") {\n                    _this27.uzorci.push({\n                      sid: element.id,\n                      status: \"VERIFICIRAN\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else if (status_uzorka === \"ODOBREN\") {\n                    _this27.uzorci.push({\n                      sid: element.id,\n                      status: \"ODOBREN\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else if (zaprimljen < 1) {\n                    _this27.uzorci.push({\n                      sid: element.id,\n                      status: \"REALIZOVAN\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else if (realizovan < 1) {\n                    var stat = \"ZAPRIMLJEN\";\n                    if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                      if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                        stat = \"REALIZOVAN\";\n                      }\n                    }\n                    _this27.uzorci.push({\n                      sid: element.id,\n                      status: stat,\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else {\n                    _this27.uzorci.push({\n                      sid: element.id,\n                      status: \"U OBRADI\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  }\n                }\n              });\n            });\n\n            _this27.uzorci = _this27.uzorci.sort(function (a, b) {\n              return a.sid.localeCompare(b.sid, undefined, {\n                numeric: true,\n                sensitivity: \"base\"\n              });\n            });\n\n            if (_this27.verificiran) {\n              __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"l\" /* http */].post(\"rezultati/nalazi/status\", {\n                token: _this27.$store.state.token,\n                site: _this27.$store.state.site,\n                timestamp: _this27.timestamp,\n                location: \"/\",\n                naziv: _this27.timestamp,\n                status: true\n              }).then(function (res) {\n                _this27.main = true;\n\n                if (_this27.lokacija.sendEmail) {\n                  __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"l\" /* http */].post(\"nalazi/mail\", {\n                    token: _this27.$store.state.token,\n                    site: _this27.$store.state.site,\n                    email: _this27.lokacija.email,\n                    timestamp: _this27.timestamp,\n                    location: \"/\",\n                    naziv: _this27.timestamp\n                  }).then(function (res) {\n                    if (res.data.success) {} else {\n                      _this27.toastText = \"Greška prilikom slanja nalaza!\";\n                      _this27.toastIcon = \"fa-remove\";\n                      _this27.toastPosition = \"top-right\";\n                      _this27.className = \"vuestic-toast-danger\";\n\n                      _this27.showToast(_this27.toastText, {\n                        icon: _this27.toastIcon,\n                        position: _this27.toastPosition,\n                        duration: 2500,\n                        fullWidth: _this27.false,\n                        className: _this27.className\n                      });\n                    }\n                  });\n                } else {}\n              });\n            } else {\n              _this27.main = true;\n            }\n          });\n        });\n      }\n    },\n    UnVerify: function UnVerify(data) {\n      var _this28 = this;\n\n      if (!this.$store.state.access.verify) {\n        this.$refs.staticModalVerifyPrivilege.open();\n      } else {\n        this.verificiran = false;\n        this.sid = data.sid;\n\n        __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"l\" /* http */].post(\"/rezultati/obrada/verifikacija/\" + data.sid, {\n          site: this.$store.state.site,\n          token: this.$store.state.token,\n          verify: false\n        }).then(function (res) {\n          __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"l\" /* http */].get(\"rezultati/odobravanje/samples/\" + _this28.$route.params.patient + \"/\" + _this28.$route.params.id + \"?token=\" + _this28.$store.state.token + \"&site=\" + _this28.$store.state.site + \"&date=\" + _this28.$route.query.date, {}).then(function (res) {\n            _this28.sample.status = \"ODOBREN\";\n\n            _this28.final_pdf = res.data.final_pdf;\n\n            _this28.count = res.data.results.length;\n            _this28.approved = 0;\n\n            _this28.odobren = true;\n            _this28.verificiran = true;\n            _this28.verified = 0;\n            _this28.partials = [];\n            _this28.partials_condition = false;\n\n            res.data.results.forEach(function (element) {\n              if (element.verificiran) {\n                _this28.verified++;\n                _this28.partials.push(element._id);\n              }\n              if (element.status === \"ODOBREN\" || element.status === \"VERIFICIRAN\") {\n                _this28.approved++;\n              }\n              if (element.status != \"ODOBREN\" && element.status != \"VERIFICIRAN\") {\n                _this28.odobren = false;\n              }\n              if (!element.verificiran) {\n                _this28.verificiran = false;\n              }\n            });\n\n            if (_this28.count > _this28.verified && _this28.verified > 1) {\n              _this28.partials_condition = true;\n            }\n\n            _this28.uzorci = [];\n\n            res.data.results.forEach(function (element) {\n              var check = 0;\n              var zaprimljen = 0;\n              var realizovan = 0;\n\n              if (element.verificiran) {\n                var status_uzorka = \"VERIFICIRAN\";\n              } else {\n                var status_uzorka = element.status;\n              }\n\n              element.rezultati.forEach(function (test) {\n                check++;\n\n                if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n                  zaprimljen++;\n                }\n\n                if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n                  realizovan++;\n                }\n\n                if (check === element.rezultati.length) {\n\n                  if (status_uzorka === \"VERIFICIRAN\") {\n                    _this28.uzorci.push({\n                      sid: element.id,\n                      status: \"VERIFICIRAN\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else if (status_uzorka === \"ODOBREN\") {\n                    _this28.uzorci.push({\n                      sid: element.id,\n                      status: \"ODOBREN\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else if (zaprimljen < 1) {\n                    _this28.uzorci.push({\n                      sid: element.id,\n                      status: \"REALIZOVAN\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else if (realizovan < 1) {\n                    var stat = \"ZAPRIMLJEN\";\n                    if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                      if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                        stat = \"REALIZOVAN\";\n                      }\n                    }\n                    _this28.uzorci.push({\n                      sid: element.id,\n                      status: stat,\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else {\n                    _this28.uzorci.push({\n                      sid: element.id,\n                      status: \"U OBRADI\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  }\n                }\n              });\n            });\n\n            _this28.uzorci = _this28.uzorci.sort(function (a, b) {\n              return a.sid.localeCompare(b.sid, undefined, {\n                numeric: true,\n                sensitivity: \"base\"\n              });\n            });\n\n            if (!_this28.verificiran) {\n              __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"l\" /* http */].post(\"rezultati/nalazi/status\", {\n                token: _this28.$store.state.token,\n                site: _this28.$store.state.site,\n                timestamp: _this28.timestamp,\n                location: \"/\",\n                naziv: _this28.timestamp,\n                status: false\n              }).then(function (res) {\n                _this28.main = true;\n              });\n            } else {\n              _this28.main = true;\n            }\n          });\n        });\n      }\n    },\n    GetResults: function GetResults(data, status) {\n      var _this29 = this;\n\n      this.sample_status = status;\n      this.vise = [];\n      this.labassay = \"\";\n      __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"l\" /* http */].post(\"/rezultati/odobravanje/results\" + \"?token=\" + this.$store.state.token + \"&site=\" + this.$store.state.site, {\n        id: this.sample.sid,\n        labassay: data.labassay_id\n      }).then(function (res) {\n        if (res.data.success) {\n          _this29.vise = res.data.element;\n          _this29.labassay = _this29.vise.labassay.naziv + \" (\" + _this29.vise.labassay.analit + \")\";\n\n          var i = 0;\n          res.data.element.rezultat.forEach(function (element) {\n            i++;\n            if (res.data.element.rezultat.length == i) {\n              element.izabran = true;\n            } else {\n              element.izabran = false;\n            }\n          });\n\n          _this29.vise.rezultat.sort(function (a, b) {\n            return Date.parse(a.created_at) == Date.parse(b.created_at) ? 0 : +(Date.parse(a.created_at) < Date.parse(b.created_at)) || -1;\n          });\n\n          _this29.$refs.staticModalAllResults.open();\n        }\n      });\n    },\n    GetResultsMulti: function GetResultsMulti(data, status) {\n      this.sample_status = status;\n\n      this.multi_rezultati = [];\n      this.multi_test = data.ime + \" (\" + data.analit + \")\";\n\n      data.multi_rezultati.forEach(function (element) {\n        element.rezultat.forEach(function (rez) {});\n      });\n    },\n    IzborTesta: function IzborTesta(vise, test) {\n      var _this30 = this;\n\n      document.getElementById(this.sample.sid).click();\n\n      __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"l\" /* http */].post(\"/rezultati/odobravanje/choose\" + \"?token=\" + this.$store.state.token + \"&site=\" + this.$store.state.site, {\n        id: this.sample.sid,\n        labassay: vise.labassay._id,\n        picked: test._id\n      }).then(function (res) {\n        document.getElementById(_this30.sample.sid).click();\n        _this30.$refs.staticModalAllResults.close();\n      });\n    },\n    Partials: function Partials() {\n      var _this31 = this;\n\n      __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"l\" /* http */].post(\"nalazi/create\", {\n        token: this.$store.state.token,\n        site: this.$store.state.site,\n        type: \"partial\",\n        uzorci: this.uzorci,\n        samples: this.partials,\n        timestamp: this.timestamp,\n        napomena: \"\",\n        status: false,\n        idNalaza: \"\",\n        location: \"/partials\",\n        klijent: this.klijent,\n        naziv: this.timestamp\n      }).then(function (res) {\n        if (res.data.success) {\n          if (!res.data.success) {\n            _this31.$refs.staticModalError.open();\n          } else {\n            _this31.path = _this31.timestamp + \".pdf\";\n\n            _this31.url = __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"m\" /* server */] + \"nalazi/partials/\" + _this31.path;\n\n            var options = {\n              width: \"100%\",\n              height: \"800px\"\n            };\n            __WEBPACK_IMPORTED_MODULE_16_pdfobject___default.a.embed(_this31.url, \"#pdf-container\", options);\n\n            _this31.email_button = true;\n            _this31.main = false;\n            _this31.pdf = true;\n          }\n        }\n      });\n    }\n  }\n});\n\n/***/ }),\n\n/***/ \"MbHo\":\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(\"FZ+f\")(true);\n// imports\n\n\n// module\nexports.push([module.i, \".vld-overlay{bottom:0;left:0;position:absolute;right:0;top:0;align-items:center;display:none;justify-content:center;overflow:hidden;z-index:1}.vld-overlay.is-active{display:flex}.vld-overlay.is-full-page{z-index:999;position:fixed}.vld-overlay .vld-background{bottom:0;left:0;position:absolute;right:0;top:0;background:#fff;opacity:.5}.vld-overlay .vld-icon,.vld-parent{position:relative}\", \"\", {\"version\":3,\"sources\":[\"C:/Users/atom/Desktop/ATOM Projects/ACTIVE Projects/185.62.136.71 (A2 Hosting)/10020 - ExtraLab Laboratorij/elt_client/node_modules/vue-loading-overlay/dist/vue-loading.css\"],\"names\":[],\"mappings\":\"AAAA,aACE,SAAU,AACV,OAAQ,AACR,kBAAmB,AACnB,QAAS,AACT,MAAO,AACP,mBAAoB,AACpB,aAAc,AACd,uBAAwB,AACxB,gBAAiB,AACjB,SAAU,CACX,AAED,uBACE,YAAa,CACd,AAED,0BACE,YAAa,AACb,cAAe,CAChB,AAED,6BACE,SAAU,AACV,OAAQ,AACR,kBAAmB,AACnB,QAAS,AACT,MAAO,AACP,gBAAiB,AACjB,UAAY,CACb,AAED,mCACE,iBAAkB,CACnB\",\"file\":\"vue-loading.css\",\"sourcesContent\":[\".vld-overlay {\\n  bottom: 0;\\n  left: 0;\\n  position: absolute;\\n  right: 0;\\n  top: 0;\\n  align-items: center;\\n  display: none;\\n  justify-content: center;\\n  overflow: hidden;\\n  z-index: 1\\n}\\n\\n.vld-overlay.is-active {\\n  display: flex\\n}\\n\\n.vld-overlay.is-full-page {\\n  z-index: 999;\\n  position: fixed\\n}\\n\\n.vld-overlay .vld-background {\\n  bottom: 0;\\n  left: 0;\\n  position: absolute;\\n  right: 0;\\n  top: 0;\\n  background: #fff;\\n  opacity: 0.5\\n}\\n\\n.vld-overlay .vld-icon, .vld-parent {\\n  position: relative\\n}\\n\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n\n/***/ \"R7hf\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: \"badgeColumn\",\n  props: {\n    rowData: {\n      type: Object,\n      required: true\n    },\n    rowIndex: {\n      type: Number\n    }\n  },\n  data: function data() {\n    return {\n      classObject: {\n        \"badge-warning\": this.rowIndex % 6 === 0,\n        \"badge-primary\": this.rowIndex % 6 === 1,\n        \"badge-danger\": this.rowIndex % 6 === 2,\n        \"badge-info\": this.rowIndex % 6 === 3,\n        \"badge-violet\": this.rowIndex % 6 === 4,\n        \"badge-dark-blue\": this.rowIndex % 6 === 5\n      }\n    };\n  }\n});\n\n/***/ }),\n\n/***/ \"Rrel\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window\nvar toIObject = __webpack_require__(\"TcQ7\");\nvar gOPN = __webpack_require__(\"n0T6\").f;\nvar toString = {}.toString;\n\nvar windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames\n  ? Object.getOwnPropertyNames(window) : [];\n\nvar getWindowNames = function (it) {\n  try {\n    return gOPN(it);\n  } catch (e) {\n    return windowNames.slice();\n  }\n};\n\nmodule.exports.f = function getOwnPropertyNames(it) {\n  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));\n};\n\n\n/***/ }),\n\n/***/ \"SYh3\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(\"MbHo\");\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(\"rjj0\")(\"745170b4\", content, true);\n\n/***/ }),\n\n/***/ \"UqI+\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*global ActiveXObject, window, console, define, module, jQuery */\n//jshint unused:false, strict: false\n\n/*\n    PDFObject v2.1.1\n    https://github.com/pipwerks/PDFObject\n    Copyright (c) 2008-2018 Philip Hutchison\n    MIT-style license: http://pipwerks.mit-license.org/\n    UMD module pattern from https://github.com/umdjs/umd/blob/master/templates/returnExports.js\n*/\n\n(function (root, factory) {\n    if (true) {\n        // AMD. Register as an anonymous module.\n        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    } else if (typeof module === 'object' && module.exports) {\n        // Node. Does not work with strict CommonJS, but\n        // only CommonJS-like environments that support module.exports,\n        // like Node.\n        module.exports = factory();\n    } else {\n        // Browser globals (root is window)\n        root.PDFObject = factory();\n  }\n}(this, function () {\n\n    \"use strict\";\n    //jshint unused:true\n\n    //PDFObject is designed for client-side (browsers), not server-side (node)\n    //Will choke on undefined navigator and window vars when run on server\n    //Return boolean false and exit function when running server-side\n\n    if(typeof window === \"undefined\" || typeof navigator === \"undefined\"){ return false; }\n\n    var pdfobjectversion = \"2.1.1\",\n        ua = window.navigator.userAgent,\n\n        //declare booleans\n        supportsPDFs,\n        isIE,\n        supportsPdfMimeType = (typeof navigator.mimeTypes['application/pdf'] !== \"undefined\"),\n        supportsPdfActiveX,\n        isModernBrowser = (function (){ return (typeof window.Promise !== \"undefined\"); })(),\n        isFirefox = (function (){ return (ua.indexOf(\"irefox\") !== -1); } )(),\n        isFirefoxWithPDFJS = (function (){\n            //Firefox started shipping PDF.js in Firefox 19.\n            //If this is Firefox 19 or greater, assume PDF.js is available\n            if(!isFirefox){ return false; }\n            //parse userAgent string to get release version (\"rv\")\n            //ex: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.12; rv:57.0) Gecko/20100101 Firefox/57.0\n            return (parseInt(ua.split(\"rv:\")[1].split(\".\")[0], 10) > 18);\n        })(),\n        isIOS = (function (){ return (/iphone|ipad|ipod/i.test(ua.toLowerCase())); })(),\n\n        //declare functions\n        createAXO,\n        buildFragmentString,\n        log,\n        embedError,\n        embed,\n        getTargetElement,\n        generatePDFJSiframe,\n        generateEmbedElement;\n\n\n    /* ----------------------------------------------------\n       Supporting functions\n       ---------------------------------------------------- */\n\n    createAXO = function (type){\n        var ax;\n        try {\n            ax = new ActiveXObject(type);\n        } catch (e) {\n            ax = null; //ensure ax remains null\n        }\n        return ax;\n    };\n\n    //IE11 still uses ActiveX for Adobe Reader, but IE 11 doesn't expose\n    //window.ActiveXObject the same way previous versions of IE did\n    //window.ActiveXObject will evaluate to false in IE 11, but \"ActiveXObject\" in window evaluates to true\n    //so check the first one for older IE, and the second for IE11\n    //FWIW, MS Edge (replacing IE11) does not support ActiveX at all, both will evaluate false\n    //Constructed as a method (not a prop) to avoid unneccesarry overhead -- will only be evaluated if needed\n    isIE = function (){ return !!(window.ActiveXObject || \"ActiveXObject\" in window); };\n\n    //If either ActiveX support for \"AcroPDF.PDF\" or \"PDF.PdfCtrl\" are found, return true\n    //Constructed as a method (not a prop) to avoid unneccesarry overhead -- will only be evaluated if needed\n    supportsPdfActiveX = function (){ return !!(createAXO(\"AcroPDF.PDF\") || createAXO(\"PDF.PdfCtrl\")); };\n\n    //Determines whether PDF support is available\n    supportsPDFs = (\n        //as of iOS 12, inline PDF rendering is still not supported in Safari or native webview\n        //3rd-party browsers (eg Chrome, Firefox) use Apple's webview for rendering, and thus the same result as Safari\n        //Therefore if iOS, we shall assume that PDF support is not available\n        !isIOS && (\n            //Modern versions of Firefox come bundled with PDFJS\n            isFirefoxWithPDFJS || \n            //Browsers that still support the original MIME type check\n            supportsPdfMimeType || (\n                //Pity the poor souls still using IE\n                isIE() && supportsPdfActiveX()\n            )\n        )\n    );\n\n    //Create a fragment identifier for using PDF Open parameters when embedding PDF\n    buildFragmentString = function(pdfParams){\n\n        var string = \"\",\n            prop;\n\n        if(pdfParams){\n\n            for (prop in pdfParams) {\n                if (pdfParams.hasOwnProperty(prop)) {\n                    string += encodeURIComponent(prop) + \"=\" + encodeURIComponent(pdfParams[prop]) + \"&\";\n                }\n            }\n\n            //The string will be empty if no PDF Params found\n            if(string){\n\n                string = \"#\" + string;\n\n                //Remove last ampersand\n                string = string.slice(0, string.length - 1);\n\n            }\n\n        }\n\n        return string;\n\n    };\n\n    log = function (msg){\n        if(typeof console !== \"undefined\" && console.log){\n            console.log(\"[PDFObject] \" + msg);\n        }\n    };\n\n    embedError = function (msg){\n        log(msg);\n        return false;\n    };\n\n    getTargetElement = function (targetSelector){\n\n        //Default to body for full-browser PDF\n        var targetNode = document.body;\n\n        //If a targetSelector is specified, check to see whether\n        //it's passing a selector, jQuery object, or an HTML element\n\n        if(typeof targetSelector === \"string\"){\n\n            //Is CSS selector\n            targetNode = document.querySelector(targetSelector);\n\n        } else if (typeof jQuery !== \"undefined\" && targetSelector instanceof jQuery && targetSelector.length) {\n\n            //Is jQuery element. Extract HTML node\n            targetNode = targetSelector.get(0);\n\n        } else if (typeof targetSelector.nodeType !== \"undefined\" && targetSelector.nodeType === 1){\n\n            //Is HTML element\n            targetNode = targetSelector;\n\n        }\n\n        return targetNode;\n\n    };\n\n    generatePDFJSiframe = function (targetNode, url, pdfOpenFragment, PDFJS_URL, id){\n\n        var fullURL = PDFJS_URL + \"?file=\" + encodeURIComponent(url) + pdfOpenFragment;\n        var scrollfix = (isIOS) ? \"-webkit-overflow-scrolling: touch; overflow-y: scroll; \" : \"overflow: hidden; \";\n        var iframe = \"<div style='\" + scrollfix + \"position: absolute; top: 0; right: 0; bottom: 0; left: 0;'><iframe  \" + id + \" src='\" + fullURL + \"' style='border: none; width: 100%; height: 100%;' frameborder='0'></iframe></div>\";\n        targetNode.className += \" pdfobject-container\";\n        targetNode.style.position = \"relative\";\n        targetNode.style.overflow = \"auto\";\n        targetNode.innerHTML = iframe;\n        return targetNode.getElementsByTagName(\"iframe\")[0];\n\n    };\n\n    generateEmbedElement = function (targetNode, targetSelector, url, pdfOpenFragment, width, height, id){\n\n        var style = \"\";\n\n        if(targetSelector && targetSelector !== document.body){\n            style = \"width: \" + width + \"; height: \" + height + \";\";\n        } else {\n            style = \"position: absolute; top: 0; right: 0; bottom: 0; left: 0; width: 100%; height: 100%;\";\n        }\n\n        targetNode.className += \" pdfobject-container\";\n        targetNode.innerHTML = \"<embed \" + id + \" class='pdfobject' src='\" + url + pdfOpenFragment + \"' type='application/pdf' style='overflow: auto; \" + style + \"'/>\";\n\n        return targetNode.getElementsByTagName(\"embed\")[0];\n\n    };\n\n    embed = function(url, targetSelector, options){\n\n        //Ensure URL is available. If not, exit now.\n        if(typeof url !== \"string\"){ return embedError(\"URL is not valid\"); }\n\n        //If targetSelector is not defined, convert to boolean\n        targetSelector = (typeof targetSelector !== \"undefined\") ? targetSelector : false;\n\n        //Ensure options object is not undefined -- enables easier error checking below\n        options = (typeof options !== \"undefined\") ? options : {};\n\n        //Get passed options, or set reasonable defaults\n        var id = (options.id && typeof options.id === \"string\") ? \"id='\" + options.id + \"'\" : \"\",\n            page = (options.page) ? options.page : false,\n            pdfOpenParams = (options.pdfOpenParams) ? options.pdfOpenParams : {},\n            fallbackLink = (typeof options.fallbackLink !== \"undefined\") ? options.fallbackLink : true,\n            width = (options.width) ? options.width : \"100%\",\n            height = (options.height) ? options.height : \"100%\",\n            assumptionMode = (typeof options.assumptionMode === \"boolean\") ? options.assumptionMode : true,\n            forcePDFJS = (typeof options.forcePDFJS === \"boolean\") ? options.forcePDFJS : false,\n            PDFJS_URL = (options.PDFJS_URL) ? options.PDFJS_URL : false,\n            targetNode = getTargetElement(targetSelector),\n            fallbackHTML = \"\",\n            pdfOpenFragment = \"\",\n            fallbackHTML_default = \"<p>This browser does not support inline PDFs. Please download the PDF to view it: <a href='[url]'>Download PDF</a></p>\";\n\n        //If target element is specified but is not valid, exit without doing anything\n        if(!targetNode){ return embedError(\"Target element cannot be determined\"); }\n\n\n        //page option overrides pdfOpenParams, if found\n        if(page){\n            pdfOpenParams.page = page;\n        }\n\n        //Stringify optional Adobe params for opening document (as fragment identifier)\n        pdfOpenFragment = buildFragmentString(pdfOpenParams);\n\n        //Do the dance\n\n        //If the forcePDFJS option is invoked, skip everything else and embed as directed\n        if(forcePDFJS && PDFJS_URL){\n\n            return generatePDFJSiframe(targetNode, url, pdfOpenFragment, PDFJS_URL, id);\n\n        //If traditional support is provided, or if this is a modern browser and not iOS (see comment for supportsPDFs declaration)\n        } else if(supportsPDFs || (assumptionMode && isModernBrowser && !isIOS)){\n\n            return generateEmbedElement(targetNode, targetSelector, url, pdfOpenFragment, width, height, id);\n\n        //If everything else has failed and a PDFJS fallback is provided, try to use it\n        } else if(PDFJS_URL){\n\n            return generatePDFJSiframe(targetNode, url, pdfOpenFragment, PDFJS_URL, id);\n\n        } else {\n\n            //Display the fallback link if available\n            if(fallbackLink){\n\n                fallbackHTML = (typeof fallbackLink === \"string\") ? fallbackLink : fallbackHTML_default;\n                targetNode.innerHTML = fallbackHTML.replace(/\\[url\\]/g, url);\n\n            }\n\n            return embedError(\"This browser does not support embedded PDFs\");\n\n        }\n\n    };\n\n    return {\n        embed: function (a,b,c){ return embed(a,b,c); },\n        pdfobjectversion: (function () { return pdfobjectversion; })(),\n        supportsPDFs: (function (){ return supportsPDFs; })()\n    };\n\n}));\n\n/***/ }),\n\n/***/ \"XMpX\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_BadgeColumn_vue__ = __webpack_require__(\"R7hf\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_61c2f4b3_hasScoped_true_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_BadgeColumn_vue__ = __webpack_require__(\"FC28\");\nfunction injectStyle (ssrContext) {\n  __webpack_require__(\"8LKc\")\n}\nvar normalizeComponent = __webpack_require__(\"VU/8\")\n/* script */\n\n/* template */\n\n/* template functional */\n  var __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-61c2f4b3\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_BadgeColumn_vue__[\"a\" /* default */],\n  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_61c2f4b3_hasScoped_true_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_BadgeColumn_vue__[\"a\" /* default */],\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Component.exports);\n\n\n/***/ }),\n\n/***/ \"ZPH3\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(\"C8Lq\");\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(\"rjj0\")(\"22c8f432\", content, true);\n\n/***/ }),\n\n/***/ \"ZZvs\":\n/***/ (function(module, exports, __webpack_require__) {\n\n!function(t,e){ true?module.exports=e():\"function\"==typeof define&&define.amd?define(\"VueLoading\",[],e):\"object\"==typeof exports?exports.VueLoading=e():t.VueLoading=e()}(\"undefined\"!=typeof self?self:this,function(){return function(t){var e={};function i(n){if(e[n])return e[n].exports;var r=e[n]={i:n,l:!1,exports:{}};return t[n].call(r.exports,r,r.exports,i),r.l=!0,r.exports}return i.m=t,i.c=e,i.d=function(t,e,n){i.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},i.r=function(t){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})},i.t=function(t,e){if(1&e&&(t=i(t)),8&e)return t;if(4&e&&\"object\"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(i.r(n),Object.defineProperty(n,\"default\",{enumerable:!0,value:t}),2&e&&\"string\"!=typeof t)for(var r in t)i.d(n,r,function(e){return t[e]}.bind(null,r));return n},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,\"a\",e),e},i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},i.p=\"\",i(i.s=1)}([function(t,e,i){},function(t,e,i){\"use strict\";i.r(e);var n=\"undefined\"!=typeof window?window.HTMLElement:Object,r={mounted:function(){document.addEventListener(\"focusin\",this.focusIn)},methods:{focusIn:function(t){if(this.isActive&&t.target!==this.$el&&!this.$el.contains(t.target)){var e=this.container?this.container:this.isFullPage?null:this.$el.parentElement;(this.isFullPage||e&&e.contains(t.target))&&(t.preventDefault(),this.$el.focus())}}},beforeDestroy:function(){document.removeEventListener(\"focusin\",this.focusIn)}};function a(t,e,i,n,r,a,o,s){var u,l=\"function\"==typeof t?t.options:t;if(e&&(l.render=e,l.staticRenderFns=i,l._compiled=!0),n&&(l.functional=!0),a&&(l._scopeId=\"data-v-\"+a),o?(u=function(t){(t=t||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||\"undefined\"==typeof __VUE_SSR_CONTEXT__||(t=__VUE_SSR_CONTEXT__),r&&r.call(this,t),t&&t._registeredComponents&&t._registeredComponents.add(o)},l._ssrRegister=u):r&&(u=s?function(){r.call(this,this.$root.$options.shadowRoot)}:r),u)if(l.functional){l._injectStyles=u;var c=l.render;l.render=function(t,e){return u.call(e),c(t,e)}}else{var d=l.beforeCreate;l.beforeCreate=d?[].concat(d,u):[u]}return{exports:t,options:l}}var o=a({name:\"spinner\",props:{color:{type:String,default:\"#000\"},height:{type:Number,default:64},width:{type:Number,default:64}}},function(){var t=this.$createElement,e=this._self._c||t;return e(\"svg\",{attrs:{viewBox:\"0 0 38 38\",xmlns:\"http://www.w3.org/2000/svg\",width:this.width,height:this.height,stroke:this.color}},[e(\"g\",{attrs:{fill:\"none\",\"fill-rule\":\"evenodd\"}},[e(\"g\",{attrs:{transform:\"translate(1 1)\",\"stroke-width\":\"2\"}},[e(\"circle\",{attrs:{\"stroke-opacity\":\".25\",cx:\"18\",cy:\"18\",r:\"18\"}}),e(\"path\",{attrs:{d:\"M36 18c0-9.94-8.06-18-18-18\"}},[e(\"animateTransform\",{attrs:{attributeName:\"transform\",type:\"rotate\",from:\"0 18 18\",to:\"360 18 18\",dur:\"0.8s\",repeatCount:\"indefinite\"}})],1)])])])},[],!1,null,null,null).exports,s=a({name:\"dots\",props:{color:{type:String,default:\"#000\"},height:{type:Number,default:240},width:{type:Number,default:60}}},function(){var t=this.$createElement,e=this._self._c||t;return e(\"svg\",{attrs:{viewBox:\"0 0 120 30\",xmlns:\"http://www.w3.org/2000/svg\",fill:this.color,width:this.width,height:this.height}},[e(\"circle\",{attrs:{cx:\"15\",cy:\"15\",r:\"15\"}},[e(\"animate\",{attrs:{attributeName:\"r\",from:\"15\",to:\"15\",begin:\"0s\",dur:\"0.8s\",values:\"15;9;15\",calcMode:\"linear\",repeatCount:\"indefinite\"}}),e(\"animate\",{attrs:{attributeName:\"fill-opacity\",from:\"1\",to:\"1\",begin:\"0s\",dur:\"0.8s\",values:\"1;.5;1\",calcMode:\"linear\",repeatCount:\"indefinite\"}})]),e(\"circle\",{attrs:{cx:\"60\",cy:\"15\",r:\"9\",\"fill-opacity\":\"0.3\"}},[e(\"animate\",{attrs:{attributeName:\"r\",from:\"9\",to:\"9\",begin:\"0s\",dur:\"0.8s\",values:\"9;15;9\",calcMode:\"linear\",repeatCount:\"indefinite\"}}),e(\"animate\",{attrs:{attributeName:\"fill-opacity\",from:\"0.5\",to:\"0.5\",begin:\"0s\",dur:\"0.8s\",values:\".5;1;.5\",calcMode:\"linear\",repeatCount:\"indefinite\"}})]),e(\"circle\",{attrs:{cx:\"105\",cy:\"15\",r:\"15\"}},[e(\"animate\",{attrs:{attributeName:\"r\",from:\"15\",to:\"15\",begin:\"0s\",dur:\"0.8s\",values:\"15;9;15\",calcMode:\"linear\",repeatCount:\"indefinite\"}}),e(\"animate\",{attrs:{attributeName:\"fill-opacity\",from:\"1\",to:\"1\",begin:\"0s\",dur:\"0.8s\",values:\"1;.5;1\",calcMode:\"linear\",repeatCount:\"indefinite\"}})])])},[],!1,null,null,null).exports,u=a({name:\"bars\",props:{color:{type:String,default:\"#000\"},height:{type:Number,default:40},width:{type:Number,default:40}}},function(){var t=this.$createElement,e=this._self._c||t;return e(\"svg\",{attrs:{xmlns:\"http://www.w3.org/2000/svg\",viewBox:\"0 0 30 30\",height:this.height,width:this.width,fill:this.color}},[e(\"rect\",{attrs:{x:\"0\",y:\"13\",width:\"4\",height:\"5\"}},[e(\"animate\",{attrs:{attributeName:\"height\",attributeType:\"XML\",values:\"5;21;5\",begin:\"0s\",dur:\"0.6s\",repeatCount:\"indefinite\"}}),e(\"animate\",{attrs:{attributeName:\"y\",attributeType:\"XML\",values:\"13; 5; 13\",begin:\"0s\",dur:\"0.6s\",repeatCount:\"indefinite\"}})]),e(\"rect\",{attrs:{x:\"10\",y:\"13\",width:\"4\",height:\"5\"}},[e(\"animate\",{attrs:{attributeName:\"height\",attributeType:\"XML\",values:\"5;21;5\",begin:\"0.15s\",dur:\"0.6s\",repeatCount:\"indefinite\"}}),e(\"animate\",{attrs:{attributeName:\"y\",attributeType:\"XML\",values:\"13; 5; 13\",begin:\"0.15s\",dur:\"0.6s\",repeatCount:\"indefinite\"}})]),e(\"rect\",{attrs:{x:\"20\",y:\"13\",width:\"4\",height:\"5\"}},[e(\"animate\",{attrs:{attributeName:\"height\",attributeType:\"XML\",values:\"5;21;5\",begin:\"0.3s\",dur:\"0.6s\",repeatCount:\"indefinite\"}}),e(\"animate\",{attrs:{attributeName:\"y\",attributeType:\"XML\",values:\"13; 5; 13\",begin:\"0.3s\",dur:\"0.6s\",repeatCount:\"indefinite\"}})])])},[],!1,null,null,null).exports,l=a({name:\"vue-loading\",mixins:[r],props:{active:Boolean,programmatic:Boolean,container:[Object,Function,n],isFullPage:{type:Boolean,default:!0},transition:{type:String,default:\"fade\"},canCancel:Boolean,onCancel:{type:Function,default:function(){}},color:String,backgroundColor:String,opacity:Number,width:Number,height:Number,zIndex:Number,loader:{type:String,default:\"spinner\"}},data:function(){return{isActive:this.active}},components:{Spinner:o,Dots:s,Bars:u},beforeMount:function(){this.programmatic&&(this.container?(this.isFullPage=!1,this.container.appendChild(this.$el)):document.body.appendChild(this.$el))},mounted:function(){this.programmatic&&(this.isActive=!0),document.addEventListener(\"keyup\",this.keyPress)},methods:{cancel:function(){this.canCancel&&this.isActive&&(this.hide(),this.onCancel.apply(null,arguments))},hide:function(){var t=this;this.$emit(\"hide\"),this.$emit(\"update:active\",!1),this.programmatic&&(this.isActive=!1,setTimeout(function(){var e;t.$destroy(),void 0!==(e=t.$el).remove?e.remove():e.parentNode.removeChild(e)},150))},keyPress:function(t){27===t.keyCode&&this.cancel()}},watch:{active:function(t){this.isActive=t}},beforeDestroy:function(){document.removeEventListener(\"keyup\",this.keyPress)}},function(){var t=this,e=t.$createElement,i=t._self._c||e;return i(\"transition\",{attrs:{name:t.transition}},[i(\"div\",{directives:[{name:\"show\",rawName:\"v-show\",value:t.isActive,expression:\"isActive\"}],staticClass:\"vld-overlay is-active\",class:{\"is-full-page\":t.isFullPage},style:{zIndex:this.zIndex},attrs:{tabindex:\"0\",\"aria-busy\":t.isActive,\"aria-label\":\"Loading\"}},[i(\"div\",{staticClass:\"vld-background\",style:{background:this.backgroundColor,opacity:this.opacity},on:{click:function(e){return e.preventDefault(),t.cancel(e)}}}),i(\"div\",{staticClass:\"vld-icon\"},[t._t(\"before\"),t._t(\"default\",[i(t.loader,{tag:\"component\",attrs:{color:t.color,width:t.width,height:t.height}})]),t._t(\"after\")],2)])])},[],!1,null,null,null).exports,c=function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return{show:function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:e,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:i,a=Object.assign({},e,n,{programmatic:!0}),o=new(t.extend(l))({el:document.createElement(\"div\"),propsData:a}),s=Object.assign({},i,r);return Object.keys(s).map(function(t){o.$slots[t]=s[t]}),o}}};i(0);l.install=function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},n=c(t,e,i);t.$loading=n,t.prototype.$loading=n};e.default=l}]).default});\n\n/***/ }),\n\n/***/ \"aFK5\":\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = { \"default\": __webpack_require__(\"gAsd\"), __esModule: true };\n\n/***/ }),\n\n/***/ \"d5lM\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar interpretacija = __webpack_require__(\"3r/r\");\n\nmodule.exports = {\n  Interpretation: function Interpretation(test, result, jedinica, dref, gref, site, interp, extend, spec) {\n\n    var rezultat = result.trim();\n\n    switch (interp) {\n      case \"none\":\n        return [test, rezultat, interpretacija.None(rezultat, dref, gref)[0], jedinica, \"/\", interpretacija.None(rezultat, dref, gref)[1], extend];\n        break;\n      case \"A\":\n        return [test, rezultat, interpretacija.Standard(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.Standard(rezultat, dref, gref)[1], extend];\n        break;\n      case \"ogtt\":\n        if (dref == \"0\" && gref == \"0\") {\n          var reference = \"/\";\n        } else {\n          var reference = dref + \" - \" + gref;\n        }\n        return [test, rezultat, interpretacija.Standard(rezultat, dref, gref)[0], jedinica, reference, interpretacija.Standard(rezultat, dref, gref)[1], extend];\n        break;\n      case \"insul\":\n        if (dref == \"0\" && gref == \"0\") {\n          var reference = \"/\";\n        } else {\n          var reference = dref + \" - \" + gref;\n        }\n        return [test, rezultat, interpretacija.Standard(rezultat, dref, gref)[0], jedinica, reference, interpretacija.Standard(rezultat, dref, gref)[1], extend];\n        break;\n      case \"less\":\n        if (dref === gref) {\n          return [test, rezultat, interpretacija.Less(rezultat, dref, gref)[0], jedinica, \" < \" + gref, interpretacija.Less(rezultat, dref, gref)[1], extend];\n        } else {\n          return [test, rezultat, interpretacija.Less(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.Less(rezultat, dref, gref)[1], extend];\n        }\n        break;\n      case \"lesseq\":\n        return [test, rezultat, interpretacija.LessEqual(rezultat, dref, gref)[0], jedinica, \" ≤ \" + gref, interpretacija.LessEqual(rezultat, dref, gref)[1], extend];\n        break;\n      case \"lesspl\":\n        return [test, rezultat, interpretacija.LessPlus(rezultat, dref, gref)[0], jedinica, \" < \" + gref + \" x 10^6\", interpretacija.LessPlus(rezultat, dref, gref)[1], extend];\n        break;\n      case \"infekc\":\n        return [test, rezultat, interpretacija.Infekcija(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.Infekcija(rezultat, dref, gref)[1], extend];\n        break;\n      case \"grt\":\n        return [test, rezultat, interpretacija.Greater(rezultat, dref, gref)[0], jedinica, \" > \" + gref, interpretacija.Greater(rezultat, dref, gref)[1], extend];\n        break;\n      case \"grtno\":\n        return [test, rezultat, interpretacija.GreaterNoInterp(rezultat, dref, gref)[0], jedinica, \" > \" + gref, interpretacija.GreaterNoInterp(rezultat, dref, gref)[1], extend];\n        break;\n      case \"grtpl\":\n        return [test, rezultat, interpretacija.Greater(rezultat, dref, gref)[0], jedinica, \" > \" + gref + \" x 10^6\", interpretacija.Greater(rezultat, dref, gref)[1], extend];\n        break;\n      case \"grtepl\":\n        return [test, rezultat, interpretacija.GreaterEqual(rezultat, dref, gref)[0], jedinica, \" ≥ \" + gref + \" x 10^6\", interpretacija.GreaterEqual(rezultat, dref, gref)[1], extend];\n        break;\n      case \"grte\":\n        return [test, rezultat, interpretacija.GreaterEqual(rezultat, dref, gref)[0], jedinica, \" ≥ \" + gref, interpretacija.GreaterEqual(rezultat, dref, gref)[1], extend];\n        break;\n      case \"neg\":\n        return [test, rezultat, interpretacija.Negativan(rezultat, dref, gref)[0], jedinica, \"negativan\", interpretacija.Negativan(rezultat, dref, gref)[1], extend];\n        break;\n      case \"reakt\":\n        return [test, rezultat, interpretacija.Reaktivan(rezultat, dref, gref)[0], jedinica, \"negativan\", interpretacija.Reaktivan(rezultat, dref, gref)[1], extend];\n        break;\n      case \"norm\":\n        return [test, rezultat, interpretacija.Normalan(rezultat, dref, gref)[0], jedinica, \"normalna\", interpretacija.Normalan(rezultat, dref, gref)[1], extend];\n        break;\n      case \"norma\":\n        return [test, rezultat, interpretacija.Normalan(rezultat, dref, gref)[0], jedinica, \"normalan\", interpretacija.Normalan(rezultat, dref, gref)[1], extend];\n        break;\n      case \"ured\":\n        return [test, rezultat, interpretacija.Uredan(rezultat, dref, gref)[0], jedinica, \"uredna\", interpretacija.Uredan(rezultat, dref, gref)[1], extend];\n        break;\n      case \"plus\":\n        return [test, rezultat, interpretacija.Plus(rezultat, dref, gref)[0], jedinica, \"+ + +\", interpretacija.Plus(rezultat, dref, gref)[1], extend];\n        break;\n      case \"morf\":\n        return [test, rezultat, interpretacija.Morf(rezultat, dref, gref)[0], jedinica, gref, interpretacija.Morf(rezultat, dref, gref)[1], extend];\n        break;\n      case \"titar\":\n        return [test, rezultat, interpretacija.Titar(rezultat, dref, gref)[0], jedinica, \"< \" + dref + \":\" + gref, interpretacija.Titar(rezultat, dref, gref)[1], extend];\n        break;\n      case \"tsh\":\n        return [test, rezultat, interpretacija.TSH(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.TSH(rezultat, dref, gref)[1], extend];\n        break;\n      case \"trg\":\n        return [test, rezultat, interpretacija.TRG(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.TRG(rezultat, dref, gref)[1], extend];\n        break;\n      case \"hol\":\n        return [test, rezultat, interpretacija.HOL(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.HOL(rezultat, dref, gref)[1], extend];\n        break;\n      case \"hdl\":\n        return [test, rezultat, interpretacija.HDL(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.HDL(rezultat, dref, gref)[1], extend];\n        break;\n      case \"ldl\":\n        return [test, rezultat, interpretacija.LDL(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.LDL(rezultat, dref, gref)[1], extend];\n        break;\n      case \"fpsa\":\n        return [test, rezultat, interpretacija.fPSA(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.fPSA(rezultat, dref, gref)[1], extend];\n        break;\n      case \"sediment\":\n        return [test, rezultat, interpretacija.Sedimentacija(rezultat, dref, gref)[0], jedinica, \"< \" + gref, interpretacija.Sedimentacija(rezultat, dref, gref)[1], extend];\n        break;\n      case \"bistar\":\n        return [test, rezultat, interpretacija.Bistar(rezultat, dref, gref)[0], jedinica, \"bistar\", interpretacija.Bistar(rezultat, dref, gref)[1], extend];\n        break;\n      case \"boja\":\n        return [test, rezultat, interpretacija.Boja(rezultat, dref, gref)[0], jedinica, \"žut\", interpretacija.Boja(rezultat, dref, gref)[1], extend];\n        break;\n      case \"bojasp\":\n        return [test, rezultat, interpretacija.BojaSpermiogram(rezultat, dref, gref)[0], jedinica, \"blijedo žut\", interpretacija.BojaSpermiogram(rezultat, dref, gref)[1], extend];\n        break;\n      case \"nesto\":\n        return [test, rezultat, interpretacija.Nesto(rezultat, dref, gref)[0], jedinica, \"nešto\", interpretacija.Nesto(rezultat, dref, gref)[1], extend];\n        break;\n      case \"exists\":\n        return [test, rezultat, interpretacija.Exists(rezultat, dref, gref)[0], jedinica, \" \", interpretacija.Exists(rezultat, dref, gref)[1], extend];\n        break;\n      case \"nema\":\n        return [test, rezultat, interpretacija.Nema(rezultat, dref, gref)[0], jedinica, \"nema\", interpretacija.Nema(rezultat, dref, gref)[1], extend];\n        break;\n      case \"blst\":\n        return [test, rezultat, interpretacija.Blasti(rezultat, dref, gref)[0], jedinica, gref, interpretacija.Blasti(rezultat, dref, gref)[1], extend];\n        break;\n      case \"leu\":\n        return [test, rezultat, interpretacija.LeuErc(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.LeuErc(rezultat, dref, gref)[1], extend];\n        break;\n      case \"spec\":\n        return [test, rezultat, interpretacija.Specific(rezultat, dref, gref)[0], jedinica, spec, interpretacija.Specific(rezultat, dref, gref)[1], extend];\n        break;\n      default:\n        return [test, rezultat, interpretacija.None(rezultat, dref, gref)[0], jedinica, \"/\", interpretacija.None(rezultat, dref, gref)[1], extend];\n        break;\n    }\n  }\n};\n\n/***/ }),\n\n/***/ \"gAsd\":\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(\"G5/o\");\nvar $Object = __webpack_require__(\"FeBl\").Object;\nmodule.exports = function getOwnPropertyNames(it) {\n  return $Object.getOwnPropertyNames(it);\n};\n\n\n/***/ }),\n\n/***/ \"hLWQ\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n    hex2rgb: function hex2rgb(hex, opacity) {\n        hex = (hex + \"\").trim();\n\n        var rgb = null;\n        var match = hex.match(/^#?(([0-9a-zA-Z]{3}){1,3})$/);\n\n        if (!match) {\n            return null;\n        }\n\n        rgb = {};\n\n        hex = match[1];\n\n        if (hex.length === 6) {\n            rgb.r = parseInt(hex.substring(0, 2), 16);\n            rgb.g = parseInt(hex.substring(2, 4), 16);\n            rgb.b = parseInt(hex.substring(4, 6), 16);\n        } else if (hex.length === 3) {\n            rgb.r = parseInt(hex.substring(0, 1) + hex.substring(0, 1), 16);\n            rgb.g = parseInt(hex.substring(1, 2) + hex.substring(1, 2), 16);\n            rgb.b = parseInt(hex.substring(2, 3) + hex.substring(2, 3), 16);\n        }\n\n        rgb.css = \"rgb\" + (opacity ? \"a\" : \"\") + \"(\";\n        rgb.css += rgb.r + \",\" + rgb.g + \",\" + rgb.b;\n        rgb.css += (opacity ? \",\" + opacity : \"\") + \")\";\n\n        return rgb;\n    }\n});\n\n/***/ }),\n\n/***/ \"n0T6\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)\nvar $keys = __webpack_require__(\"Ibhu\");\nvar hiddenKeys = __webpack_require__(\"xnc9\").concat('length', 'prototype');\n\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return $keys(O, hiddenKeys);\n};\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/8.63af46f5b493823452a6.js","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-340b1f55\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Obrada.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Obrada.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-340b1f55\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":\\\"src\\\",\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./Obrada.vue\"\n/* template functional */\n  var __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-340b1f55\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/obrada/Obrada.vue\n// module id = 0fl9\n// module chunks = 8","module.exports = {\r\n  None: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\")    \r\n    // (Interpretacija: \"none\")\r\n    return [\" \", \"No Class\"];\r\n  },\r\n\r\n  Standard: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"A\", \"ogtt\", \"insul\")\r\n    if (isNaN(rezultat) || rezultat === \"\" || (dref == \"0\" && gref == \"0\")) {\r\n      return [\" \", \"No Class\"];\r\n    } else if (Number(rezultat) < Number(Math.abs(dref))) {\r\n      return [\"L\", \"Red\"];\r\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\r\n      return [\"H\", \"Red\"];\r\n    } else if (Number(rezultat) === Number(Math.abs(dref)) || Number(rezultat) === Number(Math.abs(gref))) {\r\n      return [\" \", \"Yellow\"];\r\n    } else {\r\n      return [\" \", \"Green\"];\r\n    }\r\n  },\r\n\r\n  Less: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"less\")\r\n    if (isNaN(rezultat) || rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\r\n      return [\"H\", \"Red\"];\r\n    } else if (Number(rezultat) <= Number(Math.abs(gref)) && Number(rezultat) >= Number(Math.abs(dref))) {\r\n      return [\" \", \"Yellow\"];\r\n    } else {\r\n      return [\" \", \"Green\"];\r\n    }\r\n  },\r\n\r\n  LessEqual: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\")   \r\n    // (Interpretacija: \"grte\")\r\n    if (isNaN(rezultat) || rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\r\n      return [\"L\", \"Red\"];\r\n    } else if (Number(rezultat) == Number(Math.abs(gref))) {\r\n      return [\" \", \"Green\"];\r\n    } else {\r\n      return [\" \", \"Green\"];\r\n    }\r\n  },\r\n\r\n  LessPlus: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"less\")\r\n    if (rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (isNaN(rezultat)){\r\n      return [\"H\", \"Red\"];\r\n    }else if (Number(rezultat) > Number(Math.abs(gref))) {\r\n      return [\"H\", \"Red\"];\r\n    } else if (Number(rezultat) <= Number(Math.abs(gref)) && Number(rezultat) >= Number(Math.abs(dref))) {\r\n      return [\" \", \"Yellow\"];\r\n    } else {\r\n      return [\" \", \"Green\"];\r\n    }\r\n  },\r\n\r\n  Greater: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\")   \r\n    // (Interpretacija: \"grt\")\r\n    if (isNaN(rezultat) || rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (Number(rezultat) < Number(Math.abs(gref))) {\r\n      return [\"L\", \"Red\"];\r\n    } else if (Number(rezultat) == Number(Math.abs(gref))) {\r\n      return [\" \", \"Yellow\"];\r\n    } else {\r\n      return [\" \", \"Green\"];\r\n    }\r\n  },\r\n\r\n  GreaterNoInterp: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\")   \r\n    // (Interpretacija: \"grt\")\r\n    if (isNaN(rezultat) || rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (Number(rezultat) < Number(Math.abs(gref))) {\r\n      return [\" \", \"No Class\"];\r\n    } else if (Number(rezultat) == Number(Math.abs(gref))) {\r\n      return [\" \", \"No Class\"];\r\n    } else {\r\n      return [\" \", \"No Class\"];\r\n    }\r\n  },\r\n\r\n  GreaterEqual: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\")   \r\n    // (Interpretacija: \"grte\")\r\n    if (isNaN(rezultat) || rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (Number(rezultat) < Number(Math.abs(gref))) {\r\n      return [\"L\", \"Red\"];\r\n    } else if (Number(rezultat) == Number(Math.abs(gref))) {\r\n      return [\" \", \"Green\"];\r\n    } else {\r\n      return [\" \", \"Green\"];\r\n    }\r\n  },\r\n\r\n  Negativan: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"neg\")\r\n    if (rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (rezultat.includes(\"pozitivan\")) {\r\n      return [\"H\", \"Red\"];\r\n    } else if (rezultat.includes(\"negativan\")) {\r\n      return [\" \", \"Green\"];\r\n    } else if (rezultat.includes(\"graničan\")) {\r\n      return [\" \", \"Yellow\"];\r\n    } else {\r\n      return [\" \", \"Red\"];\r\n    }\r\n  },\r\n\r\n  Reaktivan: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"reakt\")\r\n    if (rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (rezultat.includes(\"reaktivan\")) {\r\n      return [\"H\", \"Red\"];\r\n    } else if (rezultat.includes(\"negativan\")) {\r\n      return [\" \", \"Green\"];\r\n    } else if (rezultat.includes(\"graničan\")) {\r\n      return [\" \", \"Yellow\"];\r\n    } else {\r\n      return [\" \", \"No Class\"];\r\n    }\r\n  },\r\n\r\n  Normalan: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"norm\")\r\n    if (rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (rezultat.toLowerCase().includes(\"norm\") && !rezultat.toLowerCase().includes(\"nije\")) {\r\n      return [\" \", \"Green\"];\r\n    } else {\r\n      return [\"H\", \"Red\"];\r\n    }\r\n  },\r\n\r\n  Uredan: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"ured\")\r\n    if (rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (rezultat.toLowerCase().includes(\"ured\") && !rezultat.toLowerCase().includes(\"nije\")) {\r\n      return [\" \", \"Green\"];\r\n    } else {\r\n      return [\"H\", \"Red\"];\r\n    }\r\n  },\r\n\r\n  Plus: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"ured\")\r\n    if (rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (rezultat.trim() === \"+++\" || rezultat.trim() === \"+ + +\") {\r\n      return [\" \", \"Green\"];\r\n    } else {\r\n      return [\"H\", \"Red\"];\r\n    }\r\n  },\r\n\r\n  Infekcija: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"infekc\")\r\n    if (isNaN(rezultat) || rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\r\n      return [\"pasivna infekcija\", \"Green\"]; // pasivna infekcija\r\n    } else if (Number(rezultat) <= Number(Math.abs(gref)) && Number(rezultat) >= Number(Math.abs(dref))) {\r\n      return [\"siva zona\", \"Yellow\"]; // siva zona\r\n    } else {\r\n      return [\"svježa infekcija\", \"Red\"]; // svježa infekcija\r\n    }\r\n  },\r\n\r\n  TSH: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"tsh\")\r\n    if (isNaN(rezultat) || rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\r\n      return [\"hipotireoza\", \"Red\"];\r\n    } else if (Number(rezultat) <= Number(Math.abs(gref)) && Number(rezultat) >= Number(Math.abs(dref))) {\r\n      return [\"eutireoza\", \"Green\"];\r\n    } else {\r\n      return [\"hipertireoza\", \"Red\"];\r\n    }\r\n  },\r\n\r\n  TRG: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"trg\")\r\n    if (isNaN(rezultat) || rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\r\n      return [\"visoko\", \"Red\"]; // visoko\r\n    } else if (Number(rezultat) <= Number(Math.abs(gref)) && Number(rezultat) >= Number(Math.abs(dref))) {\r\n      return [\"granično\", \"Yellow\"]; // granično\r\n    } else {\r\n      return [\"idealno\", \"Green\"]; // idealno\r\n    }\r\n  },\r\n\r\n  HOL: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"hol\")\r\n    if (isNaN(rezultat) || rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\r\n      return [\"visoko\", \"Red\"]; // visoko\r\n    } else if (Number(rezultat) <= Number(Math.abs(gref)) && Number(rezultat) >= Number(Math.abs(dref))) {\r\n      return [\"granično\", \"Yellow\"]; // granično\r\n    } else {\r\n      return [\"idealno\", \"Green\"]; // idealno\r\n    }\r\n  },\r\n\r\n  HDL: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"hdl\")    \r\n    if (isNaN(rezultat) || rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\r\n      return [\"nema rizika\", \"Green\"]; // nema rizika\r\n    } else if (Number(rezultat) <= Number(Math.abs(gref)) && Number(rezultat) >= Number(Math.abs(dref))) {\r\n      return [\"rizik\", \"Yellow\"]; // rizik\r\n    } else {\r\n      return [\"visok rizik\", \"Red\"]; // visok rizik\r\n    }\r\n  },\r\n\r\n  LDL: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"ldl\")\r\n    if (isNaN(rezultat) || rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\r\n      return [\"visok rizik\", \"Red\"]; // visok rizik\r\n    } else if (Number(rezultat) <= Number(Math.abs(gref)) && Number(rezultat) >= Number(Math.abs(dref))) {\r\n      return [\"granično\", \"Yellow\"]; // granično\r\n    } else {\r\n      return [\"optimalno\", \"Green\"]; // optimalno\r\n    }\r\n  },\r\n\r\n  fPSA: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\")  \r\n    // (Interpretacija: \"fpsa\")\r\n    if (isNaN(rezultat) || rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\r\n      return [\"benigni proces\", \"Green\"]; // benigni proces\r\n    } else if (Number(rezultat) <= Number(Math.abs(gref)) && Number(rezultat) >= Number(Math.abs(dref))) {\r\n      return [\"siva zona\", \"Yellow\"]; // siva zona\r\n    } else {\r\n      return [\"H\", \"Red\"];\r\n    }\r\n  },\r\n\r\n  Sedimentacija: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"sediment\")\r\n    if (rezultat.includes(\"/\")) {\r\n      var rez1 = rezultat.split(\"/\")[0].trim();\r\n      var rez2 = rezultat.split(\"/\")[1].trim();\r\n    }else{\r\n      var rez1 = rezultat.trim();\r\n      var rez2 = rezultat.trim();\r\n    }\r\n\r\n    if (isNaN(rez1) || rez1 === \"\" || isNaN(rez2) || rez2 === \"\" ) {\r\n      return [\" \", \"No Class\"];\r\n    } else if (Number(rez1) > Number(Math.abs(gref))) { // } else if (Number(rez1) > Number(Math.abs(gref)) || Number(rez2) > Number(Math.abs(gref))) {\r\n      return [\"H\", \"Red\"];\r\n    } else if (Number(rez1) === Number(Math.abs(gref))) { // } else if (Number(rez1) === Number(Math.abs(gref)) || Number(rez2) === Number(Math.abs(gref))) {\r\n      return [\" \", \"Yellow\"];\r\n    } else {\r\n      return [\" \", \"Green\"];\r\n    }\r\n  },\r\n\r\n  Bistar: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"bistar\")\r\n    if (rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (rezultat === \"bistar\") {\r\n      return [\" \", \"Green\"];\r\n    } else {\r\n      return [\"H\", \"Red\"];\r\n    }\r\n  },\r\n\r\n  Boja: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"boja\")\r\n    if (rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (rezultat === \"svjetlo žut\" || rezultat === \"žut\") {\r\n      return [\" \", \"Green\"];\r\n    } else {\r\n      return [\"H\", \"Red\"];\r\n    }\r\n  },\r\n\r\n  BojaSpermiogram: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"boja\")\r\n    if (rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (rezultat === \"blijedo žut\") {\r\n      return [\" \", \"Green\"];\r\n    } else {\r\n      return [\"H\", \"Red\"];\r\n    }\r\n  },\r\n\r\n  Nesto: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"nesto\")\r\n    if (rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (rezultat.includes(\"masa\") || rezultat.includes(\"dosta\")) {\r\n      return [\"H\", \"Red\"];\r\n    } else {\r\n      return [\" \", \"Green\"];\r\n    }\r\n  },\r\n\r\n  Exists: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"exists\")\r\n    if (rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else {      \r\n      return [\"H\", \"Red\"];\r\n    }\r\n  },\r\n\r\n  Nema: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"exists\")\r\n    if (rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else {      \r\n      return [\"H\", \"Red\"];\r\n    }\r\n  },\r\n\r\n  Blasti: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // DKS: Blasti (Interpretacija: \"blst\")\r\n    if (isNaN(rezultat) || rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (Number(rezultat) < Number(Math.abs(dref))) {\r\n      return [\" \", \"No Class\"];\r\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\r\n      return [\"H\", \"Red\"];\r\n    } else if (Number(rezultat) === Number(Math.abs(dref)) || Number(rezultat) === Number(Math.abs(gref))) {\r\n      return [\" \", \"No Class\"];\r\n    } else {\r\n      return [\" \", \"Green\"];\r\n    }\r\n  },\r\n\r\n  Morf: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // Spermiogram: Uredne morfološke forme (Interpretacija: \"morf\")\r\n    if (isNaN(rezultat) || rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (Number(rezultat) === Number(Math.abs(dref)) || Number(rezultat) === Number(Math.abs(gref))) {\r\n      return [\" \", \"Green\"];\r\n    } else {\r\n      return [\"H\", \"Red\"];\r\n    }\r\n  },\r\n\r\n  LeuErc: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // Sediment: Leukociti, Eritrociti (Interpretacija: \"leu\")\r\n    if (rezultat.includes(\"-\")) {\r\n      var rez = rezultat.split(\"-\")[1].trim();      \r\n    }else{\r\n      var rez = rezultat.trim();      \r\n    }\r\n    \r\n    if (rez === \"\") {     \r\n      return [\" \", \"No Class\"];\r\n    } else if (isNaN(rez)) {      \r\n      return [\"H\", \"Red\"];\r\n    } else if (Number(rez) > Number(gref)) {      \r\n      return [\"H\", \"Red\"];\r\n    } else if (Number(rez) === Number(gref)) {      \r\n      return [\" \", \"Yellow\"];\r\n    } else {      \r\n      return [\" \", \"Green\"];\r\n    }\r\n  },\r\n\r\n  Titar: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"titar\")\r\n    if (rezultat.includes(\":\")) {\r\n      var rez1 = rezultat.split(\":\")[0].trim();\r\n      var rez2 = rezultat.split(\":\")[1].trim();\r\n    }else{\r\n      var rez1 = rezultat.trim();\r\n      var rez2 = \"\";\r\n    }\r\n\r\n    if (isNaN(rez1) || rez1 === \"\" || rez1 != \"1\" || isNaN(rez2) || rez2 === \"\" ) {\r\n      return [\" \", \"No Class\"];\r\n    } else if (Number(rez2) > Number(Math.abs(gref))) {\r\n      return [\"H\", \"Red\"];\r\n    } else if (Number(rez2) === Number(Math.abs(gref))) {\r\n      return [\" \", \"Yellow\"];\r\n    } else {\r\n      return [\" \", \"Green\"];\r\n    }\r\n  },\r\n\r\n  Specific: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"spec\")\r\n    return [\" \", \"No Class\"];\r\n  },\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/obrada/functions/interpretacija.js","let data = {\r\n  test: [\"\", \"test\"]\r\n};\r\n\r\nlet rez = {\r\n  neg: [\"\", \"negativan\", \"graničan\", \"pozitivan\"],\r\n  reakt: [\"\", \"negativan\", \"graničan\", \"reaktivan\"]\r\n};\r\n\r\nexport default {\r\n  data,\r\n  rez\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/obrada/data-izbornik/izbornik.js","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-61c2f4b3\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/sass-loader/lib/loader.js?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./BadgeColumn.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"23890cab\", content, true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/extract-text-webpack-plugin/dist/loader.js?{\"omit\":1,\"remove\":true}!./node_modules/vue-style-loader!./node_modules/css-loader?{\"minimize\":true,\"sourceMap\":true}!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-61c2f4b3\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/sass-loader/lib/loader.js?{\"sourceMap\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/components/obrada/BadgeColumn.vue\n// module id = 8LKc\n// module chunks = 8 19 29 53","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \".collapse-page__content[data-v-340b1f55]{padding:2rem}.collapse-page__content__title[data-v-340b1f55]{font-size:1.375rem;font-weight:700}.icon-bar a[data-v-340b1f55]{color:#fff;text-decoration:none}.icon-bar a[data-v-340b1f55]:hover{color:#4ae387}i[data-v-340b1f55]:hover{color:#4ae387!important}.circle[data-v-340b1f55]{width:1rem;opacity:.5;height:1rem;border-radius:50%;display:inline-block}\", \"\", {\"version\":3,\"sources\":[\"C:/Users/atom/Desktop/ATOM Projects/ACTIVE Projects/185.62.136.71 (A2 Hosting)/10020 - ExtraLab Laboratorij/elt_client/src/components/obrada/Obrada.vue\"],\"names\":[],\"mappings\":\"AACA,yCACE,YAAc,CACf,AACD,gDACI,mBAAoB,AACpB,eAAkB,CACrB,AACD,6BACE,WAAY,AACZ,oBAAsB,CACvB,AACD,mCACE,aAAe,CAChB,AACD,yBACE,uBAA0B,CAC3B,AACD,yBACE,WAAY,AACZ,WAAa,AACb,YAAa,AACb,kBAAmB,AACnB,oBAAsB,CACvB\",\"file\":\"Obrada.vue\",\"sourcesContent\":[\"\\n.collapse-page__content[data-v-340b1f55] {\\n  padding: 2rem;\\n}\\n.collapse-page__content__title[data-v-340b1f55] {\\n    font-size: 1.375rem;\\n    font-weight: bold;\\n}\\n.icon-bar a[data-v-340b1f55] {\\n  color: #fff;\\n  text-decoration: none;\\n}\\n.icon-bar a[data-v-340b1f55]:hover {\\n  color: #4ae387;\\n}\\ni[data-v-340b1f55]:hover {\\n  color: #4ae387 !important;\\n}\\n.circle[data-v-340b1f55] {\\n  width: 1rem;\\n  opacity: 0.5;\\n  height: 1rem;\\n  border-radius: 50%;\\n  display: inline-block;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader?{\"minimize\":true,\"sourceMap\":true}!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-340b1f55\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/sass-loader/lib/loader.js?{\"sourceMap\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/components/obrada/Obrada.vue\n// module id = C8Lq\n// module chunks = 8","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"collapse-page\"},[(_vm.show)?_c('div',{staticClass:\"flex md12\"},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.main && _vm.pdf),expression:\"!main && pdf\"}]},[_c('div',{staticClass:\"btn-container\"},[_c('button',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.verificiran),expression:\"verificiran\"}],staticClass:\"btn btn-secondary btn-sm\",on:{\"click\":function($event){$event.preventDefault();_vm.Nazad()}}},[_c('span',{staticClass:\"fa fa-step-backward\"}),_vm._v(\"\\n            \"+_vm._s(' NAZAD')+\"\\n          \")]),_vm._v(\" \"),_c('button',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.verificiran),expression:\"!verificiran\"}],staticClass:\"btn btn-secondary-danger btn-sm\",on:{\"click\":function($event){$event.preventDefault();_vm.Nazad()}}},[_c('span',{staticClass:\"fa fa-step-backward\"}),_vm._v(\"\\n            \"+_vm._s(' NAZAD')+\"\\n          \")]),_vm._v(\" \"),_c('button',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.email_button && _vm.verificiran),expression:\"email_button && verificiran\"}],staticClass:\"btn btn-secondary btn-sm pull-right\",attrs:{\"disabled\":!_vm.Email(_vm.email)},on:{\"click\":function($event){$event.preventDefault();_vm.MailDialog()}}},[_c('span',{staticClass:\"glyphicon glyphicon-send\"}),_vm._v(\"\\n            \"+_vm._s(' Pošalji')+\"\\n          \")]),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.email_button && _vm.verificiran),expression:\"email_button && verificiran\"}],staticClass:\"form-group with-icon-left pull-right\"},[_c('div',{staticClass:\"input-group\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.email),expression:\"email\"}],attrs:{\"size\":\"40\",\"id\":\"input-icon-left\",\"name\":\"input-icon-left\",\"title\":\" \",\"required\":\"\"},domProps:{\"value\":(_vm.email)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.email=$event.target.value}}}),_vm._v(\" \"),_c('i',{staticClass:\"fa fa-envelope-o icon-left input-icon\"}),_vm._v(\" \"),_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"input-icon-left\"}},[_vm._v(_vm._s('Email adresa'))]),_vm._v(\" \"),_c('i',{staticClass:\"bar\"})])])]),_vm._v(\" \"),_c('hr'),_vm._v(\" \"),_c('div',{attrs:{\"id\":\"pdf-container\"}})]),_vm._v(\" \"),_c('vuestic-widget',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.main),expression:\"main\"}],attrs:{\"headerText\":_vm.header,\"pagination\":_vm.pagination,\"main\":_vm.main,\"data_pid\":Number(_vm.data_pid),\"data_length\":Number(_vm.data_length),\"rezultati_length\":_vm.Results.length,\"spol\":_vm.data_spol,\"data_min\":Number(_vm.data_min),\"datum\":_vm.query_date,\"today\":_vm.today_date,\"forward_disabled\":_vm.forward_disabled,\"backward_disabled\":_vm.backward_disabled}},[_c('vuestic-accordion-obrada',_vm._l((_vm.uzorci),function(uzorak){return _c('vuestic-collapse-obrada',{directives:[{name:\"show\",rawName:\"v-show\",value:(!uzorak.removed),expression:\"!uzorak.removed\"}],key:uzorak.sid,attrs:{\"id\":uzorak.sid,\"sample\":uzorak,\"retest\":_vm.save_retest}},[_c('span',{attrs:{\"slot\":\"header\",\"id\":uzorak.sid},slot:\"header\"},[_vm._v(_vm._s(uzorak.sid))]),_vm._v(\" \"),_c('div',{attrs:{\"slot\":\"body\"},slot:\"body\"},[_c('div',{staticStyle:{\"line-height\":\"10px\"}},[_vm._v(\" \")]),_vm._v(\" \"),(uzorak.tip.includes('Mikrobiologija'))?_c('div',{staticClass:\"va-row\"},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.show_table),expression:\"show_table\"}],staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped first-td-padding\"},[_c('thead',[_c('tr',{attrs:{\"align\":\"middle\"}},[(uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN')?_c('td'):_vm._e(),_vm._v(\" \"),_c('td',[_vm._v(_vm._s('ANALIZA'))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s('REZULTAT'))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s('JEDINICA'))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s('REFERENCE'))]),_vm._v(\" \"),(uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN')?_c('td'):_vm._e(),_vm._v(\" \"),(uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN' && _vm.MicrobiologyScenario != 'MAIBPoR')?_c('td',[_vm._v(_vm._s('PONOVI'))]):_vm._e(),_vm._v(\" \"),(_vm.MicrobiologyScenario === 'MAIBPoR')?_c('td',{staticStyle:{\"text-transform\":\"none\"}},[_vm._v(_vm._s('Bakterije'))]):_vm._e(),_vm._v(\" \"),_c('td')])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.rezultati),function(test,index){return _c('tr',{directives:[{name:\"show\",rawName:\"v-show\",value:(index < 1),expression:\"index < 1\"}],key:test.labassay_id,class:{\n                          'table-danger': (test.rezultat_m.length && test.rezultat_m[0].pozitivan), \n                          'table-success': (test.rezultat_m.length && test.rezultat_m[0].negativan),\n                          'table-warning': false\n                        },attrs:{\"align\":\"middle\"}},[(uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN')?_c('td',[(uzorak.status === 'ZAPRIMLJEN')?_c('button',{staticClass:\"btn btn-secondary-danger btn-micro\",staticStyle:{\"padding\":\"0.4px\",\"padding-left\":\"2px\"},on:{\"click\":function($event){$event.preventDefault();_vm.MicroResultSelect($event)}}},[_c('i',{staticClass:\"fa fa-bug\",on:{\"click\":function($event){$event.preventDefault();_vm.MicroResultSelect($event)}}})]):_vm._e(),_vm._v(\" \"),(uzorak.status != 'ZAPRIMLJEN')?_c('button',{staticClass:\"btn btn-secondary-danger btn-micro\",staticStyle:{\"padding\":\"0.6px\",\"padding-right\":\"1px\",\"padding-left\":\"1.2px\"},on:{\"click\":function($event){$event.preventDefault();_vm.ResetSample($event)}}},[_c('i',{staticClass:\"fa fa-backward\",on:{\"click\":function($event){$event.preventDefault();_vm.ResetSample($event)}}})]):_vm._e()]):_vm._e(),_vm._v(\" \"),_c('td',{attrs:{\"title\":test.analit}},[_c('span',[_vm._v(_vm._s(test.ime))])]),_vm._v(\" \"),(test.rezultat_m.length > 0)?_c('td',[_c('button',{staticClass:\"btn btn-primary btn-micro\",attrs:{\"id\":test.labassay_id},on:{\"click\":function($event){$event.preventDefault();_vm.OpenMicro($event, test)}}},[_c('span',{staticClass:\"glyphicon glyphicon-search\",attrs:{\"id\":test.labassay_id}}),_vm._v(\"\\n                            \"+_vm._s('VIŠE')+\"\\n                          \")])]):_vm._e(),_vm._v(\" \"),(test.rezultat_m.length < 1)?_c('td',[_c('button',{staticClass:\"btn btn-pale btn-micro\",attrs:{\"id\":test.labassay_id}},[_c('span',{staticClass:\"glyphicon glyphicon-ban-circle\",attrs:{\"id\":test.labassay_id}}),_vm._v(\"\\n                            \"+_vm._s('VIŠE')+\"\\n                          \")])]):_vm._e(),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(test.unit))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s('/'))]),_vm._v(\" \"),(uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN')?_c('td',[_c('i',{staticClass:\"glyphicon glyphicon-stats\",staticStyle:{\"font-size\":\"15px\",\"color\":\"#f7cc36\",\"opacity\":\"0\"},attrs:{\"id\":\"reference\",\"title\":\" \"}})]):_vm._e(),_vm._v(\" \"),(uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN' && _vm.MicrobiologyScenario != 'MAIBPoR')?_c('td',[_c('button',{staticClass:\"btn btn-pale btn-micro\"},[_c('span',{staticClass:\"glyphicon glyphicon-ban-circle\"})])]):_vm._e(),_vm._v(\" \"),(_vm.MicrobiologyScenario === 'MAIBPoR')?_c('td',[_c('button',{staticClass:\"btn btn-primary btn-micro\",on:{\"click\":function($event){$event.preventDefault();_vm.OpenMicroSelect($event, test)}}},[_c('span',{staticClass:\"fa fa-bug\"})])]):_vm._e(),_vm._v(\" \"),_c('td',[_c('i',{class:{'fa fa-exclamation-triangle icon-right input-icon error-icon' : false},on:{\"click\":function($event){$event.preventDefault();_vm.Exclamation(test)}}}),_vm._v(\" \"),_c('i',{class:{'fa fa-check success-icon icon-right input-icon' : false}})])])}))])])]):_vm._e(),_vm._v(\" \"),(!uzorak.tip.includes('Mikrobiologija'))?_c('div',{staticClass:\"va-row\"},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.show_table),expression:\"show_table\"}],staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped first-td-padding\"},[_c('thead',[_c('tr',{attrs:{\"align\":\"middle\"}},[(uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN')?_c('td'):_vm._e(),_vm._v(\" \"),_c('td',[_vm._v(_vm._s('ANALIZA'))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s('REZULTAT'))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s('JEDINICA'))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s('REFERENCE'))]),_vm._v(\" \"),(uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN')?_c('td'):_vm._e(),_vm._v(\" \"),(uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN' && _vm.calculated)?_c('td',[_vm._v(_vm._s('AKCIJA'))]):_vm._e(),_vm._v(\" \"),(uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN')?_c('td',[_vm._v(_vm._s('PONOVI'))]):_vm._e(),_vm._v(\" \"),_c('td')])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.rezultati),function(test){return _c('tr',{key:test.labassay_id,class:{\n                          'table-danger': _vm.Interpretacija(test.analit, test.rezultat, test.unit, test.dRef, test.gRef, _vm.$store.state.site, test.interp, test.extend, _vm.spec)[5] === 'Red' && !test.multidata, \n                          'table-success': _vm.Interpretacija(test.analit, test.rezultat, test.unit, test.dRef, test.gRef, _vm.$store.state.site, test.interp, test.extend, _vm.spec)[5] === 'Green' && !test.multidata,\n                          'table-warning': _vm.Interpretacija(test.analit, test.rezultat, test.unit, test.dRef, test.gRef, _vm.$store.state.site, test.interp, test.extend, _vm.spec)[5] === 'Yellow' && !test.multidata\n                        },attrs:{\"align\":\"middle\"}},[(uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN')?_c('td',[(!test.multidata)?_c('i',{staticClass:\"glyphicon glyphicon-object-align-bottom\",staticStyle:{\"color\":\"#4ae387\"},on:{\"click\":function($event){$event.preventDefault();_vm.SelectAnalyser(test)}}}):_vm._e(),_vm._v(\" \"),(test.multidata)?_c('span',{staticClass:\"glyphicon glyphicon-object-align-bottom\",staticStyle:{\"color\":\"#d9d9d9\"}}):_vm._e()]):_vm._e(),_vm._v(\" \"),_c('td',{attrs:{\"title\":test.analit}},[_c('span',{on:{\"contextmenu\":function($event){_vm.LabAssayEval($event, test)},\"click\":function($event){$event.preventDefault();_vm.Evaluation(test)}}},[_vm._v(_vm._s(test.ime))])]),_vm._v(\" \"),(!test.multidata)?_c('td',[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.edit == false),expression:\"test.edit == false\"}],staticStyle:{\"display\":\"inline\",\"font-size\":\"14px\",\"line-height\":\"4.5px\"}},[_c('label',[_c('strong',[_vm._v(_vm._s(test.rezultat))])])]),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.edit == true),expression:\"test.edit == true\"}],staticStyle:{\"display\":\"inline\",\"line-height\":\"5px\"}},[(test.select_options != undefined)?_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(test.rezultat),expression:\"test.rezultat\"}],staticStyle:{\"width\":\"110px\"},on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.$set(test, \"rezultat\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},_vm._l((test.select_options),function(option){return _c('option',{key:option},[_vm._v(_vm._s(option))])})):_vm._e()]),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.edit == true),expression:\"test.edit == true\"}],staticStyle:{\"display\":\"inline\"}},[(test.select_options === undefined)?_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(test.rezultat),expression:\"test.rezultat\"}],staticStyle:{\"width\":\"110px\",\"font-size\":\"12px\",\"line-height\":\"7px\"},domProps:{\"value\":(test.rezultat)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(test, \"rezultat\", $event.target.value)}}}):_vm._e()]),_vm._v(\" \"),_c('sup',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.vise > 2),expression:\"test.vise > 2\"}],on:{\"click\":function($event){$event.preventDefault();_vm.GetResults(test, uzorak.status)}}},[_c('i',{staticClass:\"fa fa-star\",staticStyle:{\"font-size\":\"5px\",\"color\":\"#e34a4a\"},attrs:{\"id\":\"star\",\"title\":\" \"}})]),_vm._v(\" \"),_c('sup',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.vise < 3),expression:\"test.vise < 3\"}]},[_c('i',{staticClass:\"fa fa-star-o\",staticStyle:{\"font-size\":\"5px\",\"opacity\":\"0\"},attrs:{\"id\":\"star\",\"title\":\" \"}})])]):_vm._e(),_vm._v(\" \"),(test.multidata && test.realizovan)?_c('td',[_c('button',{staticClass:\"btn btn-primary btn-micro\",attrs:{\"id\":test.labassay_id},on:{\"click\":function($event){$event.preventDefault();_vm.MultiGet($event, test.ime, test.analit, test.rezultat, test.odobren)}}},[_c('span',{staticClass:\"glyphicon glyphicon-search\",attrs:{\"id\":test.labassay_id},on:{\"click\":function($event){$event.preventDefault();_vm.MultiGet($event, test.ime, test.analit, test.rezultat, test.odobren)}}}),_vm._v(\"\\n                            \"+_vm._s('VIŠE')+\"\\n                          \")]),_vm._v(\" \"),_c('sup',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.multi_count > 2),expression:\"test.multi_count > 2\"}],on:{\"click\":function($event){$event.preventDefault();_vm.GetResultsMulti(test, uzorak.status)}}},[_c('i',{staticClass:\"fa fa-star\",staticStyle:{\"font-size\":\"5px\",\"color\":\"#e34a4a\"},attrs:{\"id\":\"star\",\"title\":\" \"}})]),_vm._v(\" \"),_c('sup',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.multi_count < 3),expression:\"test.multi_count < 3\"}]},[_c('i',{staticClass:\"fa fa-star-o\",staticStyle:{\"font-size\":\"5px\",\"opacity\":\"0\"},attrs:{\"id\":\"star\",\"title\":\" \"}})])]):_vm._e(),_vm._v(\" \"),(test.multidata && !test.realizovan)?_c('td',[_c('button',{staticClass:\"btn btn-warning btn-micro\",attrs:{\"id\":test.labassay_id},on:{\"click\":function($event){$event.preventDefault();_vm.MultiGet($event, test.ime, test.analit, test.rezultat, test.odobren)}}},[_c('span',{staticClass:\"glyphicon glyphicon-search\",attrs:{\"id\":test.labassay_id},on:{\"click\":function($event){$event.preventDefault();_vm.MultiGet($event, test.ime, test.analit, test.rezultat, test.odobren)}}}),_vm._v(\"\\n                            \"+_vm._s('VIŠE')+\"\\n                          \")]),_vm._v(\" \"),_c('sup',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.multi_count > 2),expression:\"test.multi_count > 2\"}],on:{\"click\":function($event){$event.preventDefault();_vm.GetResultsMulti(test, uzorak.status)}}},[_c('i',{staticClass:\"fa fa-star\",staticStyle:{\"font-size\":\"5px\",\"color\":\"#e34a4a\"},attrs:{\"id\":\"star\",\"title\":\" \"}})]),_vm._v(\" \"),_c('sup',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.multi_count < 3),expression:\"test.multi_count < 3\"}]},[_c('i',{staticClass:\"fa fa-star-o\",staticStyle:{\"font-size\":\"5px\",\"opacity\":\"0\"},attrs:{\"id\":\"star\",\"title\":\" \"}})])]):_vm._e(),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(test.unit))]),_vm._v(\" \"),(!test.multidata)?_c('td',[_vm._v(_vm._s(_vm.Interpretacija(test.analit, test.rezultat, test.unit, test.dRef, test.gRef, _vm.$store.state.site, test.interp, test.extend, _vm.spec)[4]))]):_vm._e(),_vm._v(\" \"),(test.multidata)?_c('td',[_vm._v(_vm._s('/'))]):_vm._e(),_vm._v(\" \"),(uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN')?_c('td',[(!test.multidata)?_c('i',{staticClass:\"glyphicon glyphicon-stats\",staticStyle:{\"font-size\":\"15px\",\"color\":\"#f7cc36\"},attrs:{\"id\":\"reference\",\"title\":\" \"},on:{\"click\":function($event){$event.preventDefault();_vm.Reference($event, test)}}}):_vm._e(),_vm._v(\" \"),(test.multidata)?_c('i',{staticClass:\"glyphicon glyphicon-stats\",staticStyle:{\"font-size\":\"15px\",\"color\":\"#f7cc36\",\"opacity\":\"0\"},attrs:{\"id\":\"reference\",\"title\":\" \"}}):_vm._e()]):_vm._e(),_vm._v(\" \"),(uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN' && _vm.calculated && !test.calculated)?_c('td',[_c('button',{staticClass:\"btn btn-pale btn-micro\"},[_c('span',{staticClass:\"glyphicon glyphicon-ban-circle\"})])]):_vm._e(),_vm._v(\" \"),(uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN' && _vm.calculated && test.calculated)?_c('td',[_c('button',{staticClass:\"btn btn-primary btn-micro\",attrs:{\"id\":test.test},on:{\"click\":function($event){$event.preventDefault();_vm.Calculate($event, test.labassay_id, test.ime, test.id)}}},[_c('span',{staticClass:\"fa fa-calculator\",attrs:{\"id\":test.test}})])]):_vm._e(),_vm._v(\" \"),(uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN' \n                          && (test.rezultat === '' || test.manual || test.calculated))?_c('td',[_c('button',{staticClass:\"btn btn-pale btn-micro\"},[_c('span',{staticClass:\"glyphicon glyphicon-ban-circle\"})])]):_vm._e(),_vm._v(\" \"),(uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN' \n                          && test.rezultat != '' && !test.manual && !test.calculated)?_c('td',[(!test.retest)?_c('button',{staticClass:\"btn btn-primary btn-micro\",attrs:{\"id\":test.test},on:{\"click\":function($event){$event.preventDefault();_vm.RetestEnable($event)}}},[_c('span',{staticClass:\"fa fa-refresh\",attrs:{\"id\":test.test}})]):_vm._e(),_vm._v(\" \"),(test.retest)?_c('button',{staticClass:\"btn btn-info btn-micro\",attrs:{\"id\":test.test},on:{\"click\":function($event){$event.preventDefault();_vm.RetestDisable($event)}}},[_c('span',{staticClass:\"glyphicon glyphicon-duplicate\",attrs:{\"id\":test.test}})]):_vm._e()]):_vm._e(),_vm._v(\" \"),_c('td',[_c('i',{class:{'fa fa-exclamation-triangle icon-right input-icon error-icon' : _vm.Interpretacija(test.analit, test.rezultat, test.unit, test.dRef, test.gRef, _vm.$store.state.site, test.interp, test.extend, _vm.spec)[5] === 'Red' && !test.multidata},on:{\"click\":function($event){$event.preventDefault();_vm.Exclamation(test)}}}),_vm._v(\" \"),_c('i',{class:{'fa fa-check success-icon icon-right input-icon' : _vm.Interpretacija(test.analit, test.rezultat, test.unit, test.dRef, test.gRef, _vm.$store.state.site, test.interp, test.extend, _vm.spec)[5] === 'Green' && !test.multidata}})])])}))])])]):_vm._e()])])})),_vm._v(\" \"),_c('div',{staticStyle:{\"min-height\":\"10px\"}}),_vm._v(\" \"),(_vm.verificiran)?_c('div',{staticClass:\"va-row\"},[_c('div',{staticClass:\"flex md12\"},[_c('vuestic-collapse-nalaz',{attrs:{\"final\":_vm.verificiran,\"final_pdf\":_vm.final_pdf,\"samples\":_vm.samples,\"pdf\":_vm.link,\"pacijent\":_vm.ime + ' ' + _vm.prezime}},[_c('span',{attrs:{\"slot\":\"header\"},slot:\"header\"},[_vm._v(\"Nalaz\")]),_vm._v(\" \"),_c('div',{attrs:{\"slot\":\"body\"},slot:\"body\"},[_c('div',{staticClass:\"va-row\"})])])],1)]):_vm._e(),_vm._v(\" \"),_c('div',[_c('hr')]),_vm._v(\" \"),_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-3\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-6\"},[_c('div',{staticClass:\"btn-container\"},[_c('button',{staticClass:\"btn btn-secondary btn-sm wizard-back pull-left\",on:{\"click\":function($event){$event.preventDefault();_vm.Povratak()}}},[_c('span',{staticClass:\"fa fa-backward\"}),_vm._v(\"\\n                \"+_vm._s(' POVRATAK')+\"\\n              \")]),_vm._v(\" \"),(_vm.partials_condition && !_vm.verificiran)?_c('button',{staticClass:\"btn btn-secondary-warning btn-sm wizard-back pull-right\",staticStyle:{\"text-transform\":\"none\",\"color\":\"#e34a4a\"},on:{\"click\":function($event){$event.preventDefault();_vm.Partials()}}},[_c('span',{staticClass:\"fa fa-file-pdf-o\",staticStyle:{\"color\":\"#e34a4a\"}}),_vm._v(\"\\n                \"+_vm._s(' Djelimični nalaz')+\"\\n              \")]):_vm._e()])])])],1),_vm._v(\" \"),_c('vuestic-modal-multi',{ref:\"largeModalMulti\",attrs:{\"show\":_vm.show,\"sample\":_vm.sample,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(_vm._s(_vm.naslov))]),_vm._v(\" \"),_c('div',{staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped first-td-padding\"},[_c('thead',[_c('tr',{attrs:{\"align\":\"middle\"}},[_c('td',{attrs:{\"width\":\"10%\"}}),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('ANALIT'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"30%\"}},[_vm._v(_vm._s('REZULTAT'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"10%\"}},[_vm._v(_vm._s('JEDINICA'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('REFERENCE'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"10%\"}})])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.analiti),function(test){return _c('tr',{key:test.labID,class:{\n                    'table-danger': _vm.Interpretacija(test.opis, test.rezultat, test.jedinica, test.refd, test.refg, _vm.$store.state.site, test.interp, test.extend, _vm.spec)[5] === 'Red' && !test.rezultat_multiple.length, \n                    'table-success': _vm.Interpretacija(test.opis, test.rezultat, test.jedinica, test.refd, test.refg, _vm.$store.state.site, test.interp, test.extend, _vm.spec)[5] === 'Green' && !test.rezultat_multiple.length, \n                    'table-warning': _vm.Interpretacija(test.opis, test.rezultat, test.jedinica, test.refd, test.refg, _vm.$store.state.site, test.interp, test.extend, _vm.spec)[5] === 'Yellow' && !test.rezultat_multiple.length                                  \n                  },attrs:{\"align\":\"middle\"}},[(test.flag != '')?_c('td',[_vm._v(_vm._s(test.flag))]):_vm._e(),_vm._v(\" \"),(test.flag === '')?_c('td',[_vm._v(\" \")]):_vm._e(),_vm._v(\" \"),_c('td',{attrs:{\"title\":test.opis}},[_vm._v(_vm._s(test.naziv))]),_vm._v(\" \"),_c('td',{attrs:{\"id\":test.analit}},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.edit == false),expression:\"test.edit == false\"}]},[_c('label',[_c('strong',[_vm._v(_vm._s(test.rezultat))])])]),_vm._v(\" \"),(test.select_options != undefined && (test.kod === 's03' || test.kod === 's04' || test.kod === 's08' || test.kod === 's09'))?_c('select',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.edit == true),expression:\"test.edit == true\"},{name:\"model\",rawName:\"v-model\",value:(test.rezultat_multiple),expression:\"test.rezultat_multiple\"}],staticStyle:{\"min-width\":\"200px\"},attrs:{\"multiple\":\"\",\"size\":test.select_options.length},on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.$set(test, \"rezultat_multiple\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},_vm._l((test.select_options),function(option){return _c('option',{key:option},[_vm._v(_vm._s(option))])})):_vm._e(),_vm._v(\" \"),(test.select_options != undefined && (test.kod != 's03' && test.kod != 's04' && test.kod != 's08' && test.kod != 's09'))?_c('select',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.edit == true),expression:\"test.edit == true\"},{name:\"model\",rawName:\"v-model\",value:(test.rezultat),expression:\"test.rezultat\"}],staticStyle:{\"width\":\"200px\"},on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.$set(test, \"rezultat\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},_vm._l((test.select_options),function(option){return _c('option',{key:option},[_vm._v(_vm._s(option))])})):_vm._e(),_vm._v(\" \"),(test.select_options === undefined)?_c('input',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.edit == true),expression:\"test.edit == true\"},{name:\"model\",rawName:\"v-model\",value:(test.rezultat),expression:\"test.rezultat\"}],staticStyle:{\"width\":\"200px\"},domProps:{\"value\":(test.rezultat)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(test, \"rezultat\", $event.target.value)}}}):_vm._e()]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(_vm.Interpretacija(test.opis, test.rezultat, test.jedinica, test.refd, test.refg, _vm.$store.state.site, test.interp, test.extend, _vm.spec)[3]))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(_vm.Interpretacija(test.opis, test.rezultat, test.jedinica, test.refd, test.refg, _vm.$store.state.site, test.interp, test.extend, _vm.spec)[4]))]),_vm._v(\" \"),_c('td',[_c('i',{class:{'fa fa-exclamation-triangle icon-right input-icon error-icon' : _vm.Interpretacija(test.opis, test.rezultat, test.jedinica, test.refd, test.refg, _vm.$store.state.site, test.interp, test.extend, _vm.spec)[5] === 'Red' && !test.rezultat_multiple.length},on:{\"click\":function($event){$event.preventDefault();_vm.ExclamationMulti(test)}}}),_vm._v(\" \"),_c('i',{class:{'fa fa-check success-icon icon-right input-icon' : _vm.Interpretacija(test.opis, test.rezultat, test.jedinica, test.refd, test.refg, _vm.$store.state.site, test.interp, test.extend, _vm.spec)[5] === 'Green' && !test.rezultat_multiple.length}})])])}))])])]),_vm._v(\" \"),_c('vuestic-modal-micro-reset',{ref:\"staticModalResetSample\",attrs:{\"show\":_vm.show,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',{staticStyle:{\"color\":\"#acb5be\"}},[_vm._v(_vm._s('Brisanje rezultata: '))]),_vm._v(\" \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(_vm.CurrentTest))])]),_vm._v(\" \"),_c('div',[_c('h5',[_vm._v(_vm._s('Jeste li sigurni da želite obrisati rezultat?'))])])]),_vm._v(\" \"),_c('vuestic-modal-micro-bactery',{ref:\"staticModalMicroBacterySelect\",attrs:{\"show\":_vm.show,\"large\":true,\"sample\":_vm.sample,\"select\":true,\"update\":!_vm.ShowAntibiotics && !_vm.ShowBacteries && _vm.MicrobiologyScenario === 'MAIBPoR',\"povratak\":_vm.ShowAntibiotics || _vm.ShowBacteries,\"empty\":_vm.TemporaryAntibiotics.length > 0 || _vm.TemporaryBacteriesAdd.length > 0,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[(!_vm.ShowAntibiotics && !_vm.ShowBacteries)?_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',{staticStyle:{\"color\":\"#acb5be\"}},[_vm._v(_vm._s('Rezultat analize: '))]),_vm._v(\" \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(_vm.CurrentTest))])]):_vm._e(),_vm._v(\" \"),(_vm.ShowAntibiotics && !_vm.ShowBacteries)?_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',{staticStyle:{\"color\":\"#acb5be\"}},[_vm._v(_vm._s('Antibiotici | '))]),_vm._v(\" \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"Izbornik\"))])]):_vm._e(),_vm._v(\" \"),(!_vm.ShowAntibiotics && _vm.ShowBacteries)?_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',{staticStyle:{\"color\":\"#acb5be\"}},[_vm._v(_vm._s('Bakterije | '))]),_vm._v(\" \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"Izbornik\"))])]):_vm._e(),_vm._v(\" \"),_c('div',[(_vm.show_table)?_c('div',{staticClass:\"row\"},[(_vm.MicrobiologyScenario === 'MAIBPoR' && _vm.ShowBacteries && !_vm.ShowAntibiotics)?_c('div',{staticClass:\"col-md-1\"}):_vm._e(),_vm._v(\" \"),(_vm.MicrobiologyScenario === 'MAIBPoR' && _vm.ShowBacteries && !_vm.ShowAntibiotics)?_c('div',{staticClass:\"col-md-10\"},[(_vm.TemporaryBacteries.length)?_c('div',{staticClass:\"col-md-12\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-4\"},_vm._l((_vm.filteredBacteries(1, 3)),function(bactery){return _c('div',{key:bactery._id,staticClass:\"form-check abc-checkbox abc-checkbox-primary\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(bactery.chosen),expression:\"bactery.chosen\"}],staticClass:\"form-check-input\",attrs:{\"id\":bactery._id,\"type\":\"checkbox\",\"disabled\":bactery.disabled},domProps:{\"checked\":Array.isArray(bactery.chosen)?_vm._i(bactery.chosen,null)>-1:(bactery.chosen)},on:{\"click\":function($event){_vm.AddBacteries(bactery)},\"change\":function($event){var $$a=bactery.chosen,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(bactery.chosen=$$a.concat([$$v]))}else{$$i>-1&&(bactery.chosen=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.$set(bactery, \"chosen\", $$c)}}}}),_vm._v(\" \"),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":bactery._id}},[(!bactery.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(bactery.opis))]):_vm._e(),_vm._v(\" \"),(bactery.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#4ae387\"}},[_vm._v(_vm._s(bactery.opis))]):_vm._e()])])})),_vm._v(\" \"),_c('div',{staticClass:\"col-md-4\"},_vm._l((_vm.filteredBacteries(2, 3)),function(bactery){return _c('div',{key:bactery._id,staticClass:\"form-check abc-checkbox abc-checkbox-primary\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(bactery.chosen),expression:\"bactery.chosen\"}],staticClass:\"form-check-input\",attrs:{\"id\":bactery._id,\"type\":\"checkbox\",\"disabled\":bactery.disabled},domProps:{\"checked\":Array.isArray(bactery.chosen)?_vm._i(bactery.chosen,null)>-1:(bactery.chosen)},on:{\"click\":function($event){_vm.AddBacteries(bactery)},\"change\":function($event){var $$a=bactery.chosen,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(bactery.chosen=$$a.concat([$$v]))}else{$$i>-1&&(bactery.chosen=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.$set(bactery, \"chosen\", $$c)}}}}),_vm._v(\" \"),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":bactery._id}},[(!bactery.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(bactery.opis))]):_vm._e(),_vm._v(\" \"),(bactery.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#4ae387\"}},[_vm._v(_vm._s(bactery.opis))]):_vm._e()])])})),_vm._v(\" \"),_c('div',{staticClass:\"col-md-4\"},_vm._l((_vm.filteredBacteries(3, 3)),function(bactery){return _c('div',{key:bactery._id,staticClass:\"form-check abc-checkbox abc-checkbox-primary\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(bactery.chosen),expression:\"bactery.chosen\"}],staticClass:\"form-check-input\",attrs:{\"id\":bactery._id,\"type\":\"checkbox\",\"disabled\":bactery.disabled},domProps:{\"checked\":Array.isArray(bactery.chosen)?_vm._i(bactery.chosen,null)>-1:(bactery.chosen)},on:{\"click\":function($event){_vm.AddBacteries(bactery)},\"change\":function($event){var $$a=bactery.chosen,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(bactery.chosen=$$a.concat([$$v]))}else{$$i>-1&&(bactery.chosen=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.$set(bactery, \"chosen\", $$c)}}}}),_vm._v(\" \"),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":bactery._id}},[(!bactery.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(bactery.opis))]):_vm._e(),_vm._v(\" \"),(bactery.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#4ae387\"}},[_vm._v(_vm._s(bactery.opis))]):_vm._e()])])}))])]):_vm._e()]):_vm._e(),_vm._v(\" \"),(_vm.MicrobiologyScenario === 'MAIBPoR' && _vm.ShowAntibiotics && !_vm.ShowBacteries)?_c('div',{staticClass:\"col-md-1\"}):_vm._e(),_vm._v(\" \"),(_vm.MicrobiologyScenario === 'MAIBPoR' && _vm.ShowAntibiotics && !_vm.ShowBacteries)?_c('div',{staticClass:\"col-md-10\"},[(_vm.Antibiotics.length)?_c('div',{staticClass:\"col-md-12\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-4\"},_vm._l((_vm.filteredAntibiotics(1, 3)),function(antibiotik){return _c('div',{key:antibiotik._id,staticClass:\"form-check abc-checkbox abc-checkbox-primary\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(antibiotik.chosen),expression:\"antibiotik.chosen\"}],staticClass:\"form-check-input\",attrs:{\"id\":antibiotik._id,\"type\":\"checkbox\",\"disabled\":antibiotik.disabled},domProps:{\"checked\":Array.isArray(antibiotik.chosen)?_vm._i(antibiotik.chosen,null)>-1:(antibiotik.chosen)},on:{\"click\":function($event){_vm.AddAntibiotics(antibiotik)},\"change\":function($event){var $$a=antibiotik.chosen,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(antibiotik.chosen=$$a.concat([$$v]))}else{$$i>-1&&(antibiotik.chosen=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.$set(antibiotik, \"chosen\", $$c)}}}}),_vm._v(\" \"),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":antibiotik._id}},[(!antibiotik.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(antibiotik.opis))]):_vm._e(),_vm._v(\" \"),(antibiotik.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#4ae387\"}},[_vm._v(_vm._s(antibiotik.opis))]):_vm._e()])])})),_vm._v(\" \"),_c('div',{staticClass:\"col-md-4\"},_vm._l((_vm.filteredAntibiotics(2, 3)),function(antibiotik){return _c('div',{key:antibiotik._id,staticClass:\"form-check abc-checkbox abc-checkbox-primary\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(antibiotik.chosen),expression:\"antibiotik.chosen\"}],staticClass:\"form-check-input\",attrs:{\"id\":antibiotik._id,\"type\":\"checkbox\",\"disabled\":antibiotik.disabled},domProps:{\"checked\":Array.isArray(antibiotik.chosen)?_vm._i(antibiotik.chosen,null)>-1:(antibiotik.chosen)},on:{\"click\":function($event){_vm.AddAntibiotics(antibiotik)},\"change\":function($event){var $$a=antibiotik.chosen,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(antibiotik.chosen=$$a.concat([$$v]))}else{$$i>-1&&(antibiotik.chosen=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.$set(antibiotik, \"chosen\", $$c)}}}}),_vm._v(\" \"),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":antibiotik._id}},[(!antibiotik.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(antibiotik.opis))]):_vm._e(),_vm._v(\" \"),(antibiotik.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#4ae387\"}},[_vm._v(_vm._s(antibiotik.opis))]):_vm._e()])])})),_vm._v(\" \"),_c('div',{staticClass:\"col-md-4\"},_vm._l((_vm.filteredAntibiotics(3, 3)),function(antibiotik){return _c('div',{key:antibiotik._id,staticClass:\"form-check abc-checkbox abc-checkbox-primary\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(antibiotik.chosen),expression:\"antibiotik.chosen\"}],staticClass:\"form-check-input\",attrs:{\"id\":antibiotik._id,\"type\":\"checkbox\",\"disabled\":antibiotik.disabled},domProps:{\"checked\":Array.isArray(antibiotik.chosen)?_vm._i(antibiotik.chosen,null)>-1:(antibiotik.chosen)},on:{\"click\":function($event){_vm.AddAntibiotics(antibiotik)},\"change\":function($event){var $$a=antibiotik.chosen,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(antibiotik.chosen=$$a.concat([$$v]))}else{$$i>-1&&(antibiotik.chosen=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.$set(antibiotik, \"chosen\", $$c)}}}}),_vm._v(\" \"),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":antibiotik._id}},[(!antibiotik.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(antibiotik.opis))]):_vm._e(),_vm._v(\" \"),(antibiotik.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#4ae387\"}},[_vm._v(_vm._s(antibiotik.opis))]):_vm._e()])])}))])]):_vm._e()]):_vm._e(),_vm._v(\" \"),(_vm.MicrobiologyScenario === 'MAIBPoR' && !_vm.ShowAntibiotics && !_vm.ShowBacteries)?_c('div',{staticClass:\"col-md-1\"}):_vm._e(),_vm._v(\" \"),(_vm.MicrobiologyScenario === 'MAIBPoR' && !_vm.ShowAntibiotics && !_vm.ShowBacteries)?_c('div',{staticClass:\"col-md-10\"},[(_vm.SelectedBacteries.length)?_c('vuestic-tabs-bactery',{ref:\"tabs\",attrs:{\"names\":_vm.BacteryTabs,\"tab\":_vm.CurrentTab,\"id\":_vm.CurrentTab,\"prikazi\":_vm.sample.status != 'VERIFICIRAN' && _vm.sample.status != 'ODOBREN'}},_vm._l((_vm.SelectedBacteries),function(test){return _c('div',{key:test._id,attrs:{\"slot\":_vm.CurrentTab},slot:_vm.CurrentTab},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.opis === _vm.CurrentTab),expression:\"test.opis === CurrentTab\"}],staticClass:\"row\"},[_c('div',{staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped first-td-padding\"},[_c('thead',[_c('tr',{attrs:{\"align\":\"left\"}},[_c('td',{staticStyle:{\"text-transform\":\"none\"},attrs:{\"width\":\"30%\"}},[_vm._v(_vm._s(test.antibiogram.opis))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"10%\"}},[_vm._v(_vm._s(''))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(''))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(''))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(''))])])]),_vm._v(\" \"),_c('tbody',_vm._l((test.antibiogram.antibiotici),function(abtk){return _c('tr',{key:abtk._id,class:{'table-danger': false, 'table-success': false,'table-warning': false},attrs:{\"align\":\"left\"}},[_c('td',{attrs:{\"title\":abtk.opis}},[_vm._v(_vm._s(abtk.opis))]),_vm._v(\" \"),_c('td',[_c('bactery-radio-button',{attrs:{\"disabled\":_vm.sample.status === 'ODOBREN' || _vm.sample.status === 'VERIFICIRAN',\"label\":'',\"value\":'',\"id\":'' + test._id + abtk._id,\"name\":test._id + abtk._id},model:{value:(abtk.rezultat),callback:function ($$v) {_vm.$set(abtk, \"rezultat\", $$v)},expression:\"abtk.rezultat\"}})],1),_vm._v(\" \"),_c('td',[_c('postavke-radio-button',{attrs:{\"disabled\":_vm.sample.status === 'ODOBREN' || _vm.sample.status === 'VERIFICIRAN',\"label\":'Senzitivan',\"value\":'S',\"id\":'S' + test._id + abtk._id,\"name\":test._id + abtk._id},model:{value:(abtk.rezultat),callback:function ($$v) {_vm.$set(abtk, \"rezultat\", $$v)},expression:\"abtk.rezultat\"}})],1),_vm._v(\" \"),_c('td',[_c('postavke-radio-button',{attrs:{\"disabled\":_vm.sample.status === 'ODOBREN' || _vm.sample.status === 'VERIFICIRAN',\"label\":'Intermedijaran',\"value\":'I',\"id\":'I' + test._id + abtk._id,\"name\":test._id + abtk._id},model:{value:(abtk.rezultat),callback:function ($$v) {_vm.$set(abtk, \"rezultat\", $$v)},expression:\"abtk.rezultat\"}})],1),_vm._v(\" \"),_c('td',[_c('postavke-radio-button',{attrs:{\"disabled\":_vm.sample.status === 'ODOBREN' || _vm.sample.status === 'VERIFICIRAN',\"label\":'Rezistentan',\"value\":'R',\"id\":'R' + test._id + abtk._id,\"name\":test._id + abtk._id},model:{value:(abtk.rezultat),callback:function ($$v) {_vm.$set(abtk, \"rezultat\", $$v)},expression:\"abtk.rezultat\"}})],1)])}))])])])])})):_vm._e()],1):_vm._e(),_vm._v(\" \"),(_vm.MicrobiologyScenario === 'MANBNeR' || _vm.MicrobiologyScenario === 'MANBPoR' || _vm.MicrobiologyScenario === 'MAIBNeR')?_c('div',{staticClass:\"col-md-12\"},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.show_table),expression:\"show_table\"}],staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped first-td-padding\"},[_c('thead',[_c('tr',{attrs:{\"align\":\"left\"}},[_c('td',[_vm._v(_vm._s('REZULTAT'))])])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.rezultati),function(test,index){return _c('tr',{directives:[{name:\"show\",rawName:\"v-show\",value:(index < 1),expression:\"index < 1\"}],key:test.labassay_id,class:{\n                          'table-danger':  (test.rezultat_m.length && test.rezultat_m[0].pozitivan), \n                          'table-success':  (test.rezultat_m.length && test.rezultat_m[0].negativan),\n                          'table-warning': false\n                        },attrs:{\"align\":\"left\"}},[(_vm.sample.status != 'ODOBREN' &&  _vm.sample.status != 'VERIFICIRAN')?_c('td',[_c('div',{staticClass:\"form-group\"},[_c('div',{staticClass:\"input-group\"},[_c('textarea',{directives:[{name:\"model\",rawName:\"v-model\",value:(test.rezultat),expression:\"test.rezultat\"}],attrs:{\"type\":\"text\",\"id\":\"simple-textarea\",\"required\":\"\"},domProps:{\"value\":(test.rezultat)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(test, \"rezultat\", $event.target.value)}}}),_vm._v(\" \"),_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"simple-textarea\"}},[_vm._v(_vm._s(''))]),_vm._v(\" \"),_c('i',{staticClass:\"bar\"})])])]):_vm._e(),_vm._v(\" \"),(_vm.sample.status === 'ODOBREN' ||  _vm.sample.status === 'VERIFICIRAN')?_c('td',[_c('div',{staticClass:\"form-group\"},[_c('div',{staticClass:\"input-group\"},[_c('input',{attrs:{\"id\":\"input-icon-left\",\"title\":\" \",\"name\":\"input-icon-left\",\"disabled\":\"\"}}),_vm._v(\" \"),(test.rezultat.length)?_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"input-icon-left\"}},[_vm._v(_vm._s(test.rezultat))]):_vm._e(),_vm._v(\" \"),(!test.rezultat.length)?_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"input-icon-left\"}},[_vm._v(_vm._s(\"Nema podataka.\"))]):_vm._e(),_vm._v(\" \"),_c('i',{staticClass:\"bar\"})])])]):_vm._e()])}))])])]):_vm._e()]):_vm._e()])]),_vm._v(\" \"),_c('vuestic-modal-micro-bactery',{ref:\"staticModalMicroBactery\",attrs:{\"show\":_vm.show,\"large\":true,\"sample\":_vm.sample,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',{staticStyle:{\"color\":\"#acb5be\"}},[_vm._v(_vm._s('Rezultat analize: '))]),_vm._v(\" \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(_vm.CurrentTest))])]),_vm._v(\" \"),_c('div',[(_vm.show_table)?_c('div',{staticClass:\"row\"},[(true)?_c('div',{staticClass:\"col-md-12\"},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.show_table),expression:\"show_table\"}],staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped first-td-padding\"},[_c('thead',[_c('tr',{attrs:{\"align\":\"left\"}},[_c('td',[_vm._v(_vm._s('REZULTAT'))])])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.rezultati),function(test,index){return _c('tr',{directives:[{name:\"show\",rawName:\"v-show\",value:(index < 1),expression:\"index < 1\"}],key:test.labassay_id,class:{\n                          'table-danger':  (test.rezultat_m.length && test.rezultat_m[0].pozitivan), \n                          'table-success':  (test.rezultat_m.length && test.rezultat_m[0].negativan),\n                          'table-warning': false\n                        },attrs:{\"align\":\"left\"}},[(_vm.sample.status != 'ODOBREN' &&  _vm.sample.status != 'VERIFICIRAN')?_c('td',[_c('div',{staticClass:\"form-group\"},[_c('div',{staticClass:\"input-group\"},[_c('textarea',{directives:[{name:\"model\",rawName:\"v-model\",value:(test.rezultat),expression:\"test.rezultat\"}],attrs:{\"type\":\"text\",\"id\":\"simple-textarea\",\"required\":\"\"},domProps:{\"value\":(test.rezultat)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(test, \"rezultat\", $event.target.value)}}}),_vm._v(\" \"),_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"simple-textarea\"}},[_vm._v(_vm._s(''))]),_vm._v(\" \"),_c('i',{staticClass:\"bar\"})])])]):_vm._e(),_vm._v(\" \"),(_vm.sample.status === 'ODOBREN' ||  _vm.sample.status === 'VERIFICIRAN')?_c('td',[_c('div',{staticClass:\"form-group\"},[_c('div',{staticClass:\"input-group\"},[_c('input',{attrs:{\"id\":\"input-icon-left\",\"title\":\" \",\"name\":\"input-icon-left\",\"disabled\":\"\"}}),_vm._v(\" \"),(test.rezultat.length)?_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"input-icon-left\"}},[_vm._v(_vm._s(test.rezultat))]):_vm._e(),_vm._v(\" \"),(!test.rezultat.length)?_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"input-icon-left\"}},[_vm._v(_vm._s(\"Nema podataka.\"))]):_vm._e(),_vm._v(\" \"),_c('i',{staticClass:\"bar\"})])])]):_vm._e()])}))])])]):_vm._e()]):_vm._e()])]),_vm._v(\" \"),_c('vuestic-modal-micro-result',{ref:\"staticModalSelectResult\",attrs:{\"show\":_vm.show,\"sample\":_vm.sample,\"large\":_vm.ShowAllBacteries,\"neg\":_vm.ModalNegative,\"pos\":_vm.ModalPositive,\"selected\":_vm.ModalPositiveCondition,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',{staticStyle:{\"color\":\"#acb5be\"}},[_vm._v(_vm._s(_vm.MicrobiologyModalHeader)+\" |\")]),_vm._v(\" \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"Izbornik\"))])]),_vm._v(\" \"),(!_vm.ModalNegative && !_vm.ModalPositive)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-6\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-3\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-6\"},[_c('button',{staticClass:\"btn btn-secondary btn-sm wizard-back pull-left\",staticStyle:{\"text-transform\":\"none\",\"border\":\"0px\"},on:{\"click\":function($event){_vm.ModalNegative = true; _vm.ModalPositive = false;}}},[_vm._v(_vm._s('Negativan'))])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-3\"})])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-6\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-2\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-6\"},[_c('button',{staticClass:\"btn btn-secondary-danger btn-sm wizard-next pull-right\",staticStyle:{\"text-transform\":\"none\",\"border\":\"0px\"},on:{\"click\":function($event){_vm.ModalPositive = true; _vm.ModalNegative = false;}}},[_vm._v(_vm._s('Pozitivan'))])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-4\"})])])]):_vm._e(),_vm._v(\" \"),(_vm.ModalNegative && !_vm.ModalPositive)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-1\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-11\"},_vm._l((_vm.MicrobiologyResult.NegativeDescriptions),function(desc,index){return _c('vuestic-radio-button',{key:index,attrs:{\"label\":_vm.MicrobiologyResult.NegativeDescriptions[index],\"id\":_vm.MicrobiologyResult.NegativeDescriptions[index],\"value\":_vm.MicrobiologyResult.NegativeDescriptions[index],\"name\":_vm.MicrobiologyResult.NegativeDescriptions[index],\"disabled\":false},model:{value:(_vm.NegativeResultSelection),callback:function ($$v) {_vm.NegativeResultSelection=$$v},expression:\"NegativeResultSelection\"}})}))]):_vm._e(),_vm._v(\" \"),(!_vm.ModalNegative && _vm.ModalPositive && !_vm.MicrobiologyResult.DefaultBacteries.length)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-1\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-11\"},_vm._l((_vm.MicrobiologyResult.PositiveDescriptions),function(desc,index){return _c('vuestic-radio-button',{key:index,attrs:{\"label\":_vm.MicrobiologyResult.PositiveDescriptions[index],\"id\":_vm.MicrobiologyResult.PositiveDescriptions[index],\"value\":_vm.MicrobiologyResult.PositiveDescriptions[index],\"name\":_vm.MicrobiologyResult.PositiveDescriptions[index],\"disabled\":false},model:{value:(_vm.PositiveResultSelection),callback:function ($$v) {_vm.PositiveResultSelection=$$v},expression:\"PositiveResultSelection\"}})}))]):_vm._e(),_vm._v(\" \"),(!_vm.ModalNegative && _vm.ModalPositive && _vm.MicrobiologyResult.DefaultBacteries.length)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-6\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-2\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-10\"},_vm._l((_vm.MicrobiologyResult.DefaultBacteries),function(bakt,index){return _c('div',{key:index,staticClass:\"form-check abc-checkbox abc-checkbox-primary\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(bakt.chosen),expression:\"bakt.chosen\"}],staticClass:\"form-check-input\",attrs:{\"id\":bakt._id,\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(bakt.chosen)?_vm._i(bakt.chosen,null)>-1:(bakt.chosen)},on:{\"click\":function($event){_vm.SelectBactery(bakt, index)},\"change\":function($event){var $$a=bakt.chosen,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(bakt.chosen=$$a.concat([$$v]))}else{$$i>-1&&(bakt.chosen=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.$set(bakt, \"chosen\", $$c)}}}}),_vm._v(\" \"),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":bakt._id}},[_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(bakt.opis))])])])}))])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-6\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-1\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-6\"},[(!_vm.ShowAllBacteries)?_c('a',{staticStyle:{\"font-size\":\"16px\",\"color\":\"#4ae387\"},attrs:{\"href\":\"#\"},on:{\"click\":function($event){$event.preventDefault();_vm.ShowAllBacteries = true}}},[_vm._v(\"Prikaži više\")]):_vm._e()]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-5\"})]),_vm._v(\" \"),(_vm.ShowAllBacteries)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-1\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-10\"},_vm._l((_vm.MicrobiologyResult.RemainingBacteries),function(bakt,index){return _c('div',{key:index,staticClass:\"form-check abc-checkbox abc-checkbox-primary\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(bakt.chosen),expression:\"bakt.chosen\"}],staticClass:\"form-check-input\",attrs:{\"id\":bakt._id,\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(bakt.chosen)?_vm._i(bakt.chosen,null)>-1:(bakt.chosen)},on:{\"click\":function($event){_vm.SelectBactery(bakt, index)},\"change\":function($event){var $$a=bakt.chosen,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(bakt.chosen=$$a.concat([$$v]))}else{$$i>-1&&(bakt.chosen=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.$set(bakt, \"chosen\", $$c)}}}}),_vm._v(\" \"),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":bakt._id}},[_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(bakt.opis))])])])}))]):_vm._e()])]):_vm._e()]),_vm._v(\" \"),_c('vuestic-modal-delete',{ref:\"staticModalDeleteSample\",attrs:{\"show\":_vm.show,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',{staticStyle:{\"color\":\"#acb5be\"}},[_vm._v(_vm._s('Brisanje uzorka: '))]),_vm._v(\" \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(_vm.sid))])]),_vm._v(\" \"),_c('div',[_c('h5',[_vm._v(_vm._s('Jeste li sigurni da želite obrisati uzorak?'))])])]),_vm._v(\" \"),_c('vuestic-modal-comment',{ref:\"staticModalComment\",attrs:{\"show\":_vm.show,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(_vm._s('Unos komentara za uzorak: ' + _vm.sid))]),_vm._v(\" \"),_c('div',[_c('h5')])]),_vm._v(\" \"),_c('vuestic-modal-edit',{ref:\"staticModalEditSample\",attrs:{\"show\":_vm.show,\"sample\":_vm.sid,\"action\":\"Edit\",\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(_vm._s('Uređivanje uzorka: ' + _vm.sid))]),_vm._v(\" \"),_c('div',[_c('h5')])]),_vm._v(\" \"),_c('vuestic-modal-mail',{ref:\"staticModalSendMail\",attrs:{\"show\":_vm.show,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"\\n          \"+_vm._s('Slanje nalaza na adresu: ')+\"\\n          \"),_c('span',{staticStyle:{\"color\":\"#4ae387\"}},[_vm._v(_vm._s(_vm.email))])]),_vm._v(\" \"),_c('div',[_c('h5',[_vm._v(_vm._s('Jeste li sigurni da želite poslati nalaz?'))])])]),_vm._v(\" \"),_c('vuestic-modal-all-results',{ref:\"staticModalAllResults\",attrs:{\"show\":_vm.show,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"\\n          \"+_vm._s('Izbor rezultata: ')+\"\\n          \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(_vm.labassay))])]),_vm._v(\" \"),_c('div',[_c('div',{staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped first-td-padding\"},[_c('thead',[_c('tr',[_c('td',[_vm._v(\"analizator\")]),_vm._v(\" \"),_c('td',[_vm._v(\"vrijeme\")]),_vm._v(\" \"),_c('td',[_vm._v(\"rezultat\")]),_vm._v(\" \"),_c('td',[_vm._v(\"jedinica\")]),_vm._v(\" \"),_c('td',[_vm._v(\"reference\")]),_vm._v(\" \"),(_vm.sample_status != 'ODOBREN' &&  _vm.sample_status != 'VERIFICIRAN')?_c('td',[_vm._v(\"izbor\")]):_vm._e(),_vm._v(\" \"),_c('td',{attrs:{\"align\":\"middle\"}})])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.vise.rezultat),function(test){return _c('tr',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.rezultat_f != ''),expression:\"test.rezultat_f != ''\"}],key:test._id,class:{\n                    'table-danger': _vm.Interpretacija(_vm.vise.labassay.analit, test.rezultat_f, test.jedinice_f, _vm.vise.refd, _vm.vise.refg, _vm.$store.state.site, _vm.vise.interp, _vm.vise.extend, _vm.spec)[5] === 'Red' && !test.multidata, \n                    'table-success': _vm.Interpretacija(_vm.vise.labassay.analit, test.rezultat_f, test.jedinice_f, _vm.vise.refd, _vm.vise.refg, _vm.$store.state.site, _vm.vise.interp, _vm.vise.extend, _vm.spec)[5] === 'Green' && !test.multidata,\n                    'table-warning': _vm.Interpretacija(_vm.vise.labassay.analit, test.rezultat_f, test.jedinice_f, _vm.vise.refd, _vm.vise.refg, _vm.$store.state.site, _vm.vise.interp, _vm.vise.extend, _vm.spec)[5] === 'Yellow' && !test.multidata\n                  }},[_c('td',[_vm._v(_vm._s(test.anaassay.aparat.ime))]),_vm._v(\" \"),_c('td',[_vm._v(\"\\n                    \"+_vm._s(JSON.stringify(\n                    test.updated_at\n                    ).slice(9, 11) +\n                    \".\" +\n                    JSON.stringify(\n                    test.updated_at\n                    ).slice(6, 8) +\n                    \".\" +\n                    JSON.stringify(\n                    test.updated_at\n                    ).slice(1, 5) + ' | ')+\"\\n                    \"),_c('sub',[_vm._v(\"\\n                      \"+_vm._s(JSON.stringify(\n                      test.updated_at\n                      ).slice(12, 20))+\"\\n                    \")])]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(test.rezultat_f))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(test.jedinice_f))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(_vm.Interpretacija(_vm.vise.labassay.analit, test.rezultat_f, test.jedinice_f, _vm.vise.refd, _vm.vise.refg, _vm.$store.state.site, _vm.vise.interp, _vm.vise.extend, _vm.spec)[4]))]),_vm._v(\" \"),(_vm.sample_status != 'ODOBREN' &&  _vm.sample_status != 'VERIFICIRAN')?_c('td',[(!test.izabran)?_c('i',{staticClass:\"glyphicon glyphicon-unchecked\",staticStyle:{\"font-size\":\"18px\",\"color\":\"#e34a4a\"},on:{\"click\":function($event){$event.preventDefault();_vm.IzborTesta(_vm.vise, test)}}}):_vm._e(),_vm._v(\" \"),(test.izabran)?_c('i',{staticClass:\"glyphicon glyphicon-check\",staticStyle:{\"font-size\":\"18px\",\"color\":\"#4ae387\"}}):_vm._e()]):_vm._e(),_vm._v(\" \"),_c('td',[_c('i',{class:{'fa fa-exclamation-triangle icon-right input-icon error-icon' : _vm.Interpretacija(_vm.vise.labassay.analit, test.rezultat_f, test.jedinice_f, _vm.vise.refd, _vm.vise.refg, _vm.$store.state.site, _vm.vise.interp, _vm.vise.extend, _vm.spec)[5] === 'Red'}}),_vm._v(\" \"),_c('i',{class:{'fa fa-check success-icon icon-right input-icon' : _vm.Interpretacija(_vm.vise.labassay.analit, test.rezultat_f, test.jedinice_f, _vm.vise.refd, _vm.vise.refg, _vm.$store.state.site, _vm.vise.interp, _vm.vise.extend, _vm.spec)[5] === 'Green'}})])])}))])])])]),_vm._v(\" \"),_c('vuestic-modal-error',{ref:\"staticModalError\",attrs:{\"show\":_vm.show,\"cancelText\":\"ZATVORI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"\\n          \"+_vm._s('')+\"\\n          \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s('404: Not Found'))])]),_vm._v(\" \"),_c('div',[_c('h5',[_vm._v(_vm._s('Greška prilikom čitanja nalaza.'))])])]),_vm._v(\" \"),_c('vuestic-modal-error',{ref:\"staticModalVerifyPrivilege\",attrs:{\"show\":_vm.show,\"cancelText\":\"ZATVORI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"\\n          \"+_vm._s('')+\"\\n          \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s('401: Not Authorized'))])]),_vm._v(\" \"),_c('div',[_c('h5',[_vm._v(_vm._s('Nemate odgovarajuće privilegije.'))])])]),_vm._v(\" \"),_c('vuestic-modal-exclamation',{ref:\"staticModalExclamation\",attrs:{\"show\":_vm.show,\"cancelText\":\"ZATVORI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"\\n          \"+_vm._s('')+\"\\n          \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(_vm.warning.analiza))])]),_vm._v(\" \"),_c('div',[_c('h5',[_vm._v(_vm._s(_vm.warning.control))]),_vm._v(\" \"),_c('p',[_vm._v(_vm._s(_vm.warning.text))])])]),_vm._v(\" \"),_c('vuestic-modal-reference',{ref:\"staticModalReference\",attrs:{\"show\":_vm.show,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"\\n          \"+_vm._s('Referentne vrijednosti: ')+\"\\n          \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(_vm.reference.naziv)+\" (\"+_vm._s(_vm.reference.opis)+\")\")])]),_vm._v(\" \"),_c('div',[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-1\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-2\"},[_c('div',{staticClass:\"form-group\"},[_c('div',{staticClass:\"input-group\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.reference.dref),expression:\"reference.dref\"}],staticStyle:{\"color\":\"#e34a4a\"},attrs:{\"id\":\"input-icon-left\",\"title\":\" \",\"name\":\"input-icon-left\",\"required\":\"\"},domProps:{\"value\":(_vm.reference.dref)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.reference, \"dref\", $event.target.value)}}}),_vm._v(\" \"),_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"input-icon-left\"}},[_vm._v(_vm._s('Donja'))]),_vm._v(\" \"),_c('i',{staticClass:\"bar\"})])])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-1\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-2\"},[_c('div',{staticClass:\"form-group\"},[_c('div',{staticClass:\"input-group\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.reference.gref),expression:\"reference.gref\"}],staticStyle:{\"color\":\"#e34a4a\"},attrs:{\"id\":\"input-icon-left\",\"title\":\" \",\"name\":\"input-icon-left\",\"required\":\"\"},domProps:{\"value\":(_vm.reference.gref)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.reference, \"gref\", $event.target.value)}}}),_vm._v(\" \"),_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"input-icon-left\"}},[_vm._v(_vm._s('Gornja'))]),_vm._v(\" \"),_c('i',{staticClass:\"bar\"})])])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-1\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-4\"},[(_vm.$store.state.access.level < 1)?_c('vuestic-simple-select',{staticStyle:{\"font-size\":\"14px\"},attrs:{\"label\":\"Interpretacija\",\"title\":\" \",\"options\":_vm.interpretacije},model:{value:(_vm.reference.interp),callback:function ($$v) {_vm.$set(_vm.reference, \"interp\", $$v)},expression:\"reference.interp\"}}):_vm._e(),_vm._v(\" \"),(_vm.$store.state.access.level > 0)?_c('div',{staticClass:\"form-group\"},[_c('div',{staticClass:\"input-group\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.reference.interp),expression:\"reference.interp\"}],attrs:{\"id\":\"input-icon-left\",\"title\":\" \",\"name\":\"input-icon-left\",\"required\":\"\",\"disabled\":true},domProps:{\"value\":(_vm.reference.interp)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.reference, \"interp\", $event.target.value)}}}),_vm._v(\" \"),_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"input-icon-left\"}},[_vm._v(_vm._s(_vm.reference.interp))]),_vm._v(\" \"),_c('i',{staticClass:\"bar\"})])]):_vm._e()],1),_vm._v(\" \"),_c('div',{staticClass:\"col-md-1\"})]),_vm._v(\" \"),_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-1\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-2\"},[_c('vuestic-simple-select',{staticStyle:{\"font-size\":\"14px\"},attrs:{\"label\":\"Jedinica\",\"title\":\" \",\"options\":_vm.jedinice},model:{value:(_vm.reference.jedinica),callback:function ($$v) {_vm.$set(_vm.reference, \"jedinica\", $$v)},expression:\"reference.jedinica\"}})],1),_vm._v(\" \"),_c('div',{staticClass:\"col-md-1\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-7\"},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.reference.interp != 'spec'),expression:\"reference.interp != 'spec'\"}],staticClass:\"form-group\"},[_c('div',{staticClass:\"input-group\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.reference.extend),expression:\"reference.extend\"}],staticStyle:{\"color\":\"#e34a4a\"},attrs:{\"id\":\"input-icon-left\",\"title\":\" \",\"name\":\"input-icon-left\",\"required\":\"\"},domProps:{\"value\":(_vm.reference.extend)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.reference, \"extend\", $event.target.value)}}}),_vm._v(\" \"),_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"input-icon-left\"}},[_vm._v(_vm._s('Proširena referentna vrijednost'))]),_vm._v(\" \"),_c('i',{staticClass:\"bar\"})])]),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.reference.interp === 'spec'),expression:\"reference.interp === 'spec'\"}],staticClass:\"form-group\"},[_c('div',{staticClass:\"input-group\"},[_c('textarea',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.reference.extend),expression:\"reference.extend\"}],staticStyle:{\"color\":\"#e34a4a\"},attrs:{\"type\":\"text\",\"id\":\"simple-textarea\",\"required\":\"\"},domProps:{\"value\":(_vm.reference.extend)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.reference, \"extend\", $event.target.value)}}}),_vm._v(\" \"),_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"simple-textarea\"}},[_vm._v(_vm._s('Specifična interpretacija rezultata'))]),_vm._v(\" \"),_c('i',{staticClass:\"bar\"})])])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-1\"})])])]),_vm._v(\" \"),_c('vuestic-modal-find',{ref:\"staticModalFind\",attrs:{\"show\":_vm.show,\"data_pid\":Number(_vm.data_pid),\"data_length\":Number(_vm.data_length),\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"\\n          \"+_vm._s('')+\"\\n          \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s('Redni broj pacijenta'))])]),_vm._v(\" \"),_c('div',[_c('h5')])]),_vm._v(\" \"),_c('vuestic-modal-aparati',{ref:\"staticModalAparati\",attrs:{\"show\":_vm.show,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"\\n          \"+_vm._s('Izbor analizatora: ')+\"\\n          \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(this.analiza.ime + ' (' + this.analiza.analit + ')'))])]),_vm._v(\" \"),_c('div',[_c('vuestic-accordion-obrada',_vm._l((_vm.analysers),function(element){return _c('vuestic-collapse-aparati',{key:element._id,attrs:{\"analyser\":element}},[_c('span',{attrs:{\"slot\":\"header\"},slot:\"header\"},[_vm._v(_vm._s(element.ime + ', ' + element.site.naziv))]),_vm._v(\" \"),_c('div',{attrs:{\"slot\":\"body\"},slot:\"body\"},[_c('div',{staticClass:\"va-row\"})])])}))],1)]),_vm._v(\" \"),_c('vuestic-modal-results-multi',{ref:\"staticModalResultsMulti\",attrs:{\"show\":_vm.show,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"\\n          \"+_vm._s('Izbor rezultata: ')+\"\\n          \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(_vm.multi_test))])]),_vm._v(\" \"),_c('div')]),_vm._v(\" \"),_c('patient-evaluation-single',{ref:\"staticModalEvaluationSingle\",attrs:{\"show\":_vm.show,\"cancelText\":\"ZATVORI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',[_vm._v(_vm._s(_vm.ime + ' ' + _vm.prezime))])]),_vm._v(\" \"),(_vm.Procjena.length && !_vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',{staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped table-sm color-icon-label-table\"},[_c('thead',[_c('tr',{attrs:{\"align\":\"middle\"}},[_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('REZULTAT'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('JEDINICA'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('REFERENCE'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('DATUM'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"15%\"}},[_vm._v(_vm._s('VRIJEME'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"5%\",\"align\":\"middle\"}})])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.Procjena),function(element,index){return _c('tr',{key:index,class:{\n                          'table-danger': _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Red', \n                          'table-success': _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Green',\n                          'table-warning': _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Yellow'\n                        },attrs:{\"align\":\"middle\"}},[_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.rezultat))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.jedinica))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(_vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[4]))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.datum))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"15%\"}},[_vm._v(_vm._s(element.vrijeme))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"9%\",\"align\":\"middle\"}},[_c('i',{class:{'fa fa-exclamation-triangle icon-right input-icon error-icon' : _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Red'}}),_vm._v(\" \"),_c('i',{class:{'fa fa-check success-icon icon-right input-icon' : _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Green'}})])])}))]),_vm._v(\" \"),_c('div',{staticStyle:{\"text-align\":\"center\"}},[_c('span',{staticClass:\"circle badge-info\"}),_vm._v(\"\\n                \"+_vm._s(_vm.table_header)+\"\\n              \")])])])]):_vm._e(),_vm._v(\" \"),(_vm.showLineChart && _vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('line-chart',{attrs:{\"options\":_vm.optionsLineChart,\"data\":_vm.dataLineChart,\"type\":\"line\"}})],1)]):_vm._e(),_vm._v(\" \"),(!_vm.showLineChart && _vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',[_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"Nema podataka.\"))])])])]):_vm._e()]),_vm._v(\" \"),_c('patient-evaluation-single',{ref:\"staticModalLabAssayEvalSingle\",attrs:{\"show\":_vm.show,\"cancelText\":\"ZATVORI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',{staticStyle:{\"color\":\"#4ae387\"}},[_vm._v(_vm._s(_vm.analiza_eval.ime + ' (' + _vm.analiza_eval.analit + ')'))]),_vm._v(\" \"),_c('span',[_vm._v(_vm._s(\" - Rezultati analize u zadnjih 14 dana\"))])]),_vm._v(\" \"),(_vm.Procjena.length && !_vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',{staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped table-sm color-icon-label-table\"},[_c('thead',[_c('tr',{attrs:{\"align\":\"middle\"}},[_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('REZULTAT'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('JEDINICA'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('REFERENCE'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('DATUM'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"15%\"}},[_vm._v(_vm._s('VRIJEME'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"5%\",\"align\":\"middle\"}})])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.Procjena),function(element,index){return _c('tr',{key:index,class:{\n                      'table-danger': _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Red', \n                      'table-success': _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Green',\n                      'table-warning': _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Yellow'\n                    },attrs:{\"align\":\"middle\"}},[_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.rezultat))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.jedinica))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(_vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[4]))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.datum))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"15%\"}},[_vm._v(_vm._s(element.vrijeme))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"9%\",\"align\":\"middle\"}},[_c('i',{class:{'fa fa-exclamation-triangle icon-right input-icon error-icon' : _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Red'}}),_vm._v(\" \"),_c('i',{class:{'fa fa-check success-icon icon-right input-icon' : _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Green'}})])])}))]),_vm._v(\" \"),_c('div',{staticStyle:{\"text-align\":\"center\"}},[_c('span',{staticClass:\"circle badge-info\"}),_vm._v(\"\\n                \"+_vm._s(_vm.table_header)+\"\\n              \")])])])]):_vm._e(),_vm._v(\" \"),(_vm.showLineChart && _vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('line-chart',{attrs:{\"options\":_vm.optionsLineChart,\"data\":_vm.dataLineChart,\"type\":\"line\"}})],1)]):_vm._e(),_vm._v(\" \"),(!_vm.showLineChart && _vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',[_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"Nema podataka.\"))])])])]):_vm._e()]),_vm._v(\" \"),_c('patient-evaluation-multi',{ref:\"staticModalEvaluationMulti\",attrs:{\"show\":_vm.show,\"multiparam_izbor\":_vm.multiparam_izbor,\"multiparam_izbornik\":_vm.multiparam_izbornik,\"cancelText\":\"ZATVORI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',[_vm._v(_vm._s(_vm.ime + ' ' + _vm.prezime))])]),_vm._v(\" \"),(_vm.Procjena.length && !_vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',{staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped table-sm color-icon-label-table\"},[_c('thead',[_c('tr',{attrs:{\"align\":\"middle\"}},[_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('REZULTAT'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('JEDINICA'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('REFERENCE'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('DATUM'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"15%\"}},[_vm._v(_vm._s('VRIJEME'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"5%\",\"align\":\"middle\"}})])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.Procjena),function(element,index){return _c('tr',{key:index,class:{\n                      'table-danger': _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Red', \n                      'table-success': _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Green',\n                      'table-warning': _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Yellow'\n                    },attrs:{\"align\":\"middle\"}},[_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.rezultat))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.jedinica))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(_vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[4]))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.datum))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"15%\"}},[_vm._v(_vm._s(element.vrijeme))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"9%\",\"align\":\"middle\"}},[_c('i',{class:{'fa fa-exclamation-triangle icon-right input-icon error-icon' : _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Red'}}),_vm._v(\" \"),_c('i',{class:{'fa fa-check success-icon icon-right input-icon' : _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Green'}})])])}))]),_vm._v(\" \"),_c('div',{staticStyle:{\"text-align\":\"center\"}},[_c('span',{staticClass:\"circle badge-info\"}),_vm._v(\"\\n                \"+_vm._s(_vm.table_header)+\"\\n              \")])])])]):_vm._e(),_vm._v(\" \"),(!_vm.Procjena.length && !_vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',[_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"Nema podataka.\"))])])])]):_vm._e(),_vm._v(\" \"),(_vm.showLineChart && _vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('line-chart',{attrs:{\"options\":_vm.optionsLineChart,\"data\":_vm.dataLineChart,\"type\":\"line\"}})],1)]):_vm._e(),_vm._v(\" \"),(!_vm.showLineChart && _vm.graph)?_c('div',{staticClass:\"row\"},[(!_vm.showLineChart && !_vm.spinner)?_c('div',{staticClass:\"col-md-12\"},[_c('div',[_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"Nema podataka.\"))])])]):_vm._e(),_vm._v(\" \"),(!_vm.showLineChart && _vm.spinner)?_c('div',{staticClass:\"col-md-12\",staticStyle:{\"min-height\":\"400px\"}},[_c('div',{staticStyle:{\"display\":\"flex\",\"flex-direction\":\"row\",\"justify-content\":\"center\",\"align-items\":\"center\"}},[_c('div',{staticStyle:{\"float\":\"left\"}}),_vm._v(\" \"),_c('span',{staticStyle:{\"vertical-align\":\"middle\"}},[_c('atom-spinner',{staticStyle:{\"opacity\":\"0.25\"},attrs:{\"animation-duration\":1000,\"size\":300,\"color\":'#4ae387'}})],1)])]):_vm._e()]):_vm._e()]),_vm._v(\" \"),_c('patient-evaluation-multi',{ref:\"staticModalLabAssayEvalMulti\",attrs:{\"show\":_vm.show,\"multiparam_izbor\":_vm.multiparam_izbor,\"multiparam_izbornik\":_vm.multiparam_izbornik,\"cancelText\":\"ZATVORI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',{staticStyle:{\"color\":\"#4ae387\"}},[_vm._v(_vm._s(_vm.analiza_eval.ime + ' (' + _vm.analiza_eval.analit + ')'))]),_vm._v(\" \"),_c('span',[_vm._v(_vm._s(\" - Rezultati analize u zadnjih 14 dana\"))])]),_vm._v(\" \"),(_vm.Procjena.length && !_vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',{staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped table-sm color-icon-label-table\"},[_c('thead',[_c('tr',{attrs:{\"align\":\"middle\"}},[_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('REZULTAT'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('JEDINICA'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('REFERENCE'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('DATUM'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"15%\"}},[_vm._v(_vm._s('VRIJEME'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"5%\",\"align\":\"middle\"}})])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.Procjena),function(element,index){return _c('tr',{key:index,class:{\n                      'table-danger': _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Red', \n                      'table-success': _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Green',\n                      'table-warning': _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Yellow'\n                    },attrs:{\"align\":\"middle\"}},[_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.rezultat))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.jedinica))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(_vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[4]))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.datum))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"15%\"}},[_vm._v(_vm._s(element.vrijeme))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"9%\",\"align\":\"middle\"}},[_c('i',{class:{'fa fa-exclamation-triangle icon-right input-icon error-icon' : _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Red'}}),_vm._v(\" \"),_c('i',{class:{'fa fa-check success-icon icon-right input-icon' : _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Green'}})])])}))]),_vm._v(\" \"),_c('div',{staticStyle:{\"text-align\":\"center\"}},[_c('span',{staticClass:\"circle badge-info\"}),_vm._v(\"\\n                \"+_vm._s(_vm.table_header)+\"\\n              \")])])])]):_vm._e(),_vm._v(\" \"),(!_vm.Procjena.length && !_vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',[_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"Nema podataka.\"))])])])]):_vm._e(),_vm._v(\" \"),(_vm.showLineChart && _vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('line-chart',{attrs:{\"options\":_vm.optionsLineChart,\"data\":_vm.dataLineChart,\"type\":\"line\"}})],1)]):_vm._e(),_vm._v(\" \"),(!_vm.showLineChart && _vm.graph)?_c('div',{staticClass:\"row\"},[(!_vm.showLineChart && !_vm.spinner)?_c('div',{staticClass:\"col-md-12\"},[_c('div',[_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"Nema podataka.\"))])])]):_vm._e(),_vm._v(\" \"),(!_vm.showLineChart && _vm.spinner)?_c('div',{staticClass:\"col-md-12\",staticStyle:{\"min-height\":\"400px\"}},[_c('div',{staticStyle:{\"display\":\"flex\",\"flex-direction\":\"row\",\"justify-content\":\"center\",\"align-items\":\"center\"}},[_c('div',{staticStyle:{\"float\":\"left\"}}),_vm._v(\" \"),_c('span',{staticStyle:{\"vertical-align\":\"middle\"}},[_c('atom-spinner',{staticStyle:{\"opacity\":\"0.25\"},attrs:{\"animation-duration\":1000,\"size\":300,\"color\":'#4ae387'}})],1)])]):_vm._e()]):_vm._e()])],1):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',{staticClass:\"col-md-6\"},[_c('loading',{attrs:{\"active\":_vm.isLoading,\"can-cancel\":false,\"on-cancel\":_vm.onCancel,\"color\":\"#4ae387\",\"is-full-page\":_vm.fullPage},on:{\"update:active\":function($event){_vm.isLoading=$event}}})],1),_vm._v(\" \"),_c('div',{staticClass:\"col-md-6\"},[(false)?_c('button',{on:{\"click\":function($event){$event.preventDefault();_vm.Test($event)}}},[_vm._v(_vm._s('Loading...'))]):_vm._e()])])])])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-340b1f55\",\"hasScoped\":true,\"transformToRequire\":{\"video\":\"src\",\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/obrada/Obrada.vue\n// module id = Cprh\n// module chunks = 8","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \".circle[data-v-61c2f4b3]{width:.4rem;height:.4rem;border-radius:50%;display:inline-block}\", \"\", {\"version\":3,\"sources\":[\"C:/Users/atom/Desktop/ATOM Projects/ACTIVE Projects/185.62.136.71 (A2 Hosting)/10020 - ExtraLab Laboratorij/elt_client/src/components/obrada/BadgeColumn.vue\"],\"names\":[],\"mappings\":\"AACA,yBACE,YAAc,AACd,aAAe,AACf,kBAAmB,AACnB,oBAAsB,CACvB\",\"file\":\"BadgeColumn.vue\",\"sourcesContent\":[\"\\n.circle[data-v-61c2f4b3] {\\n  width: 0.4rem;\\n  height: 0.4rem;\\n  border-radius: 50%;\\n  display: inline-block;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader?{\"minimize\":true,\"sourceMap\":true}!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-61c2f4b3\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/sass-loader/lib/loader.js?{\"sourceMap\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/components/obrada/BadgeColumn.vue\n// module id = DQ8Z\n// module chunks = 8 19 29 53","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('span',{staticClass:\"circle\",class:_vm.classObject})}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-61c2f4b3\",\"hasScoped\":true,\"transformToRequire\":{\"video\":\"src\",\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/obrada/BadgeColumn.vue\n// module id = FC28\n// module chunks = 8 19 29 53","// 19.1.2.7 Object.getOwnPropertyNames(O)\nrequire('./_object-sap')('getOwnPropertyNames', function () {\n  return require('./_object-gopn-ext').f;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/es6.object.get-own-property-names.js\n// module id = G5/o\n// module chunks = 8","<template>\r\n  <div class=\"collapse-page\">\r\n    <div v-if=\"show\" class=\"flex md12\">\r\n\r\n      <!-- Prikaz nalaza -->\r\n\r\n      <div v-show=\"!main && pdf\">\r\n        <div class=\"btn-container\">\r\n          <button v-show=\"verificiran\" class=\"btn btn-secondary btn-sm\" @click.prevent=\"Nazad()\">\r\n            <span class=\"fa fa-step-backward\"></span>\r\n            {{ ' NAZAD'}}\r\n          </button>\r\n          <button\r\n            v-show=\"!verificiran\"\r\n            class=\"btn btn-secondary-danger btn-sm\"\r\n            @click.prevent=\"Nazad()\"\r\n          >\r\n            <span class=\"fa fa-step-backward\"></span>\r\n            {{ ' NAZAD'}}\r\n          </button>\r\n          <button\r\n            v-show=\"email_button && verificiran\"\r\n            class=\"btn btn-secondary btn-sm pull-right\"\r\n            :disabled=\"!Email(email)\"\r\n            @click.prevent=\"MailDialog()\"\r\n          >\r\n            <span class=\"glyphicon glyphicon-send\"></span>\r\n            {{ ' Pošalji'}}\r\n          </button>\r\n          <div v-show=\"email_button && verificiran\" class=\"form-group with-icon-left pull-right\">\r\n            <div class=\"input-group\">\r\n              <input\r\n                size=\"40\"\r\n                id=\"input-icon-left\"\r\n                name=\"input-icon-left\"\r\n                v-model=\"email\"\r\n                title=\" \"\r\n                required\r\n              />\r\n              <i class=\"fa fa-envelope-o icon-left input-icon\"></i>\r\n              <label class=\"control-label\" for=\"input-icon-left\">{{'Email adresa'}}</label>\r\n              <i class=\"bar\"></i>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <hr />\r\n\r\n        <!-- PDFObject -->\r\n\r\n        <div id=\"pdf-container\"></div>\r\n      </div>\r\n\r\n      <!-- Prikaz rezultata (Main screen) -->\r\n\r\n      <vuestic-widget\r\n        v-show=\"main\"\r\n        :headerText=\"header\"\r\n        :pagination=\"pagination\"\r\n        :main=\"main\"\r\n        :data_pid=\"Number(data_pid)\"\r\n        :data_length=\"Number(data_length)\"\r\n        :rezultati_length=\"Results.length\"\r\n        :spol=\"data_spol\"\r\n        :data_min=\"Number(data_min)\"\r\n        :datum=\"query_date\"\r\n        :today=\"today_date\"\r\n        :forward_disabled=\"forward_disabled\"\r\n        :backward_disabled=\"backward_disabled\"\r\n      >\r\n        <vuestic-accordion-obrada>\r\n          <vuestic-collapse-obrada\r\n            v-for=\"uzorak in uzorci\"\r\n            v-show=\"!uzorak.removed\"\r\n            :id=\"uzorak.sid\"\r\n            :key=\"uzorak.sid\"\r\n            :sample=\"uzorak\"\r\n            :retest=\"save_retest\"\r\n          >\r\n            <span :id=\"uzorak.sid\" slot=\"header\">{{uzorak.sid}}</span>\r\n            <div slot=\"body\">\r\n              <div style=\"line-height: 10px;\">&nbsp;</div>\r\n\r\n              <!--  -->\r\n              <!--  -->\r\n              <!--  -->\r\n              <!--  -->\r\n              <!--  -->\r\n              <!-- \r\n\r\n\r\n\r\n\r\n\r\n| Microbiology Table\r\n\r\n\r\n\r\n\r\n\r\n              -->\r\n              <!--  -->\r\n              <!--  -->\r\n              <!--  -->\r\n              <!--  -->\r\n              <!--  -->\r\n\r\n              <div v-if=\"uzorak.tip.includes('Mikrobiologija')\" class=\"va-row\">\r\n                <div v-show=\"show_table\" class=\"table-responsive\">\r\n                  <table class=\"table table-striped first-td-padding\">\r\n                    <thead>\r\n                      <tr align=\"middle\">\r\n                        <td v-if=\"uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN'\"></td>\r\n                        <td>{{'ANALIZA'}}</td>\r\n                        <td>{{'REZULTAT'}}</td>\r\n                        <td>{{'JEDINICA'}}</td>\r\n                        <td>{{'REFERENCE'}}</td>\r\n                        <td v-if=\"uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN'\"></td>\r\n                        <td\r\n                          v-if=\"uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN' && MicrobiologyScenario != 'MAIBPoR'\"\r\n                        >{{'PONOVI'}}</td>\r\n                        <td\r\n                          v-if=\"MicrobiologyScenario === 'MAIBPoR'\"\r\n                          style=\"text-transform: none;\"\r\n                        >{{'Bakterije'}}</td>\r\n                        <td></td>\r\n                      </tr>\r\n                    </thead>\r\n\r\n                    <!-- Table Body -->\r\n\r\n                    <tbody>\r\n                      <tr\r\n                        align=\"middle\"\r\n                        v-for=\"(test, index) in rezultati\"\r\n                        v-show=\"index < 1\"\r\n                        :key=\"test.labassay_id\"\r\n                        v-bind:class=\"{\r\n                          'table-danger': (test.rezultat_m.length && test.rezultat_m[0].pozitivan), \r\n                          'table-success': (test.rezultat_m.length && test.rezultat_m[0].negativan),\r\n                          'table-warning': false\r\n                        }\"\r\n                      >\r\n                        <td v-if=\"uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN'\">\r\n                          <button\r\n                            style=\"padding: 0.4px; padding-left: 2px;\"\r\n                            v-if=\"uzorak.status === 'ZAPRIMLJEN'\"\r\n                            @click.prevent=\"MicroResultSelect($event)\"\r\n                            class=\"btn btn-secondary-danger btn-micro\"\r\n                          >\r\n                            <i class=\"fa fa-bug\" @click.prevent=\"MicroResultSelect($event)\"></i>\r\n                          </button>\r\n                          <button\r\n                            style=\"padding: 0.6px; padding-right: 1px; padding-left: 1.2px;\"\r\n                            v-if=\"uzorak.status != 'ZAPRIMLJEN'\"\r\n                            @click.prevent=\"ResetSample($event)\"\r\n                            class=\"btn btn-secondary-danger btn-micro\"\r\n                          >\r\n                            <i class=\"fa fa-backward\" @click.prevent=\"ResetSample($event)\"></i>\r\n                          </button>\r\n                        </td>\r\n\r\n                        <!-- ANALIZA -->\r\n\r\n                        <td :title=\"test.analit\">\r\n                          <span>{{test.ime}}</span>\r\n                        </td>\r\n\r\n                        <!-- REZULTAT -->\r\n\r\n                        <td v-if=\"test.rezultat_m.length > 0\">\r\n                          <button\r\n                            :id=\"test.labassay_id\"\r\n                            class=\"btn btn-primary btn-micro\"\r\n                            @click.prevent=\"OpenMicro($event, test)\"\r\n                          >\r\n                            <span\r\n                              :id=\"test.labassay_id\"                              \r\n                              class=\"glyphicon glyphicon-search\"\r\n                            ></span>\r\n                            {{'VIŠE'}}\r\n                          </button>\r\n                        </td>\r\n                        <td v-if=\"test.rezultat_m.length < 1\">\r\n                          <button :id=\"test.labassay_id\" class=\"btn btn-pale btn-micro\">\r\n                            <span :id=\"test.labassay_id\" class=\"glyphicon glyphicon-ban-circle\"></span>\r\n                            {{'VIŠE'}}\r\n                          </button>\r\n                        </td>\r\n\r\n                        <!-- JEDINICA -->\r\n\r\n                        <td>{{test.unit}}</td>\r\n\r\n                        <!-- REFERENCE -->\r\n\r\n                        <td>{{'/'}}</td>\r\n                        <td v-if=\"uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN'\">\r\n                          <i\r\n                            style=\"font-size: 15px; color: #f7cc36; opacity: 0;\"\r\n                            class=\"glyphicon glyphicon-stats\"\r\n                            id=\"reference\"\r\n                            title=\" \"\r\n                          ></i>\r\n                        </td>\r\n\r\n                        <!-- PONOVI -->\r\n\r\n                        <td\r\n                          v-if=\"uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN' && MicrobiologyScenario != 'MAIBPoR'\"\r\n                        >\r\n                          <button class=\"btn btn-pale btn-micro\">\r\n                            <span class=\"glyphicon glyphicon-ban-circle\"></span>\r\n                          </button>\r\n                        </td>\r\n\r\n                        <td v-if=\"MicrobiologyScenario === 'MAIBPoR'\">\r\n                          <button\r\n                            @click.prevent=\"OpenMicroSelect($event, test)\"\r\n                            class=\"btn btn-primary btn-micro\"\r\n                          >\r\n                            <span class=\"fa fa-bug\"></span>\r\n                          </button>\r\n                        </td>\r\n\r\n                        <!--  -->\r\n\r\n                        <td>\r\n                          <i\r\n                            @click.prevent=\"Exclamation(test)\"\r\n                            v-bind:class=\"{'fa fa-exclamation-triangle icon-right input-icon error-icon' : false}\"\r\n                          ></i>\r\n                          <i\r\n                            v-bind:class=\"{'fa fa-check success-icon icon-right input-icon' : false}\"\r\n                          ></i>\r\n                        </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n\r\n              <!--  -->\r\n              <!--  -->\r\n              <!--  -->\r\n              <!--  -->\r\n              <!--  -->\r\n              <!-- \r\n\r\n\r\n\r\n\r\n\r\nEND of Microbiology Table |\r\n\r\n\r\n\r\n\r\n\r\n              -->\r\n              <!--  -->\r\n              <!--  -->\r\n              <!--  -->\r\n              <!--  -->\r\n              <!--  -->\r\n\r\n              <!-- Uzorci | Default Table -->\r\n\r\n              <div v-if=\"!uzorak.tip.includes('Mikrobiologija')\" class=\"va-row\">\r\n                <div v-show=\"show_table\" class=\"table-responsive\">\r\n                  <table class=\"table table-striped first-td-padding\">\r\n                    <thead>\r\n                      <tr align=\"middle\">\r\n                        <td v-if=\"uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN'\"></td>\r\n                        <td>{{'ANALIZA'}}</td>\r\n                        <td>{{'REZULTAT'}}</td>\r\n                        <td>{{'JEDINICA'}}</td>\r\n                        <td>{{'REFERENCE'}}</td>\r\n                        <td v-if=\"uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN'\"></td>\r\n                        <td\r\n                          v-if=\"uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN' && calculated\"\r\n                        >{{'AKCIJA'}}</td>\r\n                        <td\r\n                          v-if=\"uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN'\"\r\n                        >{{'PONOVI'}}</td>\r\n                        <td></td>\r\n                      </tr>\r\n                    </thead>\r\n\r\n                    <!-- Table Body -->\r\n\r\n                    <tbody>\r\n                      <tr\r\n                        align=\"middle\"\r\n                        v-for=\"test in rezultati\"\r\n                        :key=\"test.labassay_id\"\r\n                        v-bind:class=\"{\r\n                          'table-danger': Interpretacija(test.analit, test.rezultat, test.unit, test.dRef, test.gRef, $store.state.site, test.interp, test.extend, spec)[5] === 'Red' && !test.multidata, \r\n                          'table-success': Interpretacija(test.analit, test.rezultat, test.unit, test.dRef, test.gRef, $store.state.site, test.interp, test.extend, spec)[5] === 'Green' && !test.multidata,\r\n                          'table-warning': Interpretacija(test.analit, test.rezultat, test.unit, test.dRef, test.gRef, $store.state.site, test.interp, test.extend, spec)[5] === 'Yellow' && !test.multidata\r\n                        }\"\r\n                      >\r\n                        <td v-if=\"uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN'\">\r\n                          <i\r\n                            v-if=\"!test.multidata\"\r\n                            @click.prevent=\"SelectAnalyser(test)\"\r\n                            style=\"color:#4ae387;\"\r\n                            class=\"glyphicon glyphicon-object-align-bottom\"\r\n                          ></i>\r\n\r\n                          <span\r\n                            v-if=\"test.multidata\"\r\n                            style=\"color:#d9d9d9;\"\r\n                            class=\"glyphicon glyphicon-object-align-bottom\"\r\n                          ></span>\r\n                        </td>\r\n\r\n                        <!-- ANALIZA -->\r\n\r\n                        <td :title=\"test.analit\">\r\n                          <span\r\n                            @contextmenu=\"LabAssayEval($event, test)\"\r\n                            @click.prevent=\"Evaluation(test)\"\r\n                          >{{test.ime}}</span>\r\n                        </td>\r\n\r\n                        <!-- REZULTAT -->\r\n\r\n                        <td v-if=\"!test.multidata\">\r\n                          <div\r\n                            v-show=\"test.edit == false\"\r\n                            style=\"display:inline; font-size: 14px; line-height: 4.5px;\"\r\n                          >\r\n                            <label>\r\n                              <strong>{{ test.rezultat }}</strong>\r\n                            </label>\r\n                          </div>\r\n                          <div v-show=\"test.edit == true\" style=\"display:inline; line-height: 5px;\">\r\n                            <select\r\n                              v-if=\"test.select_options != undefined\"\r\n                              style=\"width:110px\"\r\n                              v-model=\"test.rezultat\"\r\n                            >\r\n                              <option\r\n                                v-for=\"option in test.select_options\"\r\n                                :key=\"option\"\r\n                              >{{ option }}</option>\r\n                            </select>\r\n                          </div>\r\n                          <div v-show=\"test.edit == true\" style=\"display:inline;\">\r\n                            <input\r\n                              v-if=\"test.select_options === undefined\"\r\n                              v-model=\"test.rezultat\"\r\n                              style=\"width:110px;font-size: 12px; line-height: 7px;\"\r\n                            />\r\n                          </div>\r\n                          <sup\r\n                            v-show=\"test.vise > 2\"\r\n                            @click.prevent=\"GetResults(test, uzorak.status)\"\r\n                          >\r\n                            <i\r\n                              style=\"font-size: 5px; color: #e34a4a;\"\r\n                              class=\"fa fa-star\"\r\n                              id=\"star\"\r\n                              title=\" \"\r\n                            ></i>\r\n                          </sup>\r\n                          <sup v-show=\"test.vise < 3\">\r\n                            <i\r\n                              style=\"font-size: 5px;  opacity: 0;\"\r\n                              class=\"fa fa-star-o\"\r\n                              id=\"star\"\r\n                              title=\" \"\r\n                            ></i>\r\n                          </sup>\r\n                        </td>\r\n                        <td v-if=\"test.multidata && test.realizovan\">\r\n                          <button\r\n                            :id=\"test.labassay_id\"\r\n                            class=\"btn btn-primary btn-micro\"\r\n                            @click.prevent=\"MultiGet($event, test.ime, test.analit, test.rezultat, test.odobren)\"\r\n                          >\r\n                            <span\r\n                              :id=\"test.labassay_id\"\r\n                              @click.prevent=\"MultiGet($event, test.ime, test.analit, test.rezultat, test.odobren)\"\r\n                              class=\"glyphicon glyphicon-search\"\r\n                            ></span>\r\n                            {{'VIŠE'}}\r\n                          </button>\r\n                          <sup\r\n                            v-show=\"test.multi_count > 2\"\r\n                            @click.prevent=\"GetResultsMulti(test, uzorak.status)\"\r\n                          >\r\n                            <i\r\n                              style=\"font-size: 5px; color: #e34a4a;\"\r\n                              class=\"fa fa-star\"\r\n                              id=\"star\"\r\n                              title=\" \"\r\n                            ></i>\r\n                          </sup>\r\n                          <sup v-show=\"test.multi_count < 3\">\r\n                            <i\r\n                              style=\"font-size: 5px; opacity: 0;\"\r\n                              class=\"fa fa-star-o\"\r\n                              id=\"star\"\r\n                              title=\" \"\r\n                            ></i>\r\n                          </sup>\r\n                        </td>\r\n                        <td v-if=\"test.multidata && !test.realizovan\">\r\n                          <button\r\n                            :id=\"test.labassay_id\"\r\n                            class=\"btn btn-warning btn-micro\"\r\n                            @click.prevent=\"MultiGet($event, test.ime, test.analit, test.rezultat, test.odobren)\"\r\n                          >\r\n                            <span\r\n                              :id=\"test.labassay_id\"\r\n                              @click.prevent=\"MultiGet($event, test.ime, test.analit, test.rezultat, test.odobren)\"\r\n                              class=\"glyphicon glyphicon-search\"\r\n                            ></span>\r\n                            {{'VIŠE'}}\r\n                          </button>\r\n                          <sup\r\n                            v-show=\"test.multi_count > 2\"\r\n                            @click.prevent=\"GetResultsMulti(test, uzorak.status)\"\r\n                          >\r\n                            <i\r\n                              style=\"font-size: 5px; color: #e34a4a;\"\r\n                              class=\"fa fa-star\"\r\n                              id=\"star\"\r\n                              title=\" \"\r\n                            ></i>\r\n                          </sup>\r\n                          <sup v-show=\"test.multi_count < 3\">\r\n                            <i\r\n                              style=\"font-size: 5px; opacity: 0;\"\r\n                              class=\"fa fa-star-o\"\r\n                              id=\"star\"\r\n                              title=\" \"\r\n                            ></i>\r\n                          </sup>\r\n                        </td>\r\n\r\n                        <!-- JEDINICA -->\r\n\r\n                        <td>{{test.unit}}</td>\r\n\r\n                        <!-- REFERENCE -->\r\n\r\n                        <td\r\n                          v-if=\"!test.multidata\"\r\n                        >{{Interpretacija(test.analit, test.rezultat, test.unit, test.dRef, test.gRef, $store.state.site, test.interp, test.extend, spec)[4]}}</td>\r\n                        <td v-if=\"test.multidata\">{{'/'}}</td>\r\n                        <td v-if=\"uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN'\">\r\n                          <i\r\n                            v-if=\"!test.multidata\"\r\n                            @click.prevent=\"Reference($event, test)\"\r\n                            style=\"font-size: 15px; color: #f7cc36;\"\r\n                            class=\"glyphicon glyphicon-stats\"\r\n                            id=\"reference\"\r\n                            title=\" \"\r\n                          ></i>\r\n                          <i\r\n                            v-if=\"test.multidata\"\r\n                            style=\"font-size: 15px; color: #f7cc36; opacity: 0;\"\r\n                            class=\"glyphicon glyphicon-stats\"\r\n                            id=\"reference\"\r\n                            title=\" \"\r\n                          ></i>\r\n                        </td>\r\n\r\n                        <!-- AKCIJA -->\r\n\r\n                        <td\r\n                          v-if=\"uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN' && calculated && !test.calculated\"\r\n                        >\r\n                          <button class=\"btn btn-pale btn-micro\">\r\n                            <span class=\"glyphicon glyphicon-ban-circle\"></span>\r\n                          </button>\r\n                        </td>\r\n                        <td\r\n                          v-if=\"uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN' && calculated && test.calculated\"\r\n                        >\r\n                          <button\r\n                            @click.prevent=\"Calculate($event, test.labassay_id, test.ime, test.id)\"\r\n                            :id=\"test.test\"\r\n                            class=\"btn btn-primary btn-micro\"\r\n                          >\r\n                            <span :id=\"test.test\" class=\"fa fa-calculator\"></span>\r\n                          </button>\r\n                        </td>\r\n\r\n                        <!-- PONOVI -->\r\n\r\n                        <td\r\n                          v-if=\"uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN' \r\n                          && (test.rezultat === '' || test.manual || test.calculated)\"\r\n                        >\r\n                          <button class=\"btn btn-pale btn-micro\">\r\n                            <span class=\"glyphicon glyphicon-ban-circle\"></span>\r\n                          </button>\r\n                        </td>\r\n                        <td\r\n                          v-if=\"uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN' \r\n                          && test.rezultat != '' && !test.manual && !test.calculated\"\r\n                        >\r\n                          <button\r\n                            v-if=\"!test.retest\"\r\n                            :id=\"test.test\"\r\n                            class=\"btn btn-primary btn-micro\"\r\n                            @click.prevent=\"RetestEnable($event)\"\r\n                          >\r\n                            <span :id=\"test.test\" class=\"fa fa-refresh\"></span>\r\n                          </button>\r\n                          <button\r\n                            v-if=\"test.retest\"\r\n                            :id=\"test.test\"\r\n                            class=\"btn btn-info btn-micro\"\r\n                            @click.prevent=\"RetestDisable($event)\"\r\n                          >\r\n                            <span :id=\"test.test\" class=\"glyphicon glyphicon-duplicate\"></span>\r\n                          </button>\r\n                        </td>\r\n\r\n                        <!--  -->\r\n\r\n                        <td>\r\n                          <i\r\n                            @click.prevent=\"Exclamation(test)\"\r\n                            v-bind:class=\"{'fa fa-exclamation-triangle icon-right input-icon error-icon' : Interpretacija(test.analit, test.rezultat, test.unit, test.dRef, test.gRef, $store.state.site, test.interp, test.extend, spec)[5] === 'Red' && !test.multidata}\"\r\n                          ></i>\r\n                          <i\r\n                            v-bind:class=\"{'fa fa-check success-icon icon-right input-icon' : Interpretacija(test.analit, test.rezultat, test.unit, test.dRef, test.gRef, $store.state.site, test.interp, test.extend, spec)[5] === 'Green' && !test.multidata}\"\r\n                          ></i>\r\n                        </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n\r\n              <!-- END of Uzorci | Default Table -->\r\n\r\n            </div>\r\n          </vuestic-collapse-obrada>\r\n        </vuestic-accordion-obrada>\r\n\r\n        <div style=\"min-height: 10px;\"></div>\r\n\r\n        <!-- Nalaz -->\r\n\r\n        <div v-if=\"verificiran\" class=\"va-row\">\r\n          <div class=\"flex md12\">\r\n            <vuestic-collapse-nalaz\r\n              :final=\"verificiran\"\r\n              :final_pdf=\"final_pdf\"\r\n              :samples=\"samples\"\r\n              :pdf=\"link\"\r\n              :pacijent=\"ime + ' ' + prezime\"\r\n            >\r\n              <span slot=\"header\">Nalaz</span>\r\n              <div slot=\"body\">\r\n                <div class=\"va-row\"></div>\r\n              </div>\r\n            </vuestic-collapse-nalaz>\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <hr />\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n          <div class=\"col-md-3\"></div>\r\n          <div class=\"col-md-6\">\r\n            <div class=\"btn-container\">\r\n              <button\r\n                class=\"btn btn-secondary btn-sm wizard-back pull-left\"\r\n                @click.prevent=\"Povratak()\"\r\n              >\r\n                <span class=\"fa fa-backward\"></span>\r\n                {{ ' POVRATAK'}}\r\n              </button>\r\n              <button\r\n                style=\"text-transform: none; color: #e34a4a;\"\r\n                v-if=\"partials_condition && !verificiran\"\r\n                class=\"btn btn-secondary-warning btn-sm wizard-back pull-right\"\r\n                @click.prevent=\"Partials()\"\r\n              >\r\n                <span style=\"color: #e34a4a;\" class=\"fa fa-file-pdf-o\"></span>\r\n                {{ ' Djelimični nalaz'}}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </vuestic-widget>\r\n\r\n      <!-- Modals -->\r\n\r\n      <!-- Prikaz Analita za Multi Testove -->\r\n\r\n      <vuestic-modal-multi\r\n        :show.sync=\"show\"\r\n        :sample=\"sample\"\r\n        ref=\"largeModalMulti\"\r\n        cancelText=\"ODUSTANI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\">{{naslov}}</div>\r\n        <div class=\"table-responsive\">\r\n          <table class=\"table table-striped first-td-padding\">\r\n            <thead>\r\n              <tr align=\"middle\">\r\n                <td width=\"10%\"></td>\r\n                <td width=\"20%\">{{'ANALIT'}}</td>\r\n                <td width=\"30%\">{{'REZULTAT'}}</td>\r\n                <td width=\"10%\">{{'JEDINICA'}}</td>\r\n                <td width=\"20%\">{{'REFERENCE'}}</td>\r\n                <td width=\"10%\"></td>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr\r\n                align=\"middle\"\r\n                v-for=\"test in analiti\"\r\n                :key=\"test.labID\"\r\n                v-bind:class=\"{\r\n                    'table-danger': Interpretacija(test.opis, test.rezultat, test.jedinica, test.refd, test.refg, $store.state.site, test.interp, test.extend, spec)[5] === 'Red' && !test.rezultat_multiple.length, \r\n                    'table-success': Interpretacija(test.opis, test.rezultat, test.jedinica, test.refd, test.refg, $store.state.site, test.interp, test.extend, spec)[5] === 'Green' && !test.rezultat_multiple.length, \r\n                    'table-warning': Interpretacija(test.opis, test.rezultat, test.jedinica, test.refd, test.refg, $store.state.site, test.interp, test.extend, spec)[5] === 'Yellow' && !test.rezultat_multiple.length                                  \r\n                  }\"\r\n              >\r\n                <td v-if=\"test.flag != ''\">{{test.flag}}</td>\r\n                <td v-if=\"test.flag === ''\">&nbsp;</td>\r\n                <td :title=\"test.opis\">{{test.naziv}}</td>\r\n                <td :id=\"test.analit\">\r\n                  <div v-show=\"test.edit == false\">\r\n                    <label>\r\n                      <strong>{{ test.rezultat }}</strong>\r\n                    </label>\r\n                  </div>\r\n                  <select\r\n                    multiple\r\n                    :size=\"test.select_options.length\"\r\n                    v-if=\"test.select_options != undefined && (test.kod === 's03' || test.kod === 's04' || test.kod === 's08' || test.kod === 's09')\"\r\n                    style=\"min-width:200px;\"\r\n                    v-show=\"test.edit == true\"\r\n                    v-model=\"test.rezultat_multiple\"\r\n                  >\r\n                    <option v-for=\"option in test.select_options\" :key=\"option\">{{ option }}</option>\r\n                  </select>\r\n                  <select\r\n                    v-if=\"test.select_options != undefined && (test.kod != 's03' && test.kod != 's04' && test.kod != 's08' && test.kod != 's09')\"\r\n                    style=\"width:200px;\"\r\n                    v-show=\"test.edit == true\"\r\n                    v-model=\"test.rezultat\"\r\n                  >\r\n                    <option v-for=\"option in test.select_options\" :key=\"option\">{{ option }}</option>\r\n                  </select>\r\n                  <input\r\n                    v-if=\"test.select_options === undefined\"\r\n                    style=\"width:200px;\"\r\n                    v-show=\"test.edit == true\"\r\n                    v-model=\"test.rezultat\"\r\n                  />\r\n                </td>\r\n                <td>{{Interpretacija(test.opis, test.rezultat, test.jedinica, test.refd, test.refg, $store.state.site, test.interp, test.extend, spec)[3]}}</td>\r\n                <td>{{Interpretacija(test.opis, test.rezultat, test.jedinica, test.refd, test.refg, $store.state.site, test.interp, test.extend, spec)[4]}}</td>\r\n                <td>\r\n                  <i\r\n                    @click.prevent=\"ExclamationMulti(test)\"\r\n                    v-bind:class=\"{'fa fa-exclamation-triangle icon-right input-icon error-icon' : Interpretacija(test.opis, test.rezultat, test.jedinica, test.refd, test.refg, $store.state.site, test.interp, test.extend, spec)[5] === 'Red' && !test.rezultat_multiple.length}\"\r\n                  ></i>\r\n                  <i\r\n                    v-bind:class=\"{'fa fa-check success-icon icon-right input-icon' : Interpretacija(test.opis, test.rezultat, test.jedinica, test.refd, test.refg, $store.state.site, test.interp, test.extend, spec)[5] === 'Green' && !test.rezultat_multiple.length}\"\r\n                  ></i>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </vuestic-modal-multi>\r\n\r\n      <!--  -->\r\n      <!--  -->\r\n      <!--  -->\r\n      <!--  -->\r\n      <!--  -->\r\n      <!-- \r\n\r\n\r\n\r\n\r\n\r\n| Microbiology Modal\r\n\r\n\r\n\r\n\r\n\r\n      -->\r\n      <!--  -->\r\n      <!--  -->\r\n      <!--  -->\r\n      <!--  -->\r\n      <!--  -->\r\n\r\n      <vuestic-modal-micro-reset\r\n        :show.sync=\"show\"\r\n        ref=\"staticModalResetSample\"\r\n        cancelText=\"ODUSTANI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\">\r\n          <span style=\"color: #acb5be;\">{{'Brisanje rezultata: '}}</span>\r\n          <span style=\"color: #e34a4a;\">{{CurrentTest}}</span>\r\n        </div>\r\n        <div>\r\n          <h5>{{ 'Jeste li sigurni da želite obrisati rezultat?'}}</h5>\r\n        </div>\r\n      </vuestic-modal-micro-reset>\r\n\r\n      <vuestic-modal-micro-bactery\r\n        :show.sync=\"show\"\r\n        :large=\"true\"\r\n        :sample=\"sample\"\r\n        :select=\"true\"\r\n        :update=\"!ShowAntibiotics && !ShowBacteries && MicrobiologyScenario === 'MAIBPoR'\"\r\n        :povratak=\"ShowAntibiotics || ShowBacteries\"\r\n        :empty=\"TemporaryAntibiotics.length > 0 || TemporaryBacteriesAdd.length > 0\"\r\n        ref=\"staticModalMicroBacterySelect\"\r\n        cancelText=\"ODUSTANI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\" v-if=\"!ShowAntibiotics && !ShowBacteries\">\r\n          <span style=\"color: #acb5be;\">{{'Rezultat analize: '}}</span>\r\n          <span style=\"color: #e34a4a;\">{{CurrentTest}}</span>\r\n        </div>\r\n        <div slot=\"title\" v-if=\"ShowAntibiotics && !ShowBacteries\">\r\n          <span style=\"color: #acb5be;\">{{'Antibiotici | '}}</span>\r\n          <span style=\"color: #e34a4a;\">{{\"Izbornik\"}}</span>\r\n        </div>\r\n        <div slot=\"title\" v-if=\"!ShowAntibiotics && ShowBacteries\">\r\n          <span style=\"color: #acb5be;\">{{'Bakterije | '}}</span>\r\n          <span style=\"color: #e34a4a;\">{{\"Izbornik\"}}</span>\r\n        </div>\r\n        <div>\r\n\r\n          <!--  -->\r\n\r\n          <div class=\"row\" v-if=\"show_table\">\r\n            <div\r\n              class=\"col-md-1\"\r\n              v-if=\"MicrobiologyScenario === 'MAIBPoR' && ShowBacteries && !ShowAntibiotics\"\r\n            ></div>\r\n            <div\r\n              class=\"col-md-10\"\r\n              v-if=\"MicrobiologyScenario === 'MAIBPoR' && ShowBacteries && !ShowAntibiotics\"\r\n            >\r\n              <div class=\"col-md-12\" v-if=\"TemporaryBacteries.length\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-4\">\r\n                    <div\r\n                      class=\"form-check abc-checkbox abc-checkbox-primary\"\r\n                      v-for=\"bactery in filteredBacteries(1, 3)\"\r\n                      :key=\"bactery._id\"\r\n                    >\r\n                      <input\r\n                        class=\"form-check-input\"\r\n                        :id=\"bactery._id\"\r\n                        type=\"checkbox\"\r\n                        v-model=\"bactery.chosen\"\r\n                        @click=\"AddBacteries(bactery)\"\r\n                        :disabled=\"bactery.disabled\"\r\n                      />\r\n                      <label class=\"form-check-label\" :for=\"bactery._id\">\r\n                        <span\r\n                          v-if=\"!bactery.chosen\"\r\n                          style=\"color: #e34a4a;\"\r\n                          class=\"abc-label-text\"\r\n                        >{{bactery.opis}}</span>\r\n                        <span\r\n                          v-if=\"bactery.chosen\"\r\n                          style=\"color: #4ae387;\"\r\n                          class=\"abc-label-text\"\r\n                        >{{bactery.opis}}</span>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-4\">\r\n                    <div\r\n                      class=\"form-check abc-checkbox abc-checkbox-primary\"\r\n                      v-for=\"bactery in filteredBacteries(2, 3)\"\r\n                      :key=\"bactery._id\"\r\n                    >\r\n                      <input\r\n                        class=\"form-check-input\"\r\n                        :id=\"bactery._id\"\r\n                        type=\"checkbox\"\r\n                        v-model=\"bactery.chosen\"\r\n                        @click=\"AddBacteries(bactery)\"\r\n                        :disabled=\"bactery.disabled\"\r\n                      />\r\n                      <label class=\"form-check-label\" :for=\"bactery._id\">\r\n                        <span\r\n                          v-if=\"!bactery.chosen\"\r\n                          style=\"color: #e34a4a;\"\r\n                          class=\"abc-label-text\"\r\n                        >{{bactery.opis}}</span>\r\n                        <span\r\n                          v-if=\"bactery.chosen\"\r\n                          style=\"color: #4ae387;\"\r\n                          class=\"abc-label-text\"\r\n                        >{{bactery.opis}}</span>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-4\">\r\n                    <div\r\n                      class=\"form-check abc-checkbox abc-checkbox-primary\"\r\n                      v-for=\"bactery in filteredBacteries(3, 3)\"\r\n                      :key=\"bactery._id\"\r\n                    >\r\n                      <input\r\n                        class=\"form-check-input\"\r\n                        :id=\"bactery._id\"\r\n                        type=\"checkbox\"\r\n                        v-model=\"bactery.chosen\"\r\n                        @click=\"AddBacteries(bactery)\"\r\n                        :disabled=\"bactery.disabled\"\r\n                      />\r\n                      <label class=\"form-check-label\" :for=\"bactery._id\">\r\n                        <span\r\n                          v-if=\"!bactery.chosen\"\r\n                          style=\"color: #e34a4a;\"\r\n                          class=\"abc-label-text\"\r\n                        >{{bactery.opis}}</span>\r\n                        <span\r\n                          v-if=\"bactery.chosen\"\r\n                          style=\"color: #4ae387;\"\r\n                          class=\"abc-label-text\"\r\n                        >{{bactery.opis}}</span>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div\r\n              class=\"col-md-1\"\r\n              v-if=\"MicrobiologyScenario === 'MAIBPoR' && ShowAntibiotics && !ShowBacteries\"\r\n            ></div>\r\n            <div\r\n              class=\"col-md-10\"\r\n              v-if=\"MicrobiologyScenario === 'MAIBPoR' && ShowAntibiotics && !ShowBacteries\"\r\n            >\r\n              <div class=\"col-md-12\" v-if=\"Antibiotics.length\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-4\">\r\n                    <div\r\n                      class=\"form-check abc-checkbox abc-checkbox-primary\"\r\n                      v-for=\"antibiotik in filteredAntibiotics(1, 3)\"\r\n                      :key=\"antibiotik._id\"\r\n                    >\r\n                      <input\r\n                        class=\"form-check-input\"\r\n                        :id=\"antibiotik._id\"\r\n                        type=\"checkbox\"\r\n                        v-model=\"antibiotik.chosen\"\r\n                        @click=\"AddAntibiotics(antibiotik)\"\r\n                        :disabled=\"antibiotik.disabled\"\r\n                      />\r\n                      <label class=\"form-check-label\" :for=\"antibiotik._id\">\r\n                        <span\r\n                          v-if=\"!antibiotik.chosen\"\r\n                          style=\"color: #e34a4a;\"\r\n                          class=\"abc-label-text\"\r\n                        >{{antibiotik.opis}}</span>\r\n                        <span\r\n                          v-if=\"antibiotik.chosen\"\r\n                          style=\"color: #4ae387;\"\r\n                          class=\"abc-label-text\"\r\n                        >{{antibiotik.opis}}</span>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-4\">\r\n                    <div\r\n                      class=\"form-check abc-checkbox abc-checkbox-primary\"\r\n                      v-for=\"antibiotik in filteredAntibiotics(2, 3)\"\r\n                      :key=\"antibiotik._id\"\r\n                    >\r\n                      <input\r\n                        class=\"form-check-input\"\r\n                        :id=\"antibiotik._id\"\r\n                        type=\"checkbox\"\r\n                        v-model=\"antibiotik.chosen\"\r\n                        @click=\"AddAntibiotics(antibiotik)\"\r\n                        :disabled=\"antibiotik.disabled\"\r\n                      />\r\n                      <label class=\"form-check-label\" :for=\"antibiotik._id\">\r\n                        <span\r\n                          v-if=\"!antibiotik.chosen\"\r\n                          style=\"color: #e34a4a;\"\r\n                          class=\"abc-label-text\"\r\n                        >{{antibiotik.opis}}</span>\r\n                        <span\r\n                          v-if=\"antibiotik.chosen\"\r\n                          style=\"color: #4ae387;\"\r\n                          class=\"abc-label-text\"\r\n                        >{{antibiotik.opis}}</span>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-4\">\r\n                    <div\r\n                      class=\"form-check abc-checkbox abc-checkbox-primary\"\r\n                      v-for=\"antibiotik in filteredAntibiotics(3, 3)\"\r\n                      :key=\"antibiotik._id\"\r\n                    >\r\n                      <input\r\n                        class=\"form-check-input\"\r\n                        :id=\"antibiotik._id\"\r\n                        type=\"checkbox\"\r\n                        v-model=\"antibiotik.chosen\"\r\n                        @click=\"AddAntibiotics(antibiotik)\"\r\n                        :disabled=\"antibiotik.disabled\"\r\n                      />\r\n                      <label class=\"form-check-label\" :for=\"antibiotik._id\">\r\n                        <span\r\n                          v-if=\"!antibiotik.chosen\"\r\n                          style=\"color: #e34a4a;\"\r\n                          class=\"abc-label-text\"\r\n                        >{{antibiotik.opis}}</span>\r\n                        <span\r\n                          v-if=\"antibiotik.chosen\"\r\n                          style=\"color: #4ae387;\"\r\n                          class=\"abc-label-text\"\r\n                        >{{antibiotik.opis}}</span>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              class=\"col-md-1\"\r\n              v-if=\"MicrobiologyScenario === 'MAIBPoR' && !ShowAntibiotics && !ShowBacteries\"\r\n            ></div>\r\n            <div\r\n              class=\"col-md-10\"\r\n              v-if=\"MicrobiologyScenario === 'MAIBPoR' && !ShowAntibiotics && !ShowBacteries\"\r\n            >\r\n              <vuestic-tabs-bactery\r\n                v-if=\"SelectedBacteries.length\"\r\n                :names=\"BacteryTabs\"\r\n                :tab=\"CurrentTab\"\r\n                :id=\"CurrentTab\"\r\n                :prikazi=\"sample.status != 'VERIFICIRAN' && sample.status != 'ODOBREN'\"\r\n                ref=\"tabs\"\r\n              >\r\n                <div :slot=\"CurrentTab\" v-for=\"test in SelectedBacteries\" :key=\"test._id\">\r\n                  <div class=\"row\" v-show=\"test.opis === CurrentTab\">\r\n\r\n                    <!-- Antibiogram -->\r\n\r\n                    <div class=\"table-responsive\">\r\n                      <table class=\"table table-striped first-td-padding\">\r\n                        <thead>\r\n                          <tr align=\"left\">\r\n                            <td style=\"text-transform: none;\" width=\"30%\">{{test.antibiogram.opis}}</td>\r\n                            <td width=\"10%\">{{''}}</td>\r\n                            <td width=\"20%\">{{''}}</td>\r\n                            <td width=\"20%\">{{''}}</td>\r\n                            <td width=\"20%\">{{''}}</td>\r\n                          </tr>\r\n                        </thead>\r\n\r\n                        <!-- Table Body -->\r\n\r\n                        <tbody>\r\n                          <tr\r\n                            align=\"left\"\r\n                            v-for=\"abtk in test.antibiogram.antibiotici\"\r\n                            :key=\"abtk._id\"\r\n                            v-bind:class=\"{'table-danger': false, 'table-success': false,'table-warning': false}\"\r\n                          >\r\n                            <!-- ANALIZA -->\r\n\r\n                            <td :title=\"abtk.opis\">{{abtk.opis}}</td>\r\n                            <td>\r\n                              <bactery-radio-button\r\n                                :disabled=\"sample.status === 'ODOBREN' || sample.status === 'VERIFICIRAN'\"\r\n                                :label=\"''\"\r\n                                :value=\"''\"\r\n                                :id=\"'' + test._id + abtk._id\"\r\n                                :name=\"test._id + abtk._id\"\r\n                                v-model=\"abtk.rezultat\"\r\n                              />\r\n                            </td>\r\n                            <td>\r\n                              <postavke-radio-button\r\n                                :disabled=\"sample.status === 'ODOBREN' || sample.status === 'VERIFICIRAN'\"\r\n                                :label=\"'Senzitivan'\"\r\n                                :value=\"'S'\"\r\n                                :id=\"'S' + test._id + abtk._id\"\r\n                                :name=\"test._id + abtk._id\"\r\n                                v-model=\"abtk.rezultat\"\r\n                              />\r\n                            </td>\r\n                            <td>\r\n                              <postavke-radio-button\r\n                                :disabled=\"sample.status === 'ODOBREN' || sample.status === 'VERIFICIRAN'\"\r\n                                :label=\"'Intermedijaran'\"\r\n                                :value=\"'I'\"\r\n                                :id=\"'I' + test._id + abtk._id\"\r\n                                :name=\"test._id + abtk._id\"\r\n                                v-model=\"abtk.rezultat\"\r\n                              />\r\n                            </td>\r\n                            <td>\r\n                              <postavke-radio-button\r\n                                :disabled=\"sample.status === 'ODOBREN' || sample.status === 'VERIFICIRAN'\"\r\n                                :label=\"'Rezistentan'\"\r\n                                :value=\"'R'\"\r\n                                :id=\"'R' + test._id + abtk._id\"\r\n                                :name=\"test._id + abtk._id\"\r\n                                v-model=\"abtk.rezultat\"\r\n                              />\r\n                            </td>\r\n                          </tr>\r\n                        </tbody>\r\n                      </table>\r\n                    </div>\r\n\r\n                    <!-- END of Antibiogram -->\r\n\r\n                  </div>\r\n                </div>\r\n              </vuestic-tabs-bactery>\r\n            </div>\r\n\r\n            <div\r\n              class=\"col-md-12\"\r\n              v-if=\"MicrobiologyScenario === 'MANBNeR' || MicrobiologyScenario === 'MANBPoR' || MicrobiologyScenario === 'MAIBNeR'\"\r\n            >\r\n              <div v-show=\"show_table\" class=\"table-responsive\">\r\n                <table class=\"table table-striped first-td-padding\">\r\n                  <thead>\r\n                    <tr align=\"left\">\r\n                      <td>{{'REZULTAT'}}</td>\r\n                    </tr>\r\n                  </thead>\r\n\r\n                  <!-- Table Body -->\r\n\r\n                  <tbody>\r\n                    <tr\r\n                      align=\"left\"\r\n                      v-for=\"(test, index) in rezultati\"\r\n                      v-show=\"index < 1\"\r\n                      :key=\"test.labassay_id\"\r\n                      v-bind:class=\"{\r\n                          'table-danger':  (test.rezultat_m.length && test.rezultat_m[0].pozitivan), \r\n                          'table-success':  (test.rezultat_m.length && test.rezultat_m[0].negativan),\r\n                          'table-warning': false\r\n                        }\"\r\n                    >\r\n                      <td v-if=\"sample.status != 'ODOBREN' &&  sample.status != 'VERIFICIRAN'\">\r\n                        <div class=\"form-group\">\r\n                          <div class=\"input-group\">\r\n                            <textarea\r\n                              type=\"text\"\r\n                              id=\"simple-textarea\"\r\n                              v-model=\"test.rezultat\"\r\n                              required\r\n                            ></textarea>\r\n                            <label class=\"control-label\" for=\"simple-textarea\">{{ '' }}</label>\r\n                            <i class=\"bar\"></i>\r\n                          </div>\r\n                        </div>\r\n                      </td>\r\n                      <td v-if=\"sample.status === 'ODOBREN' ||  sample.status === 'VERIFICIRAN'\">\r\n                        <div class=\"form-group\">\r\n                          <div class=\"input-group\">\r\n                            <input id=\"input-icon-left\" title=\" \" name=\"input-icon-left\" disabled />\r\n                            <label\r\n                              v-if=\"test.rezultat.length\"\r\n                              class=\"control-label\"\r\n                              for=\"input-icon-left\"\r\n                            >{{test.rezultat}}</label>\r\n                            <label\r\n                              v-if=\"!test.rezultat.length\"\r\n                              class=\"control-label\"\r\n                              for=\"input-icon-left\"\r\n                            >{{\"Nema podataka.\"}}</label>\r\n                            <i class=\"bar\"></i>\r\n                          </div>\r\n                        </div>\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </vuestic-modal-micro-bactery>\r\n\r\n      <vuestic-modal-micro-bactery\r\n        :show.sync=\"show\"\r\n        :large=\"true\"\r\n        :sample=\"sample\"\r\n        ref=\"staticModalMicroBactery\"\r\n        cancelText=\"ODUSTANI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\">\r\n          <span style=\"color: #acb5be;\">{{'Rezultat analize: '}}</span>\r\n          <span style=\"color: #e34a4a;\">{{CurrentTest}}</span>\r\n        </div>\r\n\r\n        <div>\r\n\r\n          <!--  -->\r\n\r\n          <div class=\"row\" v-if=\"show_table\">\r\n            <div class=\"col-md-12\" v-if=\"true\">\r\n              <div v-show=\"show_table\" class=\"table-responsive\">\r\n                <table class=\"table table-striped first-td-padding\">\r\n                  <thead>\r\n                    <tr align=\"left\">\r\n                      <td>{{'REZULTAT'}}</td>\r\n                    </tr>\r\n                  </thead>\r\n\r\n                  <!-- Table Body -->\r\n\r\n                  <tbody>\r\n                    <tr\r\n                      align=\"left\"\r\n                      v-for=\"(test, index) in rezultati\"\r\n                      v-show=\"index < 1\"\r\n                      :key=\"test.labassay_id\"\r\n                      v-bind:class=\"{\r\n                          'table-danger':  (test.rezultat_m.length && test.rezultat_m[0].pozitivan), \r\n                          'table-success':  (test.rezultat_m.length && test.rezultat_m[0].negativan),\r\n                          'table-warning': false\r\n                        }\"\r\n                    >\r\n                      <td v-if=\"sample.status != 'ODOBREN' &&  sample.status != 'VERIFICIRAN'\">\r\n                        <div class=\"form-group\">\r\n                          <div class=\"input-group\">\r\n                            <textarea\r\n                              type=\"text\"\r\n                              id=\"simple-textarea\"\r\n                              v-model=\"test.rezultat\"\r\n                              required\r\n                            ></textarea>\r\n                            <label class=\"control-label\" for=\"simple-textarea\">{{ '' }}</label>\r\n                            <i class=\"bar\"></i>\r\n                          </div>\r\n                        </div>\r\n                      </td>\r\n                      <td v-if=\"sample.status === 'ODOBREN' ||  sample.status === 'VERIFICIRAN'\">\r\n                        <div class=\"form-group\">\r\n                          <div class=\"input-group\">\r\n                            <input id=\"input-icon-left\" title=\" \" name=\"input-icon-left\" disabled />\r\n                            <label\r\n                              v-if=\"test.rezultat.length\"\r\n                              class=\"control-label\"\r\n                              for=\"input-icon-left\"\r\n                            >{{test.rezultat}}</label>\r\n                            <label\r\n                              v-if=\"!test.rezultat.length\"\r\n                              class=\"control-label\"\r\n                              for=\"input-icon-left\"\r\n                            >{{\"Nema podataka.\"}}</label>\r\n                            <i class=\"bar\"></i>\r\n                          </div>\r\n                        </div>\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </vuestic-modal-micro-bactery>\r\n\r\n      <vuestic-modal-micro-result\r\n        :show.sync=\"show\"\r\n        :sample=\"sample\"\r\n        :large=\"ShowAllBacteries\"\r\n        :neg=\"ModalNegative\"\r\n        :pos=\"ModalPositive\"\r\n        :selected=\"ModalPositiveCondition\"\r\n        ref=\"staticModalSelectResult\"\r\n        cancelText=\"ODUSTANI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\">\r\n          <span style=\"color: #acb5be;\">{{MicrobiologyModalHeader}} |</span>\r\n          <span style=\"color: #e34a4a;\">{{\"Izbornik\"}}</span>\r\n        </div>\r\n\r\n        <div class=\"row\" v-if=\"!ModalNegative && !ModalPositive\">\r\n          <div class=\"col-md-6\">\r\n            <div class=\"row\">\r\n              <div class=\"col-md-3\"></div>\r\n              <div class=\"col-md-6\">\r\n                <button\r\n                  style=\"text-transform: none; border: 0px;\"\r\n                  class=\"btn btn-secondary btn-sm wizard-back pull-left\"\r\n                  @click=\"ModalNegative = true; ModalPositive = false;\"\r\n                >{{'Negativan'}}</button>\r\n              </div>\r\n              <div class=\"col-md-3\"></div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-6\">\r\n            <div class=\"row\">\r\n              <div class=\"col-md-2\"></div>\r\n              <div class=\"col-md-6\">\r\n                <button\r\n                  style=\"text-transform: none; border: 0px;\"\r\n                  class=\"btn btn-secondary-danger btn-sm wizard-next pull-right\"\r\n                  @click=\"ModalPositive = true; ModalNegative = false;\"\r\n                >{{'Pozitivan'}}</button>\r\n              </div>\r\n              <div class=\"col-md-4\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row\" v-if=\"ModalNegative && !ModalPositive\">\r\n          <div class=\"col-md-1\"></div>\r\n          <div class=\"col-md-11\">\r\n            <vuestic-radio-button\r\n              v-for=\"(desc, index) in MicrobiologyResult.NegativeDescriptions\"\r\n              :key=\"index\"\r\n              :label=\"MicrobiologyResult.NegativeDescriptions[index]\"\r\n              :id=\"MicrobiologyResult.NegativeDescriptions[index]\"\r\n              :value=\"MicrobiologyResult.NegativeDescriptions[index]\"\r\n              :name=\"MicrobiologyResult.NegativeDescriptions[index]\"\r\n              :disabled=\"false\"\r\n              v-model=\"NegativeResultSelection\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          class=\"row\"\r\n          v-if=\"!ModalNegative && ModalPositive && !MicrobiologyResult.DefaultBacteries.length\"\r\n        >\r\n          <div class=\"col-md-1\"></div>\r\n          <div class=\"col-md-11\">\r\n            <vuestic-radio-button\r\n              v-for=\"(desc, index) in MicrobiologyResult.PositiveDescriptions\"\r\n              :key=\"index\"\r\n              :label=\"MicrobiologyResult.PositiveDescriptions[index]\"\r\n              :id=\"MicrobiologyResult.PositiveDescriptions[index]\"\r\n              :value=\"MicrobiologyResult.PositiveDescriptions[index]\"\r\n              :name=\"MicrobiologyResult.PositiveDescriptions[index]\"\r\n              :disabled=\"false\"\r\n              v-model=\"PositiveResultSelection\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          class=\"row\"\r\n          v-if=\"!ModalNegative && ModalPositive && MicrobiologyResult.DefaultBacteries.length\"\r\n        >\r\n          <div class=\"col-md-6\">\r\n            <div class=\"row\">\r\n              <div class=\"col-md-2\"></div>\r\n              <div class=\"col-md-10\">\r\n                <div\r\n                  class=\"form-check abc-checkbox abc-checkbox-primary\"\r\n                  v-for=\"(bakt, index) in MicrobiologyResult.DefaultBacteries\"\r\n                  :key=\"index\"\r\n                >\r\n                  <input\r\n                    class=\"form-check-input\"\r\n                    :id=\"bakt._id\"\r\n                    type=\"checkbox\"\r\n                    v-model=\"bakt.chosen\"\r\n                    @click=\"SelectBactery(bakt, index)\"\r\n                  />\r\n                  <label class=\"form-check-label\" :for=\"bakt._id\">\r\n                    <span style=\"color: #e34a4a;\" class=\"abc-label-text\">{{bakt.opis}}</span>\r\n                  </label>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"col-md-6\">\r\n            <div class=\"row\">\r\n              <div class=\"col-md-1\"></div>\r\n              <div class=\"col-md-6\">\r\n                <a\r\n                  v-if=\"!ShowAllBacteries\"\r\n                  href=\"#\"\r\n                  @click.prevent=\"ShowAllBacteries = true\"\r\n                  style=\"font-size: 16px; color: #4ae387;\"\r\n                >Prikaži više</a>\r\n              </div>\r\n              <div class=\"col-md-5\"></div>\r\n            </div>\r\n\r\n            <div class=\"row\" v-if=\"ShowAllBacteries\">\r\n              <div class=\"col-md-1\"></div>\r\n              <div class=\"col-md-10\">\r\n                <div\r\n                  class=\"form-check abc-checkbox abc-checkbox-primary\"\r\n                  v-for=\"(bakt, index) in MicrobiologyResult.RemainingBacteries\"\r\n                  :key=\"index\"\r\n                >\r\n                  <input\r\n                    class=\"form-check-input\"\r\n                    :id=\"bakt._id\"\r\n                    type=\"checkbox\"\r\n                    v-model=\"bakt.chosen\"\r\n                    @click=\"SelectBactery(bakt, index)\"\r\n                  />\r\n                  <label class=\"form-check-label\" :for=\"bakt._id\">\r\n                    <span style=\"color: #e34a4a;\" class=\"abc-label-text\">{{bakt.opis}}</span>\r\n                  </label>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </vuestic-modal-micro-result>\r\n\r\n      <!--  -->\r\n      <!--  -->\r\n      <!--  -->\r\n      <!--  -->\r\n      <!--  -->\r\n      <!-- \r\n\r\n\r\n\r\n\r\n\r\nEnd of Microbiology Modal |\r\n\r\n\r\n\r\n\r\n\r\n      -->\r\n      <!--  -->\r\n      <!--  -->\r\n      <!--  -->\r\n      <!--  -->\r\n      <!--  -->\r\n\r\n      <!-- Brisanje uzorka -->\r\n\r\n      <vuestic-modal-delete\r\n        :show.sync=\"show\"\r\n        ref=\"staticModalDeleteSample\"\r\n        cancelText=\"ODUSTANI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\">\r\n          <span style=\"color: #acb5be;\">{{'Brisanje uzorka: '}}</span>\r\n          <span style=\"color: #e34a4a;\">{{sid}}</span>\r\n        </div>\r\n        <div>\r\n          <h5>{{ 'Jeste li sigurni da želite obrisati uzorak?'}}</h5>\r\n        </div>\r\n      </vuestic-modal-delete>\r\n\r\n      <!-- Unos komentara -->\r\n\r\n      <vuestic-modal-comment\r\n        :show.sync=\"show\"\r\n        ref=\"staticModalComment\"\r\n        cancelText=\"ODUSTANI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\">{{ 'Unos komentara za uzorak: ' + sid }}</div>\r\n        <div>\r\n          <h5></h5>\r\n        </div>\r\n      </vuestic-modal-comment>\r\n\r\n      <!-- Uređivanje uzorka -->\r\n\r\n      <vuestic-modal-edit\r\n        :show.sync=\"show\"\r\n        :sample=\"sid\"\r\n        action=\"Edit\"\r\n        ref=\"staticModalEditSample\"\r\n        cancelText=\"ODUSTANI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\">{{ 'Uređivanje uzorka: ' + sid }}</div>\r\n        <div>\r\n          <h5></h5>\r\n        </div>\r\n      </vuestic-modal-edit>\r\n\r\n      <!-- Email Send -->\r\n\r\n      <vuestic-modal-mail\r\n        :show.sync=\"show\"\r\n        ref=\"staticModalSendMail\"\r\n        cancelText=\"ODUSTANI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\">\r\n          {{'Slanje nalaza na adresu: '}}\r\n          <span style=\"color: #4ae387;\">{{email}}</span>\r\n        </div>\r\n        <div>\r\n          <h5>{{'Jeste li sigurni da želite poslati nalaz?'}}</h5>\r\n        </div>\r\n      </vuestic-modal-mail>\r\n\r\n      <!--  -->\r\n\r\n      <vuestic-modal-all-results\r\n        :show.sync=\"show\"\r\n        ref=\"staticModalAllResults\"\r\n        cancelText=\"ODUSTANI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\">\r\n          {{'Izbor rezultata: '}}\r\n          <span style=\"color: #e34a4a;\">{{labassay}}</span>\r\n        </div>\r\n        <div>\r\n          <div class=\"table-responsive\">\r\n            <table class=\"table table-striped first-td-padding\">\r\n              <thead>\r\n                <tr>\r\n\r\n                  <!-- <td width=\"20%\"></td> -->\r\n\r\n                  <td>analizator</td>\r\n                  <td>vrijeme</td>\r\n                  <td>rezultat</td>\r\n                  <td>jedinica</td>\r\n                  <td>reference</td>\r\n                  <td v-if=\"sample_status != 'ODOBREN' &&  sample_status != 'VERIFICIRAN'\">izbor</td>\r\n                  <td align=\"middle\"></td>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr\r\n                  v-for=\"test in vise.rezultat\"\r\n                  v-show=\"test.rezultat_f != ''\"\r\n                  :key=\"test._id\"\r\n                  v-bind:class=\"{\r\n                    'table-danger': Interpretacija(vise.labassay.analit, test.rezultat_f, test.jedinice_f, vise.refd, vise.refg, $store.state.site, vise.interp, vise.extend, spec)[5] === 'Red' && !test.multidata, \r\n                    'table-success': Interpretacija(vise.labassay.analit, test.rezultat_f, test.jedinice_f, vise.refd, vise.refg, $store.state.site, vise.interp, vise.extend, spec)[5] === 'Green' && !test.multidata,\r\n                    'table-warning': Interpretacija(vise.labassay.analit, test.rezultat_f, test.jedinice_f, vise.refd, vise.refg, $store.state.site, vise.interp, vise.extend, spec)[5] === 'Yellow' && !test.multidata\r\n                  }\"\r\n                >\r\n                  <td>{{ test.anaassay.aparat.ime }}</td>\r\n\r\n                  <td>\r\n                    {{ JSON.stringify(\r\n                    test.updated_at\r\n                    ).slice(9, 11) +\r\n                    \".\" +\r\n                    JSON.stringify(\r\n                    test.updated_at\r\n                    ).slice(6, 8) +\r\n                    \".\" +\r\n                    JSON.stringify(\r\n                    test.updated_at\r\n                    ).slice(1, 5) + ' | '}}\r\n                    <sub>\r\n                      {{JSON.stringify(\r\n                      test.updated_at\r\n                      ).slice(12, 20)}}\r\n                    </sub>\r\n                  </td>\r\n                  <td>{{ test.rezultat_f }}</td>\r\n                  <td>{{ test.jedinice_f }}</td>\r\n                  <td>{{Interpretacija(vise.labassay.analit, test.rezultat_f, test.jedinice_f, vise.refd, vise.refg, $store.state.site, vise.interp, vise.extend, spec)[4]}}</td>\r\n                  <td v-if=\"sample_status != 'ODOBREN' &&  sample_status != 'VERIFICIRAN'\">\r\n                    <i\r\n                      v-if=\"!test.izabran\"\r\n                      @click.prevent=\"IzborTesta(vise, test)\"\r\n                      style=\"font-size: 18px; color:#e34a4a;\"\r\n                      class=\"glyphicon glyphicon-unchecked\"\r\n                    ></i>\r\n\r\n                    <i\r\n                      v-if=\"test.izabran\"\r\n                      style=\"font-size: 18px; color:#4ae387;\"\r\n                      class=\"glyphicon glyphicon-check\"\r\n                    ></i>\r\n                  </td>\r\n                  <td>\r\n                    <i\r\n                      v-bind:class=\"{'fa fa-exclamation-triangle icon-right input-icon error-icon' : Interpretacija(vise.labassay.analit, test.rezultat_f, test.jedinice_f, vise.refd, vise.refg, $store.state.site, vise.interp, vise.extend, spec)[5] === 'Red'}\"\r\n                    ></i>\r\n                    <i\r\n                      v-bind:class=\"{'fa fa-check success-icon icon-right input-icon' : Interpretacija(vise.labassay.analit, test.rezultat_f, test.jedinice_f, vise.refd, vise.refg, $store.state.site, vise.interp, vise.extend, spec)[5] === 'Green'}\"\r\n                    ></i>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n\r\n            <!-- END OF DRUGA TABELA -->\r\n\r\n          </div>\r\n        </div>\r\n      </vuestic-modal-all-results>\r\n\r\n      <vuestic-modal-error\r\n        :show.sync=\"show\"\r\n        ref=\"staticModalError\"\r\n        cancelText=\"ZATVORI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\">\r\n          {{''}}\r\n          <span style=\"color: #e34a4a;\">{{'404: Not Found'}}</span>\r\n        </div>\r\n        <div>\r\n          <h5>{{'Greška prilikom čitanja nalaza.'}}</h5>\r\n        </div>\r\n      </vuestic-modal-error>\r\n\r\n      <vuestic-modal-error\r\n        :show.sync=\"show\"\r\n        ref=\"staticModalVerifyPrivilege\"\r\n        cancelText=\"ZATVORI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\">\r\n          {{''}}\r\n          <span style=\"color: #e34a4a;\">{{'401: Not Authorized'}}</span>\r\n        </div>\r\n        <div>\r\n          <h5>{{'Nemate odgovarajuće privilegije.'}}</h5>\r\n        </div>\r\n      </vuestic-modal-error>\r\n\r\n      <vuestic-modal-exclamation\r\n        :show.sync=\"show\"\r\n        ref=\"staticModalExclamation\"\r\n        cancelText=\"ZATVORI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\">\r\n          {{''}}\r\n          <span style=\"color: #e34a4a;\">{{warning.analiza}}</span>\r\n        </div>\r\n        <div>\r\n          <h5>{{warning.control}}</h5>\r\n          <p>{{warning.text}}</p>\r\n        </div>\r\n\r\n        <!-- <div v-if=\"warning.napomena !=''\">\r\n          <h5>{{\"Napomena\"}}</h5>\r\n          <p>{{warning.napomena}}</p>\r\n        </div>-->\r\n\r\n      </vuestic-modal-exclamation>\r\n\r\n      <vuestic-modal-reference\r\n        :show.sync=\"show\"\r\n        ref=\"staticModalReference\"\r\n        cancelText=\"ODUSTANI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\">\r\n          {{'Referentne vrijednosti: '}}\r\n          <span\r\n            style=\"color: #e34a4a;\"\r\n          >{{reference.naziv}} ({{reference.opis}})</span>\r\n        </div>\r\n        <div>\r\n          <div class=\"row\">\r\n            <div class=\"col-md-1\"></div>\r\n            <div class=\"col-md-2\">\r\n              <div class=\"form-group\">\r\n                <div class=\"input-group\">\r\n                  <input\r\n                    style=\"color: #e34a4a;\"\r\n                    id=\"input-icon-left\"\r\n                    title=\" \"\r\n                    v-model=\"reference.dref\"\r\n                    name=\"input-icon-left\"\r\n                    required\r\n                  />\r\n\r\n                  <!-- <i class=\"glyphicon glyphicon-pencil icon-left input-icon\"></i> -->\r\n\r\n                  <label class=\"control-label\" for=\"input-icon-left\">{{'Donja'}}</label>\r\n                  <i class=\"bar\"></i>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-md-1\"></div>\r\n            <div class=\"col-md-2\">\r\n              <div class=\"form-group\">\r\n                <div class=\"input-group\">\r\n                  <input\r\n                    style=\"color: #e34a4a;\"\r\n                    id=\"input-icon-left\"\r\n                    title=\" \"\r\n                    v-model=\"reference.gref\"\r\n                    name=\"input-icon-left\"\r\n                    required\r\n                  />\r\n\r\n                  <!-- <i class=\"glyphicon glyphicon-pencil icon-left input-icon\"></i> -->\r\n\r\n                  <label class=\"control-label\" for=\"input-icon-left\">{{'Gornja'}}</label>\r\n                  <i class=\"bar\"></i>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-md-1\"></div>\r\n            <div class=\"col-md-4\">\r\n              <vuestic-simple-select\r\n                v-if=\"$store.state.access.level < 1\"\r\n                style=\"font-size: 14px;\"\r\n                label=\"Interpretacija\"\r\n                v-model=\"reference.interp\"\r\n                title=\" \"\r\n                v-bind:options=\"interpretacije\"\r\n              ></vuestic-simple-select>\r\n\r\n              <div v-if=\"$store.state.access.level > 0\" class=\"form-group\">\r\n                <div class=\"input-group\">\r\n                  <input\r\n                    id=\"input-icon-left\"\r\n                    title=\" \"\r\n                    v-model=\"reference.interp\"\r\n                    name=\"input-icon-left\"\r\n                    required\r\n                    :disabled=\"true\"\r\n                  />\r\n\r\n                  <!-- <i class=\"glyphicon glyphicon-pencil icon-left input-icon\"></i> -->\r\n\r\n                  <label class=\"control-label\" for=\"input-icon-left\">{{reference.interp}}</label>\r\n                  <i class=\"bar\"></i>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-md-1\"></div>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <div class=\"col-md-1\"></div>\r\n            <div class=\"col-md-2\">\r\n              <vuestic-simple-select\r\n                style=\"font-size: 14px;\"\r\n                label=\"Jedinica\"\r\n                v-model=\"reference.jedinica\"\r\n                title=\" \"\r\n                v-bind:options=\"jedinice\"\r\n              ></vuestic-simple-select>\r\n            </div>\r\n            <div class=\"col-md-1\"></div>\r\n\r\n            <div class=\"col-md-7\">\r\n              <div class=\"form-group\" v-show=\"reference.interp != 'spec'\">\r\n                <div class=\"input-group\">\r\n                  <input\r\n                    style=\"color: #e34a4a;\"\r\n                    id=\"input-icon-left\"\r\n                    title=\" \"\r\n                    v-model=\"reference.extend\"\r\n                    name=\"input-icon-left\"\r\n                    required\r\n                  />\r\n\r\n                  <label\r\n                    class=\"control-label\"\r\n                    for=\"input-icon-left\"\r\n                  >{{'Proširena referentna vrijednost'}}</label>\r\n                  <i class=\"bar\"></i>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"form-group\" v-show=\"reference.interp === 'spec'\">\r\n                <div class=\"input-group\">\r\n                  <textarea\r\n                    v-model=\"reference.extend\"\r\n                    type=\"text\"\r\n                    style=\"color: #e34a4a;\"\r\n                    id=\"simple-textarea\"\r\n                    required\r\n                  ></textarea>\r\n\r\n                  <label\r\n                    class=\"control-label\"\r\n                    for=\"simple-textarea\"\r\n                  >{{'Specifična interpretacija rezultata'}}</label>\r\n                  <i class=\"bar\"></i>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-md-1\"></div>\r\n          </div>\r\n        </div>\r\n      </vuestic-modal-reference>\r\n\r\n      <vuestic-modal-find\r\n        :show.sync=\"show\"\r\n        :data_pid=\"Number(data_pid)\"\r\n        :data_length=\"Number(data_length)\"\r\n        ref=\"staticModalFind\"\r\n        cancelText=\"ODUSTANI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\">\r\n          {{''}}\r\n          <span style=\"color: #e34a4a;\">{{'Redni broj pacijenta'}}</span>\r\n        </div>\r\n        <div>\r\n          <h5></h5>\r\n        </div>\r\n      </vuestic-modal-find>\r\n\r\n      <vuestic-modal-aparati\r\n        :show.sync=\"show\"\r\n        ref=\"staticModalAparati\"\r\n        cancelText=\"ODUSTANI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\">\r\n          {{'Izbor analizatora: '}}\r\n          <span\r\n            style=\"color: #e34a4a;\"\r\n          >{{this.analiza.ime + ' (' + this.analiza.analit + ')'}}</span>\r\n        </div>\r\n        <div>\r\n          <vuestic-accordion-obrada>\r\n            <vuestic-collapse-aparati\r\n              v-for=\"element in analysers\"\r\n              :key=\"element._id\"\r\n              :analyser=\"element\"\r\n            >\r\n              <span slot=\"header\">{{element.ime + ', ' + element.site.naziv}}</span>\r\n              <div slot=\"body\">\r\n                <div class=\"va-row\"></div>\r\n              </div>\r\n            </vuestic-collapse-aparati>\r\n          </vuestic-accordion-obrada>\r\n        </div>\r\n      </vuestic-modal-aparati>\r\n\r\n      <!--  -->\r\n\r\n      <vuestic-modal-results-multi\r\n        :show.sync=\"show\"\r\n        ref=\"staticModalResultsMulti\"\r\n        cancelText=\"ODUSTANI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\">\r\n          {{'Izbor rezultata: '}}\r\n          <span style=\"color: #e34a4a;\">{{multi_test}}</span>\r\n        </div>\r\n        <div></div>\r\n      </vuestic-modal-results-multi>\r\n\r\n      <!-- Patient evaluation, Single -->\r\n\r\n      <patient-evaluation-single\r\n        :show.sync=\"show\"\r\n        ref=\"staticModalEvaluationSingle\"\r\n        cancelText=\"ZATVORI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\">\r\n          <span>{{ime + ' ' + prezime}}</span>\r\n        </div>\r\n\r\n        <div class=\"row\" v-if=\"Procjena.length && !graph\">\r\n          <div class=\"col-md-12\">\r\n            <div class=\"table-responsive\">\r\n              <table class=\"table table-striped table-sm color-icon-label-table\">\r\n                <thead>\r\n                  <tr align=\"middle\">\r\n                    <td width=\"20%\">{{'REZULTAT'}}</td>\r\n                    <td width=\"20%\">{{'JEDINICA'}}</td>\r\n                    <td width=\"20%\">{{'REFERENCE'}}</td>\r\n                    <td width=\"20%\">{{'DATUM'}}</td>\r\n                    <td width=\"15%\">{{'VRIJEME'}}</td>\r\n                    <td width=\"5%\" align=\"middle\"></td>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n\r\n                  <!--  -->\r\n\r\n                  <tr\r\n                    align=\"middle\"\r\n                    v-for=\"(element, index) in Procjena\"\r\n                    :key=\"index\"\r\n                    v-bind:class=\"{\r\n                          'table-danger': Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, $store.state.site, element.interp, element.extend, spec)[5] === 'Red', \r\n                          'table-success': Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, $store.state.site, element.interp, element.extend, spec)[5] === 'Green',\r\n                          'table-warning': Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, $store.state.site, element.interp, element.extend, spec)[5] === 'Yellow'\r\n                        }\"\r\n                  >\r\n                    <td width=\"19%\">{{element.rezultat}}</td>\r\n                    <td width=\"19%\">{{element.jedinica}}</td>\r\n                    <td\r\n                      width=\"19%\"\r\n                    >{{Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, $store.state.site, element.interp, element.extend, spec)[4]}}</td>\r\n                    <td width=\"19%\">{{element.datum}}</td>\r\n                    <td width=\"15%\">{{element.vrijeme}}</td>\r\n                    <td width=\"9%\" align=\"middle\">\r\n                      <i\r\n                        v-bind:class=\"{'fa fa-exclamation-triangle icon-right input-icon error-icon' : Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, $store.state.site, element.interp, element.extend, spec)[5] === 'Red'}\"\r\n                      ></i>\r\n                      <i\r\n                        v-bind:class=\"{'fa fa-check success-icon icon-right input-icon' : Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, $store.state.site, element.interp, element.extend, spec)[5] === 'Green'}\"\r\n                      ></i>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n              <div style=\"text-align:center;\">\r\n                <span class=\"circle badge-info\"></span>\r\n                {{table_header}}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!--  <div class=\"row\" v-if=\"showLineChart\">\r\n          <div class=\"col-md-12\">\r\n            <hr>\r\n          </div>\r\n        </div>-->\r\n\r\n        <div class=\"row\" v-if=\"showLineChart && graph\">\r\n          <div class=\"col-md-12\">\r\n            <line-chart :options=\"optionsLineChart\" :data=\"dataLineChart\" type=\"line\"></line-chart>\r\n          </div>\r\n        </div>\r\n        <div class=\"row\" v-if=\"!showLineChart && graph\">\r\n          <div class=\"col-md-12\">\r\n\r\n            <!-- <div style=\"text-align:center;\"> -->\r\n\r\n            <div>\r\n              <span style=\"color: #e34a4a;\">{{\"Nema podataka.\"}}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </patient-evaluation-single>\r\n\r\n      <!-- LabAssay evaluation, Single -->\r\n\r\n      <patient-evaluation-single\r\n        :show.sync=\"show\"\r\n        ref=\"staticModalLabAssayEvalSingle\"\r\n        cancelText=\"ZATVORI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\">\r\n          <span style=\"color: #4ae387;\">{{analiza_eval.ime + ' (' + analiza_eval.analit + ')'}}</span>\r\n          <span>{{\" - Rezultati analize u zadnjih 14 dana\"}}</span>\r\n        </div>\r\n\r\n        <div class=\"row\" v-if=\"Procjena.length && !graph\">\r\n          <div class=\"col-md-12\">\r\n            <div class=\"table-responsive\">\r\n              <table class=\"table table-striped table-sm color-icon-label-table\">\r\n                <thead>\r\n                  <tr align=\"middle\">\r\n                    <td width=\"20%\">{{'REZULTAT'}}</td>\r\n                    <td width=\"20%\">{{'JEDINICA'}}</td>\r\n                    <td width=\"20%\">{{'REFERENCE'}}</td>\r\n                    <td width=\"20%\">{{'DATUM'}}</td>\r\n                    <td width=\"15%\">{{'VRIJEME'}}</td>\r\n                    <td width=\"5%\" align=\"middle\"></td>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n\r\n                  <!--  -->\r\n\r\n                  <tr\r\n                    align=\"middle\"\r\n                    v-for=\"(element, index) in Procjena\"\r\n                    :key=\"index\"\r\n                    v-bind:class=\"{\r\n                      'table-danger': Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, $store.state.site, element.interp, element.extend, spec)[5] === 'Red', \r\n                      'table-success': Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, $store.state.site, element.interp, element.extend, spec)[5] === 'Green',\r\n                      'table-warning': Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, $store.state.site, element.interp, element.extend, spec)[5] === 'Yellow'\r\n                    }\"\r\n                  >\r\n                    <td width=\"19%\">{{element.rezultat}}</td>\r\n                    <td width=\"19%\">{{element.jedinica}}</td>\r\n                    <td\r\n                      width=\"19%\"\r\n                    >{{Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, $store.state.site, element.interp, element.extend, spec)[4]}}</td>\r\n                    <td width=\"19%\">{{element.datum}}</td>\r\n                    <td width=\"15%\">{{element.vrijeme}}</td>\r\n                    <td width=\"9%\" align=\"middle\">\r\n                      <i\r\n                        v-bind:class=\"{'fa fa-exclamation-triangle icon-right input-icon error-icon' : Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, $store.state.site, element.interp, element.extend, spec)[5] === 'Red'}\"\r\n                      ></i>\r\n                      <i\r\n                        v-bind:class=\"{'fa fa-check success-icon icon-right input-icon' : Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, $store.state.site, element.interp, element.extend, spec)[5] === 'Green'}\"\r\n                      ></i>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n              <div style=\"text-align:center;\">\r\n                <span class=\"circle badge-info\"></span>\r\n                {{table_header}}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!--  <div class=\"row\" v-if=\"showLineChart\">\r\n          <div class=\"col-md-12\">\r\n            <hr>\r\n          </div>\r\n        </div>-->\r\n\r\n        <div class=\"row\" v-if=\"showLineChart && graph\">\r\n          <div class=\"col-md-12\">\r\n            <line-chart :options=\"optionsLineChart\" :data=\"dataLineChart\" type=\"line\"></line-chart>\r\n          </div>\r\n        </div>\r\n        <div class=\"row\" v-if=\"!showLineChart && graph\">\r\n          <div class=\"col-md-12\">\r\n            <!-- <div style=\"text-align:center;\"> -->\r\n            <div>\r\n              <span style=\"color: #e34a4a;\">{{\"Nema podataka.\"}}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </patient-evaluation-single>\r\n\r\n      <!-- Patient evaluation, Multi -->\r\n\r\n      <patient-evaluation-multi\r\n        :show.sync=\"show\"\r\n        :multiparam_izbor=\"multiparam_izbor\"\r\n        :multiparam_izbornik=\"multiparam_izbornik\"\r\n        ref=\"staticModalEvaluationMulti\"\r\n        cancelText=\"ZATVORI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\">\r\n          <span>{{ime + ' ' + prezime}}</span>\r\n        </div>\r\n\r\n        <!--  -->\r\n\r\n        <div class=\"row\" v-if=\"Procjena.length && !graph\">\r\n          <div class=\"col-md-12\">\r\n            <div class=\"table-responsive\">\r\n              <table class=\"table table-striped table-sm color-icon-label-table\">\r\n                <thead>\r\n                  <tr align=\"middle\">\r\n                    <td width=\"20%\">{{'REZULTAT'}}</td>\r\n                    <td width=\"20%\">{{'JEDINICA'}}</td>\r\n                    <td width=\"20%\">{{'REFERENCE'}}</td>\r\n                    <td width=\"20%\">{{'DATUM'}}</td>\r\n                    <td width=\"15%\">{{'VRIJEME'}}</td>\r\n                    <td width=\"5%\" align=\"middle\"></td>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr\r\n                    align=\"middle\"\r\n                    v-for=\"(element, index) in Procjena\"\r\n                    :key=\"index\"\r\n                    v-bind:class=\"{\r\n                      'table-danger': Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, $store.state.site, element.interp, element.extend, spec)[5] === 'Red', \r\n                      'table-success': Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, $store.state.site, element.interp, element.extend, spec)[5] === 'Green',\r\n                      'table-warning': Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, $store.state.site, element.interp, element.extend, spec)[5] === 'Yellow'\r\n                    }\"\r\n                  >\r\n                    <td width=\"19%\">{{element.rezultat}}</td>\r\n                    <td width=\"19%\">{{element.jedinica}}</td>\r\n                    <td\r\n                      width=\"19%\"\r\n                    >{{Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, $store.state.site, element.interp, element.extend, spec)[4]}}</td>\r\n                    <td width=\"19%\">{{element.datum}}</td>\r\n                    <td width=\"15%\">{{element.vrijeme}}</td>\r\n                    <td width=\"9%\" align=\"middle\">\r\n                      <i\r\n                        v-bind:class=\"{'fa fa-exclamation-triangle icon-right input-icon error-icon' : Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, $store.state.site, element.interp, element.extend, spec)[5] === 'Red'}\"\r\n                      ></i>\r\n                      <i\r\n                        v-bind:class=\"{'fa fa-check success-icon icon-right input-icon' : Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, $store.state.site, element.interp, element.extend, spec)[5] === 'Green'}\"\r\n                      ></i>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n              <div style=\"text-align:center;\">\r\n                <span class=\"circle badge-info\"></span>\r\n                {{table_header}}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row\" v-if=\"!Procjena.length && !graph\">\r\n          <div class=\"col-md-12\">\r\n            <div>\r\n              <span style=\"color: #e34a4a;\">{{\"Nema podataka.\"}}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row\" v-if=\"showLineChart && graph\">\r\n          <div class=\"col-md-12\">\r\n            <line-chart :options=\"optionsLineChart\" :data=\"dataLineChart\" type=\"line\"></line-chart>\r\n          </div>\r\n        </div>\r\n        <div class=\"row\" v-if=\"!showLineChart && graph\">\r\n          <div v-if=\"!showLineChart && !spinner\" class=\"col-md-12\">\r\n            <div>\r\n              <span style=\"color: #e34a4a;\">{{\"Nema podataka.\"}}</span>\r\n            </div>\r\n          </div>\r\n          <div style=\"min-height: 400px;\" v-if=\"!showLineChart && spinner\" class=\"col-md-12\">\r\n            <div\r\n              style=\"display:flex; flex-direction: row; justify-content: center; align-items: center\"\r\n            >\r\n              <div style=\"float:left;\"></div>\r\n              <span style=\"vertical-align:middle; \">\r\n                <atom-spinner\r\n                  style=\"opacity: 0.25;\"\r\n                  :animation-duration=\"1000\"\r\n                  :size=\"300\"\r\n                  :color=\"'#4ae387'\"\r\n                />\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </patient-evaluation-multi>\r\n\r\n      <!-- LabAssay evaluation, Multi -->\r\n\r\n      <patient-evaluation-multi\r\n        :show.sync=\"show\"\r\n        :multiparam_izbor=\"multiparam_izbor\"\r\n        :multiparam_izbornik=\"multiparam_izbornik\"\r\n        ref=\"staticModalLabAssayEvalMulti\"\r\n        cancelText=\"ZATVORI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\">\r\n          <span style=\"color: #4ae387;\">{{analiza_eval.ime + ' (' + analiza_eval.analit + ')'}}</span>\r\n          <span>{{\" - Rezultati analize u zadnjih 14 dana\"}}</span>\r\n        </div>\r\n\r\n        <!--  -->\r\n\r\n        <div class=\"row\" v-if=\"Procjena.length && !graph\">\r\n          <div class=\"col-md-12\">\r\n            <div class=\"table-responsive\">\r\n              <table class=\"table table-striped table-sm color-icon-label-table\">\r\n                <thead>\r\n                  <tr align=\"middle\">\r\n                    <td width=\"20%\">{{'REZULTAT'}}</td>\r\n                    <td width=\"20%\">{{'JEDINICA'}}</td>\r\n                    <td width=\"20%\">{{'REFERENCE'}}</td>\r\n                    <td width=\"20%\">{{'DATUM'}}</td>\r\n                    <td width=\"15%\">{{'VRIJEME'}}</td>\r\n                    <td width=\"5%\" align=\"middle\"></td>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr\r\n                    align=\"middle\"\r\n                    v-for=\"(element, index) in Procjena\"\r\n                    :key=\"index\"\r\n                    v-bind:class=\"{\r\n                      'table-danger': Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, $store.state.site, element.interp, element.extend, spec)[5] === 'Red', \r\n                      'table-success': Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, $store.state.site, element.interp, element.extend, spec)[5] === 'Green',\r\n                      'table-warning': Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, $store.state.site, element.interp, element.extend, spec)[5] === 'Yellow'\r\n                    }\"\r\n                  >\r\n                    <td width=\"19%\">{{element.rezultat}}</td>\r\n                    <td width=\"19%\">{{element.jedinica}}</td>\r\n                    <td\r\n                      width=\"19%\"\r\n                    >{{Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, $store.state.site, element.interp, element.extend, spec)[4]}}</td>\r\n                    <td width=\"19%\">{{element.datum}}</td>\r\n                    <td width=\"15%\">{{element.vrijeme}}</td>\r\n                    <td width=\"9%\" align=\"middle\">\r\n                      <i\r\n                        v-bind:class=\"{'fa fa-exclamation-triangle icon-right input-icon error-icon' : Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, $store.state.site, element.interp, element.extend, spec)[5] === 'Red'}\"\r\n                      ></i>\r\n                      <i\r\n                        v-bind:class=\"{'fa fa-check success-icon icon-right input-icon' : Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, $store.state.site, element.interp, element.extend, spec)[5] === 'Green'}\"\r\n                      ></i>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n              <div style=\"text-align:center;\">\r\n                <span class=\"circle badge-info\"></span>\r\n                {{table_header}}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row\" v-if=\"!Procjena.length && !graph\">\r\n          <div class=\"col-md-12\">\r\n            <div>\r\n              <span style=\"color: #e34a4a;\">{{\"Nema podataka.\"}}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row\" v-if=\"showLineChart && graph\">\r\n          <div class=\"col-md-12\">\r\n            <line-chart :options=\"optionsLineChart\" :data=\"dataLineChart\" type=\"line\"></line-chart>\r\n          </div>\r\n        </div>\r\n        <div class=\"row\" v-if=\"!showLineChart && graph\">\r\n          <div v-if=\"!showLineChart && !spinner\" class=\"col-md-12\">\r\n            <div>\r\n              <span style=\"color: #e34a4a;\">{{\"Nema podataka.\"}}</span>\r\n            </div>\r\n          </div>\r\n          <div style=\"min-height: 400px;\" v-if=\"!showLineChart && spinner\" class=\"col-md-12\">\r\n            <div\r\n              style=\"display:flex; flex-direction: row; justify-content: center; align-items: center\"\r\n            >\r\n              <div style=\"float:left;\"></div>\r\n              <span style=\"vertical-align:middle; \">\r\n                <atom-spinner\r\n                  style=\"opacity: 0.25;\"\r\n                  :animation-duration=\"1000\"\r\n                  :size=\"300\"\r\n                  :color=\"'#4ae387'\"\r\n                />\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </patient-evaluation-multi>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12\">\r\n        <div class=\"col-md-6\">\r\n          <loading\r\n            :active.sync=\"isLoading\"\r\n            :can-cancel=\"false\"\r\n            :on-cancel=\"onCancel\"\r\n            color=\"#4ae387\"\r\n            :is-full-page=\"fullPage\"\r\n          ></loading>\r\n        </div>\r\n        <div class=\"col-md-6\">\r\n          <button v-if=\"false\" @click.prevent=\"Test\">{{'Loading...'}}</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport Vue from \"vue\";\r\nimport router from \"../../router\";\r\nimport store from \"vuex-store\";\r\nimport utils from \"services/utils\";\r\nimport { http } from \"../../../config/config.js\";\r\nimport { barcode } from \"../../../config/config.js\";\r\nimport BadgeColumn from \"./BadgeColumn.vue\";\r\nimport { bus } from \"../../main\";\r\nimport { server } from \"../../../config/config.js\";\r\nimport { Interpretation } from \"./functions/reference.js\";\r\nimport izbornik from \"./data-izbornik/izbornik\";\r\n\r\nimport Loading from \"vue-loading-overlay\";\r\nimport \"vue-loading-overlay/dist/vue-loading.css\";\r\n\r\nimport LineChart from \"../vuestic-components/vuestic-chart/chart-types/LineChart\";\r\nimport { AtomSpinner } from \"epic-spinners\";\r\nimport PDFObject from \"pdfobject\";\r\n\r\nVue.component(\"line-chart\", LineChart);\r\nVue.component(\"badge-column\", BadgeColumn);\r\n\r\nexport default {\r\n  \r\n  name: \"collapse-obrada\",\r\n\r\n  data() {\r\n    return {\r\n\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* \r\n\r\n\r\n\r\n\r\n\r\n| Microbiology Data\r\n\r\n\r\n\r\n\r\n\r\n*/\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n\r\n      AllowGetSample: true,\r\n      MicrobiologyOrder: false,\r\n      MicrobiologySample: false,\r\n      ModalNegative: false,\r\n      ModalPositive: false,\r\n      ModalPositiveCondition: false,\r\n      ShowAllBacteries: false,\r\n      ShowAntibiotics: false,\r\n      ShowBacteries: false,\r\n      BacteryTabs: [\"\"],\r\n      CurrentTab: \"\",\r\n      CurrentTest: \"\",\r\n      MicrobiologyModalHeader: \"Predefinisani rezultati\",\r\n      SelectedBacteries: [],\r\n      NegativeResultSelection: \"\",\r\n      PositiveResultSelection: \"\",\r\n      MicrobiologyScenario: \"Unknown\",\r\n      Antibiotics: [],\r\n      TemporaryAntibiotics: [],\r\n      TemporaryBacteries: [],\r\n      TemporaryBacteriesAdd: [],\r\n      Antibiograms: [],\r\n      Bacteries: [],\r\n\r\n      MicrobiologyResult: {\r\n        negative: null,\r\n        positive: null,\r\n        BUG: null,\r\n        F_RESULT: \"\",\r\n        M_RESULT: [],\r\n        DefaultBacteries: [],\r\n        RemainingBacteries: [],\r\n        NegativeDescriptions: [],\r\n        PositiveDescriptions: []\r\n      },\r\n\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* \r\n\r\n\r\n\r\n\r\n\r\nEnd of Microbiology Data |\r\n\r\n\r\n\r\n\r\n\r\n*/\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n\r\n      // Patient evaluation, Multi\r\n\r\n      save_retest: false,\r\n      multiparam_izbor: \"\",\r\n      klijent: null,\r\n      multiparam_id: \"\",\r\n      analit: {},\r\n      multiparams: [],\r\n      Response: {},\r\n      spinner: false,\r\n      multiparam_izbornik: [],\r\n      warning: { analiza: \"\", text: \"\", control: \"\" },\r\n      main: false,\r\n      show: true,\r\n      pdf: false,\r\n      header: \"\",\r\n      lokacija: {},\r\n      timestamp: \"\",\r\n      pacijent: \"\",\r\n      ime: \"\",\r\n      prezime: \"\",\r\n      jmbg: \"\",\r\n      pid: \"\",\r\n      sid: \"\",\r\n      email: \"\",\r\n      email_tmp: \"\",\r\n      verificiran: false,\r\n      email_button: false,\r\n      final_pdf: false,\r\n      odobren: false,\r\n      approved: 0,\r\n      verified: 0,\r\n      partials: [],\r\n      partials_condition: false,\r\n      count: 0,\r\n      nalaz: {},\r\n      report: {},\r\n      path: \"\",\r\n      url: \"\",\r\n      uzorci: [],\r\n      vise: [],\r\n      samples: [],\r\n      sample_status: \"\",\r\n      labassay: \"\",\r\n      multi_test: \"\",\r\n      multi_rezultati: [],\r\n      check: \"\",\r\n      link: \"\",\r\n      spec: \"*\",\r\n      testovi: [],\r\n      rezultati: [],\r\n      analysers: [],\r\n      analyser: {},\r\n      analiza: {},\r\n      analyser_selected: {},\r\n      analyser_patient: {},\r\n      analitiprikaz: [],\r\n      analiti: [],\r\n      naslov: \"\",\r\n      calculated: false,\r\n      show_table: false,\r\n      sample: {},\r\n      resdata: {},\r\n      email_changed: false,\r\n      Previous: { pid: null },\r\n      Next: { pid: null },\r\n      Results: [],\r\n      Datum: { today: null, query: null, next: null, previous: null },\r\n      pagination: false,\r\n      forward_disabled: false,\r\n      backward_disabled: false,\r\n      data_length: 0,\r\n      data_min: 1,\r\n      data_pid: 0,\r\n      data_spol: \"\",\r\n      query_date: \"\",\r\n      today_date: \"\",\r\n      reference: {},\r\n      interpretacije: [\r\n        \"none\",\r\n        \"A\",\r\n        \"ogtt\",\r\n        \"insul\",\r\n        \"less\",\r\n        \"lesseq\",\r\n        \"lesspl\",\r\n        \"infekc\",\r\n        \"grt\",\r\n        \"grtpl\",\r\n        \"grtepl\",\r\n        \"grtno\",\r\n        \"grte\",\r\n        \"neg\",\r\n        \"nema\",\r\n        \"urbl\",\r\n        \"reakt\",\r\n        \"norm\",\r\n        \"norma\",\r\n        \"ured\",\r\n        \"plus\",\r\n        \"morf\",\r\n        \"titar\",\r\n        \"tsh\",\r\n        \"trg\",\r\n        \"hol\",\r\n        \"hdl\",\r\n        \"ldl\",\r\n        \"fpsa\",\r\n        \"sediment\",\r\n        \"bistar\",\r\n        \"boja\",\r\n        \"bojasp\",\r\n        \"nesto\",\r\n        \"exists\",\r\n        \"blst\",\r\n        \"leu\",\r\n        \"spec\"\r\n      ],\r\n\r\n      // Toasts\r\n\r\n      toastText: \"\",\r\n      toastIcon: \"\",\r\n      toastPosition: \"\",\r\n      toastDuration: 2500,\r\n      isToastFullWidth: false,\r\n      className: \"\",\r\n\r\n      isLoading: false,\r\n      fullPage: true,\r\n\r\n      // Evaluation\r\n\r\n      analiza_eval: {},\r\n      showLineChart: false,\r\n      optionsLineChart: {},\r\n      dataLineChart: {},\r\n      Procjena: [],\r\n\r\n      // Settings\r\n\r\n      jedinica: \"\",\r\n      jedinice: [],\r\n      graph: false,\r\n      table_header: \"\"\r\n    };\r\n  },\r\n  components: {\r\n    Loading,\r\n    AtomSpinner\r\n  },\r\n\r\n  watch: {\r\n    email: function() {\r\n      if (this.email.trim() != this.email_tmp.trim()) {\r\n        this.email_changed = true;\r\n      }\r\n    },\r\n    \r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* \r\n\r\n\r\n\r\n\r\n\r\n| Microbiology Watch\r\n\r\n\r\n\r\n\r\n\r\n*/\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n\r\n    ModalNegative: function() {\r\n      if (this.ModalNegative) {\r\n\r\n        console.log(\"Izbor: negativan\");\r\n\r\n        this.MicrobiologyModalHeader = \"Predefinisani rezultati\";\r\n        if (this.MicrobiologyScenario.includes(\"MANB\")) {\r\n          this.ModalPositiveCondition = true;\r\n        } else {\r\n          this.ModalPositiveCondition = false;\r\n        }\r\n      }\r\n    },\r\n\r\n    ModalPositive: function() {\r\n      if (this.ModalPositive) {\r\n\r\n        console.log(\"Izbor: pozitivan\");\r\n\r\n        if (this.MicrobiologyScenario === \"MAIBNoR\") {\r\n          this.MicrobiologyModalHeader = \"Bakterije\";\r\n        } else {\r\n          this.MicrobiologyModalHeader = \"Predefinisani rezultati\";\r\n        }\r\n\r\n        if (this.MicrobiologyScenario.includes(\"MANB\")) {\r\n          this.ModalPositiveCondition = true;\r\n        } else {\r\n          this.ModalPositiveCondition = false;\r\n        }\r\n      }\r\n    },\r\n\r\n    MicrobiologyScenario: function() {\r\n      switch (this.MicrobiologyScenario) {\r\n        case \"MAIBNoR\":\r\n          // Ima definisan skup bakterija - Nema Rezultat\r\n          this.ModalNegative = false;\r\n          this.ModalPositive = false;\r\n          this.ModalPositiveCondition = false;\r\n          this.MicrobiologyModalHeader = \"Predefinisani rezultati\";\r\n          this.NegativeResultSelection = \"\";\r\n          this.PositiveResultSelection = \"\";\r\n          this.SelectedBacteries = [];\r\n          this.ShowAllBacteries = false;\r\n\r\n          break;\r\n\r\n        case \"MAIBNeR\":\r\n          // Ima definisan skup bakterija - Negativan Rezultat\r\n          this.SelectedBacteries = [];\r\n\r\n          break;\r\n\r\n        case \"MAIBPoR\":\r\n          // Ima definisan skup bakterija - Pozitivan Rezultat\r\n          break;\r\n\r\n        case \"MANBNoR\":\r\n          // Nema definisan skup bakterija - Nema Rezultat\r\n          this.ModalNegative = false;\r\n          this.ModalPositive = false;\r\n          this.ModalPositiveCondition = false;\r\n          this.MicrobiologyModalHeader = \"Predefinisani rezultati\";\r\n          this.NegativeResultSelection = \"\";\r\n          this.PositiveResultSelection = \"\";\r\n          this.SelectedBacteries = [];\r\n          this.ShowAllBacteries = false;\r\n\r\n          break;\r\n\r\n        case \"MANBNeR\":\r\n          // Nema definisan skup bakterija - Negativan Rezultat\r\n          this.SelectedBacteries = [];\r\n\r\n          break;\r\n\r\n        case \"MANBPoR\":\r\n          // Nema definisan skup bakterija - Pozitivan Rezultat\r\n          this.SelectedBacteries = [];\r\n\r\n          break;\r\n\r\n        default:\r\n          // console.warn(\"Nije Mikrobiološka analiza.\");\r\n          break;\r\n      }\r\n    }\r\n\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* \r\n\r\n\r\n\r\n\r\n\r\nEnd of Microbiology Watch |\r\n\r\n\r\n\r\n\r\n\r\n*/\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n\r\n  },\r\n  beforeCreate() {\r\n    http\r\n      .get(\r\n        \"postavke/jedinice/mount/list?token=\" +\r\n          this.$store.state.token +\r\n          \"&site=\" +\r\n          this.$store.state.site,\r\n        {}\r\n      )\r\n      .then(res => {\r\n        this.jedinice = res.data.jedinica;\r\n      });\r\n  },\r\n  mounted() {\r\n    bus.$on(\"Parametar\", data => {\r\n\r\n      // bus.$emit(\"Switch\");\r\n\r\n      this.spinner = true;\r\n\r\n      this.analit = {};\r\n\r\n      this.multiparams.forEach(element => {\r\n        if (element.opis === data) {\r\n          this.analit = element;\r\n          this.multiparam_id = element._id;\r\n          this.multiparam_izbor = data;\r\n        }\r\n      });\r\n\r\n      if (_.isEmpty(this.analit)) {\r\n\r\n        // console.warn(\"Empty object.\");\r\n\r\n      } else {\r\n        if (!_.isEmpty(this.Response)) {\r\n          this.showLineChart = false;\r\n          let palette = store.getters.palette;\r\n\r\n          this.Procjena = [];\r\n\r\n          var obj = {};\r\n          var count = 0;\r\n\r\n          this.Response.Multi.forEach(element => {\r\n            count++;\r\n            element.multi.forEach(param => {\r\n              if (\r\n                this.multiparam_id == param.labassay &&\r\n                param.rezultat[0].rezultat_f.trim() != \"\"\r\n              ) {\r\n                obj.rezultat = param.rezultat[0].rezultat_f;\r\n                obj.jedinica = param.rezultat[0].jedinice_f;\r\n                obj.analit = \"Nema podataka\";\r\n                obj.interp = param.interp;\r\n                obj.extend = param.extend;\r\n                obj.refd = param.refd;\r\n                obj.refg = param.refg;\r\n                obj.sid = \"Nema podataka\";\r\n                obj.updated_at = new Date(param.rezultat[0].updated_at);\r\n\r\n                var datum =\r\n                  JSON.stringify(new Date(param.rezultat[0].updated_at)).slice(\r\n                    9,\r\n                    11\r\n                  ) +\r\n                  \".\" +\r\n                  JSON.stringify(new Date(param.rezultat[0].updated_at)).slice(\r\n                    6,\r\n                    8\r\n                  ) +\r\n                  \".\" +\r\n                  JSON.stringify(new Date(param.rezultat[0].updated_at)).slice(\r\n                    1,\r\n                    5\r\n                  );\r\n                var time = JSON.stringify(\r\n                  new Date(\r\n                    new Date(param.rezultat[0].updated_at).getTime() -\r\n                      new Date(\r\n                        param.rezultat[0].updated_at\r\n                      ).getTimezoneOffset() *\r\n                        60000\r\n                  ).toISOString()\r\n                ).substring(12, 17);\r\n                obj.datum = datum;\r\n                obj.vrijeme = time;\r\n                obj.kontrola = this.Interpretacija(\r\n                  \"\",\r\n                  obj.rezultat,\r\n                  obj.jedinica,\r\n                  obj.refd,\r\n                  obj.refg,\r\n                  this.$store.state.site,\r\n                  obj.interp,\r\n                  obj.extend,\r\n                  this.spec\r\n                )[5];\r\n\r\n                this.Procjena.push(obj);\r\n                obj = {};\r\n              }\r\n            });\r\n\r\n            if (count == this.Response.Multi.length) {\r\n              this.Procjena.sort(function(a, b) {\r\n                return Date.parse(a.updated_at) == Date.parse(b.updated_at)\r\n                  ? 0\r\n                  : +(Date.parse(a.updated_at) < Date.parse(b.updated_at)) ||\r\n                      -1;\r\n              });\r\n\r\n              // Line Chart\r\n\r\n              var data = [];\r\n\r\n              if (this.Procjena.length) {\r\n                this.optionsLineChart = {\r\n                  responsive: true,\r\n                  maintainAspectRatio: false,\r\n                  title: {\r\n                    display: true,\r\n                    text: \"\"\r\n                  },\r\n                  scales: {\r\n                    xAxes: [\r\n                      {\r\n                        display: true,\r\n                        gridLines: {\r\n                          display: true,\r\n                          color: \"#eee\"\r\n                        }\r\n                      }\r\n                    ],\r\n                    yAxes: [\r\n                      {\r\n                        display: true,\r\n                        gridLines: {\r\n                          display: true,\r\n                          color: \"#eee\"\r\n                        }\r\n                      }\r\n                    ]\r\n                  }\r\n                };\r\n\r\n                var labels = [];\r\n                var kontrola = [];\r\n                var temp = \"\";\r\n\r\n                this.Procjena.forEach(element => {\r\n                  if (!isNaN(element.rezultat.trim())) {\r\n                    switch (element.kontrola) {\r\n                      case \"Red\":\r\n                        kontrola.push(palette.danger);\r\n                        break;\r\n                      case \"Green\":\r\n                        kontrola.push(palette.primary);\r\n                        break;\r\n                      case \"Yellow\":\r\n                        kontrola.push(palette.warning);\r\n                        break;\r\n\r\n                      default:\r\n                        kontrola.push(palette.info);\r\n                        break;\r\n                    }\r\n\r\n                    labels.push(element.datum);\r\n                    data.push(element.rezultat);\r\n                  }\r\n                });\r\n\r\n                this.dataLineChart = {\r\n                  labels: labels,\r\n                  datasets: [\r\n                    {\r\n                      label: this.table_header,\r\n                      backgroundColor: utils.hex2rgb(palette.info, 0.5).css,\r\n                      pointBorderColor: kontrola,\r\n                      pointBackgroundColor: kontrola,\r\n                      borderColor: palette.transparent,\r\n                      data: data\r\n                    }\r\n                  ]\r\n                };\r\n\r\n                if (data.length) {\r\n                  setTimeout(() => {\r\n                    this.showLineChart = true;\r\n                  }, 500);\r\n                }\r\n              } else {\r\n\r\n                // console.warn(\"No data.\");\r\n\r\n                this.spinner = false;\r\n              }\r\n            }\r\n          });\r\n        } else {\r\n\r\n          // console.warn(\"Response not loaded.\");\r\n\r\n        }\r\n      }\r\n    });\r\n\r\n    bus.$on(\"graph\", () => {\r\n      this.Procjena.sort(function(a, b) {\r\n        return Date.parse(a.updated_at) == Date.parse(b.updated_at)\r\n          ? 0\r\n          : +(Date.parse(a.updated_at) < Date.parse(b.updated_at)) || -1;\r\n      });\r\n\r\n      var data = [];\r\n\r\n      if (this.Procjena.length) {\r\n        let palette = store.getters.palette;\r\n        this.optionsLineChart = {\r\n          responsive: true,\r\n          maintainAspectRatio: false,\r\n          title: {\r\n            display: true,\r\n            text: \"\"\r\n          },\r\n          scales: {\r\n            xAxes: [\r\n              {\r\n                display: true,\r\n                gridLines: {\r\n                  display: true,\r\n                  color: \"#eee\"\r\n                }\r\n              }\r\n            ],\r\n            yAxes: [\r\n              {\r\n                display: true,\r\n                gridLines: {\r\n                  display: true,\r\n                  color: \"#eee\"\r\n                }\r\n              }\r\n            ]\r\n          }\r\n        };\r\n\r\n        var labels = [];\r\n        var kontrola = [];\r\n        var temp = \"\";\r\n\r\n        this.Procjena.forEach(element => {\r\n          if (!isNaN(element.rezultat.trim())) {\r\n            switch (element.kontrola) {\r\n              case \"Red\":\r\n                kontrola.push(palette.danger);\r\n                break;\r\n              case \"Green\":\r\n                kontrola.push(palette.primary);\r\n                break;\r\n              case \"Yellow\":\r\n                kontrola.push(palette.warning);\r\n                break;\r\n\r\n              default:\r\n                kontrola.push(palette.info);\r\n                break;\r\n            }\r\n\r\n            labels.push(element.datum);\r\n            data.push(element.rezultat);\r\n          }\r\n        });\r\n\r\n        this.dataLineChart = {\r\n          labels: labels,\r\n          datasets: [\r\n            {\r\n              label: this.analiza_eval.ime + \" | \" + this.analiza_eval.analit,\r\n              backgroundColor: utils.hex2rgb(palette.info, 0.5).css,\r\n              pointBorderColor: kontrola,\r\n              pointBackgroundColor: kontrola,\r\n              borderColor: palette.transparent,\r\n              data: data\r\n            }\r\n          ]\r\n        };\r\n\r\n        if (data.length) {\r\n          this.showLineChart = true;\r\n        }\r\n      } else {\r\n\r\n        // console.warn(\"No data.\");\r\n\r\n      }\r\n      this.graph = false;\r\n    });\r\n\r\n    bus.$on(\"table\", () => {\r\n      this.Procjena.sort(function(a, b) {\r\n        return Date.parse(a.updated_at) == Date.parse(b.updated_at)\r\n          ? 0\r\n          : +(Date.parse(a.updated_at) > Date.parse(b.updated_at)) || -1;\r\n      });\r\n\r\n      var data = [];\r\n\r\n      if (this.Procjena.length) {\r\n        let palette = store.getters.palette;\r\n        this.optionsLineChart = {\r\n          responsive: true,\r\n          maintainAspectRatio: false,\r\n          title: {\r\n            display: true,\r\n            text: \"\"\r\n          },\r\n          scales: {\r\n            xAxes: [\r\n              {\r\n                display: true,\r\n                gridLines: {\r\n                  display: true,\r\n                  color: \"#eee\"\r\n                }\r\n              }\r\n            ],\r\n            yAxes: [\r\n              {\r\n                display: true,\r\n                gridLines: {\r\n                  display: true,\r\n                  color: \"#eee\"\r\n                }\r\n              }\r\n            ]\r\n          }\r\n        };\r\n\r\n        var labels = [];\r\n        var kontrola = [];\r\n        var temp = \"\";\r\n\r\n        this.Procjena.forEach(element => {\r\n          if (!isNaN(element.rezultat.trim())) {\r\n            switch (element.kontrola) {\r\n              case \"Red\":\r\n                kontrola.push(palette.danger);\r\n                break;\r\n              case \"Green\":\r\n                kontrola.push(palette.primary);\r\n                break;\r\n              case \"Yellow\":\r\n                kontrola.push(palette.warning);\r\n                break;\r\n\r\n              default:\r\n                kontrola.push(palette.info);\r\n                break;\r\n            }\r\n\r\n            labels.push(element.datum);\r\n            data.push(element.rezultat);\r\n          }\r\n        });\r\n\r\n        this.dataLineChart = {\r\n          labels: labels,\r\n          datasets: [\r\n            {\r\n              label: this.analiza_eval.ime + \" | \" + this.analiza_eval.analit,\r\n              backgroundColor: utils.hex2rgb(palette.info, 0.5).css,\r\n              pointBorderColor: kontrola,\r\n              pointBackgroundColor: kontrola,\r\n              borderColor: palette.transparent,\r\n              data: data\r\n            }\r\n          ]\r\n        };\r\n\r\n        if (data.length) {\r\n          this.showLineChart = true;\r\n        }\r\n      } else {\r\n\r\n        // console.warn(\"No data.\");\r\n\r\n      }\r\n      this.graph = true;\r\n    });\r\n\r\n    bus.$on(\"trash\", data => {\r\n      this.sid = data.sid;\r\n      this.$refs.staticModalDeleteSample.open();\r\n    });\r\n\r\n    bus.$on(\"edit\", data => {\r\n      this.sid = data.sid;\r\n      this.$refs.staticModalEditSample.open();\r\n    });\r\n\r\n    bus.$on(\"comment\", data => {\r\n      this.sid = data.sid;\r\n      this.$refs.staticModalComment.open();\r\n    });\r\n\r\n    bus.$on(\"barcode\", data => {\r\n      this.BarcodePrint(data);\r\n    });\r\n\r\n    bus.$on(\"save\", data => {\r\n      this.SaveResults(this.rezultati, \"save\");\r\n    });\r\n\r\n    bus.$on(\"check\", data => {\r\n      this.Approve(this.rezultati);\r\n    });\r\n\r\n    bus.$on(\"verify\", data => {\r\n      this.Verify(data, \"verify\");\r\n    });\r\n\r\n    bus.$on(\"undo\", data => {\r\n      this.Disapprove(this.rezultati, \"undo\");\r\n    });\r\n\r\n    bus.$on(\"unlock\", data => {\r\n      this.UnVerify(data, \"unlock\");\r\n    });\r\n\r\n    bus.$on(\"Nalaz\", data => {\r\n      if (!data.final_pdf) {\r\n        this.$refs.staticModalError.open();\r\n      } else {\r\n        this.path = this.timestamp + \".pdf\";\r\n\r\n        this.url = server + \"nalazi/\" + this.path;\r\n\r\n        var options = {\r\n          width: \"100%\",\r\n          height: \"800px\"\r\n        };\r\n        PDFObject.embed(this.url, \"#pdf-container\", options);\r\n\r\n        this.email_button = true;\r\n        this.main = false;\r\n        this.pdf = true;\r\n      }\r\n    });\r\n\r\n    bus.$on(\"pdf\", data => {\r\n      if (!data.pdf_exists) {\r\n        this.$refs.staticModalError.open();\r\n      } else {\r\n        this.path = \"samples/\" + data.sid + \".pdf\";\r\n\r\n        this.url = server + \"nalazi/samples/\" + data.sid + \".pdf\";\r\n\r\n        var options = {\r\n          width: \"100%\",\r\n          height: \"800px\"\r\n        };\r\n        PDFObject.embed(this.url, \"#pdf-container\", options);\r\n\r\n        this.main = false;\r\n        this.pdf = true;\r\n      }\r\n    });\r\n\r\n    bus.$on(\"Sample\", data => {\r\n\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* \r\n\r\n\r\n\r\n\r\n\r\n| Microbiology Get Sample Check\r\n\r\n\r\n\r\n\r\n\r\n*/\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n\r\n      if (data.tip.includes(\"Mikrobiologija\")) {\r\n        this.MicrobiologySample = true;\r\n      } else {\r\n        this.MicrobiologySample = false;\r\n      }\r\n\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* \r\n\r\n\r\n\r\n\r\n\r\nEnd of Microbiology Get Sample Check |\r\n\r\n\r\n\r\n\r\n\r\n*/\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      this.$store.dispatch(\"SetSample\", data.sid);\r\n      this.GetSingleSample(data);\r\n    });\r\n\r\n    bus.$on(\"Deleted\", data => {\r\n      this.DeletedSample(data);\r\n    });\r\n\r\n    bus.$on(\"Edited\", data => {\r\n      this.EditSample(data);\r\n    });\r\n\r\n    bus.$on(\"SaveMulti\", data => {\r\n      this.SaveMultiResults(this.analiti, data);\r\n    });\r\n\r\n    bus.$on(\"Mail\", () => {\r\n      this.SendMail(this.email);\r\n    });\r\n\r\n    bus.$on(\"Error\", () => {\r\n\r\n      // Generate new Report\r\n      console.warn(\"Greška prilikom čitanja nalaza.\");      \r\n\r\n    });\r\n\r\n    bus.$on(\"Analyser\", data => {\r\n      this.AnalyserSelected(data);\r\n    });\r\n\r\n    bus.$on(\"Sljedeci\", () => {\r\n      this.Sljedeci();\r\n    });\r\n\r\n    bus.$on(\"Prethodni\", () => {\r\n      this.Prethodni();\r\n    });\r\n\r\n    bus.$on(\"Search\", () => {\r\n      this.$refs.staticModalFind.open();\r\n    });\r\n\r\n    bus.$on(\"Push\", data => {\r\n      if (this.$route.params.id != data) {\r\n        this.Results.forEach(element => {\r\n          if (element.pid == data) {\r\n            router.push(\r\n              \"/obrada/rezultati/\" +\r\n                element.patient +\r\n                \"/\" +\r\n                element.pid +\r\n                \"?date=\" +\r\n                element.date\r\n            );\r\n          }\r\n        });\r\n      } else {\r\n\r\n        // console.warn(\"No change required.\");\r\n      }\r\n    });\r\n\r\n    bus.$on(\"Reference\", () => {\r\n\r\n      this.reference.dref = this.reference.dref.replace(/,/g, \".\").trim()\r\n      this.reference.gref = this.reference.gref.replace(/,/g, \".\").trim()\r\n\r\n      if (this.reference.interp != \"spec\") {\r\n        this.reference.extend = this.reference.extend.replace(\r\n          /(\\r\\n|\\n|\\r)/gm,\r\n          \" \"\r\n        );\r\n      }\r\n\r\n      if (\r\n        isNaN(this.reference.dref) ||\r\n        isNaN(this.reference.gref) ||\r\n        this.reference.dref === \"\" ||\r\n        this.reference.gref === \"\" ||\r\n        Number(this.reference.dref) > Number(this.reference.gref)\r\n      ) {\r\n        console.warn(\"Invalid value.\");\r\n        console.log(this.reference.dref)\r\n        console.log(this.reference.gref)\r\n        console.log(isNaN(this.reference.dref))\r\n        console.log(isNaN(this.reference.gref))\r\n        console.log(this.reference.dref > this.reference.gref)\r\n      } else {\r\n        document.getElementById(this.$store.state.sid).click();\r\n        console.warn('bus.$on(\"Reference\", () => { -> POST');\r\n        console.log(this.reference)\r\n\r\n        http\r\n          .post(\"/rezultati/odobravanje/reference/\", {\r\n            email: this.$store.state.userId,\r\n            token: this.$store.state.token,\r\n            site: this.$store.state.site,\r\n            reference: this.reference,\r\n          })\r\n          .then((res) => {\r\n            setTimeout(() => {\r\n              document.getElementById(this.$store.state.sid).click();\r\n            }, 500);\r\n          });\r\n      }\r\n    });\r\n\r\n    bus.$on(\"retest\", data => {\r\n      this.RetestSave(data);\r\n    });\r\n\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* \r\n\r\n\r\n\r\n\r\n\r\n| Microbiology Bus from Modal\r\n\r\n\r\n\r\n\r\n\r\n*/\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n\r\n    bus.$on(\"Antibiotik\", data => {\r\n      // console.log(\"Prikaz izbornika antibiotika.\");\r\n      if (\r\n        this.sample.status != \"ODOBREN\" &&\r\n        this.sample.status != \"VERIFICIRAN\"\r\n      ) {\r\n        this.TemporaryAntibiotics = [];\r\n        this.TemporaryBacteries = [];\r\n        this.TemporaryBacteriesAdd = [];\r\n\r\n        this.Antibiotics.forEach(element => {\r\n          element.chosen = false;\r\n          element.disabled = false;\r\n        });\r\n\r\n        this.SelectedBacteries.forEach(selected => {\r\n          // Bacteria name must be Unique.\r\n          if (selected.opis == data) {\r\n            selected.antibiogram.antibiotici.forEach(ant => {\r\n              this.Antibiotics.forEach(antibiotik => {\r\n                if (antibiotik._id == ant._id) {\r\n                  antibiotik.disabled = true;\r\n                  antibiotik.chosen = true;\r\n                  antibiotik.rezultat = ant.rezultat;\r\n                }\r\n              });\r\n            });\r\n          }\r\n        });\r\n\r\n        this.ShowAntibiotics = true;\r\n      }\r\n    });\r\n\r\n    bus.$on(\"tabChanged\", data => {\r\n      // console.log(\"Tab changed.\");\r\n      this.CurrentTab = data;\r\n      // console.log(\"Active tab: \" + this.CurrentTab)\r\n    });\r\n\r\n    bus.$on(\"AllowClick\", data => {\r\n      if (this.MicrobiologySample) {\r\n        if (data) {\r\n          this.AllowGetSample = false;\r\n          // console.log(\"Close sample.\")\r\n        } else {\r\n          this.AllowGetSample = true;\r\n          // console.log(\"Open sample.\");\r\n        }\r\n      }\r\n    });\r\n\r\n    bus.$on(\"MicroReset\", () => {\r\n      \r\n      console.log(\"Reset: \" + this.$store.state.sid);\r\n      var Scenario = this.MicrobiologyScenario;\r\n      \r\n      this.rezultati[0].rezultat = \"\";\r\n      this.rezultati[0].rezultat_m = [];\r\n      this.rezultati[0].realizovan = false;\r\n\r\n      this.MicrobiologyResult.DefaultBacteries.forEach(element => {\r\n        element.chosen = false;\r\n      });\r\n\r\n      this.MicrobiologyResult.RemainingBacteries.forEach(element => {\r\n        element.chosen = false;\r\n      });\r\n\r\n      this.SelectedBacteries = [];\r\n      this.ShowAllBacteries = false;\r\n\r\n      if (this.MicrobiologyScenario.includes(\"MAIB\")) {\r\n        this.main = false;\r\n        // console.log(this.rezultati)\r\n\r\n        http\r\n          .post(\"/rezultati/odobravanje/sacuvaj/\" + this.$store.state.sid, {\r\n            email: this.$store.state.userId,\r\n            token: this.$store.state.token,\r\n            site: this.$store.state.site,\r\n            rezultati: this.rezultati\r\n          })\r\n          .then(res => {\r\n            http\r\n              .get(\r\n                \"rezultati/odobravanje/samples/\" +\r\n                  this.$route.params.patient +\r\n                  \"/\" +\r\n                  this.$route.params.id +\r\n                  \"?token=\" +\r\n                  this.$store.state.token +\r\n                  \"&site=\" +\r\n                  this.$store.state.site +\r\n                  \"&date=\" +\r\n                  this.$route.query.date,\r\n                {}\r\n              )\r\n              .then(res => {\r\n\r\n                // console.log(res.data)\r\n                this.uzorci = [];\r\n\r\n                res.data.results.forEach(element => {\r\n\r\n                  if(this.$store.state.sid === element.id){\r\n                    console.log(element.rezultati[0].rezultat[0])\r\n                  }\r\n\r\n                  var check = 0;\r\n                  var zaprimljen = 0;\r\n                  var realizovan = 0;\r\n\r\n                  if (element.verificiran) {\r\n                    var status_uzorka = \"VERIFICIRAN\";\r\n                  } else {\r\n                    var status_uzorka = element.status;\r\n                  }\r\n\r\n                  element.rezultati.forEach(test => {\r\n                    check++;\r\n\r\n                    if (\r\n                      test.rezultat[test.rezultat.length - 1].rezultat_f === \"\"\r\n                    ) {\r\n                      zaprimljen++;\r\n                    }\r\n\r\n                    if (\r\n                      test.rezultat[test.rezultat.length - 1].rezultat_f != \"\"\r\n                    ) {\r\n                      realizovan++;\r\n                    }\r\n\r\n                    if (check === element.rezultati.length) {\r\n\r\n                      // console.log(\"Provjera: Reset sample\")\r\n\r\n                      if (status_uzorka === \"VERIFICIRAN\") {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"VERIFICIRAN\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false\r\n                        });\r\n                      } else if (status_uzorka === \"ODOBREN\") {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"ODOBREN\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false\r\n                        });\r\n                      } else if (zaprimljen < 1) {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"REALIZOVAN\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false\r\n                        });\r\n                      } else if (realizovan < 1) {\r\n                        var stat = \"ZAPRIMLJEN\";\r\n                        if (element.sample.tip.includes(\"Mikrobiologija\")) {\r\n                          if (\r\n                            element.rezultati[0].rezultat[0].rezultat_m.length\r\n                          ) {\r\n                            stat = \"REALIZOVAN\";\r\n                          }\r\n                        }\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: stat,\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false\r\n                        });\r\n                      } else {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"U OBRADI\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false\r\n                        });\r\n                      }\r\n                    }\r\n                  });\r\n                });\r\n\r\n                this.uzorci = this.uzorci.sort(function(a, b) {\r\n                  return a.sid.localeCompare(b.sid, undefined, {\r\n                    numeric: true,\r\n                    sensitivity: \"base\"\r\n                  });\r\n                });\r\n              })\r\n              .then(res => {\r\n                this.MicrobiologyScenario = \"MAIBNoR\";\r\n                console.log(\"Scenario: \" + Scenario + \" - > \" + this.MicrobiologyScenario)\r\n                this.main = true;\r\n                bus.$emit(\"CloseMicroReset\");\r\n              });\r\n          });\r\n      } else if (this.MicrobiologyScenario.includes(\"MANB\")) {\r\n        this.main = false;\r\n\r\n        http\r\n          .post(\"/rezultati/odobravanje/sacuvaj/\" + this.$store.state.sid, {\r\n            email: this.$store.state.userId,\r\n            token: this.$store.state.token,\r\n            site: this.$store.state.site,\r\n            rezultati: this.rezultati\r\n          })\r\n          .then(res => {\r\n            http\r\n              .get(\r\n                \"rezultati/odobravanje/samples/\" +\r\n                  this.$route.params.patient +\r\n                  \"/\" +\r\n                  this.$route.params.id +\r\n                  \"?token=\" +\r\n                  this.$store.state.token +\r\n                  \"&site=\" +\r\n                  this.$store.state.site +\r\n                  \"&date=\" +\r\n                  this.$route.query.date,\r\n                {}\r\n              )\r\n              .then(res => {\r\n\r\n                // console.log(res.data)\r\n                this.uzorci = [];\r\n\r\n                res.data.results.forEach(element => {\r\n\r\n                  if(this.$store.state.sid === element.id){\r\n                    console.log(element.rezultati[0].rezultat[0])\r\n                  }\r\n\r\n                  var check = 0;\r\n                  var zaprimljen = 0;\r\n                  var realizovan = 0;\r\n\r\n                  if (element.verificiran) {\r\n                    var status_uzorka = \"VERIFICIRAN\";\r\n                  } else {\r\n                    var status_uzorka = element.status;\r\n                  }\r\n\r\n                  element.rezultati.forEach(test => {\r\n                    check++;\r\n\r\n                    if (\r\n                      test.rezultat[test.rezultat.length - 1].rezultat_f === \"\"\r\n                    ) {\r\n                      zaprimljen++;\r\n                    }\r\n\r\n                    if (\r\n                      test.rezultat[test.rezultat.length - 1].rezultat_f != \"\"\r\n                    ) {\r\n                      realizovan++;\r\n                    }\r\n\r\n                    if (check === element.rezultati.length) {\r\n                      if (status_uzorka === \"VERIFICIRAN\") {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"VERIFICIRAN\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false\r\n                        });\r\n                      } else if (status_uzorka === \"ODOBREN\") {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"ODOBREN\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false\r\n                        });\r\n                      } else if (zaprimljen < 1) {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"REALIZOVAN\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false\r\n                        });\r\n                      } else if (realizovan < 1) {\r\n                        var stat = \"ZAPRIMLJEN\";\r\n                        if (element.sample.tip.includes(\"Mikrobiologija\")) {\r\n                          if (\r\n                            element.rezultati[0].rezultat[0].rezultat_m.length\r\n                          ) {\r\n                            stat = \"REALIZOVAN\";\r\n                          }\r\n                        }\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: stat,\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false\r\n                        });\r\n                      } else {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"U OBRADI\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false\r\n                        });\r\n                      }\r\n                    }\r\n                  });\r\n                });\r\n\r\n                this.uzorci = this.uzorci.sort(function(a, b) {\r\n                  return a.sid.localeCompare(b.sid, undefined, {\r\n                    numeric: true,\r\n                    sensitivity: \"base\"\r\n                  });\r\n                });\r\n              })\r\n              .then(res => {\r\n                this.MicrobiologyScenario = \"MANBNoR\";\r\n                console.log(\"Scenario: \" + Scenario + \" - > \" + this.MicrobiologyScenario)\r\n                this.main = true;\r\n                bus.$emit(\"CloseMicroReset\");\r\n              });\r\n          });\r\n      } else {\r\n        // Error\r\n      }\r\n    });\r\n\r\n    bus.$on(\"MicroResult\", () => {\r\n      console.log(\"Defining result...\");\r\n\r\n      var Scenario = this.MicrobiologyScenario;\r\n      \r\n      switch (this.MicrobiologyScenario) {\r\n        case \"MAIBNoR\":\r\n          // Ima definisan skup bakterija\r\n          this.rezultati[0].rezultat_m = [];\r\n          this.rezultati[0].rezultat_m.push({\r\n            bakterija: false,\r\n            negativan: this.ModalNegative,\r\n            pozitivan: this.ModalPositive,\r\n            _id: null,\r\n            naziv: null,\r\n            opis: null,\r\n            antibiogram: {\r\n              _id: null,\r\n              naziv: null,\r\n              opis: null,\r\n              antibiotici: [\r\n                {\r\n                  _id: null,\r\n                  rbr_a: null,\r\n                  naziv: null,\r\n                  opis: null,\r\n                  rezultat: null\r\n                }\r\n              ]\r\n            }\r\n          });\r\n\r\n          if (this.ModalNegative) {\r\n            this.rezultati[0].rezultat = this.NegativeResultSelection;\r\n            this.isLoading = true;\r\n            this.main = false;\r\n\r\n            http\r\n              .post(\"/rezultati/odobravanje/sacuvaj/\" + this.$store.state.sid, {\r\n                email: this.$store.state.userId,\r\n                token: this.$store.state.token,\r\n                site: this.$store.state.site,\r\n                rezultati: this.rezultati\r\n              })\r\n              .then(res => {\r\n                http\r\n                  .get(\r\n                    \"rezultati/odobravanje/samples/\" +\r\n                      this.$route.params.patient +\r\n                      \"/\" +\r\n                      this.$route.params.id +\r\n                      \"?token=\" +\r\n                      this.$store.state.token +\r\n                      \"&site=\" +\r\n                      this.$store.state.site +\r\n                      \"&date=\" +\r\n                      this.$route.query.date,\r\n                    {}\r\n                  )\r\n                  .then(res => {\r\n                    this.uzorci = [];\r\n\r\n                    res.data.results.forEach(element => {\r\n\r\n                      if(this.$store.state.sid === element.id){\r\n                        console.log(element.rezultati[0].rezultat[0])\r\n                      }\r\n\r\n                      var check = 0;\r\n                      var zaprimljen = 0;\r\n                      var realizovan = 0;\r\n\r\n                      if (element.verificiran) {\r\n                        var status_uzorka = \"VERIFICIRAN\";\r\n                      } else {\r\n                        var status_uzorka = element.status;\r\n                      }\r\n\r\n                      element.rezultati.forEach(test => {\r\n                        check++;\r\n\r\n                        if (\r\n                          test.rezultat[test.rezultat.length - 1].rezultat_f ===\r\n                          \"\"\r\n                        ) {\r\n                          zaprimljen++;\r\n                        }\r\n\r\n                        if (\r\n                          test.rezultat[test.rezultat.length - 1].rezultat_f !=\r\n                          \"\"\r\n                        ) {\r\n                          realizovan++;\r\n                        }\r\n\r\n                        if (check === element.rezultati.length) {\r\n                          if (status_uzorka === \"VERIFICIRAN\") {\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: \"VERIFICIRAN\",\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false\r\n                            });\r\n                          } else if (status_uzorka === \"ODOBREN\") {\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: \"ODOBREN\",\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false\r\n                            });\r\n                          } else if (zaprimljen < 1) {\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: \"REALIZOVAN\",\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false\r\n                            });\r\n                          } else if (realizovan < 1) {\r\n                            var stat = \"ZAPRIMLJEN\";\r\n                            if (element.sample.tip.includes(\"Mikrobiologija\")) {\r\n                              if (\r\n                                element.rezultati[0].rezultat[0].rezultat_m\r\n                                  .length\r\n                              ) {\r\n                                stat = \"REALIZOVAN\";\r\n                              }\r\n                            }\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: stat,\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false\r\n                            });\r\n                          } else {\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: \"U OBRADI\",\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false\r\n                            });\r\n                          }\r\n                        }\r\n                      });\r\n                    });\r\n\r\n                    this.uzorci = this.uzorci.sort(function(a, b) {\r\n                      return a.sid.localeCompare(b.sid, undefined, {\r\n                        numeric: true,\r\n                        sensitivity: \"base\"\r\n                      });\r\n                    });\r\n                  })\r\n                  .then(res => {\r\n                    bus.$emit(\"CloseMicroResult\");\r\n                    this.rezultati[0].realizovan = true;\r\n                    this.MicrobiologyScenario = \"MAIBNeR\";\r\n                    console.log(\"Scenario: \" + Scenario + \" - > \" + this.MicrobiologyScenario)\r\n                    this.main = true;\r\n                    this.isLoading = false;\r\n                  });\r\n              });\r\n          } else {\r\n            this.PositiveResultSelection = \"\";\r\n            this.SelectedBacteries.forEach(element => {\r\n              this.PositiveResultSelection =\r\n                this.PositiveResultSelection + element.opis + \"\\n\";\r\n              var Antibiotici = [];\r\n              var antibiotik = {};\r\n\r\n              this.Antibiotics.forEach(antibiotik => {\r\n                element.antibiogram.antibiotici.forEach(ant => {\r\n                  if (antibiotik._id == ant) {\r\n                    antibiotik = {\r\n                      _id: antibiotik._id,\r\n                      rbr_a: antibiotik.rbr_a,\r\n                      naziv: antibiotik.naziv,\r\n                      opis: antibiotik.opis,\r\n                      disabled: false,\r\n                      rezultat: \"\"\r\n                    };\r\n                    Antibiotici.push(antibiotik);\r\n                    antibiotik = {};\r\n                  }\r\n                });\r\n              });\r\n\r\n              this.rezultati[0].rezultat_m.push({\r\n                bakterija: true,\r\n                negativan: this.largeModalneg,\r\n                pozitivan: this.largeModalpos,\r\n                _id: element._id,\r\n                naziv: element.naziv,\r\n                opis: element.opis,\r\n                antibiogram: {\r\n                  _id: element.antibiogram._id,\r\n                  naziv: element.antibiogram.naziv,\r\n                  opis: element.antibiogram.opis,\r\n                  antibiotici: [...Antibiotici]\r\n                }\r\n              });\r\n            });\r\n\r\n            this.rezultati[0].rezultat = this.PositiveResultSelection.trim();\r\n            this.isLoading = true;\r\n            this.main = false;\r\n\r\n            http\r\n              .post(\"/rezultati/odobravanje/sacuvaj/\" + this.$store.state.sid, {\r\n                email: this.$store.state.userId,\r\n                token: this.$store.state.token,\r\n                site: this.$store.state.site,\r\n                rezultati: this.rezultati\r\n              })\r\n              .then(res => {\r\n                http\r\n                  .get(\r\n                    \"rezultati/odobravanje/samples/\" +\r\n                      this.$route.params.patient +\r\n                      \"/\" +\r\n                      this.$route.params.id +\r\n                      \"?token=\" +\r\n                      this.$store.state.token +\r\n                      \"&site=\" +\r\n                      this.$store.state.site +\r\n                      \"&date=\" +\r\n                      this.$route.query.date,\r\n                    {}\r\n                  )\r\n                  .then(res => {\r\n                    this.uzorci = [];\r\n\r\n                    res.data.results.forEach(element => {\r\n\r\n                      if(this.$store.state.sid === element.id){\r\n                        console.log(element.rezultati[0].rezultat[0])\r\n                      }\r\n\r\n                      var check = 0;\r\n                      var zaprimljen = 0;\r\n                      var realizovan = 0;\r\n\r\n                      if (element.verificiran) {\r\n                        var status_uzorka = \"VERIFICIRAN\";\r\n                      } else {\r\n                        var status_uzorka = element.status;\r\n                      }\r\n\r\n                      element.rezultati.forEach(test => {\r\n                        check++;\r\n\r\n                        if (\r\n                          test.rezultat[test.rezultat.length - 1].rezultat_f ===\r\n                          \"\"\r\n                        ) {\r\n                          zaprimljen++;\r\n                        }\r\n\r\n                        if (\r\n                          test.rezultat[test.rezultat.length - 1].rezultat_f !=\r\n                          \"\"\r\n                        ) {\r\n                          realizovan++;\r\n                        }\r\n\r\n                        if (check === element.rezultati.length) {\r\n                          if (status_uzorka === \"VERIFICIRAN\") {\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: \"VERIFICIRAN\",\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false\r\n                            });\r\n                          } else if (status_uzorka === \"ODOBREN\") {\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: \"ODOBREN\",\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false\r\n                            });\r\n                          } else if (zaprimljen < 1) {\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: \"REALIZOVAN\",\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false\r\n                            });\r\n                          } else if (realizovan < 1) {\r\n                            var stat = \"ZAPRIMLJEN\";\r\n                            if (element.sample.tip.includes(\"Mikrobiologija\")) {\r\n                              if (\r\n                                element.rezultati[0].rezultat[0].rezultat_m\r\n                                  .length\r\n                              ) {\r\n                                stat = \"REALIZOVAN\";\r\n                              }\r\n                            }\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: stat,\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false\r\n                            });\r\n                          } else {\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: \"U OBRADI\",\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false\r\n                            });\r\n                          }\r\n                        }\r\n                      });\r\n                    });\r\n\r\n                    this.uzorci = this.uzorci.sort(function(a, b) {\r\n                      return a.sid.localeCompare(b.sid, undefined, {\r\n                        numeric: true,\r\n                        sensitivity: \"base\"\r\n                      });\r\n                    });\r\n                  })\r\n                  .then(res => {\r\n                    bus.$emit(\"CloseMicroResult\");\r\n                    this.rezultati[0].realizovan = true;\r\n                    this.MicrobiologyScenario = \"MAIBPoR\";\r\n                    console.log(\"Scenario: \" + Scenario + \" - > \" + this.MicrobiologyScenario)\r\n                    this.main = true;\r\n                    this.isLoading = false;\r\n                  });\r\n              });\r\n          }\r\n\r\n          break;\r\n\r\n        case \"MANBNoR\":\r\n          // Nema definisan skup bakterija\r\n          this.rezultati[0].rezultat_m = [\r\n            {\r\n              bakterija: false,\r\n              negativan: this.ModalNegative,\r\n              pozitivan: this.ModalPositive,\r\n              _id: null,\r\n              naziv: null,\r\n              opis: null,\r\n              antibiogram: {\r\n                _id: null,\r\n                naziv: null,\r\n                opis: null,\r\n                antibiotici: [\r\n                  {\r\n                    _id: null,\r\n                    rbr_a: null,\r\n                    naziv: null,\r\n                    opis: null,\r\n                    rezultat: null\r\n                  }\r\n                ]\r\n              }\r\n            }\r\n          ];\r\n\r\n          if (this.ModalNegative) {\r\n            this.rezultati[0].rezultat = this.NegativeResultSelection;\r\n            this.isLoading = true;\r\n            this.main = false;\r\n\r\n            http\r\n              .post(\"/rezultati/odobravanje/sacuvaj/\" + this.$store.state.sid, {\r\n                email: this.$store.state.userId,\r\n                token: this.$store.state.token,\r\n                site: this.$store.state.site,\r\n                rezultati: this.rezultati\r\n              })\r\n              .then(res => {\r\n                http\r\n                  .get(\r\n                    \"rezultati/odobravanje/samples/\" +\r\n                      this.$route.params.patient +\r\n                      \"/\" +\r\n                      this.$route.params.id +\r\n                      \"?token=\" +\r\n                      this.$store.state.token +\r\n                      \"&site=\" +\r\n                      this.$store.state.site +\r\n                      \"&date=\" +\r\n                      this.$route.query.date,\r\n                    {}\r\n                  )\r\n                  .then(res => {\r\n                    this.uzorci = [];\r\n\r\n                    res.data.results.forEach(element => {\r\n\r\n                      if(this.$store.state.sid === element.id){\r\n                        console.log(element.rezultati[0].rezultat[0])\r\n                      }\r\n\r\n                      var check = 0;\r\n                      var zaprimljen = 0;\r\n                      var realizovan = 0;\r\n\r\n                      if (element.verificiran) {\r\n                        var status_uzorka = \"VERIFICIRAN\";\r\n                      } else {\r\n                        var status_uzorka = element.status;\r\n                      }\r\n\r\n                      element.rezultati.forEach(test => {\r\n                        check++;\r\n\r\n                        if (\r\n                          test.rezultat[test.rezultat.length - 1].rezultat_f ===\r\n                          \"\"\r\n                        ) {\r\n                          zaprimljen++;\r\n                        }\r\n\r\n                        if (\r\n                          test.rezultat[test.rezultat.length - 1].rezultat_f !=\r\n                          \"\"\r\n                        ) {\r\n                          realizovan++;\r\n                        }\r\n\r\n                        if (check === element.rezultati.length) {\r\n                          if (status_uzorka === \"VERIFICIRAN\") {\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: \"VERIFICIRAN\",\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false\r\n                            });\r\n                          } else if (status_uzorka === \"ODOBREN\") {\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: \"ODOBREN\",\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false\r\n                            });\r\n                          } else if (zaprimljen < 1) {\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: \"REALIZOVAN\",\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false\r\n                            });\r\n                          } else if (realizovan < 1) {\r\n                            var stat = \"ZAPRIMLJEN\";\r\n                            if (element.sample.tip.includes(\"Mikrobiologija\")) {\r\n                              if (\r\n                                element.rezultati[0].rezultat[0].rezultat_m\r\n                                  .length\r\n                              ) {\r\n                                stat = \"REALIZOVAN\";\r\n                              }\r\n                            }\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: stat,\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false\r\n                            });\r\n                          } else {\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: \"U OBRADI\",\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false\r\n                            });\r\n                          }\r\n                        }\r\n                      });\r\n                    });\r\n\r\n                    this.uzorci = this.uzorci.sort(function(a, b) {\r\n                      return a.sid.localeCompare(b.sid, undefined, {\r\n                        numeric: true,\r\n                        sensitivity: \"base\"\r\n                      });\r\n                    });\r\n                  })\r\n                  .then(res => {\r\n                    bus.$emit(\"CloseMicroResult\");\r\n                    this.rezultati[0].realizovan = true;\r\n                    this.MicrobiologyScenario = \"MANBNeR\";\r\n                    console.log(\"Scenario: \" + Scenario + \" - > \" + this.MicrobiologyScenario)\r\n                    this.main = true;\r\n                    this.isLoading = false;\r\n                  });\r\n              });\r\n          } else {\r\n            this.rezultati[0].rezultat = this.PositiveResultSelection;\r\n            this.isLoading = true;\r\n            this.main = false;\r\n\r\n            http\r\n              .post(\"/rezultati/odobravanje/sacuvaj/\" + this.$store.state.sid, {\r\n                email: this.$store.state.userId,\r\n                token: this.$store.state.token,\r\n                site: this.$store.state.site,\r\n                rezultati: this.rezultati\r\n              })\r\n              .then(res => {\r\n                http\r\n                  .get(\r\n                    \"rezultati/odobravanje/samples/\" +\r\n                      this.$route.params.patient +\r\n                      \"/\" +\r\n                      this.$route.params.id +\r\n                      \"?token=\" +\r\n                      this.$store.state.token +\r\n                      \"&site=\" +\r\n                      this.$store.state.site +\r\n                      \"&date=\" +\r\n                      this.$route.query.date,\r\n                    {}\r\n                  )\r\n                  .then(res => {\r\n                    this.uzorci = [];\r\n\r\n                    res.data.results.forEach(element => {\r\n\r\n                      if(this.$store.state.sid === element.id){\r\n                        console.log(element.rezultati[0].rezultat[0])\r\n                      }\r\n\r\n                      var check = 0;\r\n                      var zaprimljen = 0;\r\n                      var realizovan = 0;\r\n\r\n                      if (element.verificiran) {\r\n                        var status_uzorka = \"VERIFICIRAN\";\r\n                      } else {\r\n                        var status_uzorka = element.status;\r\n                      }\r\n\r\n                      element.rezultati.forEach(test => {\r\n                        check++;\r\n\r\n                        if (\r\n                          test.rezultat[test.rezultat.length - 1].rezultat_f ===\r\n                          \"\"\r\n                        ) {\r\n                          zaprimljen++;\r\n                        }\r\n\r\n                        if (\r\n                          test.rezultat[test.rezultat.length - 1].rezultat_f !=\r\n                          \"\"\r\n                        ) {\r\n                          realizovan++;\r\n                        }\r\n\r\n                        if (check === element.rezultati.length) {\r\n                          if (status_uzorka === \"VERIFICIRAN\") {\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: \"VERIFICIRAN\",\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false\r\n                            });\r\n                          } else if (status_uzorka === \"ODOBREN\") {\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: \"ODOBREN\",\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false\r\n                            });\r\n                          } else if (zaprimljen < 1) {\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: \"REALIZOVAN\",\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false\r\n                            });\r\n                          } else if (realizovan < 1) {\r\n                            var stat = \"ZAPRIMLJEN\";\r\n                            if (element.sample.tip.includes(\"Mikrobiologija\")) {\r\n                              if (\r\n                                element.rezultati[0].rezultat[0].rezultat_m\r\n                                  .length\r\n                              ) {\r\n                                stat = \"REALIZOVAN\";\r\n                              }\r\n                            }\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: stat,\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false\r\n                            });\r\n                          } else {\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: \"U OBRADI\",\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false\r\n                            });\r\n                          }\r\n                        }\r\n                      });\r\n                    });\r\n\r\n                    this.uzorci = this.uzorci.sort(function(a, b) {\r\n                      return a.sid.localeCompare(b.sid, undefined, {\r\n                        numeric: true,\r\n                        sensitivity: \"base\"\r\n                      });\r\n                    });\r\n                  })\r\n                  .then(res => {\r\n                    bus.$emit(\"CloseMicroResult\");\r\n                    this.rezultati[0].realizovan = true;\r\n                    this.MicrobiologyScenario = \"MANBPoR\";\r\n                    console.log(\"Scenario: \" + Scenario + \" - > \" + this.MicrobiologyScenario)\r\n                    this.main = true;\r\n                    this.isLoading = false;\r\n                  });\r\n              });\r\n          }\r\n\r\n          break;\r\n\r\n        default:\r\n          break;\r\n      }      \r\n    });\r\n\r\n    bus.$on(\"ResetResultSelection\", () => {\r\n      // console.log('Clearing...');\r\n      switch (this.MicrobiologyScenario) {\r\n        case \"MAIBNoR\":\r\n          this.ModalNegative = false;\r\n          this.ModalPositive = false;\r\n          this.ModalPositiveCondition = false;\r\n          this.MicrobiologyModalHeader = \"Predefinisani rezultati\";\r\n          this.NegativeResultSelection = \"\";\r\n          this.PositiveResultSelection = \"\";\r\n          this.SelectedBacteries = [];\r\n          this.ShowAllBacteries = false;\r\n\r\n          break;\r\n\r\n        case \"MAIBNeR\":\r\n          this.SelectedBacteries = [];\r\n\r\n          break;\r\n\r\n        case \"MAIBPoR\":\r\n          break;\r\n\r\n        case \"MANBNoR\":\r\n          this.ModalNegative = false;\r\n          this.ModalPositive = false;\r\n          this.ModalPositiveCondition = false;\r\n          this.MicrobiologyModalHeader = \"Predefinisani rezultati\";\r\n          this.NegativeResultSelection = \"\";\r\n          this.PositiveResultSelection = \"\";\r\n          this.SelectedBacteries = [];\r\n          this.ShowAllBacteries = false;\r\n\r\n          break;\r\n\r\n        case \"MANBNeR\":\r\n          this.SelectedBacteries = [];\r\n\r\n          break;\r\n\r\n        case \"MANBPoR\":\r\n          this.SelectedBacteries = [];\r\n\r\n          break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n\r\n      this.MicrobiologyResult.DefaultBacteries.forEach(element => {\r\n        element.chosen = false;\r\n      });\r\n\r\n      this.MicrobiologyResult.RemainingBacteries.forEach(element => {\r\n        element.chosen = false;\r\n      });\r\n\r\n      this.SelectedBacteries = [];\r\n      this.ShowAllBacteries = false;\r\n    });\r\n\r\n    bus.$on(\"CancelMicroResult\", () => {\r\n\r\n      switch (this.MicrobiologyScenario) {\r\n        case \"MAIBNoR\":\r\n          this.ModalNegative = false;\r\n          this.ModalPositive = false;\r\n          this.ModalPositiveCondition = false;\r\n          this.MicrobiologyModalHeader = \"Predefinisani rezultati\";\r\n          this.NegativeResultSelection = \"\";\r\n          this.PositiveResultSelection = \"\";\r\n          this.SelectedBacteries = [];\r\n          this.ShowAllBacteries = false;\r\n\r\n          break;\r\n\r\n        case \"MAIBNeR\":\r\n          this.SelectedBacteries = [];\r\n\r\n          break;\r\n\r\n        case \"MAIBPoR\":\r\n          break;\r\n\r\n        case \"MANBNoR\":\r\n          this.ModalNegative = false;\r\n          this.ModalPositive = false;\r\n          this.ModalPositiveCondition = false;\r\n          this.MicrobiologyModalHeader = \"Predefinisani rezultati\";\r\n          this.NegativeResultSelection = \"\";\r\n          this.PositiveResultSelection = \"\";\r\n          this.SelectedBacteries = [];\r\n          this.ShowAllBacteries = false;\r\n\r\n          break;\r\n\r\n        case \"MANBNeR\":\r\n          this.SelectedBacteries = [];\r\n\r\n          break;\r\n\r\n        case \"MANBPoR\":\r\n          this.SelectedBacteries = [];\r\n\r\n          break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n\r\n      this.MicrobiologyResult.DefaultBacteries.forEach(element => {\r\n        element.chosen = false;\r\n      });\r\n\r\n      this.MicrobiologyResult.RemainingBacteries.forEach(element => {\r\n        element.chosen = false;\r\n      });\r\n\r\n      this.SelectedBacteries = [];\r\n      this.ShowAllBacteries = false;\r\n    });\r\n\r\n    bus.$on(\"MicroBactery\", () => {\r\n\r\n      console.log('Saving main result...');\r\n\r\n      this.isLoading = true;\r\n      this.main = false;\r\n\r\n      http\r\n        .post(\"/rezultati/odobravanje/sacuvaj/\" + this.$store.state.sid, {\r\n          email: this.$store.state.userId,\r\n          token: this.$store.state.token,\r\n          site: this.$store.state.site,\r\n          rezultati: this.rezultati\r\n        })\r\n        .then(res => {\r\n          http\r\n            .get(\r\n              \"rezultati/odobravanje/samples/\" +\r\n                this.$route.params.patient +\r\n                \"/\" +\r\n                this.$route.params.id +\r\n                \"?token=\" +\r\n                this.$store.state.token +\r\n                \"&site=\" +\r\n                this.$store.state.site +\r\n                \"&date=\" +\r\n                this.$route.query.date,\r\n              {}\r\n            )\r\n            .then(res => {\r\n              this.uzorci = [];\r\n\r\n              res.data.results.forEach(element => {\r\n\r\n                if(this.$store.state.sid === element.id){\r\n                  console.log(element.rezultati[0].rezultat[0])\r\n                }\r\n                \r\n                var check = 0;\r\n                var zaprimljen = 0;\r\n                var realizovan = 0;\r\n\r\n                if (element.verificiran) {\r\n                  var status_uzorka = \"VERIFICIRAN\";\r\n                } else {\r\n                  var status_uzorka = element.status;\r\n                }\r\n\r\n                element.rezultati.forEach(test => {\r\n                  check++;\r\n\r\n                  if (\r\n                    test.rezultat[test.rezultat.length - 1].rezultat_f === \"\"\r\n                  ) {\r\n                    zaprimljen++;\r\n                  }\r\n\r\n                  if (\r\n                    test.rezultat[test.rezultat.length - 1].rezultat_f != \"\"\r\n                  ) {\r\n                    realizovan++;\r\n                  }\r\n\r\n                  if (check === element.rezultati.length) {\r\n                    if (status_uzorka === \"VERIFICIRAN\") {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"VERIFICIRAN\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false\r\n                      });\r\n                    } else if (status_uzorka === \"ODOBREN\") {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"ODOBREN\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false\r\n                      });\r\n                    } else if (zaprimljen < 1) {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"REALIZOVAN\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false\r\n                      });\r\n                    } else if (realizovan < 1) {\r\n                      var stat = \"ZAPRIMLJEN\";\r\n                      if (element.sample.tip.includes(\"Mikrobiologija\")) {\r\n                        if (\r\n                          element.rezultati[0].rezultat[0].rezultat_m.length\r\n                        ) {\r\n                          stat = \"REALIZOVAN\";\r\n                        }\r\n                      }\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: stat,\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false\r\n                      });\r\n                    } else {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"U OBRADI\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false\r\n                      });\r\n                    }\r\n                  }\r\n                });\r\n              });\r\n\r\n              this.uzorci = this.uzorci.sort(function(a, b) {\r\n                return a.sid.localeCompare(b.sid, undefined, {\r\n                  numeric: true,\r\n                  sensitivity: \"base\"\r\n                });\r\n              });\r\n            })\r\n            .then(res => {\r\n              this.main = true;\r\n              this.isLoading = false;\r\n              bus.$emit(\"CloseMicroBactery\");\r\n            });\r\n        });\r\n    });\r\n\r\n    bus.$on(\"CancelMicroBactery\", () => {\r\n\r\n    });\r\n\r\n    bus.$on(\"PovratakMicroBactery\", () => {     \r\n      this.ShowAntibiotics = false;\r\n      this.ShowBacteries = false;\r\n    });\r\n\r\n    bus.$on(\"SpasiMicroBactery\", () => {\r\n      \r\n      if (this.TemporaryBacteriesAdd.length) {\r\n        console.log('Dodavanje bakterija...');\r\n        var bakterija = {};\r\n        var antibiogram = {};\r\n        var antibiotik = {};\r\n\r\n        this.TemporaryBacteriesAdd.forEach(element => {\r\n          this.Antibiograms.forEach(antibgr => {\r\n            if (\r\n              JSON.stringify(element.antibiogram._id) ===\r\n              JSON.stringify(antibgr._id)\r\n            ) {\r\n              antibiogram = antibgr;\r\n            }\r\n          });\r\n\r\n          antibiogram.antibiotici.forEach(antbtk => {\r\n            antbtk.disabled = false;\r\n            antbtk.rezultat = \"\";\r\n          });\r\n\r\n          bakterija.bakterija = true;\r\n          bakterija._id = element._id;\r\n          bakterija.naziv = element.naziv;\r\n          bakterija.opis = element.opis;\r\n          bakterija.antibiogram = antibiogram;\r\n\r\n          console.log(bakterija);\r\n\r\n          this.SelectedBacteries.push(bakterija);\r\n          this.BacteryTabs.push(bakterija.opis);\r\n          this.rezultati[0].rezultat_m.push(bakterija);\r\n          this.rezultati[0].rezultat =\r\n            this.rezultati[0].rezultat + \"\\n\" + bakterija.opis;\r\n          bakterija = {};\r\n          antibiogram = {};\r\n        });\r\n\r\n        /* var element = {\r\n          chosen: true,\r\n          disabled: false,\r\n          _id: \"5d95cfe793a77e0fec61aa6a\",\r\n          naziv: \"Bakterija 3\",\r\n          opis: \"Bakterija 3\",\r\n          antibiogram: {\r\n            antibiotici: [\r\n              \"5d90ae5e89d972109c76c1b1\",\r\n              \"5d90aed589d972109c76c1b3\",\r\n              \"5d90af2389d972109c76c1b4\",\r\n              \"5d90ae8289d972109c76c1b2\",\r\n              \"5d90afe089d972109c76c1b8\",\r\n              \"5d90b00f89d972109c76c1b9\",\r\n              \"5d90b02289d972109c76c1ba\"\r\n            ],\r\n            _id: \"5d94750593a77e0fec61a8e9\",\r\n            naziv: \"Antibiogram 2\",\r\n            opis: \"Antibiogram 2\",\r\n            __v: 0\r\n          },\r\n          __v: 0\r\n        }; */\r\n\r\n        /* var bakterija = {\r\n          bakterija: true,\r\n          _id: \"5d94751193a77e0fec61a8ea\",\r\n          naziv: \"Bakterija 1\",\r\n          opis: \"Bakterija 1\",\r\n          antibiogram: {\r\n            _id: \"5d9474f893a77e0fec61a8e8\",\r\n            naziv: \"Antibiogram 1\",\r\n            opis: \"Antibiogram 1\",\r\n            antibiotici: [\r\n              {\r\n                _id: \"5d90ae3489d972109c76c1b0\",\r\n                rbr_a: \"0\",\r\n                naziv: \"FOX\",\r\n                opis: \"Cefoxitin\",\r\n                disabled: false,\r\n                rezultat: \"S\"\r\n              },\r\n              {\r\n                _id: \"5d90ae8289d972109c76c1b2\",\r\n                rbr_a: \"0\",\r\n                naziv: \"Cd\",\r\n                opis: \"Clindamycin\",\r\n                disabled: false,\r\n                rezultat: \"\"\r\n              },\r\n              {\r\n                _id: \"5d90af2389d972109c76c1b4\",\r\n                rbr_a: \"0\",\r\n                naziv: \"C\",\r\n                opis: \"Chloramphenicol \",\r\n                disabled: false,\r\n                rezultat: \"\"\r\n              },\r\n              {\r\n                _id: \"5d90af6e89d972109c76c1b6\",\r\n                rbr_a: \"0\",\r\n                naziv: \"TE\",\r\n                opis: \"Tetracycline\",\r\n                disabled: false,\r\n                rezultat: \"\"\r\n              }\r\n            ]\r\n          }\r\n        }; */\r\n      }else{\r\n        console.log('Dodavanje antibiotika...');\r\n      }\r\n\r\n      if (\r\n        this.TemporaryAntibiotics.length ||\r\n        this.TemporaryBacteriesAdd.length\r\n      ) {\r\n        this.TemporaryAntibiotics.forEach(element => {\r\n          this.rezultati[0].rezultat_m.forEach(selected => {\r\n            if (selected.opis == this.CurrentTab) {\r\n              selected.antibiogram.antibiotici.push(element);\r\n            }\r\n          });\r\n        });\r\n\r\n        // this.show_table = false;\r\n        this.isLoading = true;\r\n        this.main = false;\r\n\r\n        http\r\n          .post(\"/rezultati/odobravanje/sacuvaj/\" + this.$store.state.sid, {\r\n            email: this.$store.state.userId,\r\n            token: this.$store.state.token,\r\n            site: this.$store.state.site,\r\n            rezultati: this.rezultati\r\n          })\r\n          .then(res => {\r\n            http\r\n              .get(\r\n                \"rezultati/odobravanje/samples/\" +\r\n                  this.$route.params.patient +\r\n                  \"/\" +\r\n                  this.$route.params.id +\r\n                  \"?token=\" +\r\n                  this.$store.state.token +\r\n                  \"&site=\" +\r\n                  this.$store.state.site +\r\n                  \"&date=\" +\r\n                  this.$route.query.date,\r\n                {}\r\n              )\r\n              .then(res => {\r\n                this.uzorci = [];\r\n\r\n                res.data.results.forEach(element => {\r\n\r\n                  if(this.$store.state.sid === element.id){\r\n                    console.log(element.rezultati[0].rezultat[0])\r\n                  }\r\n\r\n                  var check = 0;\r\n                  var zaprimljen = 0;\r\n                  var realizovan = 0;\r\n\r\n                  if (element.verificiran) {\r\n                    var status_uzorka = \"VERIFICIRAN\";\r\n                  } else {\r\n                    var status_uzorka = element.status;\r\n                  }\r\n\r\n                  element.rezultati.forEach(test => {\r\n                    check++;\r\n\r\n                    if (\r\n                      test.rezultat[test.rezultat.length - 1].rezultat_f === \"\"\r\n                    ) {\r\n                      zaprimljen++;\r\n                    }\r\n\r\n                    if (\r\n                      test.rezultat[test.rezultat.length - 1].rezultat_f != \"\"\r\n                    ) {\r\n                      realizovan++;\r\n                    }\r\n\r\n                    if (check === element.rezultati.length) {\r\n                      if (status_uzorka === \"VERIFICIRAN\") {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"VERIFICIRAN\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false\r\n                        });\r\n                      } else if (status_uzorka === \"ODOBREN\") {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"ODOBREN\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false\r\n                        });\r\n                      } else if (zaprimljen < 1) {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"REALIZOVAN\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false\r\n                        });\r\n                      } else if (realizovan < 1) {\r\n                        var stat = \"ZAPRIMLJEN\";\r\n                        if (element.sample.tip.includes(\"Mikrobiologija\")) {\r\n                          if (\r\n                            element.rezultati[0].rezultat[0].rezultat_m.length\r\n                          ) {\r\n                            stat = \"REALIZOVAN\";\r\n                          }\r\n                        }\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: stat,\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false\r\n                        });\r\n                      } else {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"U OBRADI\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false\r\n                        });\r\n                      }\r\n                    }\r\n                  });\r\n                });\r\n\r\n                this.uzorci = this.uzorci.sort(function(a, b) {\r\n                  return a.sid.localeCompare(b.sid, undefined, {\r\n                    numeric: true,\r\n                    sensitivity: \"base\"\r\n                  });\r\n                });\r\n              })\r\n              .then(res => {\r\n                this.MicrobiologyScenario = \"MAIBPoR\";\r\n                this.ShowAntibiotics = false;\r\n                this.ShowBacteries = false;\r\n                // this.show_table = true;\r\n                this.main = true;\r\n                this.isLoading = false\r\n\r\n                if (this.TemporaryBacteriesAdd.length) {\r\n                  this.CurrentTab = this.BacteryTabs[\r\n                    this.BacteryTabs.length - 1\r\n                  ];\r\n                }\r\n              });\r\n          });\r\n      } else {\r\n        this.MicrobiologyScenario = \"MAIBPoR\";\r\n        this.ShowAntibiotics = false;\r\n        this.ShowBacteries = false;\r\n      }\r\n    });\r\n\r\n    bus.$on(\"UpdateMicroBactery\", data => {\r\n     \r\n      if (\r\n        !this.ShowAntibiotics &&\r\n        !this.ShowBacteries &&\r\n        this.MicrobiologyScenario === \"MAIBPoR\"\r\n      ) {\r\n        if (\r\n          this.sample.status != \"ODOBREN\" &&\r\n          this.sample.status != \"VERIFICIRAN\"\r\n        ) {\r\n          this.TemporaryAntibiotics = [];\r\n          this.TemporaryBacteries = [];\r\n          this.TemporaryBacteriesAdd = [];\r\n          var obj = {};\r\n\r\n          this.Bacteries.forEach(element => {\r\n            obj.chosen = false;\r\n            obj.disabled = false;\r\n            obj._id = element._id;\r\n            obj.naziv = element.naziv;\r\n            obj.opis = element.opis;\r\n            obj.antibiogram = element.antibiogram;\r\n            obj.__v = element.__v;\r\n            obj.chosen = element.chosen;\r\n            this.TemporaryBacteries.push(obj);\r\n            obj = {};\r\n          });\r\n\r\n          this.TemporaryBacteries.forEach(element => {\r\n            this.SelectedBacteries.forEach(selected => {\r\n              if (selected._id == element._id) {\r\n                element.chosen = true;\r\n                element.disabled = true;\r\n              }\r\n            });\r\n          });\r\n\r\n          this.ShowBacteries = true;\r\n        }\r\n      }\r\n    });\r\n\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* \r\n\r\n\r\n\r\n\r\n\r\nEnd of | Microbiology Bus from Modal\r\n\r\n\r\n\r\n\r\n\r\n*/\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n\r\n  },\r\n\r\n  beforeDestroy() {\r\n    bus.$off(\"Parametar\");\r\n    bus.$off(\"trash\");\r\n    bus.$off(\"edit\");\r\n    bus.$off(\"comment\");\r\n    bus.$off(\"barcode\");\r\n    bus.$off(\"save\");\r\n    bus.$off(\"check\");\r\n    bus.$off(\"verify\");\r\n    bus.$off(\"undo\");\r\n    bus.$off(\"unlock\");\r\n    bus.$off(\"Nalaz\");\r\n    bus.$off(\"pdf\");\r\n    bus.$off(\"Sample\");\r\n    bus.$off(\"Deleted\");\r\n    bus.$off(\"Edited\");\r\n    bus.$off(\"SaveMulti\");\r\n    bus.$off(\"Mail\");\r\n    bus.$off(\"Error\");\r\n    bus.$off(\"Analyser\");\r\n    bus.$off(\"Sljedeci\");\r\n    bus.$off(\"Prethodni\");\r\n    bus.$off(\"Search\");\r\n    bus.$off(\"Push\");\r\n    bus.$off(\"Reference\");\r\n    bus.$off(\"graph\");\r\n    bus.$off(\"table\");\r\n    bus.$off(\"retest\");\r\n\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* \r\n\r\n\r\n\r\n\r\n\r\n| Microbiology Bus Off\r\n\r\n\r\n\r\n\r\n\r\n*/\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n\r\n    // VuesticTabsBactery\r\n    bus.$off(\"tabChanged\");\r\n    bus.$off(\"Antibiotik\");\r\n\r\n    // VuesticModalMicroResult, bus.$emit(\"CloseMicroResult\")\r\n    bus.$off(\"MicroResult\");\r\n    bus.$off(\"ResetResultSelection\");\r\n    bus.$off(\"CancelMicroResult\");\r\n\r\n    // VuesticModalMicroReset\r\n    bus.$off(\"MicroReset\");\r\n\r\n    // VuesticCollapseObrada\r\n    bus.$off(\"AllowClick\");\r\n\r\n    // VuesticModalMicroBactery, bus.$emit(\"CloseMicroBactery\")\r\n    bus.$off(\"MicroBactery\");\r\n    bus.$off(\"CancelMicroBactery\");\r\n    bus.$off(\"PovratakMicroBactery\");\r\n    bus.$off(\"SpasiMicroBactery\");\r\n    bus.$off(\"UpdateMicroBactery\");\r\n\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* \r\n\r\n\r\n\r\n\r\n\r\nEnd of Microbiology Bus Off |\r\n\r\n\r\n\r\n\r\n\r\n*/\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n\r\n  },\r\n  \r\n  destroyed() {\r\n    console.log(\"Component is being destroyed...\");\r\n    // this.$destroy();\r\n  },\r\n\r\n  created() {\r\n    this.Created();\r\n\r\n    this.Previous.pid = Number(this.$route.params.id) - 1;\r\n    this.Next.pid = Number(this.$route.params.id) + 1;\r\n    this.query_date =\r\n      this.$route.query.date.substring(8, 10) +\r\n      \".\" +\r\n      this.$route.query.date.substring(5, 7) +\r\n      \".\" +\r\n      this.$route.query.date.substring(0, 4);\r\n\r\n    this.Datum.today = new Date(\r\n      JSON.stringify(\r\n        new Date(new Date().setDate(new Date().getDate()))\r\n      ).substring(1, 11) + \"T00:00:00\"\r\n    );\r\n\r\n    this.today_date =\r\n      JSON.stringify(new Date(new Date().setDate(new Date().getDate())))\r\n        .substring(1, 11)\r\n        .substring(8, 10) +\r\n      \".\" +\r\n      JSON.stringify(new Date(new Date().setDate(new Date().getDate())))\r\n        .substring(1, 11)\r\n        .substring(5, 7) +\r\n      \".\" +\r\n      JSON.stringify(new Date(new Date().setDate(new Date().getDate())))\r\n        .substring(1, 11)\r\n        .substring(0, 4);\r\n\r\n    this.Datum.query = new Date(\r\n      this.$route.query.date.substring(0, 10) + \"T00:00:00\"\r\n    );\r\n\r\n    this.Datum.next = new Date(\r\n      new Date(this.$route.query.date.substring(0, 10) + \"T00:00:00\").setDate(\r\n        this.Datum.query.getDate() + 1\r\n      )\r\n    );\r\n\r\n    this.Datum.previous = new Date(\r\n      new Date(this.$route.query.date.substring(0, 10) + \"T00:00:00\").setDate(\r\n        this.Datum.query.getDate() - 1\r\n      )\r\n    );\r\n\r\n    if (new Date(this.Datum.today) > new Date(this.Datum.query)) {\r\n      this.pagination = false;\r\n    } else if (new Date(this.Datum.today) < new Date(this.Datum.query)) {\r\n      this.pagination = false;\r\n    } else {\r\n      this.pagination = true;\r\n    }\r\n\r\n    this.interpretacije = this.interpretacije.sort(function(a, b) {\r\n      return a.localeCompare(b, undefined, {\r\n        numeric: true,\r\n        sensitivity: \"base\"\r\n      });\r\n    });\r\n  },\r\n\r\n  methods: {\r\n\r\n    RetestSave(data) {\r\n\r\n      this.isLoading = true\r\n\r\n      // console.log(this.rezultati)\r\n\r\n      http\r\n        .post(\"rezultati/odobravanje/retest/save/\", {\r\n          sid: this.$store.state.sid,\r\n          rezultati: this.rezultati,\r\n          site: this.$store.state.site,\r\n          token: this.$store.state.token\r\n        })\r\n        .then(res => {\r\n          if (res.data.success) {\r\n            this.isLoading = false\r\n            this.save_retest = false;\r\n          }else{\r\n\r\n          }\r\n        });\r\n    },\r\n\r\n\r\n    ExclamationMulti(test) {\r\n      this.warning = { analiza: \"\", text: \"\", napomena: \"\", control: \"\" };\r\n      var rezultat = test.rezultat\r\n        .replace(/,/g, \".\")\r\n        .replace(/</g, \"\")\r\n        .replace(/>/g, \"\");\r\n\r\n      var m_interp = {};\r\n      var m_opis = \"\";\r\n\r\n      // console.log(test.analit)\r\n\r\n      this.analitiprikaz.forEach(element => {\r\n        element.labassay.multiparam.forEach(param => {\r\n          if (JSON.stringify(param._id) == JSON.stringify(test.analit)) {\r\n\r\n            // console.log(element)\r\n            // console.log(param)\r\n\r\n            m_interp = param.interpretacija;\r\n            m_opis = param.opis;\r\n          }\r\n        });\r\n      });\r\n\r\n      switch (\r\n        this.Interpretacija(\r\n          test.opis,\r\n          rezultat,\r\n          test.jedinica,\r\n          test.refd,\r\n          test.refg,\r\n          this.$store.state.site,\r\n          test.interp,\r\n          \"\",\r\n          this.spec\r\n        )[2]\r\n      ) {\r\n        case \"L\":\r\n          this.warning = {\r\n            analiza: m_opis,\r\n            text: m_interp.snizeno.text.trim(),\r\n            napomena: m_interp.napomena.trim(),\r\n            control: \"Sniženo\"\r\n          };\r\n          break;\r\n\r\n        case \"H\":\r\n          switch (test.interp) {\r\n            case \"neg\":\r\n              this.warning = {\r\n                analiza: m_opis,\r\n                text: m_interp.poviseno.text.trim(),\r\n                napomena: m_interp.napomena.trim(),\r\n                control: \"Pozitivan\"\r\n              };\r\n              break;\r\n\r\n            default:\r\n              this.warning = {\r\n                analiza: m_opis,\r\n                text: m_interp.poviseno.text.trim(),\r\n                napomena: m_interp.napomena.trim(),\r\n                control: \"Povišeno\"\r\n              };\r\n              break;\r\n          }\r\n\r\n          break;\r\n\r\n        default:\r\n          this.warning = { analiza: \"\", text: \"\", napomena: \"\", control: \"\" };\r\n          break;\r\n      }\r\n\r\n      if (this.warning.text && this.warning.text != \"\") {\r\n\r\n        // console.log(this.warning.analiza + \" | \" + this.warning.control + \" - \" + this.warning.text);\r\n        // this.$refs.staticModalExclamation.open();\r\n\r\n      }\r\n    },\r\n\r\n    Exclamation(test) {\r\n      this.warning = { analiza: \"\", text: \"\", napomena: \"\", control: \"\" };\r\n      var rezultat = test.rezultat\r\n        .replace(/,/g, \".\")\r\n        .replace(/</g, \"\")\r\n        .replace(/>/g, \"\");\r\n\r\n      switch (\r\n        this.Interpretacija(\r\n          test.opis,\r\n          rezultat,\r\n          test.jedinica,\r\n          test.dRef,\r\n          test.gRef,\r\n          this.$store.state.site,\r\n          test.interp,\r\n          test.extend,\r\n          this.spec\r\n        )[2]\r\n      ) {\r\n        case \"L\":\r\n          this.warning = {\r\n            analiza: test.analit,\r\n            text: test.interpretacija.snizeno.text.trim(),\r\n            napomena: test.interpretacija.napomena.trim(),\r\n            control: \"Sniženo\"\r\n          };\r\n          break;\r\n\r\n        case \"H\":\r\n          switch (test.interp) {\r\n            case \"neg\":\r\n              this.warning = {\r\n                analiza: test.analit,\r\n                text: test.interpretacija.poviseno.text.trim(),\r\n                napomena: test.interpretacija.napomena.trim(),\r\n                control: \"Pozitivan\"\r\n              };\r\n              break;\r\n\r\n            default:\r\n              this.warning = {\r\n                analiza: test.analit,\r\n                text: test.interpretacija.poviseno.text.trim(),\r\n                napomena: test.interpretacija.napomena.trim(),\r\n                control: \"Povišeno\"\r\n              };\r\n              break;\r\n          }\r\n\r\n          break;\r\n\r\n        default:\r\n          this.warning = { analiza: \"\", text: \"\", napomena: \"\", control: \"\" };\r\n          break;\r\n      }\r\n\r\n      if (this.warning.text && this.warning.text != \"\") {\r\n        this.$refs.staticModalExclamation.open();\r\n      }\r\n    },\r\n\r\n    LabAssayEval(e, test) {\r\n      this.analiza_eval = test;\r\n      e.preventDefault();\r\n      this.spinner = false;\r\n      this.showLineChart = false;\r\n      let palette = store.getters.palette;\r\n      this.table_header = test.ime + \" | \" + test.analit;\r\n      if (!test.multidata) {\r\n        this.isLoading = true;\r\n        this.Procjena = [];\r\n\r\n        http\r\n          .get(\r\n            \"/labassay/evaluation/single\" +\r\n              \"?token=\" +\r\n              this.$store.state.token +\r\n              \"&site=\" +\r\n              this.$store.state.site +\r\n              \"&range=\" +\r\n              \"14\",\r\n            {}\r\n          )\r\n          .then(response => {\r\n            if (response.data.Results.length) {\r\n              var obj = {};\r\n              var count = 0;\r\n\r\n              response.data.Results.forEach(element => {\r\n                count++;\r\n                element.rezultati.forEach(rez => {\r\n                  if (\r\n                    rez.labassay === test.labassay_id &&\r\n                    element.verificiran &&\r\n                    rez.rezultat[rez.rezultat.length - 1].rezultat_f.trim() !=\r\n                      \"\"\r\n                  ) {\r\n                    obj.rezultat =\r\n                      rez.rezultat[rez.rezultat.length - 1].rezultat_f;\r\n                    obj.jedinica =\r\n                      rez.rezultat[rez.rezultat.length - 1].jedinice_f;\r\n                    obj.analit = \"\";\r\n                    obj.interp = rez.interp;\r\n                    obj.extend = rez.extend;\r\n                    obj.refd = rez.refd;\r\n                    obj.refg = rez.refg;\r\n                    obj.sid = element.id;\r\n                    obj.updated_at =\r\n                      rez.rezultat[rez.rezultat.length - 1].updated_at;\r\n\r\n                    var datum =\r\n                      JSON.stringify(\r\n                        rez.rezultat[rez.rezultat.length - 1].updated_at\r\n                      ).slice(9, 11) +\r\n                      \".\" +\r\n                      JSON.stringify(\r\n                        rez.rezultat[rez.rezultat.length - 1].updated_at\r\n                      ).slice(6, 8) +\r\n                      \".\" +\r\n                      JSON.stringify(\r\n                        rez.rezultat[rez.rezultat.length - 1].updated_at\r\n                      ).slice(1, 5);\r\n                    var time = JSON.stringify(\r\n                      new Date(\r\n                        new Date(\r\n                          rez.rezultat[rez.rezultat.length - 1].updated_at\r\n                        ).getTime() -\r\n                          new Date(\r\n                            rez.rezultat[rez.rezultat.length - 1].updated_at\r\n                          ).getTimezoneOffset() *\r\n                            60000\r\n                      ).toISOString()\r\n                    ).substring(12, 17);\r\n\r\n                    obj.datum = datum;\r\n                    obj.vrijeme = time;\r\n                    obj.kontrola = this.Interpretacija(\r\n                      \"\",\r\n                      obj.rezultat,\r\n                      obj.jedinica,\r\n                      obj.refd,\r\n                      obj.refg,\r\n                      this.$store.state.site,\r\n                      obj.interp,\r\n                      obj.extend,\r\n                      this.spec\r\n                    )[5];\r\n\r\n                    this.Procjena.push(obj);\r\n                    obj = {};\r\n                  }\r\n                });\r\n\r\n                if (count == response.data.Results.length) {\r\n                  this.Procjena.sort(function(a, b) {\r\n                    return Date.parse(a.updated_at) == Date.parse(b.updated_at)\r\n                      ? 0\r\n                      : +(\r\n                          Date.parse(a.updated_at) < Date.parse(b.updated_at)\r\n                        ) || -1;\r\n                  });\r\n\r\n                  // Line Chart\r\n\r\n                  var data = [];\r\n\r\n                  if (this.Procjena.length) {\r\n                    this.optionsLineChart = {\r\n                      responsive: true,\r\n                      maintainAspectRatio: false,\r\n                      title: {\r\n                        display: true,\r\n                        text: \"\"\r\n                      },\r\n                      scales: {\r\n                        xAxes: [\r\n                          {\r\n                            display: true,\r\n                            gridLines: {\r\n                              display: true,\r\n                              color: \"#eee\"\r\n                            }\r\n                          }\r\n                        ],\r\n                        yAxes: [\r\n                          {\r\n                            display: true,\r\n                            gridLines: {\r\n                              display: true,\r\n                              color: \"#eee\"\r\n                            }\r\n                          }\r\n                        ]\r\n                      }\r\n                    };\r\n\r\n                    var labels = [];\r\n                    var kontrola = [];\r\n                    var temp = \"\";\r\n\r\n                    this.Procjena.forEach(element => {\r\n                      if (!isNaN(element.rezultat.trim())) {\r\n                        switch (element.kontrola) {\r\n                          case \"Red\":\r\n                            kontrola.push(palette.danger);\r\n                            break;\r\n                          case \"Green\":\r\n                            kontrola.push(palette.primary);\r\n                            break;\r\n                          case \"Yellow\":\r\n                            kontrola.push(palette.warning);\r\n                            break;\r\n\r\n                          default:\r\n                            kontrola.push(palette.info);\r\n                            break;\r\n                        }\r\n\r\n                        labels.push(element.datum);\r\n                        data.push(element.rezultat);\r\n                      }\r\n                    });\r\n\r\n                    this.dataLineChart = {\r\n                      labels: labels,\r\n                      datasets: [\r\n                        {\r\n                          label: test.ime + \" | \" + test.analit,\r\n                          backgroundColor: utils.hex2rgb(palette.info, 0.5).css,\r\n                          pointBorderColor: kontrola,\r\n                          pointBackgroundColor: kontrola,\r\n                          borderColor: palette.transparent,\r\n                          data: data\r\n                        }\r\n                      ]\r\n                    };\r\n\r\n                    if (data.length) {\r\n                      this.showLineChart = true;\r\n                    }\r\n\r\n                    // console.warn(\"Zadnjih 14 dana.\");\r\n\r\n                    this.$refs.staticModalLabAssayEvalSingle.open();\r\n                  } else {\r\n\r\n                    // console.warn(\"No data.\");\r\n\r\n                  }\r\n                }\r\n              });\r\n            } else {\r\n\r\n              // console.warn(\"No data.\");\r\n\r\n            }\r\n            this.isLoading = false;\r\n          });\r\n      } else {\r\n\r\n        // console.warn(test.ime + \" | \" + test.analit);\r\n\r\n        this.multiparam_izbor = test.multiparam[0].opis;\r\n        this.multiparam_id = test.multiparam[0]._id;\r\n\r\n        this.multiparams = [];\r\n\r\n        this.multiparam_izbornik = [];\r\n\r\n        test.multiparam.forEach(element => {\r\n          this.multiparam_izbornik.push(element.opis);\r\n          this.multiparams.push(element);\r\n        });\r\n\r\n        this.isLoading = true;\r\n        this.Procjena = [];\r\n\r\n        http\r\n          .get(\r\n            \"/labassay/evaluation/multi\" +\r\n              \"?token=\" +\r\n              this.$store.state.token +\r\n              \"&site=\" +\r\n              this.$store.state.site +\r\n              \"&labassay=\" +\r\n              test.labassay_id +\r\n              \"&range=\" +\r\n              \"14\",\r\n            {}\r\n          )\r\n          .then(response => {\r\n            if (response.data.Multi.length) {\r\n              this.Response = response.data;\r\n\r\n              var obj = {};\r\n              var count = 0;\r\n\r\n              response.data.Multi.forEach(element => {\r\n                count++;\r\n                element.multi.forEach(param => {\r\n                  if (\r\n                    this.multiparam_id == param.labassay &&\r\n                    param.rezultat[0].rezultat_f.trim() != \"\"\r\n                  ) {\r\n                    obj.rezultat = param.rezultat[0].rezultat_f;\r\n                    obj.jedinica = param.rezultat[0].jedinice_f;\r\n                    obj.analit = \"Nema podataka\";\r\n                    obj.interp = param.interp;\r\n                    obj.extend = param.extend;\r\n                    obj.refd = param.refd;\r\n                    obj.refg = param.refg;\r\n                    obj.sid = \"Nema podataka\";\r\n                    obj.updated_at = new Date(param.rezultat[0].updated_at);\r\n\r\n                    var datum =\r\n                      JSON.stringify(\r\n                        new Date(param.rezultat[0].updated_at)\r\n                      ).slice(9, 11) +\r\n                      \".\" +\r\n                      JSON.stringify(\r\n                        new Date(param.rezultat[0].updated_at)\r\n                      ).slice(6, 8) +\r\n                      \".\" +\r\n                      JSON.stringify(\r\n                        new Date(param.rezultat[0].updated_at)\r\n                      ).slice(1, 5);\r\n                    var time = JSON.stringify(\r\n                      new Date(\r\n                        new Date(param.rezultat[0].updated_at).getTime() -\r\n                          new Date(\r\n                            param.rezultat[0].updated_at\r\n                          ).getTimezoneOffset() *\r\n                            60000\r\n                      ).toISOString()\r\n                    ).substring(12, 17);\r\n                    obj.datum = datum;\r\n                    obj.vrijeme = time;\r\n                    obj.kontrola = this.Interpretacija(\r\n                      \"\",\r\n                      obj.rezultat,\r\n                      obj.jedinica,\r\n                      obj.refd,\r\n                      obj.refg,\r\n                      this.$store.state.site,\r\n                      obj.interp,\r\n                      obj.extend,\r\n                      this.spec\r\n                    )[5];\r\n\r\n                    this.Procjena.push(obj);\r\n                    obj = {};\r\n                  }\r\n                });\r\n\r\n                if (count == response.data.Multi.length) {\r\n                  this.Procjena.sort(function(a, b) {\r\n                    return Date.parse(a.updated_at) == Date.parse(b.updated_at)\r\n                      ? 0\r\n                      : +(\r\n                          Date.parse(a.updated_at) < Date.parse(b.updated_at)\r\n                        ) || -1;\r\n                  });\r\n\r\n                  // Line Chart\r\n\r\n                  var data = [];\r\n\r\n                  if (this.Procjena.length) {\r\n                    this.optionsLineChart = {\r\n                      responsive: true,\r\n                      maintainAspectRatio: false,\r\n                      title: {\r\n                        display: true,\r\n                        text: \"\"\r\n                      },\r\n                      scales: {\r\n                        xAxes: [\r\n                          {\r\n                            display: true,\r\n                            gridLines: {\r\n                              display: true,\r\n                              color: \"#eee\"\r\n                            }\r\n                          }\r\n                        ],\r\n                        yAxes: [\r\n                          {\r\n                            display: true,\r\n                            gridLines: {\r\n                              display: true,\r\n                              color: \"#eee\"\r\n                            }\r\n                          }\r\n                        ]\r\n                      }\r\n                    };\r\n\r\n                    var labels = [];\r\n                    var kontrola = [];\r\n                    var temp = \"\";\r\n\r\n                    this.Procjena.forEach(element => {\r\n                      if (!isNaN(element.rezultat.trim())) {\r\n                        switch (element.kontrola) {\r\n                          case \"Red\":\r\n                            kontrola.push(palette.danger);\r\n                            break;\r\n                          case \"Green\":\r\n                            kontrola.push(palette.primary);\r\n                            break;\r\n                          case \"Yellow\":\r\n                            kontrola.push(palette.warning);\r\n                            break;\r\n\r\n                          default:\r\n                            kontrola.push(palette.info);\r\n                            break;\r\n                        }\r\n\r\n                        labels.push(element.datum);\r\n                        data.push(element.rezultat);\r\n                      }\r\n                    });\r\n\r\n                    this.dataLineChart = {\r\n                      labels: labels,\r\n                      datasets: [\r\n                        {\r\n                          label: test.ime + \" | \" + test.analit,\r\n                          backgroundColor: utils.hex2rgb(palette.info, 0.5).css,\r\n                          pointBorderColor: kontrola,\r\n                          pointBackgroundColor: kontrola,\r\n                          borderColor: palette.transparent,\r\n                          data: data\r\n                        }\r\n                      ]\r\n                    };\r\n\r\n                    if (data.length) {\r\n                      this.showLineChart = true;\r\n                    }\r\n\r\n                    this.$refs.staticModalLabAssayEvalMulti.open();\r\n                  } else {\r\n\r\n                    // console.warn(\"No data.\");\r\n\r\n                  }\r\n                }\r\n              });\r\n            } else {\r\n\r\n              // console.warn(\"No data.\");\r\n\r\n            }\r\n            this.isLoading = false;\r\n          });\r\n      }\r\n    },\r\n\r\n    Evaluation(test) {\r\n      this.analiza_eval = test;\r\n      this.spinner = false;\r\n      if (true) {\r\n        this.showLineChart = false;\r\n        let palette = store.getters.palette;\r\n        this.table_header = test.ime + \" | \" + test.analit;\r\n\r\n        if (test.multidata) {\r\n          this.multiparam_izbor = test.multiparam[0].opis;\r\n          this.multiparam_id = test.multiparam[0]._id;\r\n\r\n          this.multiparams = [];\r\n\r\n          this.multiparam_izbornik = [];\r\n\r\n          test.multiparam.forEach(element => {\r\n            this.multiparam_izbornik.push(element.opis);\r\n            this.multiparams.push(element);\r\n          });\r\n\r\n          this.isLoading = true;\r\n          this.Procjena = [];\r\n\r\n          http\r\n            .get(\r\n              \"/patient/evaluation/multi\" +\r\n                \"?token=\" +\r\n                this.$store.state.token +\r\n                \"&site=\" +\r\n                this.$store.state.site +\r\n                \"&patient=\" +\r\n                this.pacijent +\r\n                \"&labassay=\" +\r\n                test.labassay_id,\r\n              {}\r\n            )\r\n            .then(response => {\r\n              if (response.data.Multi.length) {\r\n                this.Response = response.data;\r\n\r\n                var obj = {};\r\n                var count = 0;\r\n\r\n                response.data.Multi.forEach(element => {\r\n                  count++;\r\n                  element.multi.forEach(param => {\r\n                    if (\r\n                      this.multiparam_id == param.labassay &&\r\n                      param.rezultat[0].rezultat_f.trim() != \"\"\r\n                    ) {\r\n                      obj.rezultat = param.rezultat[0].rezultat_f;\r\n                      obj.jedinica = param.rezultat[0].jedinice_f;\r\n                      obj.analit = \"Nema podataka\";\r\n                      obj.interp = param.interp;\r\n                      obj.extend = param.extend;\r\n                      obj.refd = param.refd;\r\n                      obj.refg = param.refg;\r\n                      obj.sid = \"Nema podataka\";\r\n                      obj.updated_at = new Date(param.rezultat[0].updated_at);\r\n\r\n                      var datum =\r\n                        JSON.stringify(\r\n                          new Date(param.rezultat[0].updated_at)\r\n                        ).slice(9, 11) +\r\n                        \".\" +\r\n                        JSON.stringify(\r\n                          new Date(param.rezultat[0].updated_at)\r\n                        ).slice(6, 8) +\r\n                        \".\" +\r\n                        JSON.stringify(\r\n                          new Date(param.rezultat[0].updated_at)\r\n                        ).slice(1, 5);\r\n                      var time = JSON.stringify(\r\n                        new Date(\r\n                          new Date(param.rezultat[0].updated_at).getTime() -\r\n                            new Date(\r\n                              param.rezultat[0].updated_at\r\n                            ).getTimezoneOffset() *\r\n                              60000\r\n                        ).toISOString()\r\n                      ).substring(12, 17);\r\n                      obj.datum = datum;\r\n                      obj.vrijeme = time;\r\n                      obj.kontrola = this.Interpretacija(\r\n                        \"\",\r\n                        obj.rezultat,\r\n                        obj.jedinica,\r\n                        obj.refd,\r\n                        obj.refg,\r\n                        this.$store.state.site,\r\n                        obj.interp,\r\n                        obj.extend,\r\n                        this.spec\r\n                      )[5];\r\n\r\n                      this.Procjena.push(obj);\r\n                      obj = {};\r\n                    }\r\n                  });\r\n\r\n                  if (count == response.data.Multi.length) {\r\n                    this.Procjena.sort(function(a, b) {\r\n                      return Date.parse(a.updated_at) ==\r\n                        Date.parse(b.updated_at)\r\n                        ? 0\r\n                        : +(\r\n                            Date.parse(a.updated_at) < Date.parse(b.updated_at)\r\n                          ) || -1;\r\n                    });\r\n\r\n                    // Line Chart\r\n\r\n                    var data = [];\r\n\r\n                    if (this.Procjena.length) {\r\n                      this.optionsLineChart = {\r\n                        responsive: true,\r\n                        maintainAspectRatio: false,\r\n                        title: {\r\n                          display: true,\r\n                          text: \"\"\r\n                        },\r\n                        scales: {\r\n                          xAxes: [\r\n                            {\r\n                              display: true,\r\n                              gridLines: {\r\n                                display: true,\r\n                                color: \"#eee\"\r\n                              }\r\n                            }\r\n                          ],\r\n                          yAxes: [\r\n                            {\r\n                              display: true,\r\n                              gridLines: {\r\n                                display: true,\r\n                                color: \"#eee\"\r\n                              }\r\n                            }\r\n                          ]\r\n                        }\r\n                      };\r\n\r\n                      var labels = [];\r\n                      var kontrola = [];\r\n                      var temp = \"\";\r\n\r\n                      this.Procjena.forEach(element => {\r\n                        if (!isNaN(element.rezultat.trim())) {\r\n                          switch (element.kontrola) {\r\n                            case \"Red\":\r\n                              kontrola.push(palette.danger);\r\n                              break;\r\n                            case \"Green\":\r\n                              kontrola.push(palette.primary);\r\n                              break;\r\n                            case \"Yellow\":\r\n                              kontrola.push(palette.warning);\r\n                              break;\r\n\r\n                            default:\r\n                              kontrola.push(palette.info);\r\n                              break;\r\n                          }\r\n\r\n                          labels.push(element.datum);\r\n                          data.push(element.rezultat);\r\n                        }\r\n                      });\r\n\r\n                      this.dataLineChart = {\r\n                        labels: labels,\r\n                        datasets: [\r\n                          {\r\n                            label: test.ime + \" | \" + test.analit,\r\n                            backgroundColor: utils.hex2rgb(palette.info, 0.5)\r\n                              .css,\r\n                            pointBorderColor: kontrola,\r\n                            pointBackgroundColor: kontrola,\r\n                            borderColor: palette.transparent,\r\n                            data: data\r\n                          }\r\n                        ]\r\n                      };\r\n\r\n                      if (data.length) {\r\n                        this.showLineChart = true;\r\n                      }\r\n\r\n                      this.$refs.staticModalEvaluationMulti.open();\r\n                    } else {\r\n\r\n                      // console.warn(\"No data.\");\r\n\r\n                    }\r\n                  }\r\n                });\r\n              } else {\r\n\r\n                // console.warn(\"No data.\");\r\n\r\n              }\r\n              this.isLoading = false;\r\n            });\r\n        } else {\r\n          this.isLoading = true;\r\n          this.Procjena = [];\r\n\r\n          http\r\n            .get(\r\n              \"/patient/evaluation/single\" +\r\n                \"?token=\" +\r\n                this.$store.state.token +\r\n                \"&site=\" +\r\n                this.$store.state.site +\r\n                \"&patient=\" +\r\n                this.pacijent,\r\n              {}\r\n            )\r\n            .then(response => {\r\n              if (response.data.Results.length) {\r\n                var obj = {};\r\n                var count = 0;\r\n\r\n                response.data.Results.forEach(element => {\r\n                  count++;\r\n                  element.rezultati.forEach(rez => {\r\n                    if (\r\n                      rez.labassay === test.labassay_id &&\r\n                      element.verificiran &&\r\n                      rez.rezultat[rez.rezultat.length - 1].rezultat_f.trim() !=\r\n                        \"\"\r\n                    ) {\r\n                      obj.rezultat =\r\n                        rez.rezultat[rez.rezultat.length - 1].rezultat_f;\r\n                      obj.jedinica =\r\n                        rez.rezultat[rez.rezultat.length - 1].jedinice_f;\r\n                      obj.analit = \"\";\r\n                      obj.interp = rez.interp;\r\n                      obj.extend = rez.extend;\r\n                      obj.refd = rez.refd;\r\n                      obj.refg = rez.refg;\r\n                      obj.sid = element.id;\r\n                      obj.updated_at =\r\n                        rez.rezultat[rez.rezultat.length - 1].updated_at;\r\n\r\n                      var datum =\r\n                        JSON.stringify(\r\n                          rez.rezultat[rez.rezultat.length - 1].updated_at\r\n                        ).slice(9, 11) +\r\n                        \".\" +\r\n                        JSON.stringify(\r\n                          rez.rezultat[rez.rezultat.length - 1].updated_at\r\n                        ).slice(6, 8) +\r\n                        \".\" +\r\n                        JSON.stringify(\r\n                          rez.rezultat[rez.rezultat.length - 1].updated_at\r\n                        ).slice(1, 5);\r\n                      var time = JSON.stringify(\r\n                        new Date(\r\n                          new Date(\r\n                            rez.rezultat[rez.rezultat.length - 1].updated_at\r\n                          ).getTime() -\r\n                            new Date(\r\n                              rez.rezultat[rez.rezultat.length - 1].updated_at\r\n                            ).getTimezoneOffset() *\r\n                              60000\r\n                        ).toISOString()\r\n                      ).substring(12, 17);\r\n\r\n                      obj.datum = datum;\r\n                      obj.vrijeme = time;\r\n                      obj.kontrola = this.Interpretacija(\r\n                        \"\",\r\n                        obj.rezultat,\r\n                        obj.jedinica,\r\n                        obj.refd,\r\n                        obj.refg,\r\n                        this.$store.state.site,\r\n                        obj.interp,\r\n                        obj.extend,\r\n                        this.spec\r\n                      )[5];\r\n\r\n                      this.Procjena.push(obj);\r\n                      obj = {};\r\n                    }\r\n                  });\r\n\r\n                  if (count == response.data.Results.length) {\r\n                    this.Procjena.sort(function(a, b) {\r\n                      return Date.parse(a.updated_at) ==\r\n                        Date.parse(b.updated_at)\r\n                        ? 0\r\n                        : +(\r\n                            Date.parse(a.updated_at) < Date.parse(b.updated_at)\r\n                          ) || -1;\r\n                    });\r\n\r\n                    // Line Chart\r\n\r\n                    var data = [];\r\n\r\n                    if (this.Procjena.length) {\r\n                      this.optionsLineChart = {\r\n                        responsive: true,\r\n                        maintainAspectRatio: false,\r\n                        title: {\r\n                          display: true,\r\n                          text: \"\"\r\n                        },\r\n                        scales: {\r\n                          xAxes: [\r\n                            {\r\n                              display: true,\r\n                              gridLines: {\r\n                                display: true,\r\n                                color: \"#eee\"\r\n                              }\r\n                            }\r\n                          ],\r\n                          yAxes: [\r\n                            {\r\n                              display: true,\r\n                              gridLines: {\r\n                                display: true,\r\n                                color: \"#eee\"\r\n                              }\r\n                            }\r\n                          ]\r\n                        }\r\n                      };\r\n\r\n                      var labels = [];\r\n                      var kontrola = [];\r\n                      var temp = \"\";\r\n\r\n                      this.Procjena.forEach(element => {\r\n                        if (!isNaN(element.rezultat.trim())) {\r\n                          switch (element.kontrola) {\r\n                            case \"Red\":\r\n                              kontrola.push(palette.danger);\r\n                              break;\r\n                            case \"Green\":\r\n                              kontrola.push(palette.primary);\r\n                              break;\r\n                            case \"Yellow\":\r\n                              kontrola.push(palette.warning);\r\n                              break;\r\n\r\n                            default:\r\n                              kontrola.push(palette.info);\r\n                              break;\r\n                          }\r\n\r\n                          labels.push(element.datum);\r\n                          data.push(element.rezultat);\r\n                        }\r\n                      });\r\n\r\n                      this.dataLineChart = {\r\n                        labels: labels,\r\n                        datasets: [\r\n                          {\r\n                            label: test.ime + \" | \" + test.analit,\r\n                            backgroundColor: utils.hex2rgb(palette.info, 0.5)\r\n                              .css,\r\n                            pointBorderColor: kontrola,\r\n                            pointBackgroundColor: kontrola,\r\n                            borderColor: palette.transparent,\r\n                            data: data\r\n                          }\r\n                        ]\r\n                      };\r\n\r\n                      if (data.length) {\r\n                        this.showLineChart = true;\r\n                      }\r\n\r\n                      this.$refs.staticModalEvaluationSingle.open();\r\n                    } else {\r\n\r\n                      // console.warn(\"No data.\");\r\n\r\n                    }\r\n                  }\r\n                });\r\n              } else {\r\n\r\n                // console.warn(\"No data.\");\r\n\r\n              }\r\n              this.isLoading = false;\r\n            });\r\n        }\r\n      }\r\n    },\r\n\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* \r\n\r\n\r\n\r\n\r\n\r\n| Microbiology Methods\r\n\r\n\r\n\r\n\r\n\r\n*/\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n\r\n    filteredAntibiotics(column, columns) {\r\n      return this.Antibiotics.filter(\r\n        item => this.Antibiotics.indexOf(item) % columns === column - 1\r\n      );\r\n    },\r\n\r\n    filteredBacteries(column, columns) {\r\n      return this.TemporaryBacteries.filter(\r\n        item => this.TemporaryBacteries.indexOf(item) % columns === column - 1\r\n      );\r\n    },\r\n\r\n    AddAntibiotics(data) {\r\n      var obj = {};\r\n\r\n      if (!data.chosen) {\r\n        (obj._id = data._id),\r\n          (obj.rbr_a = data.rbr_a),\r\n          (obj.naziv = data.naziv),\r\n          (obj.opis = data.opis),\r\n          (obj.rezultat = \"\");\r\n        this.TemporaryAntibiotics.push(obj);\r\n      } else {\r\n        for (var i = 0; i < this.TemporaryAntibiotics.length; i++) {\r\n          if (this.TemporaryAntibiotics[i]._id === data._id) {\r\n            this.TemporaryAntibiotics.splice(i, 1);\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    },\r\n\r\n    AddBacteries(data) {\r\n      if (!data.chosen) {\r\n        this.TemporaryBacteriesAdd.push(data);\r\n      } else {\r\n        for (var i = 0; i < this.TemporaryBacteriesAdd.length; i++) {\r\n          if (this.TemporaryBacteriesAdd[i]._id === data._id) {\r\n            this.TemporaryBacteriesAdd.splice(i, 1);\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    },\r\n\r\n    OpenMicroSelect($event, test) {\r\n\r\n      console.log(\"Select Modal opening...\");\r\n\r\n      this.CurrentTab = \"\";\r\n      this.testovi = [];\r\n      this.rezultati = [];\r\n      this.analitiprikaz = [];\r\n      this.calculated = false;\r\n      this.show_table = false;\r\n      this.main = false;\r\n\r\n      var topcije = null;\r\n      topcije = izbornik.rez;\r\n\r\n      http\r\n        .get(\r\n          \"rezultati/showsingle/\" +\r\n            this.$store.state.sid +\r\n            \"?token=\" +\r\n            this.$store.state.token +\r\n            \"&site=\" +\r\n            this.$store.state.site,\r\n          {}\r\n        )\r\n        .then(res => {\r\n          console.log(res.data);\r\n          var test = {};\r\n\r\n          if (res.data.data.length) {\r\n            res.data.data.sort(function(a, b) {\r\n              return a.testovi.labassay.grupa + a.testovi.labassay.grouporder ==\r\n                b.testovi.labassay.grupa + b.testovi.labassay.grouporder\r\n                ? 0\r\n                : +(\r\n                    a.testovi.labassay.grupa + a.testovi.labassay.grouporder >\r\n                    b.testovi.labassay.grupa + b.testovi.labassay.grouporder\r\n                  ) || -1;\r\n            });\r\n\r\n            this.testovi = res.data.data;\r\n            this.analitiprikaz = res.data.multidata;\r\n\r\n            res.data.data.forEach(element => {\r\n              test = {};\r\n              test.realizovan = false;\r\n\r\n              test.ime = element.testovi.labassay.naziv;\r\n              test.test = element.testovi.labassay.sifra;\r\n              test.analit = element.testovi.labassay.analit;\r\n              test.IDE = element.testovi._id;\r\n              test.labassay_id = element.testovi.labassay._id;\r\n\r\n              test.multi_count = 0;\r\n              test.multi_rezultati = [];\r\n\r\n              res.data.multidata.forEach(multi => {\r\n                if (multi.labassay._id === element.testovi.labassay._id) {\r\n                  test.multi_rezultati = multi.rezultat;\r\n                  test.multi_count = multi.rezultat[0].rezultat.length;\r\n                }\r\n              });\r\n\r\n              test.kategorija = element.testovi.labassay.kategorija;\r\n              test.analyser = element.testovi.labassay.analyser;\r\n              test.multiparam = element.testovi.labassay.multiparam;\r\n              test.vise = element.testovi.rezultat.length;\r\n              test.calculated = element.testovi.labassay.calculated;\r\n              test.manual = element.testovi.labassay.manual;\r\n\r\n              test.select_options = eval(\r\n                \"topcije.\" +\r\n                  element.testovi.interp\r\n                    .replace(\"%\", \"_\")\r\n                    .replace(\"/\", \"_\")\r\n                    .replace(\" \", \"_\")\r\n                    .replace(/-/g, \"_\")\r\n                    .replace(\"#\", \"_\")\r\n                    .replace(/^\\d+/, \"\")\r\n              );\r\n\r\n              element.testovi.rezultat.forEach(rezultat => {\r\n                test.sekcija = rezultat.anaassay.sekcija;\r\n                test.rezultat = rezultat.rezultat_f;\r\n                test.result = rezultat;\r\n                test.anaassay = rezultat.anaassay;\r\n\r\n                if (rezultat.rezultat_f != \"\") {\r\n                  test.realizovan = true;\r\n                }\r\n\r\n                test.unit = rezultat.jedinice_f;\r\n\r\n                if (res.data.verificiran || res.data.status === \"ODOBREN\") {\r\n                  test.odobren = \"ODOBREN\";\r\n                  test.edit = false;\r\n                } else {\r\n                  test.odobren != \"ODOBREN\";\r\n                  test.edit = true;\r\n                }\r\n\r\n                test.jedinica = rezultat.jedinice_f;\r\n                test.id = rezultat._id;\r\n                test.multidata = element.testovi.labassay.multi;\r\n                test.rezultat_m = rezultat.rezultat_m;\r\n                test.bakterije = element.testovi.labassay.bakterije;\r\n                test.neg_description = element.testovi.labassay.neg_description;\r\n                test.pos_description = element.testovi.labassay.pos_description;\r\n                test.refSet = element.testovi.grupa;\r\n                test.dRef = element.testovi.refd;\r\n                test.gRef = element.testovi.refg;\r\n                test.interp = element.testovi.interp;\r\n                test.extend = element.testovi.extend;\r\n                test.retest = element.testovi.retest;\r\n                test.interpretacija = element.testovi.labassay.interpretacija;\r\n              });\r\n\r\n              if (\r\n                test.select_options != undefined &&\r\n                !test.select_options.includes(test.rezultat)\r\n              ) {\r\n                test.select_options.unshift(test.rezultat);\r\n              }\r\n              this.rezultati.push(test);\r\n            });\r\n\r\n            if (this.MicrobiologySample && this.AllowGetSample) {\r\n              // On open Modal\r\n              // console.log(\"Microbiology sample check.\");\r\n              var bakterioloski = false;\r\n              var negativan = false;\r\n              var pozitivan = false;\r\n              var bakterijed = [];\r\n              var bakterijei = [];\r\n              var neg_rezultati = [];\r\n              var poz_rezultati = [];\r\n\r\n              this.CurrentTest = this.rezultati[0].analit;\r\n\r\n              neg_rezultati = [...this.rezultati[0].neg_description];\r\n              poz_rezultati = [...this.rezultati[0].pos_description];\r\n\r\n              if (this.rezultati[0].bakterije.length) {\r\n                bakterioloski = true;\r\n\r\n                var counter = 0;\r\n                var ima = false;\r\n\r\n                this.Bacteries.forEach(element => {\r\n                  element.chosen = false;\r\n                  counter = 0;\r\n                  ima = false;\r\n                  this.rezultati[0].bakterije.forEach(bakt => {\r\n                    counter++;\r\n                    if (element._id == bakt) {\r\n                      ima = true;\r\n                    }\r\n\r\n                    if (\r\n                      counter === this.rezultati[0].bakterije.length &&\r\n                      !ima\r\n                    ) {\r\n                      bakterijed.push(element);\r\n                    }\r\n\r\n                    if (counter === this.rezultati[0].bakterije.length && ima) {\r\n                      bakterijei.push(element);\r\n                    }\r\n                  });\r\n                });\r\n\r\n                switch (this.rezultati[0].rezultat_m.length) {\r\n                  case 0:\r\n                    this.MicrobiologyScenario = \"MAIBNoR\";\r\n                    this.SelectedBacteries = [];\r\n                    break;\r\n                  case 1:\r\n                    this.MicrobiologyScenario = \"MAIBNeR\";\r\n                    this.SelectedBacteries = [];\r\n\r\n                    negativan = true;\r\n\r\n                    if (\r\n                      !neg_rezultati.includes(this.rezultati[0].rezultat.trim())\r\n                    ) {\r\n                      neg_rezultati.unshift(this.rezultati[0].rezultat.trim());\r\n                    }\r\n\r\n                    break;\r\n\r\n                  default:\r\n                    this.MicrobiologyScenario = \"MAIBPoR\";\r\n                    this.SelectedBacteries = [];\r\n                    this.BacteryTabs = [];\r\n\r\n                    this.rezultati[0].rezultat_m.forEach(element => {\r\n                      // console.log(element)\r\n                      if (element.bakterija) {\r\n                        this.SelectedBacteries.push(element);\r\n                        this.BacteryTabs.push(element.opis);\r\n                      }\r\n                    });\r\n\r\n                    console.log(\"Izabrane bakterije:\")\r\n                    console.log(this.SelectedBacteries)\r\n\r\n                    let maxVal = this.SelectedBacteries.reduce((max, val) =>\r\n                      max.antibiogram.antibiotici.length >\r\n                      val.antibiogram.antibiotici.length\r\n                        ? max\r\n                        : val\r\n                    );\r\n\r\n                    if (this.CurrentTab == \"\") {\r\n                      // this.CurrentTab = maxVal.opis;\r\n                    }\r\n                    this.CurrentTab = this.SelectedBacteries[0].opis;\r\n\r\n                    bakterijed.forEach(element => {\r\n                      this.SelectedBacteries.forEach(bact => {\r\n                        if (element._id == bact._id) {\r\n                          element.chosen = true;\r\n                        }\r\n                      });\r\n                    });\r\n\r\n                    bakterijei.forEach(element => {\r\n                      this.SelectedBacteries.forEach(bact => {\r\n                        if (element._id == bact._id) {\r\n                          element.chosen = true;\r\n                        }\r\n                      });\r\n                    });\r\n\r\n                    pozitivan = true;\r\n                    if (\r\n                      !poz_rezultati.includes(this.rezultati[0].rezultat.trim())\r\n                    ) {\r\n                      poz_rezultati.unshift(this.rezultati[0].rezultat.trim());\r\n                    }\r\n\r\n                    break;\r\n                }\r\n              } else {\r\n                bakterioloski = false;\r\n                this.SelectedBacteries = [];\r\n\r\n                switch (this.rezultati[0].rezultat_m.length) {\r\n                  case 0:\r\n                    this.MicrobiologyScenario = \"MANBNoR\";\r\n                    neg_rezultati = this.rezultati[0].neg_description;\r\n                    poz_rezultati = this.rezultati[0].pos_description;\r\n\r\n                    break;\r\n\r\n                  case 1:\r\n                    if (this.rezultati[0].rezultat_m[0].negativan === true) {\r\n                      this.MicrobiologyScenario = \"MANBNeR\";\r\n\r\n                      negativan = true;\r\n\r\n                      if (\r\n                        !neg_rezultati.includes(\r\n                          this.rezultati[0].rezultat.trim()\r\n                        )\r\n                      ) {\r\n                        neg_rezultati.unshift(\r\n                          this.rezultati[0].rezultat.trim()\r\n                        );\r\n                      }\r\n                    } else {\r\n                      this.MicrobiologyScenario = \"MANBPoR\";\r\n\r\n                      pozitivan = true;\r\n\r\n                      if (\r\n                        !poz_rezultati.includes(\r\n                          this.rezultati[0].rezultat.trim()\r\n                        )\r\n                      ) {\r\n                        poz_rezultati.unshift(\r\n                          this.rezultati[0].rezultat.trim()\r\n                        );\r\n                      }\r\n                    }\r\n\r\n                    break;\r\n\r\n                  default:\r\n                    this.MicrobiologyScenario = \"Unknown\";\r\n\r\n                    break;\r\n                }\r\n              }\r\n\r\n              this.MicrobiologyResult = {\r\n                negative: negativan,\r\n                positive: pozitivan,\r\n                BUG: bakterioloski,\r\n                F_RESULT: this.rezultati[0].rezultat,\r\n                M_RESULT: [...this.rezultati[0].rezultat_m],\r\n                DefaultBacteries: [...bakterijei],\r\n                RemainingBacteries: [...bakterijed],\r\n                NegativeDescriptions: [...neg_rezultati],\r\n                PositiveDescriptions: [...poz_rezultati]\r\n              };\r\n            } else {\r\n              this.MicrobiologyScenario = \"Unknown\";\r\n\r\n              this.MicrobiologyResult = {\r\n                negative: null,\r\n                positive: null,\r\n                BUG: null,\r\n                F_RESULT: \"\",\r\n                M_RESULT: [],\r\n                DefaultBacteries: [],\r\n                RemainingBacteries: [],\r\n                NegativeDescriptions: [],\r\n                PositiveDescriptions: []\r\n              };\r\n            }\r\n\r\n            this.rezultati.forEach(element => {\r\n              if (element.calculated) {\r\n                this.calculated = true;\r\n              }\r\n            });\r\n          }\r\n        })\r\n        .then(() => {\r\n          this.ShowAntibiotics = false;\r\n          this.ShowBacteries = false;\r\n          this.show_table = true;\r\n          this.main = true;\r\n          this.$refs.staticModalMicroBacterySelect.open();\r\n        });\r\n    },\r\n\r\n    OpenMicro($event, test) {\r\n      console.log(\"Result Modal opening...\");\r\n      this.CurrentTab = \"\";\r\n      this.testovi = [];\r\n      this.rezultati = [];\r\n      this.analitiprikaz = [];\r\n      this.calculated = false;\r\n      this.show_table = false;\r\n      this.main = false;\r\n\r\n      var topcije = null;\r\n      topcije = izbornik.rez;\r\n\r\n      http\r\n        .get(\r\n          \"rezultati/showsingle/\" +\r\n            this.$store.state.sid +\r\n            \"?token=\" +\r\n            this.$store.state.token +\r\n            \"&site=\" +\r\n            this.$store.state.site,\r\n          {}\r\n        )\r\n        .then(res => {\r\n          console.log(res.data);\r\n          var test = {};\r\n\r\n          if (res.data.data.length) {\r\n            res.data.data.sort(function(a, b) {\r\n              return a.testovi.labassay.grupa + a.testovi.labassay.grouporder ==\r\n                b.testovi.labassay.grupa + b.testovi.labassay.grouporder\r\n                ? 0\r\n                : +(\r\n                    a.testovi.labassay.grupa + a.testovi.labassay.grouporder >\r\n                    b.testovi.labassay.grupa + b.testovi.labassay.grouporder\r\n                  ) || -1;\r\n            });\r\n\r\n            this.testovi = res.data.data;\r\n            this.analitiprikaz = res.data.multidata;\r\n\r\n            res.data.data.forEach(element => {\r\n              test = {};\r\n              test.realizovan = false;\r\n\r\n              test.ime = element.testovi.labassay.naziv;\r\n              test.test = element.testovi.labassay.sifra;\r\n              test.analit = element.testovi.labassay.analit;\r\n              test.IDE = element.testovi._id;\r\n              test.labassay_id = element.testovi.labassay._id;\r\n\r\n              test.multi_count = 0;\r\n              test.multi_rezultati = [];\r\n\r\n              res.data.multidata.forEach(multi => {\r\n                if (multi.labassay._id === element.testovi.labassay._id) {\r\n                  test.multi_rezultati = multi.rezultat;\r\n                  test.multi_count = multi.rezultat[0].rezultat.length;\r\n                }\r\n              });\r\n\r\n              test.kategorija = element.testovi.labassay.kategorija;\r\n              test.analyser = element.testovi.labassay.analyser;\r\n              test.multiparam = element.testovi.labassay.multiparam;\r\n              test.vise = element.testovi.rezultat.length;\r\n              test.calculated = element.testovi.labassay.calculated;\r\n              test.manual = element.testovi.labassay.manual;\r\n\r\n              test.select_options = eval(\r\n                \"topcije.\" +\r\n                  element.testovi.interp\r\n                    .replace(\"%\", \"_\")\r\n                    .replace(\"/\", \"_\")\r\n                    .replace(\" \", \"_\")\r\n                    .replace(/-/g, \"_\")\r\n                    .replace(\"#\", \"_\")\r\n                    .replace(/^\\d+/, \"\")\r\n              );\r\n\r\n              element.testovi.rezultat.forEach(rezultat => {\r\n                test.sekcija = rezultat.anaassay.sekcija;\r\n                test.rezultat = rezultat.rezultat_f;\r\n                test.result = rezultat;\r\n                test.anaassay = rezultat.anaassay;\r\n\r\n                if (rezultat.rezultat_f != \"\") {\r\n                  test.realizovan = true;\r\n                }\r\n\r\n                test.unit = rezultat.jedinice_f;\r\n\r\n                if (res.data.verificiran || res.data.status === \"ODOBREN\") {\r\n                  test.odobren = \"ODOBREN\";\r\n                  test.edit = false;\r\n                } else {\r\n                  test.odobren != \"ODOBREN\";\r\n                  test.edit = true;\r\n                }\r\n\r\n                test.jedinica = rezultat.jedinice_f;\r\n                test.id = rezultat._id;\r\n                test.multidata = element.testovi.labassay.multi;\r\n                test.rezultat_m = rezultat.rezultat_m;\r\n                test.bakterije = element.testovi.labassay.bakterije;\r\n                test.neg_description = element.testovi.labassay.neg_description;\r\n                test.pos_description = element.testovi.labassay.pos_description;\r\n                test.refSet = element.testovi.grupa;\r\n                test.dRef = element.testovi.refd;\r\n                test.gRef = element.testovi.refg;\r\n                test.interp = element.testovi.interp;\r\n                test.extend = element.testovi.extend;\r\n                test.retest = element.testovi.retest;\r\n                test.interpretacija = element.testovi.labassay.interpretacija;\r\n              });\r\n\r\n              if (\r\n                test.select_options != undefined &&\r\n                !test.select_options.includes(test.rezultat)\r\n              ) {\r\n                test.select_options.unshift(test.rezultat);\r\n              }\r\n              this.rezultati.push(test);\r\n            });\r\n\r\n            if (this.MicrobiologySample && this.AllowGetSample) {\r\n              // On open Modal\r\n              // console.log(\"Microbiology sample check.\");\r\n              var bakterioloski = false;\r\n              var negativan = false;\r\n              var pozitivan = false;\r\n              var bakterijed = [];\r\n              var bakterijei = [];\r\n              var neg_rezultati = [];\r\n              var poz_rezultati = [];\r\n\r\n              this.CurrentTest = this.rezultati[0].analit;\r\n\r\n              neg_rezultati = [...this.rezultati[0].neg_description];\r\n              poz_rezultati = [...this.rezultati[0].pos_description];\r\n\r\n              if (this.rezultati[0].bakterije.length) {\r\n                bakterioloski = true;\r\n\r\n                var counter = 0;\r\n                var ima = false;\r\n\r\n                this.Bacteries.forEach(element => {\r\n                  element.chosen = false;\r\n                  counter = 0;\r\n                  ima = false;\r\n                  this.rezultati[0].bakterije.forEach(bakt => {\r\n                    counter++;\r\n                    if (element._id == bakt) {\r\n                      ima = true;\r\n                    }\r\n\r\n                    if (\r\n                      counter === this.rezultati[0].bakterije.length &&\r\n                      !ima\r\n                    ) {\r\n                      bakterijed.push(element);\r\n                    }\r\n\r\n                    if (counter === this.rezultati[0].bakterije.length && ima) {\r\n                      bakterijei.push(element);\r\n                    }\r\n                  });\r\n                });\r\n\r\n                switch (this.rezultati[0].rezultat_m.length) {\r\n                  case 0:\r\n                    this.MicrobiologyScenario = \"MAIBNoR\";\r\n                    this.SelectedBacteries = [];\r\n                    break;\r\n                  case 1:\r\n                    this.MicrobiologyScenario = \"MAIBNeR\";\r\n                    this.SelectedBacteries = [];\r\n\r\n                    negativan = true;\r\n\r\n                    if (\r\n                      !neg_rezultati.includes(this.rezultati[0].rezultat.trim())\r\n                    ) {\r\n                      neg_rezultati.unshift(this.rezultati[0].rezultat.trim());\r\n                    }\r\n\r\n                    break;\r\n\r\n                  default:\r\n                    this.MicrobiologyScenario = \"MAIBPoR\";\r\n                    this.SelectedBacteries = [];\r\n                    this.BacteryTabs = [];\r\n\r\n                    this.rezultati[0].rezultat_m.forEach(element => {\r\n                      // console.log(element)\r\n                      if (element.bakterija) {\r\n                        this.SelectedBacteries.push(element);\r\n                        this.BacteryTabs.push(element.opis);\r\n                      }\r\n                    });\r\n\r\n                    console.log(\"Izabrane bakterije:\")\r\n                    console.log(this.SelectedBacteries)\r\n\r\n                    let maxVal = this.SelectedBacteries.reduce((max, val) =>\r\n                      max.antibiogram.antibiotici.length >\r\n                      val.antibiogram.antibiotici.length\r\n                        ? max\r\n                        : val\r\n                    );\r\n\r\n                    if (this.CurrentTab == \"\") {\r\n                      // this.CurrentTab = maxVal.opis;\r\n                    }\r\n                    this.CurrentTab = this.SelectedBacteries[0].opis;\r\n\r\n                    bakterijed.forEach(element => {\r\n                      this.SelectedBacteries.forEach(bact => {\r\n                        if (element._id == bact._id) {\r\n                          element.chosen = true;\r\n                        }\r\n                      });\r\n                    });\r\n\r\n                    bakterijei.forEach(element => {\r\n                      this.SelectedBacteries.forEach(bact => {\r\n                        if (element._id == bact._id) {\r\n                          element.chosen = true;\r\n                        }\r\n                      });\r\n                    });\r\n\r\n                    pozitivan = true;\r\n                    if (\r\n                      !poz_rezultati.includes(this.rezultati[0].rezultat.trim())\r\n                    ) {\r\n                      poz_rezultati.unshift(this.rezultati[0].rezultat.trim());\r\n                    }\r\n\r\n                    break;\r\n                }\r\n              } else {\r\n                bakterioloski = false;\r\n                this.SelectedBacteries = [];\r\n\r\n                switch (this.rezultati[0].rezultat_m.length) {\r\n                  case 0:\r\n                    this.MicrobiologyScenario = \"MANBNoR\";\r\n                    neg_rezultati = this.rezultati[0].neg_description;\r\n                    poz_rezultati = this.rezultati[0].pos_description;\r\n\r\n                    break;\r\n\r\n                  case 1:\r\n                    if (this.rezultati[0].rezultat_m[0].negativan === true) {\r\n                      this.MicrobiologyScenario = \"MANBNeR\";\r\n\r\n                      negativan = true;\r\n\r\n                      if (\r\n                        !neg_rezultati.includes(\r\n                          this.rezultati[0].rezultat.trim()\r\n                        )\r\n                      ) {\r\n                        neg_rezultati.unshift(\r\n                          this.rezultati[0].rezultat.trim()\r\n                        );\r\n                      }\r\n                    } else {\r\n                      this.MicrobiologyScenario = \"MANBPoR\";\r\n\r\n                      pozitivan = true;\r\n\r\n                      if (\r\n                        !poz_rezultati.includes(\r\n                          this.rezultati[0].rezultat.trim()\r\n                        )\r\n                      ) {\r\n                        poz_rezultati.unshift(\r\n                          this.rezultati[0].rezultat.trim()\r\n                        );\r\n                      }\r\n                    }\r\n\r\n                    break;\r\n\r\n                  default:\r\n                    this.MicrobiologyScenario = \"Unknown\";\r\n\r\n                    break;\r\n                }\r\n              }\r\n\r\n              this.MicrobiologyResult = {\r\n                negative: negativan,\r\n                positive: pozitivan,\r\n                BUG: bakterioloski,\r\n                F_RESULT: this.rezultati[0].rezultat,\r\n                M_RESULT: [...this.rezultati[0].rezultat_m],\r\n                DefaultBacteries: [...bakterijei],\r\n                RemainingBacteries: [...bakterijed],\r\n                NegativeDescriptions: [...neg_rezultati],\r\n                PositiveDescriptions: [...poz_rezultati]\r\n              };\r\n            } else {\r\n              this.MicrobiologyScenario = \"Unknown\";\r\n\r\n              this.MicrobiologyResult = {\r\n                negative: null,\r\n                positive: null,\r\n                BUG: null,\r\n                F_RESULT: \"\",\r\n                M_RESULT: [],\r\n                DefaultBacteries: [],\r\n                RemainingBacteries: [],\r\n                NegativeDescriptions: [],\r\n                PositiveDescriptions: []\r\n              };\r\n            }\r\n\r\n            this.rezultati.forEach(element => {\r\n              if (element.calculated) {\r\n                this.calculated = true;\r\n              }\r\n            });\r\n          }\r\n        })\r\n        .then(() => {\r\n          this.ShowAntibiotics = false;\r\n          this.ShowBacteries = false;\r\n          this.show_table = true;\r\n          this.main = true;\r\n          this.$refs.staticModalMicroBactery.open();\r\n        });\r\n    },\r\n\r\n    SelectBactery(data) {\r\n      if (!data.chosen) {\r\n        this.SelectedBacteries.push(data);\r\n      } else {\r\n        for (var i = this.SelectedBacteries.length - 1; i >= 0; i--) {\r\n          if (this.SelectedBacteries[i]._id === data._id) {\r\n            this.SelectedBacteries.splice(i, 1);\r\n          }\r\n        }\r\n      }\r\n\r\n      if (this.SelectedBacteries.length > 0) {\r\n        this.ModalPositiveCondition = true;\r\n      } else {\r\n        this.ModalPositiveCondition = false;\r\n      }\r\n    },\r\n\r\n    MicroResultSelect(event) {\r\n      this.uzorci.forEach(element => {\r\n        if (element.sid === this.$store.state.sid) {\r\n          this.sample.status = \"ZAPRIMLJEN\";\r\n        }\r\n      });\r\n      this.$refs.staticModalSelectResult.open();\r\n    },\r\n\r\n    ResetSample(event) {\r\n      this.$refs.staticModalResetSample.open();\r\n    },\r\n\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* \r\n\r\n\r\n\r\n\r\n\r\nEnd of Microbiology Methods |\r\n\r\n\r\n\r\n\r\n\r\n*/\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n\r\n    onCancel() {},\r\n\r\n    Prethodni() {\r\n      this.pagination = false;\r\n\r\n      var check = 0;\r\n      var found = false;\r\n      this.Results.forEach(element => {\r\n        check++;\r\n        if (element.pid == this.Previous.pid) {\r\n          found = true;\r\n          router.push(\r\n            \"/obrada/rezultati/\" +\r\n              element.patient +\r\n              \"/\" +\r\n              element.pid +\r\n              \"?date=\" +\r\n              element.date\r\n          );\r\n        }\r\n      });\r\n\r\n      if (check === this.Results.length) {\r\n        if (found) {\r\n          http\r\n            .get(\r\n              \"/rezultati/pagination\" +\r\n                \"?token=\" +\r\n                this.$store.state.token +\r\n                \"&site=\" +\r\n                this.$store.state.site +\r\n                \"&pid=\" +\r\n                this.Previous.pid.toString() +\r\n                \"&date=\" +\r\n                this.$route.query.date,\r\n              {}\r\n            )\r\n            .then(res => {\r\n              res.data.rezultati = res.data.rezultati.sort(function(a, b) {\r\n                return a.pid.localeCompare(b.pid, undefined, {\r\n                  numeric: true,\r\n                  sensitivity: \"base\"\r\n                });\r\n              });\r\n\r\n              this.data_length =\r\n                res.data.rezultati[res.data.rezultati.length - 1].pid;\r\n              this.data_min = res.data.rezultati[0].pid;\r\n              if (Object.getOwnPropertyNames(res.data).length === 0) {\r\n\r\n                // console.warn(\"No data.\");\r\n\r\n                this.pagination = true;\r\n                this.backward_disabled = true;\r\n              } else {\r\n                this.data_pid = res.data.data.pid;\r\n                this.Results = res.data.rezultati;\r\n\r\n                router.push(\r\n                  \"/obrada/rezultati/\" +\r\n                    res.data.data.patient +\r\n                    \"/\" +\r\n                    res.data.data.pid +\r\n                    \"?date=\" +\r\n                    res.data.data.date\r\n                );\r\n              }\r\n            });\r\n        } else {\r\n          this.Previous.pid = this.Previous.pid - 1;\r\n          if (this.Previous.pid > 0) {\r\n            this.Prethodni();\r\n          } else {\r\n          }\r\n        }\r\n      } else {\r\n      }\r\n    },\r\n\r\n    Sljedeci() {\r\n      this.pagination = false;\r\n\r\n      var check = 0;\r\n      var found = false;\r\n      this.Results.forEach(element => {\r\n        check++;\r\n        if (element.pid == this.Next.pid) {\r\n          found = true;\r\n          router.push(\r\n            \"/obrada/rezultati/\" +\r\n              element.patient +\r\n              \"/\" +\r\n              element.pid +\r\n              \"?date=\" +\r\n              element.date\r\n          );\r\n        }\r\n      });\r\n\r\n      if (check === this.Results.length) {\r\n        if (found) {\r\n          http\r\n            .get(\r\n              \"/rezultati/pagination\" +\r\n                \"?token=\" +\r\n                this.$store.state.token +\r\n                \"&site=\" +\r\n                this.$store.state.site +\r\n                \"&pid=\" +\r\n                this.Next.pid.toString() +\r\n                \"&date=\" +\r\n                this.$route.query.date,\r\n              {}\r\n            )\r\n            .then(res => {\r\n              res.data.rezultati = res.data.rezultati.sort(function(a, b) {\r\n                return a.pid.localeCompare(b.pid, undefined, {\r\n                  numeric: true,\r\n                  sensitivity: \"base\"\r\n                });\r\n              });\r\n\r\n              this.data_length =\r\n                res.data.rezultati[res.data.rezultati.length - 1].pid;\r\n              this.data_min = res.data.rezultati[0].pid;\r\n              if (Object.getOwnPropertyNames(res.data).length === 0) {\r\n\r\n                // console.warn(\"No data.\");\r\n\r\n                this.pagination = true;\r\n                this.forward_disabled = true;\r\n              } else {\r\n                this.data_pid = res.data.data.pid;\r\n                this.Results = res.data.rezultati;\r\n\r\n                router.push(\r\n                  \"/obrada/rezultati/\" +\r\n                    res.data.data.patient +\r\n                    \"/\" +\r\n                    res.data.data.pid +\r\n                    \"?date=\" +\r\n                    res.data.data.date\r\n                );\r\n              }\r\n            });\r\n        } else {\r\n          this.Next.pid = this.Next.pid + 1;\r\n          this.Sljedeci();\r\n        }\r\n      } else {\r\n      }\r\n    },\r\n\r\n    Created() {\r\n\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* \r\n\r\n\r\n\r\n\r\n\r\n| Microbiology Provjera\r\n\r\n\r\n\r\n\r\n\r\n*/\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n\r\n      this.MicrobiologyOrder = false;\r\n\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* \r\n\r\n\r\n\r\n\r\n\r\nEnd of Microbiology Provjera |\r\n\r\n\r\n\r\n\r\n\r\n*/\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      \r\n      http\r\n        .get(\r\n          \"rezultati/odobravanje/samples/\" +\r\n            this.$route.params.patient +\r\n            \"/\" +\r\n            this.$route.params.id +\r\n            \"?token=\" +\r\n            this.$store.state.token +\r\n            \"&site=\" +\r\n            this.$store.state.site +\r\n            \"&date=\" +\r\n            this.$route.query.date,\r\n          {}\r\n        )\r\n        .then(res => {\r\n          this.header =\r\n\r\n            // \"Obrada rezultata za pacijenta: \" +\r\n            res.data.results[0].patient.ime +\r\n            \" \" +\r\n            res.data.results[0].patient.prezime;\r\n          this.lokacija = res.data.lokacija;\r\n          this.klijent = res.data.results[0].customer;\r\n          console.log(this.klijent)\r\n          this.final_pdf = res.data.final_pdf;\r\n\r\n          this.analyser_patient = res.data.results[0].patient;\r\n\r\n          this.timestamp = res.data.results[0].timestamp;\r\n\r\n          this.pacijent = res.data.results[0].patient._id;\r\n          this.ime = res.data.results[0].patient.ime;\r\n          this.prezime = res.data.results[0].patient.prezime;\r\n          this.data_spol = res.data.results[0].patient.spol;\r\n          this.jmbg = res.data.results[0].patient.jmbg;\r\n          this.pid = res.data.results[0].sample.pid;\r\n\r\n          this.email = res.data.results[0].patient.email.trim();\r\n          this.email_tmp = res.data.results[0].patient.email.trim();\r\n\r\n          if (!this.Email(this.email)) {\r\n            this.email = \"\";\r\n            this.email_tmp = \"\";\r\n          }\r\n\r\n          this.count = res.data.results.length;\r\n          this.approved = 0;\r\n          this.verified = 0;\r\n\r\n          this.odobren = true;\r\n          this.verificiran = true;\r\n          this.partials = [];\r\n          this.partials_condition = false;\r\n\r\n          res.data.results.forEach(element => {\r\n            if (element.verificiran) {\r\n              this.verified++;\r\n              this.partials.push(element._id);\r\n            }\r\n            if (\r\n              element.status === \"ODOBREN\" ||\r\n              element.status === \"VERIFICIRAN\"\r\n            ) {\r\n              this.approved++;\r\n            }\r\n            if (\r\n              element.status != \"ODOBREN\" &&\r\n              element.status != \"VERIFICIRAN\"\r\n            ) {\r\n              this.odobren = false;\r\n            }\r\n            if (!element.verificiran) {\r\n              this.verificiran = false;\r\n            }\r\n          });\r\n\r\n          if (this.count > this.verified && this.verified > 1) {\r\n            this.partials_condition = true;\r\n          }\r\n\r\n          this.uzorci = [];\r\n\r\n          this.nalaz.patient = res.data.results[0].patient._id;\r\n          this.nalaz.samples = [];\r\n\r\n          res.data.results.forEach(element => {\r\n            var check = 0;\r\n            var zaprimljen = 0;\r\n            var realizovan = 0;\r\n\r\n            if (element.verificiran) {\r\n              var status_uzorka = \"VERIFICIRAN\";\r\n            } else {\r\n              var status_uzorka = element.status;\r\n            }\r\n\r\n            this.nalaz.samples.push(element._id);\r\n\r\n            element.rezultati.forEach(test => {\r\n              check++;\r\n\r\n              if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\r\n                zaprimljen++;\r\n              }\r\n\r\n              if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\r\n                realizovan++;\r\n              }\r\n\r\n              if (check === element.rezultati.length) {\r\n\r\n                /* -- */\r\n                /* -- */\r\n                /* -- */\r\n                /* -- */\r\n                /* -- */\r\n                /* \r\n\r\n\r\n\r\n\r\n\r\n| Microbiology Provjera\r\n\r\n\r\n\r\n\r\n\r\n*/\r\n                /* -- */\r\n                /* -- */\r\n                /* -- */\r\n                /* -- */\r\n                /* -- */\r\n\r\n                if (element.sample.tip.includes(\"Mikrobiologija\")) {\r\n                  this.MicrobiologyOrder = true;\r\n                }\r\n\r\n                /* -- */\r\n                /* -- */\r\n                /* -- */\r\n                /* -- */\r\n                /* -- */\r\n                /* \r\n\r\n\r\n\r\n\r\n\r\nEnd of Microbiology Provjera |\r\n\r\n\r\n\r\n\r\n\r\n*/\r\n                /* -- */\r\n                /* -- */\r\n                /* -- */\r\n                /* -- */\r\n                /* -- */\r\n\r\n                // console.log(\"Provjera: Created\")\r\n\r\n                if (status_uzorka === \"VERIFICIRAN\") {\r\n                  this.uzorci.push({\r\n                    sid: element.id,\r\n                    status: \"VERIFICIRAN\",\r\n                    pdf_exists: element.pdf_exists,\r\n                    tip: element.sample.tip,\r\n                    _id: element._id,\r\n                    removed: false\r\n                  });\r\n                } else if (status_uzorka === \"ODOBREN\") {\r\n                  this.uzorci.push({\r\n                    sid: element.id,\r\n                    status: \"ODOBREN\",\r\n                    pdf_exists: element.pdf_exists,\r\n                    tip: element.sample.tip,\r\n                    _id: element._id,\r\n                    removed: false\r\n                  });\r\n                } else if (zaprimljen < 1) {\r\n                  this.uzorci.push({\r\n                    sid: element.id,\r\n                    status: \"REALIZOVAN\",\r\n                    pdf_exists: element.pdf_exists,\r\n                    tip: element.sample.tip,\r\n                    _id: element._id,\r\n                    removed: false\r\n                  });\r\n                } else if (realizovan < 1) {\r\n                  var stat = \"ZAPRIMLJEN\";\r\n                  if (element.sample.tip.includes(\"Mikrobiologija\")) {\r\n                    if (element.rezultati[0].rezultat[0].rezultat_m.length) {\r\n                      stat = \"REALIZOVAN\";\r\n                    }\r\n                  }\r\n                  this.uzorci.push({\r\n                    sid: element.id,\r\n                    status: stat,\r\n                    pdf_exists: element.pdf_exists,\r\n                    tip: element.sample.tip,\r\n                    _id: element._id,\r\n                    removed: false\r\n                  });\r\n                } else {\r\n                  this.uzorci.push({\r\n                    sid: element.id,\r\n                    status: \"U OBRADI\",\r\n                    pdf_exists: element.pdf_exists,\r\n                    tip: element.sample.tip,\r\n                    _id: element._id,\r\n                    removed: false\r\n                  });\r\n                }\r\n              }\r\n            });\r\n          });\r\n\r\n          this.uzorci = this.uzorci.sort(function(a, b) {\r\n            return a.sid.localeCompare(b.sid, undefined, {\r\n              numeric: true,\r\n              sensitivity: \"base\"\r\n            });\r\n          });\r\n          this.main = true;\r\n\r\n          this.pagination = true;\r\n\r\n          http\r\n            .get(\r\n              \"/rezultati/pagination\" +\r\n                \"?token=\" +\r\n                this.$store.state.token +\r\n                \"&site=\" +\r\n                this.$store.state.site +\r\n                \"&pid=\" +\r\n                this.$route.params.id +\r\n                \"&date=\" +\r\n                this.$route.query.date,\r\n              {}\r\n            )\r\n            .then(res => {\r\n              res.data.rezultati = res.data.rezultati.sort(function(a, b) {\r\n                return a.pid.localeCompare(b.pid, undefined, {\r\n                  numeric: true,\r\n                  sensitivity: \"base\"\r\n                });\r\n              });\r\n\r\n              this.data_length =\r\n                res.data.rezultati[res.data.rezultati.length - 1].pid;\r\n              this.data_min = res.data.rezultati[0].pid;\r\n              if (Object.getOwnPropertyNames(res.data).length === 0) {\r\n\r\n                // console.warn(\"No data.\");\r\n\r\n                this.pagination = true;\r\n              } else {\r\n                this.data_pid = res.data.data.pid;\r\n                this.Results = res.data.rezultati;\r\n              }\r\n\r\n              /* -- */\r\n              /* -- */\r\n              /* -- */\r\n              /* -- */\r\n              /* -- */\r\n              /* \r\n\r\n\r\n\r\n\r\n\r\n| Microbiology Get Bakterije, Antibiograme i Antibiotike\r\n\r\n\r\n\r\n\r\n\r\n*/\r\n              /* -- */\r\n              /* -- */\r\n              /* -- */\r\n              /* -- */\r\n              /* -- */\r\n\r\n              if (this.MicrobiologyOrder) {\r\n                http\r\n                  .get(\r\n                    \"mikrobiologija/bakterije/get?token=\" +\r\n                      this.$store.state.token +\r\n                      \"&site=\" +\r\n                      this.$store.state.site,\r\n                    {}\r\n                  )\r\n                  .then(res => {\r\n                    this.Bacteries = res.data.bakterije;\r\n                    http\r\n                      .get(\r\n                        \"mikrobiologija/antibiogrami/get?token=\" +\r\n                          this.$store.state.token +\r\n                          \"&site=\" +\r\n                          this.$store.state.site,\r\n                        {}\r\n                      )\r\n                      .then(res => {\r\n                        this.Antibiograms = res.data.antibiogrami;\r\n\r\n                        this.Antibiograms.sort(function(a, b) {\r\n                          return a.naziv.localeCompare(b.naziv, undefined, {\r\n                            numeric: true,\r\n                            sensitivity: \"base\"\r\n                          });\r\n                        });\r\n\r\n                        http\r\n                          .get(\r\n                            \"mikrobiologija/antibiotici/get?token=\" +\r\n                              this.$store.state.token +\r\n                              \"&site=\" +\r\n                              this.$store.state.site,\r\n                            {}\r\n                          )\r\n                          .then(res => {\r\n                            res.data.antibiotici.sort(function(a, b) {\r\n                              return a.rbr_a.localeCompare(b.rbr_a, undefined, {\r\n                                numeric: true,\r\n                                sensitivity: \"base\"\r\n                              });\r\n                            });\r\n\r\n                            this.Antibiotics = [];\r\n\r\n                            res.data.antibiotici.forEach(element => {\r\n                              element.chosen = false;\r\n                              element.disabled = false;\r\n                              this.Antibiotics.push(element);\r\n                            });\r\n                          });\r\n                      });\r\n                  });\r\n              }\r\n\r\n              /* -- */\r\n              /* -- */\r\n              /* -- */\r\n              /* -- */\r\n              /* -- */\r\n              /* \r\n\r\n\r\n\r\n\r\n\r\nEnd of Microbiology Get Bakterije, Antibiograme i Antibiotike |\r\n\r\n\r\n\r\n\r\n\r\n*/\r\n              /* -- */\r\n              /* -- */\r\n              /* -- */\r\n              /* -- */\r\n              /* -- */\r\n\r\n            });\r\n        });\r\n    },\r\n\r\n    Povratak() {\r\n      router.push(\"/obrada/pregled/\" + \"?sekcija=\" + \"SVE\");\r\n    },\r\n\r\n    Nazad() {\r\n      this.email_button = false;\r\n      this.main = true;\r\n      this.pdf = false;\r\n    },\r\n\r\n    Email: function(email) {\r\n      if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email)) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    },\r\n\r\n    GetSingleSample(data) {\r\n      this.testovi = [];\r\n      this.rezultati = [];\r\n      this.analitiprikaz = [];\r\n      this.calculated = false;\r\n\r\n      var topcije = null;\r\n      topcije = izbornik.rez;\r\n\r\n      this.show_table = false;\r\n\r\n      http\r\n        .get(\r\n          \"rezultati/showsingle/\" +\r\n            data.sid +\r\n            \"?token=\" +\r\n            this.$store.state.token +\r\n            \"&site=\" +\r\n            this.$store.state.site,\r\n          {}\r\n        )\r\n        .then(res => {\r\n          var test = {};\r\n\r\n          if (res.data.data.length) {\r\n            res.data.data.sort(function(a, b) {\r\n              return a.testovi.labassay.grupa + a.testovi.labassay.grouporder ==\r\n                b.testovi.labassay.grupa + b.testovi.labassay.grouporder\r\n                ? 0\r\n                : +(\r\n                    a.testovi.labassay.grupa + a.testovi.labassay.grouporder >\r\n                    b.testovi.labassay.grupa + b.testovi.labassay.grouporder\r\n                  ) || -1;\r\n            });\r\n\r\n            this.testovi = res.data.data;\r\n            this.analitiprikaz = res.data.multidata;\r\n\r\n            // console.log(this.analitiprikaz);\r\n\r\n            res.data.data.forEach(element => {\r\n              test = {};\r\n              test.realizovan = false;\r\n\r\n              test.ime = element.testovi.labassay.naziv;\r\n              test.test = element.testovi.labassay.sifra;\r\n              test.analit = element.testovi.labassay.analit;\r\n              test.IDE = element.testovi._id;\r\n              test.labassay_id = element.testovi.labassay._id;\r\n\r\n              test.multi_count = 0;\r\n              test.multi_rezultati = [];\r\n\r\n              res.data.multidata.forEach(multi => {\r\n                if (multi.labassay._id === element.testovi.labassay._id) {\r\n                  test.multi_rezultati = multi.rezultat;\r\n                  test.multi_count = multi.rezultat[0].rezultat.length;\r\n                }\r\n              });\r\n\r\n              test.kategorija = element.testovi.labassay.kategorija;\r\n              test.analyser = element.testovi.labassay.analyser;\r\n              test.multiparam = element.testovi.labassay.multiparam;\r\n              test.vise = element.testovi.rezultat.length;\r\n              test.calculated = element.testovi.labassay.calculated;\r\n              test.manual = element.testovi.labassay.manual;\r\n\r\n              test.select_options = eval(\r\n                \"topcije.\" +\r\n                  element.testovi.interp\r\n                    .replace(\"%\", \"_\")\r\n                    .replace(\"/\", \"_\")\r\n                    .replace(\" \", \"_\")\r\n                    .replace(/-/g, \"_\")\r\n                    .replace(\"#\", \"_\")\r\n                    // .replace(/[0-9]/g, \"_\")\r\n                    .replace(/^\\d+/, \"\")\r\n              );\r\n\r\n              element.testovi.rezultat.forEach(rezultat => {\r\n                test.sekcija = rezultat.anaassay.sekcija;\r\n                test.rezultat = rezultat.rezultat_f;\r\n                test.result = rezultat;\r\n                test.anaassay = rezultat.anaassay;\r\n\r\n                if (rezultat.rezultat_f != \"\") {\r\n                  test.realizovan = true;\r\n                }\r\n\r\n                test.unit = rezultat.jedinice_f;\r\n\r\n                if (res.data.verificiran || res.data.status === \"ODOBREN\") {\r\n                  test.odobren = \"ODOBREN\";\r\n                  test.edit = false;\r\n                } else {\r\n                  test.odobren != \"ODOBREN\";\r\n                  test.edit = true;\r\n                }\r\n\r\n                test.jedinica = rezultat.jedinice_f;\r\n                test.id = rezultat._id;\r\n                test.multidata = element.testovi.labassay.multi;\r\n                test.rezultat_m = rezultat.rezultat_m;\r\n                test.bakterije = element.testovi.labassay.bakterije;\r\n                test.neg_description = element.testovi.labassay.neg_description;\r\n                test.pos_description = element.testovi.labassay.pos_description;\r\n                test.refSet = element.testovi.grupa;\r\n                test.dRef = element.testovi.refd;\r\n                test.gRef = element.testovi.refg;\r\n                test.interp = element.testovi.interp;\r\n                test.extend = element.testovi.extend;\r\n                test.retest = element.testovi.retest;\r\n                test.interpretacija = element.testovi.labassay.interpretacija;\r\n              });\r\n\r\n              if (\r\n                test.select_options != undefined &&\r\n                !test.select_options.includes(test.rezultat)\r\n              ) {\r\n                test.select_options.unshift(test.rezultat);\r\n              }\r\n              this.rezultati.push(test);\r\n            });\r\n\r\n            /* -- */\r\n            /* -- */\r\n            /* -- */\r\n            /* -- */\r\n            /* -- */\r\n            /* \r\n\r\n\r\n\r\n\r\n\r\n| Microbiology Sample Check\r\n\r\n\r\n\r\n\r\n\r\n*/\r\n            /* -- */\r\n            /* -- */\r\n            /* -- */\r\n            /* -- */\r\n            /* -- */\r\n\r\n            // if (this.MicrobiologySample && this.AllowGetSample) {\r\n            if (this.MicrobiologySample) {\r\n\r\n              // On first Click\r\n              // console.warn(\"Microbiology sample check.\");\r\n\r\n              var bakterioloski = false;\r\n              var negativan = false;\r\n              var pozitivan = false;\r\n              var bakterijed = [];\r\n              var bakterijei = [];\r\n              var neg_rezultati = [];\r\n              var poz_rezultati = [];\r\n\r\n              this.CurrentTest = this.rezultati[0].analit;\r\n\r\n              neg_rezultati = [...this.rezultati[0].neg_description];\r\n              poz_rezultati = [...this.rezultati[0].pos_description];\r\n\r\n              if (this.rezultati[0].bakterije.length) {\r\n\r\n                console.log(\"Ima bakterije.\");\r\n\r\n                bakterioloski = true;\r\n\r\n                var counter = 0;\r\n                var ima = false;\r\n\r\n                this.Bacteries.forEach(element => {\r\n                  element.chosen = false;\r\n                  counter = 0;\r\n                  ima = false;\r\n                  this.rezultati[0].bakterije.forEach(bakt => {\r\n                    counter++;\r\n                    if (element._id == bakt) {\r\n                      ima = true;\r\n                    }\r\n\r\n                    if (\r\n                      counter === this.rezultati[0].bakterije.length &&\r\n                      !ima\r\n                    ) {\r\n                      bakterijed.push(element);\r\n                    }\r\n\r\n                    if (counter === this.rezultati[0].bakterije.length && ima) {\r\n                      bakterijei.push(element);\r\n                    }\r\n                  });\r\n                });\r\n\r\n                switch (this.rezultati[0].rezultat_m.length) {\r\n                  case 0:\r\n                    // Ima definisan skup bakterija - Nema Rezultat\r\n                    this.MicrobiologyScenario = \"MAIBNoR\";\r\n                    this.SelectedBacteries = [];\r\n                    break;\r\n                  case 1:\r\n                    // Ima definisan skup bakterija - Negativan Rezultat\r\n                    this.MicrobiologyScenario = \"MAIBNeR\";\r\n                    this.SelectedBacteries = [];\r\n\r\n                    negativan = true;\r\n\r\n                    if (\r\n                      !neg_rezultati.includes(this.rezultati[0].rezultat.trim())\r\n                    ) {\r\n                      neg_rezultati.unshift(this.rezultati[0].rezultat.trim());\r\n                    }\r\n\r\n                    break;\r\n\r\n                  default:\r\n                    // Ima definisan skup bakterija - Pozitivan Rezultat\r\n                    this.MicrobiologyScenario = \"MAIBPoR\";\r\n                    this.SelectedBacteries = [];\r\n                    this.BacteryTabs = [];\r\n\r\n                    this.rezultati[0].rezultat_m.forEach(element => {\r\n                      // console.log(element)\r\n                      if (element.bakterija) {\r\n                        this.SelectedBacteries.push(element);\r\n                        this.BacteryTabs.push(element.opis);\r\n                      }\r\n                    });\r\n\r\n                    console.log(\"Izabrane bakterije:\")\r\n                    console.log(this.SelectedBacteries)\r\n\r\n                    let maxVal = this.SelectedBacteries.reduce((max, val) =>\r\n                      max.antibiogram.antibiotici.length >\r\n                      val.antibiogram.antibiotici.length\r\n                        ? max\r\n                        : val\r\n                    );\r\n\r\n                    if (this.CurrentTab == \"\") {\r\n                      // this.CurrentTab = maxVal.opis;\r\n                    }\r\n                    this.CurrentTab = this.SelectedBacteries[0].opis;\r\n\r\n                    bakterijed.forEach(element => {\r\n                      this.SelectedBacteries.forEach(bact => {\r\n                        if (element._id == bact._id) {\r\n                          element.chosen = true;\r\n                        }\r\n                      });\r\n                    });\r\n\r\n                    bakterijei.forEach(element => {\r\n                      this.SelectedBacteries.forEach(bact => {\r\n                        if (element._id == bact._id) {\r\n                          element.chosen = true;\r\n                        }\r\n                      });\r\n                    });\r\n\r\n                    pozitivan = true;\r\n                    if (\r\n                      !poz_rezultati.includes(this.rezultati[0].rezultat.trim())\r\n                    ) {\r\n                      poz_rezultati.unshift(this.rezultati[0].rezultat.trim());\r\n                    }\r\n\r\n                    break;\r\n                }\r\n              } else {\r\n                bakterioloski = false;\r\n\r\n                console.log(\"Nema bakterije.\");\r\n\r\n                this.SelectedBacteries = [];\r\n\r\n                switch (this.rezultati[0].rezultat_m.length) {\r\n                  case 0:\r\n                    // Nema definisan skup bakterija - Nema Rezultat\r\n                    this.MicrobiologyScenario = \"MANBNoR\";\r\n                    neg_rezultati = this.rezultati[0].neg_description;\r\n                    poz_rezultati = this.rezultati[0].pos_description;\r\n\r\n                    break;\r\n\r\n                  case 1:\r\n                    if (this.rezultati[0].rezultat_m[0].negativan === true) {\r\n                      // Nema definisan skup bakterija - Negativan Rezultat\r\n                      this.MicrobiologyScenario = \"MANBNeR\";\r\n\r\n                      negativan = true;\r\n\r\n                      if (\r\n                        !neg_rezultati.includes(\r\n                          this.rezultati[0].rezultat.trim()\r\n                        )\r\n                      ) {\r\n                        neg_rezultati.unshift(\r\n                          this.rezultati[0].rezultat.trim()\r\n                        );\r\n                      }\r\n                    } else {\r\n                      // Nema definisan skup bakterija - Pozitivan Rezultat\r\n                      this.MicrobiologyScenario = \"MANBPoR\";\r\n\r\n                      pozitivan = true;\r\n\r\n                      if (\r\n                        !poz_rezultati.includes(\r\n                          this.rezultati[0].rezultat.trim()\r\n                        )\r\n                      ) {\r\n                        poz_rezultati.unshift(\r\n                          this.rezultati[0].rezultat.trim()\r\n                        );\r\n                      }\r\n                    }\r\n\r\n                    break;\r\n\r\n                  default:\r\n                    // Error\r\n                    this.MicrobiologyScenario = \"Unknown\";\r\n\r\n                    break;\r\n                }\r\n              }\r\n\r\n              this.MicrobiologyResult = {\r\n                negative: negativan,\r\n                positive: pozitivan,\r\n                BUG: bakterioloski,\r\n                F_RESULT: this.rezultati[0].rezultat,\r\n                M_RESULT: [...this.rezultati[0].rezultat_m],\r\n                DefaultBacteries: [...bakterijei],\r\n                RemainingBacteries: [...bakterijed],\r\n                NegativeDescriptions: [...neg_rezultati],\r\n                PositiveDescriptions: [...poz_rezultati]\r\n              };\r\n              // console.log(this.MicrobiologyResult)\r\n            } else {\r\n\r\n              // console.log(\"Uzorak nije mikrobiološki || Sample closed\");\r\n\r\n              this.MicrobiologyScenario = \"Unknown\";\r\n\r\n              this.MicrobiologyResult = {\r\n                negative: null,\r\n                positive: null,\r\n                BUG: null,\r\n                F_RESULT: \"\",\r\n                M_RESULT: [],\r\n                DefaultBacteries: [],\r\n                RemainingBacteries: [],\r\n                NegativeDescriptions: [],\r\n                PositiveDescriptions: []\r\n              };\r\n            }\r\n\r\n            /* -- */\r\n            /* -- */\r\n            /* -- */\r\n            /* -- */\r\n            /* -- */\r\n            /* \r\n\r\n\r\n\r\n\r\n\r\nEnd of Microbiology Sample Check |\r\n\r\n\r\n\r\n\r\n\r\n*/\r\n            /* -- */\r\n            /* -- */\r\n            /* -- */\r\n            /* -- */\r\n            /* -- */\r\n\r\n            this.rezultati.forEach(element => {\r\n              if (element.calculated) {\r\n                this.calculated = true;\r\n              }\r\n            });\r\n\r\n            this.sample = data;\r\n            this.show_table = true;\r\n          }\r\n        })\r\n        .then(() => {\r\n          bus.$emit(\"SetClientHeight\", data.sid);\r\n        });\r\n    },\r\n\r\n    /* GetAnalysers() {\r\n      http\r\n        .get(\r\n          \"postavke/aparat/listall?token=\" +\r\n            this.$store.state.token +\r\n            \"&site=\" +\r\n            this.$store.state.site,\r\n          {}\r\n        )\r\n        .then(res => {\r\n          if (res.data.success === false) {\r\n          } else {\r\n            res.data.aparati.forEach(element => {\r\n              if (element.tip === \"IMUNOHEMIJSKI\") {\r\n                element.selected = false;\r\n                this.analysers.push(element);\r\n              }\r\n            });\r\n          }\r\n        });\r\n    }, */\r\n\r\n    SelectAnalyser(test) {\r\n      http\r\n        .get(\r\n          \"rezultati/odobravanje/analysers\" +\r\n            \"?token=\" +\r\n            this.$store.state.token +\r\n            \"&site=\" +\r\n            this.$store.state.site +\r\n            \"&test=\" +\r\n            test.labassay_id,\r\n          {}\r\n        )\r\n        .then(res => {\r\n          this.analysers = [];\r\n\r\n          res.data.anaassays.forEach(element => {\r\n            element.aparat.site = element.site;\r\n            this.analysers.push(element.aparat);\r\n          });\r\n\r\n          this.analysers.forEach(analyser => {\r\n            analyser.selected = false;\r\n          });\r\n\r\n          this.analiza = test;\r\n\r\n          this.rezultati.forEach(element => {\r\n            this.analysers.forEach(analyser => {\r\n              if (\r\n                element.ime === this.analiza.ime &&\r\n                element.anaassay.aparat === analyser._id\r\n              ) {\r\n                analyser.selected = true;\r\n                this.analyser_selected = analyser;\r\n              }\r\n            });\r\n          });\r\n          this.$refs.staticModalAparati.open();\r\n        });\r\n    },\r\n\r\n    AnalyserSelected(analyser) {\r\n      this.analyser = analyser;\r\n\r\n      if (this.analyser_selected._id === analyser._id) {\r\n        this.$refs.staticModalAparati.close();\r\n\r\n        // console.warn(\"No change required.\");\r\n\r\n      } else {\r\n        http\r\n          .post(\"rezultati/odobravanje/references\", {\r\n            token: this.$store.state.token,\r\n            site: this.$store.state.site,\r\n            id: this.sample.sid,\r\n            pacijent: this.analyser_patient,\r\n            analiza: this.analiza,\r\n            analyser: this.analyser\r\n          })\r\n          .then(res => {\r\n            if (res.data.success) {\r\n              var data = {};\r\n\r\n              this.uzorci.forEach(element => {\r\n                if (element.sid === this.$store.state.sid) {\r\n                  data = element;\r\n                }\r\n              });\r\n\r\n              this.testovi = [];\r\n              this.rezultati = [];\r\n              this.analitiprikaz = [];\r\n              this.calculated = false;\r\n\r\n              var topcije = null;\r\n              topcije = izbornik.rez;\r\n\r\n              this.show_table = false;\r\n\r\n              http\r\n                .get(\r\n                  \"rezultati/showsingle/\" +\r\n                    data.sid +\r\n                    \"?token=\" +\r\n                    this.$store.state.token +\r\n                    \"&site=\" +\r\n                    this.$store.state.site,\r\n                  {}\r\n                )\r\n                .then(res => {\r\n                  var test = {};\r\n\r\n                  if (res.data.data.length) {\r\n                    res.data.data.sort(function(a, b) {\r\n                      return a.testovi.labassay.grupa +\r\n                        a.testovi.labassay.grouporder ==\r\n                        b.testovi.labassay.grupa + b.testovi.labassay.grouporder\r\n                        ? 0\r\n                        : +(\r\n                            a.testovi.labassay.grupa +\r\n                              a.testovi.labassay.grouporder >\r\n                            b.testovi.labassay.grupa +\r\n                              b.testovi.labassay.grouporder\r\n                          ) || -1;\r\n                    });\r\n\r\n                    this.testovi = res.data.data;\r\n                    this.analitiprikaz = res.data.multidata;\r\n\r\n                    res.data.data.forEach(element => {\r\n                      test = {};\r\n                      test.realizovan = false;\r\n\r\n                      test.ime = element.testovi.labassay.naziv;\r\n                      test.test = element.testovi.labassay.sifra;\r\n                      test.analit = element.testovi.labassay.analit;\r\n                      test.IDE = element.testovi._id;\r\n                      test.labassay_id = element.testovi.labassay._id;\r\n\r\n                      test.multi_count = 0;\r\n                      test.multi_rezultati = [];\r\n\r\n                      res.data.multidata.forEach(multi => {\r\n                        if (\r\n                          multi.labassay._id === element.testovi.labassay._id\r\n                        ) {\r\n                          test.multi_rezultati = multi.rezultat;\r\n                          test.multi_count = multi.rezultat[0].rezultat.length;\r\n                        }\r\n                      });\r\n\r\n                      test.kategorija = element.testovi.labassay.kategorija;\r\n                      test.analyser = element.testovi.labassay.analyser;\r\n                      test.multiparam = element.testovi.labassay.multiparam;\r\n                      test.vise = element.testovi.rezultat.length;\r\n                      test.calculated = element.testovi.labassay.calculated;\r\n                      test.manual = element.testovi.labassay.manual;\r\n\r\n                      test.select_options = eval(\r\n                        \"topcije.\" +\r\n                          element.testovi.interp\r\n                            .replace(\"%\", \"_\")\r\n                            .replace(\"/\", \"_\")\r\n                            .replace(\" \", \"_\")\r\n                            .replace(/-/g, \"_\")\r\n                            .replace(\"#\", \"_\")\r\n                            // .replace(/[0-9]/g, \"_\")\r\n                            .replace(/^\\d+/, \"\")\r\n                      );\r\n\r\n                      element.testovi.rezultat.forEach(rezultat => {\r\n                        test.sekcija = rezultat.anaassay.sekcija;\r\n                        test.rezultat = rezultat.rezultat_f;\r\n                        test.result = rezultat;\r\n                        test.anaassay = rezultat.anaassay;\r\n\r\n                        if (rezultat.rezultat_f != \"\") {\r\n                          test.realizovan = true;\r\n                        }\r\n\r\n                        test.unit = rezultat.jedinice_f;\r\n\r\n                        if (\r\n                          res.data.verificiran ||\r\n                          res.data.status === \"ODOBREN\"\r\n                        ) {\r\n                          test.odobren = \"ODOBREN\";\r\n                          test.edit = false;\r\n                        } else {\r\n                          test.odobren != \"ODOBREN\";\r\n                          test.edit = true;\r\n                        }\r\n\r\n                        test.jedinica = rezultat.jedinice_f;\r\n                        test.id = rezultat._id;\r\n                        test.multidata = element.testovi.labassay.multi;\r\n                        test.rezultat_m = rezultat.rezultat_m;\r\n                        test.bakterije = element.testovi.labassay.bakterije;\r\n                        test.neg_description =\r\n                          element.testovi.labassay.neg_description;\r\n                        test.pos_description =\r\n                          element.testovi.labassay.pos_description;\r\n                        test.refSet = element.testovi.grupa;\r\n                        test.dRef = element.testovi.refd;\r\n                        test.gRef = element.testovi.refg;\r\n                        test.interp = element.testovi.interp;\r\n                        test.extend = element.testovi.extend;\r\n                        test.retest = element.testovi.retest;\r\n                        test.interpretacija =\r\n                          element.testovi.labassay.interpretacija;\r\n                      });\r\n\r\n                      if (\r\n                        test.select_options != undefined &&\r\n                        !test.select_options.includes(test.rezultat)\r\n                      ) {\r\n                        test.select_options.unshift(test.rezultat);\r\n                      }\r\n                      this.rezultati.push(test);\r\n                    });\r\n\r\n                    this.rezultati.forEach(element => {\r\n                      if (element.calculated) {\r\n                        this.calculated = true;\r\n                      }\r\n                    });\r\n\r\n                    this.sample = data;\r\n                    this.show_table = true;\r\n                  }\r\n                });\r\n              this.$refs.staticModalAparati.close();\r\n            } else {\r\n\r\n              // console.warn(res.data.message);\r\n              // this.$refs.staticModalAparati.close();\r\n\r\n            }\r\n          });\r\n      }\r\n    },\r\n\r\n    Reference(event, test) {\r\n      this.reference = {\r\n        sample: this.$store.state.sid,\r\n        labassay: test.labassay_id,\r\n        naziv: test.ime,\r\n        opis: test.analit,\r\n        dref: test.dRef,\r\n        gref: test.gRef,\r\n        interp: test.interp,\r\n        extend: test.extend,\r\n        jedinica: test.jedinica\r\n      };\r\n      this.$refs.staticModalReference.open();\r\n    },\r\n\r\n    BarcodePrint(data) {\r\n      var link = barcode + data.sid + \".png\";\r\n\r\n      http\r\n        .get(\r\n          \"uzorci/barcode/\" +\r\n            data.sid +\r\n            \"?token=\" +\r\n            this.$store.state.token +\r\n            \"&site=\" +\r\n            this.$store.state.site,\r\n          {}\r\n        )\r\n        .then(res => {\r\n          printEPL(\r\n            res.data.name + \" \" + res.data.surname,\r\n            this.sid,\r\n            res.data.pacijentRBr,\r\n            res.data.godiste,\r\n            res.data.datum,\r\n            link,\r\n            res.data.code,\r\n            this.$store.state.site,\r\n            undefined,\r\n            undefined\r\n          );\r\n        });\r\n    },\r\n\r\n    SaveResults(rezultati, from) {\r\n\r\n      // Vue Loading Overlay Component\r\n      this.isLoading = true;\r\n\r\n      if (!this.MicrobiologySample) {\r\n        rezultati.forEach(element => {\r\n          element.rezultat = element.rezultat.replace(/,/g, \".\");\r\n        });\r\n\r\n        rezultati[0].rezultat_m = [];\r\n      }\r\n\r\n      http\r\n        .post(\"/rezultati/odobravanje/sacuvaj/\" + this.$store.state.sid, {\r\n          email: this.$store.state.userId,\r\n          token: this.$store.state.token,\r\n          site: this.$store.state.site,\r\n          rezultati: rezultati\r\n        })\r\n        .then(res => {\r\n          http\r\n            .get(\r\n              \"rezultati/odobravanje/samples/\" +\r\n                this.$route.params.patient +\r\n                \"/\" +\r\n                this.$route.params.id +\r\n                \"?token=\" +\r\n                this.$store.state.token +\r\n                \"&site=\" +\r\n                this.$store.state.site +\r\n                \"&date=\" +\r\n                this.$route.query.date,\r\n              {}\r\n            )\r\n            .then(res => {\r\n              this.uzorci = [];\r\n\r\n              res.data.results.forEach(element => {\r\n                var check = 0;\r\n                var zaprimljen = 0;\r\n                var realizovan = 0;\r\n\r\n                if (element.verificiran) {\r\n                  var status_uzorka = \"VERIFICIRAN\";\r\n                } else {\r\n                  var status_uzorka = element.status;\r\n                }\r\n\r\n                element.rezultati.forEach(test => {\r\n                  check++;\r\n\r\n                  if (\r\n                    test.rezultat[test.rezultat.length - 1].rezultat_f === \"\"\r\n                  ) {\r\n                    zaprimljen++;\r\n                  }\r\n\r\n                  if (\r\n                    test.rezultat[test.rezultat.length - 1].rezultat_f != \"\"\r\n                  ) {\r\n                    realizovan++;\r\n                  }\r\n\r\n                  if (check === element.rezultati.length) {\r\n\r\n                    // console.log(\"Provjera: Save (single)\")\r\n\r\n                    if (status_uzorka === \"VERIFICIRAN\") {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"VERIFICIRAN\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false\r\n                      });\r\n                    } else if (status_uzorka === \"ODOBREN\") {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"ODOBREN\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false\r\n                      });\r\n                    } else if (zaprimljen < 1) {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"REALIZOVAN\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false\r\n                      });\r\n                    } else if (realizovan < 1) {\r\n                      var stat = \"ZAPRIMLJEN\";\r\n                      if (element.sample.tip.includes(\"Mikrobiologija\")) {\r\n                        if (\r\n                          element.rezultati[0].rezultat[0].rezultat_m.length\r\n                        ) {\r\n                          stat = \"REALIZOVAN\";\r\n                        }\r\n                      }\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: stat,\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false\r\n                      });\r\n                    } else {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"U OBRADI\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false\r\n                      });\r\n                    }\r\n                  }\r\n                });\r\n              });\r\n\r\n              this.uzorci = this.uzorci.sort(function(a, b) {\r\n                return a.sid.localeCompare(b.sid, undefined, {\r\n                  numeric: true,\r\n                  sensitivity: \"base\"\r\n                });\r\n              });\r\n\r\n              // Vue Loading Overlay Component\r\n              this.isLoading = false;\r\n            });\r\n        });\r\n    },\r\n\r\n    DeletedSample(data) {\r\n      this.uzorci.forEach(element => {\r\n        if (element.sid === data) {\r\n          element.removed = false;\r\n        }\r\n      });\r\n\r\n      for (var i = 0; i < this.uzorci.length; i++) {\r\n        if (this.uzorci[i].sid === data) {\r\n          this.uzorci.splice(i, 1);\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (this.uzorci.length) {\r\n        this.show = false;\r\n        this.main = false;\r\n        http\r\n          .get(\r\n            \"rezultati/odobravanje/samples/\" +\r\n              this.$route.params.patient +\r\n              \"/\" +\r\n              this.$route.params.id +\r\n              \"?token=\" +\r\n              this.$store.state.token +\r\n              \"&site=\" +\r\n              this.$store.state.site +\r\n              \"&date=\" +\r\n              this.$route.query.date,\r\n            {}\r\n          )\r\n          .then(res => {\r\n            this.count = res.data.results.length;\r\n            this.approved = 0;\r\n\r\n            this.odobren = true;\r\n            this.verificiran = true;\r\n\r\n            this.resdata = {};\r\n\r\n            this.resdata = res.data.results;\r\n\r\n            res.data.results.forEach(element => {\r\n              if (\r\n                element.status === \"ODOBREN\" ||\r\n                element.status === \"VERIFICIRAN\"\r\n              ) {\r\n                this.approved++;\r\n              }\r\n              if (\r\n                element.status != \"ODOBREN\" &&\r\n                element.status != \"VERIFICIRAN\"\r\n              ) {\r\n                this.odobren = false;\r\n              }\r\n              if (!element.verificiran) {\r\n                this.verificiran = false;\r\n              }\r\n            });\r\n\r\n            if (this.count == this.approved) {\r\n              var report = [];\r\n\r\n              this.uzorci.forEach(element => {\r\n                report.push(element._id);\r\n              });\r\n\r\n              http\r\n                .post(\"nalazi/create\", {\r\n                  token: this.$store.state.token,\r\n                  site: this.$store.state.site,\r\n                  type: \"multi\",\r\n                  uzorci: this.uzorci,\r\n                  samples: report,\r\n                  timestamp: this.timestamp,\r\n                  napomena: \"\",\r\n                  status: false,\r\n                  idNalaza: \"\",\r\n                  location: \"/\",\r\n                  klijent: this.klijent,\r\n                  naziv: this.timestamp\r\n                })\r\n                .then(res => {\r\n                  if (res.data.success) {\r\n                    http\r\n                      .post(\"nalazi/memo\", {\r\n                        token: this.$store.state.token,\r\n                        site: this.$store.state.site,\r\n                        timestamp: this.timestamp,\r\n                        height: res.data.memo,\r\n                        location: \"/\",\r\n                        naziv: this.timestamp\r\n                      })\r\n                      .then(res => {\r\n                        this.final_pdf = true;\r\n\r\n                        this.uzorci = [];\r\n\r\n                        this.resdata.forEach(element => {\r\n                          var check = 0;\r\n                          var zaprimljen = 0;\r\n                          var realizovan = 0;\r\n\r\n                          if (element.verificiran) {\r\n                            var status_uzorka = \"VERIFICIRAN\";\r\n                          } else {\r\n                            var status_uzorka = element.status;\r\n                          }\r\n\r\n                          element.rezultati.forEach(test => {\r\n                            check++;\r\n\r\n                            if (\r\n                              test.rezultat[test.rezultat.length - 1]\r\n                                .rezultat_f === \"\"\r\n                            ) {\r\n                              zaprimljen++;\r\n                            }\r\n\r\n                            if (\r\n                              test.rezultat[test.rezultat.length - 1]\r\n                                .rezultat_f != \"\"\r\n                            ) {\r\n                              realizovan++;\r\n                            }\r\n\r\n                            if (check === element.rezultati.length) {\r\n\r\n                              // console.log(\"Provjera: Sample Delete\")\r\n\r\n                              if (status_uzorka === \"VERIFICIRAN\") {\r\n                                this.uzorci.push({\r\n                                  sid: element.id,\r\n                                  status: \"VERIFICIRAN\",\r\n                                  pdf_exists: element.pdf_exists,\r\n                                  tip: element.sample.tip,\r\n                                  _id: element._id,\r\n                                  removed: false\r\n                                });\r\n                              } else if (status_uzorka === \"ODOBREN\") {\r\n                                this.uzorci.push({\r\n                                  sid: element.id,\r\n                                  status: \"ODOBREN\",\r\n                                  pdf_exists: element.pdf_exists,\r\n                                  tip: element.sample.tip,\r\n                                  _id: element._id,\r\n                                  removed: false\r\n                                });\r\n                              } else if (zaprimljen < 1) {\r\n                                this.uzorci.push({\r\n                                  sid: element.id,\r\n                                  status: \"REALIZOVAN\",\r\n                                  pdf_exists: element.pdf_exists,\r\n                                  tip: element.sample.tip,\r\n                                  _id: element._id,\r\n                                  removed: false\r\n                                });\r\n                              } else if (realizovan < 1) {\r\n                                var stat = \"ZAPRIMLJEN\";\r\n                                if (\r\n                                  element.sample.tip.includes(\"Mikrobiologija\")\r\n                                ) {\r\n                                  if (\r\n                                    element.rezultati[0].rezultat[0].rezultat_m\r\n                                      .length\r\n                                  ) {\r\n                                    stat = \"REALIZOVAN\";\r\n                                  }\r\n                                }\r\n                                this.uzorci.push({\r\n                                  sid: element.id,\r\n                                  status: stat,\r\n                                  pdf_exists: element.pdf_exists,\r\n                                  tip: element.sample.tip,\r\n                                  _id: element._id,\r\n                                  removed: false\r\n                                });\r\n                              } else {\r\n                                this.uzorci.push({\r\n                                  sid: element.id,\r\n                                  status: \"U OBRADI\",\r\n                                  pdf_exists: element.pdf_exists,\r\n                                  tip: element.sample.tip,\r\n                                  _id: element._id,\r\n                                  removed: false\r\n                                });\r\n                              }\r\n                            }\r\n                          });\r\n                        });\r\n\r\n                        this.uzorci = this.uzorci.sort(function(a, b) {\r\n                          return a.sid.localeCompare(b.sid, undefined, {\r\n                            numeric: true,\r\n                            sensitivity: \"base\"\r\n                          });\r\n                        });\r\n\r\n                        this.main = true;\r\n                        this.show = true;\r\n                      });\r\n                  }\r\n                });\r\n            } else {\r\n              this.uzorci = [];\r\n\r\n              res.data.results.forEach(element => {\r\n                var check = 0;\r\n                var zaprimljen = 0;\r\n                var realizovan = 0;\r\n\r\n                if (element.verificiran) {\r\n                  var status_uzorka = \"VERIFICIRAN\";\r\n                } else {\r\n                  var status_uzorka = element.status;\r\n                }\r\n\r\n                element.rezultati.forEach(test => {\r\n                  check++;\r\n\r\n                  if (\r\n                    test.rezultat[test.rezultat.length - 1].rezultat_f === \"\"\r\n                  ) {\r\n                    zaprimljen++;\r\n                  }\r\n\r\n                  if (\r\n                    test.rezultat[test.rezultat.length - 1].rezultat_f != \"\"\r\n                  ) {\r\n                    realizovan++;\r\n                  }\r\n\r\n                  if (check === element.rezultati.length) {\r\n\r\n                    // console.log(\"Provjera: Sample Delete\")\r\n\r\n                    if (status_uzorka === \"VERIFICIRAN\") {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"VERIFICIRAN\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false\r\n                      });\r\n                    } else if (status_uzorka === \"ODOBREN\") {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"ODOBREN\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false\r\n                      });\r\n                    } else if (zaprimljen < 1) {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"REALIZOVAN\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false\r\n                      });\r\n                    } else if (realizovan < 1) {\r\n                      var stat = \"ZAPRIMLJEN\";\r\n                      if (element.sample.tip.includes(\"Mikrobiologija\")) {\r\n                        if (\r\n                          element.rezultati[0].rezultat[0].rezultat_m.length\r\n                        ) {\r\n                          stat = \"REALIZOVAN\";\r\n                        }\r\n                      }\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: stat,\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false\r\n                      });\r\n                    } else {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"U OBRADI\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false\r\n                      });\r\n                    }\r\n                  }\r\n                });\r\n              });\r\n\r\n              this.uzorci = this.uzorci.sort(function(a, b) {\r\n                return a.sid.localeCompare(b.sid, undefined, {\r\n                  numeric: true,\r\n                  sensitivity: \"base\"\r\n                });\r\n              });\r\n\r\n              this.main = true;\r\n              this.show = true;\r\n            }\r\n          });\r\n      } else {\r\n        router.push(\"/obrada/pregled\");\r\n      }\r\n    },\r\n\r\n    EditSample(data) {\r\n      document.getElementById(data).click();\r\n\r\n      http\r\n        .get(\r\n          \"rezultati/odobravanje/samples/\" +\r\n            this.$route.params.patient +\r\n            \"/\" +\r\n            this.$route.params.id +\r\n            \"?token=\" +\r\n            this.$store.state.token +\r\n            \"&site=\" +\r\n            this.$store.state.site +\r\n            \"&date=\" +\r\n            this.$route.query.date,\r\n          {}\r\n        )\r\n        .then(res => {\r\n          this.uzorci = [];\r\n\r\n          res.data.results.forEach(element => {\r\n            var check = 0;\r\n            var zaprimljen = 0;\r\n            var realizovan = 0;\r\n\r\n            if (element.verificiran) {\r\n              var status_uzorka = \"VERIFICIRAN\";\r\n            } else {\r\n              var status_uzorka = element.status;\r\n            }\r\n\r\n            element.rezultati.forEach(test => {\r\n              check++;\r\n\r\n              if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\r\n                zaprimljen++;\r\n              }\r\n\r\n              if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\r\n                realizovan++;\r\n              }\r\n\r\n              if (check === element.rezultati.length) {\r\n\r\n                // console.log(\"Provjera: Edit\")\r\n\r\n                if (status_uzorka === \"VERIFICIRAN\") {\r\n                  this.uzorci.push({\r\n                    sid: element.id,\r\n                    status: \"VERIFICIRAN\",\r\n                    pdf_exists: element.pdf_exists,\r\n                    tip: element.sample.tip,\r\n                    _id: element._id,\r\n                    removed: false\r\n                  });\r\n                } else if (status_uzorka === \"ODOBREN\") {\r\n                  this.uzorci.push({\r\n                    sid: element.id,\r\n                    status: \"ODOBREN\",\r\n                    pdf_exists: element.pdf_exists,\r\n                    tip: element.sample.tip,\r\n                    _id: element._id,\r\n                    removed: false\r\n                  });\r\n                } else if (zaprimljen < 1) {\r\n                  this.uzorci.push({\r\n                    sid: element.id,\r\n                    status: \"REALIZOVAN\",\r\n                    pdf_exists: element.pdf_exists,\r\n                    tip: element.sample.tip,\r\n                    _id: element._id,\r\n                    removed: false\r\n                  });\r\n                } else if (realizovan < 1) {\r\n                  var stat = \"ZAPRIMLJEN\";\r\n                  if (element.sample.tip.includes(\"Mikrobiologija\")) {\r\n                    if (element.rezultati[0].rezultat[0].rezultat_m.length) {\r\n                      stat = \"REALIZOVAN\";\r\n                    }\r\n                  }\r\n                  this.uzorci.push({\r\n                    sid: element.id,\r\n                    status: stat,\r\n                    pdf_exists: element.pdf_exists,\r\n                    tip: element.sample.tip,\r\n                    _id: element._id,\r\n                    removed: false\r\n                  });\r\n                } else {\r\n                  this.uzorci.push({\r\n                    sid: element.id,\r\n                    status: \"U OBRADI\",\r\n                    pdf_exists: element.pdf_exists,\r\n                    tip: element.sample.tip,\r\n                    _id: element._id,\r\n                    removed: false\r\n                  });\r\n                }\r\n              }\r\n            });\r\n          });\r\n\r\n          this.uzorci = this.uzorci.sort(function(a, b) {\r\n            return a.sid.localeCompare(b.sid, undefined, {\r\n              numeric: true,\r\n              sensitivity: \"base\"\r\n            });\r\n          });\r\n        })\r\n        .then(() => {\r\n          setTimeout(() => {\r\n            document.getElementById(this.$store.state.sid).click();\r\n          }, 500);\r\n        });\r\n    },\r\n\r\n    RetestEnable: function(event) {\r\n\r\n      this.rezultati.forEach(element => {\r\n        if (element.test === event.target.id) {\r\n          element.retest = true;\r\n        }\r\n      });\r\n\r\n      this.save_retest = true\r\n\r\n\r\n      /* http\r\n        .post(\"rezultati/odobravanje/retest/da/\", {\r\n          id_u: this.$store.state.sid,\r\n          id_t: event.target.id,\r\n          site: this.$store.state.site,\r\n          token: this.$store.state.token\r\n        })\r\n        .then(res => {\r\n          if (res.data.success) {\r\n            this.rezultati.forEach(element => {\r\n              if (element.test === event.target.id) {\r\n                element.retest = true;\r\n              }\r\n            });\r\n          }\r\n        }); */\r\n    },\r\n\r\n    RetestDisable: function(event) {\r\n\r\n      this.rezultati.forEach(element => {\r\n        if (element.test === event.target.id) {\r\n          element.retest = false;\r\n        }\r\n      });\r\n\r\n      this.save_retest = true\r\n\r\n      /* http\r\n        .post(\"rezultati/odobravanje/retest/ne/\", {\r\n          id_u: this.$store.state.sid,\r\n          id_t: event.target.id,\r\n          site: this.$store.state.site,\r\n          token: this.$store.state.token\r\n        })\r\n        .then(res => {\r\n          if (res.data.success) {\r\n            this.rezultati.forEach(element => {\r\n              if (element.test === event.target.id) {\r\n                element.retest = false;\r\n              }\r\n            });\r\n          }\r\n        }); */\r\n    },\r\n\r\n    MultiGet: function(event, naziv, ana, rezultat, odobren) {\r\n\r\n      // Sediment urina\r\n      // console.log(event.target.id)\r\n\r\n      this.naslov = \"Rezultati testa: \" + naziv + \" (\" + ana + \")\";\r\n      this.analiti = [];\r\n      var single = {};\r\n      var i = 0;\r\n      var kontrola = false;\r\n\r\n      this.uzorci.forEach(element => {\r\n        if (element.sid === this.$store.state.sid) {\r\n          this.check = element.status;\r\n        }\r\n      });\r\n\r\n      this.analitiprikaz.forEach(element => {\r\n        i++;\r\n        single = {};\r\n\r\n        var opcije = null;\r\n        opcije = izbornik.data;\r\n\r\n        if (event.target.id === element.labassay._id) {\r\n          element.rezultat.forEach(analit => {\r\n            single.kod = analit.rezultat[0].module_sn;\r\n\r\n            element.labassay.multiparam.forEach(mparam => {\r\n              if (mparam.kod === single.kod) {\r\n                if (mparam.izbornik.length) {\r\n                  // console.log(mparam.kod);\r\n                  // console.log(mparam.izbornik);\r\n                  single.select_options = mparam.izbornik;\r\n                } else {\r\n                  single.select_options = undefined;\r\n                }\r\n              }\r\n            });\r\n\r\n            /* single.select_options = eval(\r\n              \"opcije.\" +\r\n                analit.rezultat[0].module_sn\r\n                  .replace(\"%\", \"_\")\r\n                  .replace(\"/\", \"_\")\r\n                  .replace(\" \", \"_\")\r\n                  .replace(/-/g, \"_\")\r\n                  .replace(\"#\", \"_\")\r\n                  // .replace(/[0-9]/g, \"_\")\r\n                  .replace(/^\\d+/, \"\")\r\n            ); */\r\n\r\n            var tmpOptionsAna = [];\r\n            if (single.select_options != undefined) {\r\n              tmpOptionsAna = single.select_options.slice();\r\n              single.select_options = tmpOptionsAna.slice();\r\n            }\r\n\r\n            if (\r\n              analit.rezultat[0].rezultat_f.trim() != \"\" &&\r\n              single.select_options != undefined &&\r\n              !single.select_options.includes(analit.rezultat[0].rezultat_f)\r\n            ) {\r\n\r\n              // Sediment urina (Epitelne ćelije, Kristali i Soli)\r\n              if (\r\n                single.kod != \"s03\" &&\r\n                single.kod != \"s04\" &&\r\n                single.kod != \"s08\" &&\r\n                single.kod != \"s09\"\r\n              ) {\r\n                single.select_options.unshift(analit.rezultat[0].rezultat_f);\r\n              }\r\n            }\r\n\r\n            single.refd = analit.refd;\r\n            single.labID = event.target.id;\r\n            single.refg = analit.refg;\r\n            single.interp = analit.interp;\r\n            single.interpretacija = null;\r\n            single.nazivTesta = naziv;\r\n            single.grupa = analit.grupa;\r\n            single.naziv = analit.rezultat[0].sn;\r\n            single.opis = analit.rezultat[0].dilucija;\r\n            single.jedinica = analit.rezultat[0].jedinice_f;\r\n            single.rezultat = analit.rezultat[0].rezultat_f;\r\n            single.flag = analit.rezultat[0].rezultat_i;\r\n            single.manual = element.labassay.manual;\r\n            single.odobren = odobren;\r\n\r\n            if (\r\n              single.select_options != undefined &&\r\n              (single.kod === \"s03\" ||\r\n                single.kod === \"s04\" ||\r\n                single.kod === \"s08\" ||\r\n                single.kod === \"s09\")\r\n            ) {\r\n\r\n              // Sediment urina (Epitelne ćelije, Kristali i Soli)\r\n              single.rezultat_multiple = single.rezultat.split(\";\");\r\n              for (var i = single.rezultat_multiple.length - 1; i >= 0; i--) {\r\n                single.rezultat_multiple[i] = single.rezultat_multiple[\r\n                  i\r\n                ].trim();\r\n                if (single.rezultat_multiple[i] === \"\") {\r\n                  single.rezultat_multiple.splice(i, 1);\r\n                }\r\n              }\r\n            } else {\r\n              single.rezultat_multiple = [];\r\n            }\r\n\r\n            if (this.check === \"ODOBREN\" || this.check === \"VERIFICIRAN\") {\r\n              single.edit = false;\r\n            } else {\r\n              single.edit = true;\r\n            }\r\n\r\n            if (\r\n              ana === \"Opšti pregled urina\" &&\r\n              this.check != \"ODOBREN\" &&\r\n              this.check != \"VERIFICIRAN\"\r\n            ) {\r\n              if (\r\n                analit.rezultat[0].rezultat_f === \"\" &&\r\n                single.select_options != undefined\r\n              ) {\r\n                single.rezultat = single.select_options[1];\r\n              }\r\n            }\r\n\r\n            single.analit = analit.rezultat[0].anaassay;\r\n            single.izbor = ana;\r\n\r\n            // Opšti pregled urina (Urobilinogen)\r\n            if(single.kod === \"o12\" && single.rezultat.trim() === \"\"){\r\n              single.rezultat = \"16\"\r\n            }\r\n\r\n            this.analiti.push(single);\r\n\r\n            single = {};\r\n          });\r\n        }\r\n\r\n        if (i === this.analitiprikaz.length) {\r\n          kontrola = true;\r\n        }\r\n      });\r\n\r\n      if (kontrola) {\r\n        this.$refs.largeModalMulti.open();\r\n      }\r\n    },\r\n\r\n    Interpretacija: function(\r\n      test,\r\n      rezultat,\r\n      jedinica,\r\n      refd,\r\n      refg,\r\n      site,\r\n      interp,\r\n      extend,\r\n      spec\r\n    ) {\r\n      return Interpretation(\r\n        test,\r\n        rezultat,\r\n        jedinica,\r\n        refd,\r\n        refg,\r\n        site,\r\n        interp,\r\n        extend,\r\n        spec\r\n      );\r\n    },\r\n\r\n    MailDialog() {\r\n      this.$refs.staticModalSendMail.open();\r\n    },\r\n\r\n    SendMail(email) {\r\n\r\n      // Vue Loading Overlay Component\r\n      this.isLoading = true;\r\n\r\n      http\r\n        .post(\"nalazi/mail\", {\r\n          token: this.$store.state.token,\r\n          site: this.$store.state.site,\r\n          email: email,\r\n          timestamp: this.timestamp,\r\n          location: \"/\",\r\n          naziv: this.timestamp\r\n        })\r\n        .then(res => {\r\n\r\n          // Vue Loading Overlay Component\r\n          this.isLoading = false;\r\n\r\n          if (res.data.success) {\r\n            this.toastText = \"Nalaz uspješno poslan.\";\r\n            this.toastIcon = \"fa-check\";\r\n            this.toastPosition = \"top-right\";\r\n            this.className = \"vuestic-toast-primary\";\r\n\r\n            this.showToast(this.toastText, {\r\n              icon: this.toastIcon,\r\n              position: this.toastPosition,\r\n              duration: 2500,\r\n              fullWidth: this.false,\r\n              className: this.className\r\n            });\r\n\r\n            if (this.email_changed) {\r\n              http\r\n                .post(\"pacijenti/detalji/update/\" + this.pacijent, {\r\n                  email: email.trim(),\r\n                  token: this.$store.state.token,\r\n                  site: this.$store.state.site\r\n                })\r\n                .then(res => {});\r\n            }\r\n          } else {\r\n            this.toastText = \"Greška prilikom slanja nalaza!\";\r\n            this.toastIcon = \"fa-remove\";\r\n            this.toastPosition = \"top-right\";\r\n            this.className = \"vuestic-toast-danger\";\r\n\r\n            this.showToast(this.toastText, {\r\n              icon: this.toastIcon,\r\n              position: this.toastPosition,\r\n              duration: 2500,\r\n              fullWidth: this.false,\r\n              className: this.className\r\n            });\r\n          }\r\n        });\r\n    },\r\n\r\n    SaveMultiResults(analiti, data) {\r\n      analiti.forEach(analit => {\r\n        analit.rezultat = analit.rezultat.replace(/,/g, \".\");\r\n\r\n        if (analit.rezultat_multiple.length) {\r\n          analit.rezultat = \"\";\r\n\r\n          analit.rezultat_multiple.forEach(element => {\r\n            if (element === \"\") {\r\n            } else {\r\n              analit.rezultat = analit.rezultat + element + \";\";\r\n            }\r\n          });\r\n\r\n          analit.rezultat = analit.rezultat\r\n            .trim()\r\n            .slice(0, analit.rezultat.length - 1);\r\n        }\r\n      });\r\n\r\n      // Vue Loading Overlay Component\r\n      this.isLoading = true;\r\n\r\n      http\r\n        .post(\"/rezultati/odobravanje/analiti/\" + this.$store.state.sid, {\r\n          analiti: analiti,\r\n          site: this.$store.state.site,\r\n          token: this.$store.state.token\r\n        })\r\n        .then(res => {\r\n          http\r\n            .get(\r\n              \"rezultati/odobravanje/samples/\" +\r\n                this.$route.params.patient +\r\n                \"/\" +\r\n                this.$route.params.id +\r\n                \"?token=\" +\r\n                this.$store.state.token +\r\n                \"&site=\" +\r\n                this.$store.state.site +\r\n                \"&date=\" +\r\n                this.$route.query.date,\r\n              {}\r\n            )\r\n            .then(res => {\r\n              this.uzorci = [];\r\n\r\n              res.data.results.forEach(element => {\r\n                var check = 0;\r\n                var zaprimljen = 0;\r\n                var realizovan = 0;\r\n\r\n                if (element.verificiran) {\r\n                  var status_uzorka = \"VERIFICIRAN\";\r\n                } else {\r\n                  var status_uzorka = element.status;\r\n                }\r\n\r\n                element.rezultati.forEach(test => {\r\n                  check++;\r\n\r\n                  if (\r\n                    test.rezultat[test.rezultat.length - 1].rezultat_f === \"\"\r\n                  ) {\r\n                    zaprimljen++;\r\n                  }\r\n\r\n                  if (\r\n                    test.rezultat[test.rezultat.length - 1].rezultat_f != \"\"\r\n                  ) {\r\n                    realizovan++;\r\n                  }\r\n\r\n                  if (check === element.rezultati.length) {\r\n\r\n                    // console.log(\"Provjera: Save (multi)\")\r\n\r\n                    if (status_uzorka === \"VERIFICIRAN\") {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"VERIFICIRAN\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false\r\n                      });\r\n                    } else if (status_uzorka === \"ODOBREN\") {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"ODOBREN\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false\r\n                      });\r\n                    } else if (zaprimljen < 1) {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"REALIZOVAN\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false\r\n                      });\r\n                    } else if (realizovan < 1) {\r\n                      var stat = \"ZAPRIMLJEN\";\r\n                      if (element.sample.tip.includes(\"Mikrobiologija\")) {\r\n                        if (\r\n                          element.rezultati[0].rezultat[0].rezultat_m.length\r\n                        ) {\r\n                          stat = \"REALIZOVAN\";\r\n                        }\r\n                      }\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: stat,\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false\r\n                      });\r\n                    } else {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"U OBRADI\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false\r\n                      });\r\n                    }\r\n                  }\r\n                });\r\n              });\r\n\r\n              this.uzorci = this.uzorci.sort(function(a, b) {\r\n                return a.sid.localeCompare(b.sid, undefined, {\r\n                  numeric: true,\r\n                  sensitivity: \"base\"\r\n                });\r\n              });\r\n\r\n              // Vue Loading Overlay Component\r\n              this.isLoading = false;\r\n            });\r\n        })\r\n        .then(res => {\r\n          var data = {};\r\n\r\n          this.uzorci.forEach(element => {\r\n            if (element.sid === this.$store.state.sid) {\r\n              data = element;\r\n            }\r\n          });\r\n\r\n          this.testovi = [];\r\n          this.rezultati = [];\r\n          this.analitiprikaz = [];\r\n          this.calculated = false;\r\n\r\n          var topcije = null;\r\n          topcije = izbornik.rez;\r\n\r\n          this.show_table = false;\r\n\r\n          http\r\n            .get(\r\n              \"rezultati/showsingle/\" +\r\n                data.sid +\r\n                \"?token=\" +\r\n                this.$store.state.token +\r\n                \"&site=\" +\r\n                this.$store.state.site,\r\n              {}\r\n            )\r\n            .then(res => {\r\n              var test = {};\r\n\r\n              if (res.data.data.length) {\r\n                res.data.data.sort(function(a, b) {\r\n                  return a.testovi.labassay.grupa +\r\n                    a.testovi.labassay.grouporder ==\r\n                    b.testovi.labassay.grupa + b.testovi.labassay.grouporder\r\n                    ? 0\r\n                    : +(\r\n                        a.testovi.labassay.grupa +\r\n                          a.testovi.labassay.grouporder >\r\n                        b.testovi.labassay.grupa + b.testovi.labassay.grouporder\r\n                      ) || -1;\r\n                });\r\n\r\n                this.testovi = res.data.data;\r\n                this.analitiprikaz = res.data.multidata;\r\n\r\n                res.data.data.forEach(element => {\r\n                  test = {};\r\n                  test.realizovan = false;\r\n\r\n                  test.ime = element.testovi.labassay.naziv;\r\n                  test.test = element.testovi.labassay.sifra;\r\n                  test.analit = element.testovi.labassay.analit;\r\n                  test.IDE = element.testovi._id;\r\n                  test.labassay_id = element.testovi.labassay._id;\r\n\r\n                  test.multi_count = 0;\r\n                  test.multi_rezultati = [];\r\n\r\n                  res.data.multidata.forEach(multi => {\r\n                    if (multi.labassay._id === element.testovi.labassay._id) {\r\n                      test.multi_rezultati = multi.rezultat;\r\n                      test.multi_count = multi.rezultat[0].rezultat.length;\r\n                    }\r\n                  });\r\n\r\n                  test.kategorija = element.testovi.labassay.kategorija;\r\n                  test.analyser = element.testovi.labassay.analyser;\r\n                  test.multiparam = element.testovi.labassay.multiparam;\r\n                  test.vise = element.testovi.rezultat.length;\r\n                  test.calculated = element.testovi.labassay.calculated;\r\n                  test.manual = element.testovi.labassay.manual;\r\n\r\n                  test.select_options = eval(\r\n                    \"topcije.\" +\r\n                      element.testovi.interp\r\n                        .replace(\"%\", \"_\")\r\n                        .replace(\"/\", \"_\")\r\n                        .replace(\" \", \"_\")\r\n                        .replace(/-/g, \"_\")\r\n                        .replace(\"#\", \"_\")\r\n                        // .replace(/[0-9]/g, \"_\")\r\n                        .replace(/^\\d+/, \"\")\r\n                  );\r\n\r\n                  element.testovi.rezultat.forEach(rezultat => {\r\n                    test.sekcija = rezultat.anaassay.sekcija;\r\n                    test.rezultat = rezultat.rezultat_f;\r\n                    test.result = rezultat;\r\n                    test.anaassay = rezultat.anaassay;\r\n\r\n                    if (rezultat.rezultat_f != \"\") {\r\n                      test.realizovan = true;\r\n                    }\r\n\r\n                    test.unit = rezultat.jedinice_f;\r\n\r\n                    if (res.data.verificiran || res.data.status === \"ODOBREN\") {\r\n                      test.odobren = \"ODOBREN\";\r\n                      test.edit = false;\r\n                    } else {\r\n                      test.odobren != \"ODOBREN\";\r\n                      test.edit = true;\r\n                    }\r\n\r\n                    test.jedinica = rezultat.jedinice_f;\r\n                    test.id = rezultat._id;\r\n                    test.multidata = element.testovi.labassay.multi;\r\n                    test.rezultat_m = rezultat.rezultat_m;\r\n                    test.bakterije = element.testovi.labassay.bakterije;\r\n                    test.neg_description =\r\n                      element.testovi.labassay.neg_description;\r\n                    test.pos_description =\r\n                      element.testovi.labassay.pos_description;\r\n                    test.refSet = element.testovi.grupa;\r\n                    test.dRef = element.testovi.refd;\r\n                    test.gRef = element.testovi.refg;\r\n                    test.interp = element.testovi.interp;\r\n                    test.extend = element.testovi.extend;\r\n                    test.retest = element.testovi.retest;\r\n                    test.interpretacija =\r\n                      element.testovi.labassay.interpretacija;\r\n                  });\r\n\r\n                  if (\r\n                    test.select_options != undefined &&\r\n                    !test.select_options.includes(test.rezultat)\r\n                  ) {\r\n                    test.select_options.unshift(test.rezultat);\r\n                  }\r\n                  this.rezultati.push(test);\r\n                });\r\n\r\n                this.rezultati.forEach(element => {\r\n                  if (element.calculated) {\r\n                    this.calculated = true;\r\n                  }\r\n                });\r\n\r\n                this.sample = data;\r\n                this.show_table = true;\r\n              }\r\n            });\r\n        });\r\n    },\r\n\r\n    Calculate: function(event, id, ime, edited) {\r\n      http\r\n        .post(\"/rezultati/odobravanje/calculate/\" + this.$store.state.sid, {\r\n          _id: id,\r\n          token: this.$store.state.token,\r\n          site: this.$store.state.site,\r\n          ime: ime,\r\n          pid: this.pid\r\n        })\r\n        .then(res => {\r\n          http\r\n            .get(\r\n              \"rezultati/odobravanje/samples/\" +\r\n                this.$route.params.patient +\r\n                \"/\" +\r\n                this.$route.params.id +\r\n                \"?token=\" +\r\n                this.$store.state.token +\r\n                \"&site=\" +\r\n                this.$store.state.site +\r\n                \"&date=\" +\r\n                this.$route.query.date,\r\n              {}\r\n            )\r\n            .then(res => {\r\n              this.uzorci = [];\r\n\r\n              res.data.results.forEach(element => {\r\n                var check = 0;\r\n                var zaprimljen = 0;\r\n                var realizovan = 0;\r\n\r\n                if (element.verificiran) {\r\n                  var status_uzorka = \"VERIFICIRAN\";\r\n                } else {\r\n                  var status_uzorka = element.status;\r\n                }\r\n\r\n                element.rezultati.forEach(test => {\r\n                  check++;\r\n\r\n                  if (\r\n                    test.rezultat[test.rezultat.length - 1].rezultat_f === \"\"\r\n                  ) {\r\n                    zaprimljen++;\r\n                  }\r\n\r\n                  if (\r\n                    test.rezultat[test.rezultat.length - 1].rezultat_f != \"\"\r\n                  ) {\r\n                    realizovan++;\r\n                  }\r\n\r\n                  if (check === element.rezultati.length) {\r\n\r\n                    // console.log(\"Provjera: Calculate\")\r\n\r\n                    if (status_uzorka === \"VERIFICIRAN\") {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"VERIFICIRAN\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false\r\n                      });\r\n                    } else if (status_uzorka === \"ODOBREN\") {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"ODOBREN\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false\r\n                      });\r\n                    } else if (zaprimljen < 1) {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"REALIZOVAN\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false\r\n                      });\r\n                    } else if (realizovan < 1) {\r\n                      var stat = \"ZAPRIMLJEN\";\r\n                      if (element.sample.tip.includes(\"Mikrobiologija\")) {\r\n                        if (\r\n                          element.rezultati[0].rezultat[0].rezultat_m.length\r\n                        ) {\r\n                          stat = \"REALIZOVAN\";\r\n                        }\r\n                      }\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: stat,\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false\r\n                      });\r\n                    } else {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"U OBRADI\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false\r\n                      });\r\n                    }\r\n                  }\r\n                });\r\n              });\r\n\r\n              this.uzorci = this.uzorci.sort(function(a, b) {\r\n                return a.sid.localeCompare(b.sid, undefined, {\r\n                  numeric: true,\r\n                  sensitivity: \"base\"\r\n                });\r\n              });\r\n            });\r\n        })\r\n        .then(res => {\r\n          var data = {};\r\n\r\n          this.uzorci.forEach(element => {\r\n            if (element.sid === this.$store.state.sid) {\r\n              data = element;\r\n            }\r\n          });\r\n\r\n          this.testovi = [];\r\n          this.rezultati = [];\r\n          this.analitiprikaz = [];\r\n          this.calculated = false;\r\n\r\n          var topcije = null;\r\n          topcije = izbornik.rez;\r\n\r\n          http\r\n            .get(\r\n              \"rezultati/showsingle/\" +\r\n                data.sid +\r\n                \"?token=\" +\r\n                this.$store.state.token +\r\n                \"&site=\" +\r\n                this.$store.state.site,\r\n              {}\r\n            )\r\n            .then(res => {\r\n              var test = {};\r\n\r\n              if (res.data.data.length) {\r\n                res.data.data.sort(function(a, b) {\r\n                  return a.testovi.labassay.grupa +\r\n                    a.testovi.labassay.grouporder ==\r\n                    b.testovi.labassay.grupa + b.testovi.labassay.grouporder\r\n                    ? 0\r\n                    : +(\r\n                        a.testovi.labassay.grupa +\r\n                          a.testovi.labassay.grouporder >\r\n                        b.testovi.labassay.grupa + b.testovi.labassay.grouporder\r\n                      ) || -1;\r\n                });\r\n\r\n                this.testovi = res.data.data;\r\n                this.analitiprikaz = res.data.multidata;\r\n\r\n                res.data.data.forEach(element => {\r\n                  test = {};\r\n                  test.realizovan = false;\r\n\r\n                  test.ime = element.testovi.labassay.naziv;\r\n                  test.test = element.testovi.labassay.sifra;\r\n                  test.analit = element.testovi.labassay.analit;\r\n                  test.IDE = element.testovi._id;\r\n                  test.labassay_id = element.testovi.labassay._id;\r\n\r\n                  test.multi_count = 0;\r\n                  test.multi_rezultati = [];\r\n\r\n                  res.data.multidata.forEach(multi => {\r\n                    if (multi.labassay._id === element.testovi.labassay._id) {\r\n                      test.multi_rezultati = multi.rezultat;\r\n                      test.multi_count = multi.rezultat[0].rezultat.length;\r\n                    }\r\n                  });\r\n\r\n                  test.kategorija = element.testovi.labassay.kategorija;\r\n                  test.analyser = element.testovi.labassay.analyser;\r\n                  test.multiparam = element.testovi.labassay.multiparam;\r\n                  test.vise = element.testovi.rezultat.length;\r\n                  test.calculated = element.testovi.labassay.calculated;\r\n                  test.manual = element.testovi.labassay.manual;\r\n\r\n                  test.select_options = eval(\r\n                    \"topcije.\" +\r\n                      element.testovi.interp\r\n                        .replace(\"%\", \"_\")\r\n                        .replace(\"/\", \"_\")\r\n                        .replace(\" \", \"_\")\r\n                        .replace(/-/g, \"_\")\r\n                        .replace(\"#\", \"_\")\r\n                        // .replace(/[0-9]/g, \"_\")\r\n                        .replace(/^\\d+/, \"\")\r\n                  );\r\n\r\n                  element.testovi.rezultat.forEach(rezultat => {\r\n                    test.sekcija = rezultat.anaassay.sekcija;\r\n                    test.rezultat = rezultat.rezultat_f;\r\n                    test.result = rezultat;\r\n                    test.anaassay = rezultat.anaassay;\r\n\r\n                    if (rezultat.rezultat_f != \"\") {\r\n                      test.realizovan = true;\r\n                    }\r\n\r\n                    test.unit = rezultat.jedinice_f;\r\n\r\n                    if (res.data.verificiran || res.data.status === \"ODOBREN\") {\r\n                      test.odobren = \"ODOBREN\";\r\n                      test.edit = false;\r\n                    } else {\r\n                      test.odobren != \"ODOBREN\";\r\n                      test.edit = true;\r\n                    }\r\n\r\n                    test.jedinica = rezultat.jedinice_f;\r\n                    test.id = rezultat._id;\r\n                    test.multidata = element.testovi.labassay.multi;\r\n                    test.rezultat_m = rezultat.rezultat_m;\r\n                    test.bakterije = element.testovi.labassay.bakterije;\r\n                    test.neg_description =\r\n                      element.testovi.labassay.neg_description;\r\n                    test.pos_description =\r\n                      element.testovi.labassay.pos_description;\r\n                    test.refSet = element.testovi.grupa;\r\n                    test.dRef = element.testovi.refd;\r\n                    test.gRef = element.testovi.refg;\r\n                    test.interp = element.testovi.interp;\r\n                    test.extend = element.testovi.extend;\r\n                    test.retest = element.testovi.retest;\r\n                    test.interpretacija =\r\n                      element.testovi.labassay.interpretacija;\r\n                  });\r\n\r\n                  if (\r\n                    test.select_options != undefined &&\r\n                    !test.select_options.includes(test.rezultat)\r\n                  ) {\r\n                    test.select_options.unshift(test.rezultat);\r\n                  }\r\n                  this.rezultati.push(test);\r\n                });\r\n\r\n                this.rezultati.forEach(element => {\r\n                  if (element.calculated) {\r\n                    this.calculated = true;\r\n                  }\r\n                });\r\n\r\n                this.sample = data;\r\n              }\r\n            });\r\n        });\r\n    },\r\n\r\n    Approve(rezultati) {\r\n      this.rezultati.forEach(element => {\r\n        element.edit = false;\r\n      });\r\n\r\n      this.calculated = false;\r\n\r\n      if (!this.MicrobiologySample) {\r\n        rezultati.forEach(element => {\r\n          element.rezultat = element.rezultat.replace(/,/g, \".\");\r\n        });\r\n\r\n        rezultati[0].rezultat_m = [];\r\n      }\r\n\r\n      http\r\n        .post(\"/rezultati/odobravanje/sacuvaj/\" + this.$store.state.sid, {\r\n          email: this.$store.state.userId,\r\n          token: this.$store.state.token,\r\n          site: this.$store.state.site,\r\n          rezultati: rezultati\r\n        })\r\n        .then(res => {\r\n\r\n          // Vue Loading Overlay Component\r\n          this.isLoading = true;\r\n\r\n          http\r\n            .post(\"/rezultati/odobravanje/odobri/\" + this.$store.state.sid, {\r\n              testovi: rezultati,\r\n              site: this.$store.state.site,\r\n              token: this.$store.state.token\r\n            })\r\n            .then(res => {\r\n              this.sample.status = \"ODOBREN\";\r\n\r\n              this.report = {};\r\n\r\n              this.uzorci.forEach(element => {\r\n                if (element.sid === this.$store.state.sid) {\r\n                  this.report = element;\r\n                }\r\n              });\r\n\r\n              var sample = [];\r\n              sample.push(this.report._id);\r\n\r\n              http\r\n                .post(\"nalazi/create\", {\r\n                  token: this.$store.state.token,\r\n                  site: this.$store.state.site,\r\n                  type: \"single\",\r\n                  uzorci: this.uzorci,\r\n                  samples: sample,\r\n                  timestamp: this.timestamp,\r\n                  napomena: \"\",\r\n                  status: false,\r\n                  idNalaza: \"\",\r\n                  location: \"/samples\",\r\n                  klijent: this.klijent,\r\n                  naziv: this.report.sid\r\n                })\r\n                .then(res => {\r\n                  http\r\n                    .get(\r\n                      \"rezultati/odobravanje/samples/\" +\r\n                        this.$route.params.patient +\r\n                        \"/\" +\r\n                        this.$route.params.id +\r\n                        \"?token=\" +\r\n                        this.$store.state.token +\r\n                        \"&site=\" +\r\n                        this.$store.state.site +\r\n                        \"&date=\" +\r\n                        this.$route.query.date,\r\n                      {}\r\n                    )\r\n                    .then(res => {\r\n                      this.final_pdf = res.data.final_pdf;\r\n\r\n                      this.count = res.data.results.length;\r\n                      this.approved = 0;\r\n\r\n                      this.odobren = true;\r\n                      this.verificiran = true;\r\n\r\n                      res.data.results.forEach(element => {\r\n                        if (\r\n                          element.status === \"ODOBREN\" ||\r\n                          element.status === \"VERIFICIRAN\"\r\n                        ) {\r\n                          this.approved++;\r\n                        }\r\n                        if (\r\n                          element.status != \"ODOBREN\" &&\r\n                          element.status != \"VERIFICIRAN\"\r\n                        ) {\r\n                          this.odobren = false;\r\n                        }\r\n                        if (!element.verificiran) {\r\n                          this.verificiran = false;\r\n                        }\r\n                      });\r\n\r\n                      var response = res.data.results;\r\n\r\n                      if (this.count == this.approved) {\r\n\r\n                        // console.warn(\"Generate new Report.\");\r\n\r\n                        var report = [];\r\n\r\n                        this.uzorci.forEach(element => {\r\n                          report.push(element._id);\r\n                        });\r\n\r\n                        http\r\n                          .post(\"nalazi/create\", {\r\n                            token: this.$store.state.token,\r\n                            site: this.$store.state.site,\r\n                            type: \"multi\",\r\n                            uzorci: this.uzorci,\r\n                            samples: report,\r\n                            timestamp: this.timestamp,\r\n                            napomena: \"\",\r\n                            status: false,\r\n                            idNalaza: \"\",\r\n                            location: \"/\",\r\n                            klijent: this.klijent,\r\n                            naziv: this.timestamp\r\n                          })\r\n                          .then(res => {\r\n                            if (res.data.success) {\r\n                              http\r\n                                .post(\"nalazi/memo\", {\r\n                                  token: this.$store.state.token,\r\n                                  site: this.$store.state.site,\r\n                                  timestamp: this.timestamp,\r\n                                  height: res.data.memo,\r\n                                  location: \"/\",\r\n                                  naziv: this.timestamp\r\n                                })\r\n                                .then(res => {\r\n                                  this.uzorci = [];\r\n\r\n                                  response.forEach(element => {\r\n                                    var check = 0;\r\n                                    var zaprimljen = 0;\r\n                                    var realizovan = 0;\r\n\r\n                                    if (element.verificiran) {\r\n                                      var status_uzorka = \"VERIFICIRAN\";\r\n                                    } else {\r\n                                      var status_uzorka = element.status;\r\n                                    }\r\n\r\n                                    element.rezultati.forEach(test => {\r\n                                      check++;\r\n\r\n                                      if (\r\n                                        test.rezultat[test.rezultat.length - 1]\r\n                                          .rezultat_f === \"\"\r\n                                      ) {\r\n                                        zaprimljen++;\r\n                                      }\r\n\r\n                                      if (\r\n                                        test.rezultat[test.rezultat.length - 1]\r\n                                          .rezultat_f != \"\"\r\n                                      ) {\r\n                                        realizovan++;\r\n                                      }\r\n\r\n                                      if (check === element.rezultati.length) {\r\n\r\n                                        // console.log(\"Provjera: Approve\")\r\n\r\n                                        if (status_uzorka === \"VERIFICIRAN\") {\r\n                                          this.uzorci.push({\r\n                                            sid: element.id,\r\n                                            status: \"VERIFICIRAN\",\r\n                                            pdf_exists: element.pdf_exists,\r\n                                            tip: element.sample.tip,\r\n                                            _id: element._id,\r\n                                            removed: false\r\n                                          });\r\n                                        } else if (\r\n                                          status_uzorka === \"ODOBREN\"\r\n                                        ) {\r\n                                          this.uzorci.push({\r\n                                            sid: element.id,\r\n                                            status: \"ODOBREN\",\r\n                                            pdf_exists: element.pdf_exists,\r\n                                            tip: element.sample.tip,\r\n                                            _id: element._id,\r\n                                            removed: false\r\n                                          });\r\n                                        } else if (zaprimljen < 1) {\r\n                                          this.uzorci.push({\r\n                                            sid: element.id,\r\n                                            status: \"REALIZOVAN\",\r\n                                            pdf_exists: element.pdf_exists,\r\n                                            tip: element.sample.tip,\r\n                                            _id: element._id,\r\n                                            removed: false\r\n                                          });\r\n                                        } else if (realizovan < 1) {\r\n                                          var stat = \"ZAPRIMLJEN\";\r\n                                          if (\r\n                                            element.sample.tip.includes(\r\n                                              \"Mikrobiologija\"\r\n                                            )\r\n                                          ) {\r\n                                            if (\r\n                                              element.rezultati[0].rezultat[0]\r\n                                                .rezultat_m.length\r\n                                            ) {\r\n                                              stat = \"REALIZOVAN\";\r\n                                            }\r\n                                          }\r\n                                          this.uzorci.push({\r\n                                            sid: element.id,\r\n                                            status: stat,\r\n                                            pdf_exists: element.pdf_exists,\r\n                                            tip: element.sample.tip,\r\n                                            _id: element._id,\r\n                                            removed: false\r\n                                          });\r\n                                        } else {\r\n                                          this.uzorci.push({\r\n                                            sid: element.id,\r\n                                            status: \"U OBRADI\",\r\n                                            pdf_exists: element.pdf_exists,\r\n                                            tip: element.sample.tip,\r\n                                            _id: element._id,\r\n                                            removed: false\r\n                                          });\r\n                                        }\r\n                                      }\r\n                                    });\r\n                                  });\r\n\r\n                                  this.uzorci = this.uzorci.sort(function(\r\n                                    a,\r\n                                    b\r\n                                  ) {\r\n                                    return a.sid.localeCompare(\r\n                                      b.sid,\r\n                                      undefined,\r\n                                      {\r\n                                        numeric: true,\r\n                                        sensitivity: \"base\"\r\n                                      }\r\n                                    );\r\n                                  });\r\n\r\n                                  this.main = true;\r\n\r\n                                  // Vue Loading Overlay Component\r\n                                  this.isLoading = false;\r\n                                });\r\n                            }\r\n                          });\r\n                      } else {\r\n                        this.uzorci = [];\r\n\r\n                        res.data.results.forEach(element => {\r\n                          var check = 0;\r\n                          var zaprimljen = 0;\r\n                          var realizovan = 0;\r\n\r\n                          if (element.verificiran) {\r\n                            var status_uzorka = \"VERIFICIRAN\";\r\n                          } else {\r\n                            var status_uzorka = element.status;\r\n                          }\r\n\r\n                          element.rezultati.forEach(test => {\r\n                            check++;\r\n\r\n                            if (\r\n                              test.rezultat[test.rezultat.length - 1]\r\n                                .rezultat_f === \"\"\r\n                            ) {\r\n                              zaprimljen++;\r\n                            }\r\n\r\n                            if (\r\n                              test.rezultat[test.rezultat.length - 1]\r\n                                .rezultat_f != \"\"\r\n                            ) {\r\n                              realizovan++;\r\n                            }\r\n\r\n                            if (check === element.rezultati.length) {\r\n\r\n                              // console.log(\"Provjera: Approve\")\r\n\r\n                              if (status_uzorka === \"VERIFICIRAN\") {\r\n                                this.uzorci.push({\r\n                                  sid: element.id,\r\n                                  status: \"VERIFICIRAN\",\r\n                                  pdf_exists: element.pdf_exists,\r\n                                  tip: element.sample.tip,\r\n                                  _id: element._id,\r\n                                  removed: false\r\n                                });\r\n                              } else if (status_uzorka === \"ODOBREN\") {\r\n                                this.uzorci.push({\r\n                                  sid: element.id,\r\n                                  status: \"ODOBREN\",\r\n                                  pdf_exists: element.pdf_exists,\r\n                                  tip: element.sample.tip,\r\n                                  _id: element._id,\r\n                                  removed: false\r\n                                });\r\n                              } else if (zaprimljen < 1) {\r\n                                this.uzorci.push({\r\n                                  sid: element.id,\r\n                                  status: \"REALIZOVAN\",\r\n                                  pdf_exists: element.pdf_exists,\r\n                                  tip: element.sample.tip,\r\n                                  _id: element._id,\r\n                                  removed: false\r\n                                });\r\n                              } else if (realizovan < 1) {\r\n                                var stat = \"ZAPRIMLJEN\";\r\n                                if (\r\n                                  element.sample.tip.includes(\"Mikrobiologija\")\r\n                                ) {\r\n                                  if (\r\n                                    element.rezultati[0].rezultat[0].rezultat_m\r\n                                      .length\r\n                                  ) {\r\n                                    stat = \"REALIZOVAN\";\r\n                                  }\r\n                                }\r\n                                this.uzorci.push({\r\n                                  sid: element.id,\r\n                                  status: stat,\r\n                                  pdf_exists: element.pdf_exists,\r\n                                  tip: element.sample.tip,\r\n                                  _id: element._id,\r\n                                  removed: false\r\n                                });\r\n                              } else {\r\n                                this.uzorci.push({\r\n                                  sid: element.id,\r\n                                  status: \"U OBRADI\",\r\n                                  pdf_exists: element.pdf_exists,\r\n                                  tip: element.sample.tip,\r\n                                  _id: element._id,\r\n                                  removed: false\r\n                                });\r\n                              }\r\n                            }\r\n                          });\r\n                        });\r\n\r\n                        this.uzorci = this.uzorci.sort(function(a, b) {\r\n                          return a.sid.localeCompare(b.sid, undefined, {\r\n                            numeric: true,\r\n                            sensitivity: \"base\"\r\n                          });\r\n                        });\r\n\r\n                        this.main = true;\r\n\r\n                        // Vue Loading Overlay Component\r\n                        this.isLoading = false;\r\n                      }\r\n                    })\r\n                    .then(res => {});\r\n                });\r\n            });\r\n        });\r\n    },\r\n\r\n    Disapprove(rezultati, from) {\r\n      this.rezultati.forEach(element => {\r\n        if (element.calculated) {\r\n          this.calculated = true;\r\n        }\r\n      });\r\n\r\n      http\r\n        .post(\"/rezultati/odobravanje/ukloni/\" + this.$store.state.sid, {\r\n          testovi: rezultati,\r\n          site: this.$store.state.site,\r\n          token: this.$store.state.token\r\n        })\r\n        .then(res => {\r\n\r\n          // Vue Loading Overlay Component\r\n          this.isLoading = true;\r\n\r\n          http\r\n            .get(\r\n              \"rezultati/odobravanje/samples/\" +\r\n                this.$route.params.patient +\r\n                \"/\" +\r\n                this.$route.params.id +\r\n                \"?token=\" +\r\n                this.$store.state.token +\r\n                \"&site=\" +\r\n                this.$store.state.site +\r\n                \"&date=\" +\r\n                this.$route.query.date,\r\n              {}\r\n            )\r\n            .then(res => {\r\n              this.sample.status = \"REALIZOVAN\";\r\n\r\n              this.final_pdf = res.data.final_pdf;\r\n\r\n              this.count = res.data.results.length;\r\n              this.approved = 0;\r\n\r\n              this.odobren = true;\r\n              this.verificiran = true;\r\n\r\n              res.data.results.forEach(element => {\r\n                if (\r\n                  element.status === \"ODOBREN\" ||\r\n                  element.status === \"VERIFICIRAN\"\r\n                ) {\r\n                  this.approved++;\r\n                }\r\n                if (\r\n                  element.status != \"ODOBREN\" &&\r\n                  element.status != \"VERIFICIRAN\"\r\n                ) {\r\n                  this.odobren = false;\r\n                }\r\n                if (!element.verificiran) {\r\n                  this.verificiran = false;\r\n                }\r\n              });\r\n\r\n              this.uzorci = [];\r\n\r\n              res.data.results.forEach(element => {\r\n                var check = 0;\r\n                var zaprimljen = 0;\r\n                var realizovan = 0;\r\n\r\n                if (element.verificiran) {\r\n                  var status_uzorka = \"VERIFICIRAN\";\r\n                } else {\r\n                  var status_uzorka = element.status;\r\n                }\r\n\r\n                element.rezultati.forEach(test => {\r\n                  check++;\r\n\r\n                  if (\r\n                    test.rezultat[test.rezultat.length - 1].rezultat_f === \"\"\r\n                  ) {\r\n                    zaprimljen++;\r\n                  }\r\n\r\n                  if (\r\n                    test.rezultat[test.rezultat.length - 1].rezultat_f != \"\"\r\n                  ) {\r\n                    realizovan++;\r\n                  }\r\n\r\n                  if (check === element.rezultati.length) {\r\n\r\n                    // console.log(\"Provjera: Disapprove\")\r\n\r\n                    if (status_uzorka === \"VERIFICIRAN\") {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"VERIFICIRAN\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false\r\n                      });\r\n                    } else if (status_uzorka === \"ODOBREN\") {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"ODOBREN\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false\r\n                      });\r\n                    } else if (zaprimljen < 1) {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"REALIZOVAN\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false\r\n                      });\r\n                    } else if (realizovan < 1) {\r\n                      var stat = \"ZAPRIMLJEN\";\r\n                      if (element.sample.tip.includes(\"Mikrobiologija\")) {\r\n                        if (\r\n                          element.rezultati[0].rezultat[0].rezultat_m.length\r\n                        ) {\r\n                          stat = \"REALIZOVAN\";\r\n                        }\r\n                      }\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: stat,\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false\r\n                      });\r\n                    } else {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"U OBRADI\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false\r\n                      });\r\n                    }\r\n                  }\r\n                });\r\n              });\r\n\r\n              this.uzorci = this.uzorci.sort(function(a, b) {\r\n                return a.sid.localeCompare(b.sid, undefined, {\r\n                  numeric: true,\r\n                  sensitivity: \"base\"\r\n                });\r\n              });\r\n\r\n              this.main = true;\r\n            });\r\n\r\n          this.rezultati.forEach(element => {\r\n            element.edit = true;\r\n          });\r\n\r\n          // Vue Loading Overlay Component\r\n          this.isLoading = false;\r\n        });\r\n    },\r\n\r\n    Verify(data) {\r\n      if (!this.$store.state.access.verify) {\r\n        this.$refs.staticModalVerifyPrivilege.open();\r\n      } else {\r\n        http\r\n          .post(\"/rezultati/obrada/verifikacija/\" + this.$store.state.sid, {\r\n            site: this.$store.state.site,\r\n            token: this.$store.state.token,\r\n            verify: true\r\n          })\r\n          .then(res => {\r\n            http\r\n              .get(\r\n                \"rezultati/odobravanje/samples/\" +\r\n                  this.$route.params.patient +\r\n                  \"/\" +\r\n                  this.$route.params.id +\r\n                  \"?token=\" +\r\n                  this.$store.state.token +\r\n                  \"&site=\" +\r\n                  this.$store.state.site +\r\n                  \"&date=\" +\r\n                  this.$route.query.date,\r\n                {}\r\n              )\r\n              .then(res => {\r\n                this.sample.status = \"VERIFICIRAN\";\r\n\r\n                this.final_pdf = res.data.final_pdf;\r\n\r\n                this.count = res.data.results.length;\r\n                this.approved = 0;\r\n                this.verified = 0;\r\n\r\n                this.odobren = true;\r\n                this.verificiran = true;\r\n                this.partials = [];\r\n                this.partials_condition = false;\r\n\r\n                res.data.results.forEach(element => {\r\n                  if (element.verificiran) {\r\n                    this.partials.push(element._id);\r\n                    this.verified++;\r\n                  }\r\n                  if (\r\n                    element.status === \"ODOBREN\" ||\r\n                    element.status === \"VERIFICIRAN\"\r\n                  ) {\r\n                    this.approved++;\r\n                  }\r\n                  if (\r\n                    element.status != \"ODOBREN\" &&\r\n                    element.status != \"VERIFICIRAN\"\r\n                  ) {\r\n                    this.odobren = false;\r\n                  }\r\n                  if (!element.verificiran) {\r\n                    this.verificiran = false;\r\n                  }\r\n                });\r\n\r\n                if (this.count > this.verified && this.verified > 1) {\r\n                  this.partials_condition = true;\r\n                }\r\n\r\n                this.uzorci = [];\r\n\r\n                res.data.results.forEach(element => {\r\n                  var check = 0;\r\n                  var zaprimljen = 0;\r\n                  var realizovan = 0;\r\n\r\n                  if (element.verificiran) {\r\n                    var status_uzorka = \"VERIFICIRAN\";\r\n                  } else {\r\n                    var status_uzorka = element.status;\r\n                  }\r\n\r\n                  element.rezultati.forEach(test => {\r\n                    check++;\r\n\r\n                    if (\r\n                      test.rezultat[test.rezultat.length - 1].rezultat_f === \"\"\r\n                    ) {\r\n                      zaprimljen++;\r\n                    }\r\n\r\n                    if (\r\n                      test.rezultat[test.rezultat.length - 1].rezultat_f != \"\"\r\n                    ) {\r\n                      realizovan++;\r\n                    }\r\n\r\n                    if (check === element.rezultati.length) {\r\n\r\n                      // console.log(\"Provjera: Verify\")\r\n\r\n                      if (status_uzorka === \"VERIFICIRAN\") {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"VERIFICIRAN\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false\r\n                        });\r\n                      } else if (status_uzorka === \"ODOBREN\") {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"ODOBREN\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false\r\n                        });\r\n                      } else if (zaprimljen < 1) {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"REALIZOVAN\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false\r\n                        });\r\n                      } else if (realizovan < 1) {\r\n                        var stat = \"ZAPRIMLJEN\";\r\n                        if (element.sample.tip.includes(\"Mikrobiologija\")) {\r\n                          if (\r\n                            element.rezultati[0].rezultat[0].rezultat_m.length\r\n                          ) {\r\n                            stat = \"REALIZOVAN\";\r\n                          }\r\n                        }\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: stat,\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false\r\n                        });\r\n                      } else {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"U OBRADI\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false\r\n                        });\r\n                      }\r\n                    }\r\n                  });\r\n                });\r\n\r\n                this.uzorci = this.uzorci.sort(function(a, b) {\r\n                  return a.sid.localeCompare(b.sid, undefined, {\r\n                    numeric: true,\r\n                    sensitivity: \"base\"\r\n                  });\r\n                });\r\n\r\n                if (this.verificiran) {\r\n                  http\r\n                    .post(\"rezultati/nalazi/status\", {\r\n                      token: this.$store.state.token,\r\n                      site: this.$store.state.site,\r\n                      timestamp: this.timestamp,\r\n                      location: \"/\",\r\n                      naziv: this.timestamp,\r\n                      status: true\r\n                    })\r\n                    .then(res => {\r\n                      this.main = true;\r\n\r\n                      if (this.lokacija.sendEmail) {\r\n                        http\r\n                          .post(\"nalazi/mail\", {\r\n                            token: this.$store.state.token,\r\n                            site: this.$store.state.site,\r\n                            email: this.lokacija.email,\r\n                            timestamp: this.timestamp,\r\n                            location: \"/\",\r\n                            naziv: this.timestamp\r\n                          })\r\n                          .then(res => {\r\n                            if (res.data.success) {\r\n                            } else {\r\n                              this.toastText = \"Greška prilikom slanja nalaza!\";\r\n                              this.toastIcon = \"fa-remove\";\r\n                              this.toastPosition = \"top-right\";\r\n                              this.className = \"vuestic-toast-danger\";\r\n\r\n                              this.showToast(this.toastText, {\r\n                                icon: this.toastIcon,\r\n                                position: this.toastPosition,\r\n                                duration: 2500,\r\n                                fullWidth: this.false,\r\n                                className: this.className\r\n                              });\r\n                            }\r\n                          });\r\n                      } else {\r\n                      }\r\n                    });\r\n                } else {\r\n                  this.main = true;\r\n                }\r\n              });\r\n          });\r\n      }\r\n    },\r\n\r\n    UnVerify(data) {\r\n      if (!this.$store.state.access.verify) {\r\n        this.$refs.staticModalVerifyPrivilege.open();\r\n      } else {\r\n        this.verificiran = false;\r\n        this.sid = data.sid;\r\n\r\n        http\r\n          .post(\"/rezultati/obrada/verifikacija/\" + data.sid, {\r\n            site: this.$store.state.site,\r\n            token: this.$store.state.token,\r\n            verify: false\r\n          })\r\n          .then(res => {\r\n            http\r\n              .get(\r\n                \"rezultati/odobravanje/samples/\" +\r\n                  this.$route.params.patient +\r\n                  \"/\" +\r\n                  this.$route.params.id +\r\n                  \"?token=\" +\r\n                  this.$store.state.token +\r\n                  \"&site=\" +\r\n                  this.$store.state.site +\r\n                  \"&date=\" +\r\n                  this.$route.query.date,\r\n                {}\r\n              )\r\n              .then(res => {\r\n                this.sample.status = \"ODOBREN\";\r\n\r\n                this.final_pdf = res.data.final_pdf;\r\n\r\n                this.count = res.data.results.length;\r\n                this.approved = 0;\r\n\r\n                this.odobren = true;\r\n                this.verificiran = true;\r\n                this.verified = 0;\r\n                this.partials = [];\r\n                this.partials_condition = false;\r\n\r\n                res.data.results.forEach(element => {\r\n                  if (element.verificiran) {\r\n                    this.verified++;\r\n                    this.partials.push(element._id);\r\n                  }\r\n                  if (\r\n                    element.status === \"ODOBREN\" ||\r\n                    element.status === \"VERIFICIRAN\"\r\n                  ) {\r\n                    this.approved++;\r\n                  }\r\n                  if (\r\n                    element.status != \"ODOBREN\" &&\r\n                    element.status != \"VERIFICIRAN\"\r\n                  ) {\r\n                    this.odobren = false;\r\n                  }\r\n                  if (!element.verificiran) {\r\n                    this.verificiran = false;\r\n                  }\r\n                });\r\n\r\n                if (this.count > this.verified && this.verified > 1) {\r\n                  this.partials_condition = true;\r\n                }\r\n\r\n                this.uzorci = [];\r\n\r\n                res.data.results.forEach(element => {\r\n                  var check = 0;\r\n                  var zaprimljen = 0;\r\n                  var realizovan = 0;\r\n\r\n                  if (element.verificiran) {\r\n                    var status_uzorka = \"VERIFICIRAN\";\r\n                  } else {\r\n                    var status_uzorka = element.status;\r\n                  }\r\n\r\n                  element.rezultati.forEach(test => {\r\n                    check++;\r\n\r\n                    if (\r\n                      test.rezultat[test.rezultat.length - 1].rezultat_f === \"\"\r\n                    ) {\r\n                      zaprimljen++;\r\n                    }\r\n\r\n                    if (\r\n                      test.rezultat[test.rezultat.length - 1].rezultat_f != \"\"\r\n                    ) {\r\n                      realizovan++;\r\n                    }\r\n\r\n                    if (check === element.rezultati.length) {\r\n\r\n                      // console.log(\"Provjera: Unverify\")\r\n                      \r\n                      if (status_uzorka === \"VERIFICIRAN\") {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"VERIFICIRAN\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false\r\n                        });\r\n                      } else if (status_uzorka === \"ODOBREN\") {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"ODOBREN\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false\r\n                        });\r\n                      } else if (zaprimljen < 1) {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"REALIZOVAN\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false\r\n                        });\r\n                      } else if (realizovan < 1) {\r\n                        var stat = \"ZAPRIMLJEN\";\r\n                        if (element.sample.tip.includes(\"Mikrobiologija\")) {\r\n                          if (\r\n                            element.rezultati[0].rezultat[0].rezultat_m.length\r\n                          ) {\r\n                            stat = \"REALIZOVAN\";\r\n                          }\r\n                        }\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: stat,\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false\r\n                        });\r\n                      } else {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"U OBRADI\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false\r\n                        });\r\n                      }\r\n                    }\r\n                  });\r\n                });\r\n\r\n                this.uzorci = this.uzorci.sort(function(a, b) {\r\n                  return a.sid.localeCompare(b.sid, undefined, {\r\n                    numeric: true,\r\n                    sensitivity: \"base\"\r\n                  });\r\n                });\r\n\r\n                if (!this.verificiran) {\r\n                  http\r\n                    .post(\"rezultati/nalazi/status\", {\r\n                      token: this.$store.state.token,\r\n                      site: this.$store.state.site,\r\n                      timestamp: this.timestamp,\r\n                      location: \"/\",\r\n                      naziv: this.timestamp,\r\n                      status: false\r\n                    })\r\n                    .then(res => {\r\n                      this.main = true;\r\n                    });\r\n                } else {\r\n                  this.main = true;\r\n                }\r\n              });\r\n          });\r\n      }\r\n    },\r\n\r\n    GetResults(data, status) {\r\n      this.sample_status = status;\r\n      this.vise = [];\r\n      this.labassay = \"\";\r\n      http\r\n        .post(\r\n          \"/rezultati/odobravanje/results\" +\r\n            \"?token=\" +\r\n            this.$store.state.token +\r\n            \"&site=\" +\r\n            this.$store.state.site,\r\n          {\r\n            id: this.sample.sid,\r\n            labassay: data.labassay_id\r\n          }\r\n        )\r\n        .then(res => {\r\n          if (res.data.success) {\r\n            this.vise = res.data.element;\r\n            this.labassay =\r\n              this.vise.labassay.naziv + \" (\" + this.vise.labassay.analit + \")\";\r\n\r\n            var i = 0;\r\n            res.data.element.rezultat.forEach(element => {\r\n              i++;\r\n              if (res.data.element.rezultat.length == i) {\r\n                element.izabran = true;\r\n              } else {\r\n                element.izabran = false;\r\n              }\r\n            });\r\n\r\n            this.vise.rezultat.sort(function(a, b) {\r\n              return Date.parse(a.created_at) == Date.parse(b.created_at)\r\n                ? 0\r\n                : +(Date.parse(a.created_at) < Date.parse(b.created_at)) || -1;\r\n            });\r\n\r\n            this.$refs.staticModalAllResults.open();\r\n          }\r\n        });\r\n    },\r\n\r\n    GetResultsMulti(data, status) {\r\n      this.sample_status = status;\r\n\r\n      this.multi_rezultati = [];\r\n      this.multi_test = data.ime + \" (\" + data.analit + \")\";\r\n\r\n      // this.$refs.staticModalResultsMulti.open();\r\n\r\n      // this.multi_rezultati = data.multi_rezultati\r\n\r\n      data.multi_rezultati.forEach(element => {\r\n        element.rezultat.forEach(rez => {});\r\n      });\r\n    },\r\n\r\n    IzborTesta(vise, test) {\r\n      document.getElementById(this.sample.sid).click();\r\n\r\n      http\r\n        .post(\r\n          \"/rezultati/odobravanje/choose\" +\r\n            \"?token=\" +\r\n            this.$store.state.token +\r\n            \"&site=\" +\r\n            this.$store.state.site,\r\n          {\r\n            id: this.sample.sid,\r\n            labassay: vise.labassay._id,\r\n            picked: test._id\r\n          }\r\n        )\r\n        .then(res => {\r\n          document.getElementById(this.sample.sid).click();\r\n          this.$refs.staticModalAllResults.close();\r\n        });\r\n    },\r\n\r\n    Partials() {\r\n      http\r\n        .post(\"nalazi/create\", {\r\n          token: this.$store.state.token,\r\n          site: this.$store.state.site,\r\n          type: \"partial\",\r\n          uzorci: this.uzorci,\r\n          samples: this.partials,\r\n          timestamp: this.timestamp,\r\n          napomena: \"\",\r\n          status: false,\r\n          idNalaza: \"\",\r\n          location: \"/partials\",\r\n          klijent: this.klijent,\r\n          naziv: this.timestamp\r\n        })\r\n        .then(res => {\r\n          if (res.data.success) {\r\n            if (!res.data.success) {\r\n              this.$refs.staticModalError.open();\r\n            } else {\r\n              this.path = this.timestamp + \".pdf\";\r\n\r\n              this.url = server + \"nalazi/partials/\" + this.path;\r\n\r\n              var options = {\r\n                width: \"100%\",\r\n                height: \"800px\"\r\n              };\r\n              PDFObject.embed(this.url, \"#pdf-container\", options);\r\n\r\n              this.email_button = true;\r\n              this.main = false;\r\n              this.pdf = true;\r\n            }\r\n          }\r\n        });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.collapse-page {\r\n  &__content {\r\n    padding: 2rem;\r\n    &__title {\r\n      font-size: 1.375rem;\r\n      font-weight: bold;\r\n    }\r\n  }\r\n}\r\n\r\n.icon-bar a {\r\n  color: #fff;\r\n  text-decoration: none;\r\n}\r\n\r\n.icon-bar a:hover {\r\n  color: #4ae387;\r\n}\r\n\r\ni:hover {\r\n  color: #4ae387 !important;\r\n}\r\n\r\n.circle {\r\n  width: 1rem;\r\n  opacity: 0.5;\r\n  height: 1rem;\r\n  border-radius: 50%;\r\n  display: inline-block;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/obrada/Obrada.vue","exports = module.exports = require(\"../../css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \".vld-overlay{bottom:0;left:0;position:absolute;right:0;top:0;align-items:center;display:none;justify-content:center;overflow:hidden;z-index:1}.vld-overlay.is-active{display:flex}.vld-overlay.is-full-page{z-index:999;position:fixed}.vld-overlay .vld-background{bottom:0;left:0;position:absolute;right:0;top:0;background:#fff;opacity:.5}.vld-overlay .vld-icon,.vld-parent{position:relative}\", \"\", {\"version\":3,\"sources\":[\"C:/Users/atom/Desktop/ATOM Projects/ACTIVE Projects/185.62.136.71 (A2 Hosting)/10020 - ExtraLab Laboratorij/elt_client/node_modules/vue-loading-overlay/dist/vue-loading.css\"],\"names\":[],\"mappings\":\"AAAA,aACE,SAAU,AACV,OAAQ,AACR,kBAAmB,AACnB,QAAS,AACT,MAAO,AACP,mBAAoB,AACpB,aAAc,AACd,uBAAwB,AACxB,gBAAiB,AACjB,SAAU,CACX,AAED,uBACE,YAAa,CACd,AAED,0BACE,YAAa,AACb,cAAe,CAChB,AAED,6BACE,SAAU,AACV,OAAQ,AACR,kBAAmB,AACnB,QAAS,AACT,MAAO,AACP,gBAAiB,AACjB,UAAY,CACb,AAED,mCACE,iBAAkB,CACnB\",\"file\":\"vue-loading.css\",\"sourcesContent\":[\".vld-overlay {\\n  bottom: 0;\\n  left: 0;\\n  position: absolute;\\n  right: 0;\\n  top: 0;\\n  align-items: center;\\n  display: none;\\n  justify-content: center;\\n  overflow: hidden;\\n  z-index: 1\\n}\\n\\n.vld-overlay.is-active {\\n  display: flex\\n}\\n\\n.vld-overlay.is-full-page {\\n  z-index: 999;\\n  position: fixed\\n}\\n\\n.vld-overlay .vld-background {\\n  bottom: 0;\\n  left: 0;\\n  position: absolute;\\n  right: 0;\\n  top: 0;\\n  background: #fff;\\n  opacity: 0.5\\n}\\n\\n.vld-overlay .vld-icon, .vld-parent {\\n  position: relative\\n}\\n\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader?{\"minimize\":true,\"sourceMap\":true}!./node_modules/vue-loading-overlay/dist/vue-loading.css\n// module id = MbHo\n// module chunks = 0 1 2 3 4 6 7 8 10 11 12 13 14 15 16 17 18 28 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46","<template>\r\n  <span class=\"circle\" :class=\"classObject\"></span>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"badgeColumn\",\r\n  props: {\r\n    rowData: {\r\n      type: Object,\r\n      required: true\r\n    },\r\n    rowIndex: {\r\n      type: Number\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      classObject: {\r\n        \"badge-warning\": this.rowIndex % 6 === 0,\r\n        \"badge-primary\": this.rowIndex % 6 === 1,\r\n        \"badge-danger\": this.rowIndex % 6 === 2,\r\n        \"badge-info\": this.rowIndex % 6 === 3,\r\n        \"badge-violet\": this.rowIndex % 6 === 4,\r\n        \"badge-dark-blue\": this.rowIndex % 6 === 5\r\n      }\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.circle {\r\n  width: 0.4rem;\r\n  height: 0.4rem;\r\n  border-radius: 50%;\r\n  display: inline-block;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/obrada/BadgeColumn.vue","// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window\nvar toIObject = require('./_to-iobject');\nvar gOPN = require('./_object-gopn').f;\nvar toString = {}.toString;\n\nvar windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames\n  ? Object.getOwnPropertyNames(window) : [];\n\nvar getWindowNames = function (it) {\n  try {\n    return gOPN(it);\n  } catch (e) {\n    return windowNames.slice();\n  }\n};\n\nmodule.exports.f = function getOwnPropertyNames(it) {\n  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_object-gopn-ext.js\n// module id = Rrel\n// module chunks = 8","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../css-loader/index.js??ref--7-2!./vue-loading.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../vue-style-loader/lib/addStylesClient.js\")(\"745170b4\", content, true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loading-overlay/dist/vue-loading.css\n// module id = SYh3\n// module chunks = 0 1 2 3 4 6 7 8 10 11 12 13 14 15 16 17 18 28 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46","/*global ActiveXObject, window, console, define, module, jQuery */\n//jshint unused:false, strict: false\n\n/*\n    PDFObject v2.1.1\n    https://github.com/pipwerks/PDFObject\n    Copyright (c) 2008-2018 Philip Hutchison\n    MIT-style license: http://pipwerks.mit-license.org/\n    UMD module pattern from https://github.com/umdjs/umd/blob/master/templates/returnExports.js\n*/\n\n(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define([], factory);\n    } else if (typeof module === 'object' && module.exports) {\n        // Node. Does not work with strict CommonJS, but\n        // only CommonJS-like environments that support module.exports,\n        // like Node.\n        module.exports = factory();\n    } else {\n        // Browser globals (root is window)\n        root.PDFObject = factory();\n  }\n}(this, function () {\n\n    \"use strict\";\n    //jshint unused:true\n\n    //PDFObject is designed for client-side (browsers), not server-side (node)\n    //Will choke on undefined navigator and window vars when run on server\n    //Return boolean false and exit function when running server-side\n\n    if(typeof window === \"undefined\" || typeof navigator === \"undefined\"){ return false; }\n\n    var pdfobjectversion = \"2.1.1\",\n        ua = window.navigator.userAgent,\n\n        //declare booleans\n        supportsPDFs,\n        isIE,\n        supportsPdfMimeType = (typeof navigator.mimeTypes['application/pdf'] !== \"undefined\"),\n        supportsPdfActiveX,\n        isModernBrowser = (function (){ return (typeof window.Promise !== \"undefined\"); })(),\n        isFirefox = (function (){ return (ua.indexOf(\"irefox\") !== -1); } )(),\n        isFirefoxWithPDFJS = (function (){\n            //Firefox started shipping PDF.js in Firefox 19.\n            //If this is Firefox 19 or greater, assume PDF.js is available\n            if(!isFirefox){ return false; }\n            //parse userAgent string to get release version (\"rv\")\n            //ex: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.12; rv:57.0) Gecko/20100101 Firefox/57.0\n            return (parseInt(ua.split(\"rv:\")[1].split(\".\")[0], 10) > 18);\n        })(),\n        isIOS = (function (){ return (/iphone|ipad|ipod/i.test(ua.toLowerCase())); })(),\n\n        //declare functions\n        createAXO,\n        buildFragmentString,\n        log,\n        embedError,\n        embed,\n        getTargetElement,\n        generatePDFJSiframe,\n        generateEmbedElement;\n\n\n    /* ----------------------------------------------------\n       Supporting functions\n       ---------------------------------------------------- */\n\n    createAXO = function (type){\n        var ax;\n        try {\n            ax = new ActiveXObject(type);\n        } catch (e) {\n            ax = null; //ensure ax remains null\n        }\n        return ax;\n    };\n\n    //IE11 still uses ActiveX for Adobe Reader, but IE 11 doesn't expose\n    //window.ActiveXObject the same way previous versions of IE did\n    //window.ActiveXObject will evaluate to false in IE 11, but \"ActiveXObject\" in window evaluates to true\n    //so check the first one for older IE, and the second for IE11\n    //FWIW, MS Edge (replacing IE11) does not support ActiveX at all, both will evaluate false\n    //Constructed as a method (not a prop) to avoid unneccesarry overhead -- will only be evaluated if needed\n    isIE = function (){ return !!(window.ActiveXObject || \"ActiveXObject\" in window); };\n\n    //If either ActiveX support for \"AcroPDF.PDF\" or \"PDF.PdfCtrl\" are found, return true\n    //Constructed as a method (not a prop) to avoid unneccesarry overhead -- will only be evaluated if needed\n    supportsPdfActiveX = function (){ return !!(createAXO(\"AcroPDF.PDF\") || createAXO(\"PDF.PdfCtrl\")); };\n\n    //Determines whether PDF support is available\n    supportsPDFs = (\n        //as of iOS 12, inline PDF rendering is still not supported in Safari or native webview\n        //3rd-party browsers (eg Chrome, Firefox) use Apple's webview for rendering, and thus the same result as Safari\n        //Therefore if iOS, we shall assume that PDF support is not available\n        !isIOS && (\n            //Modern versions of Firefox come bundled with PDFJS\n            isFirefoxWithPDFJS || \n            //Browsers that still support the original MIME type check\n            supportsPdfMimeType || (\n                //Pity the poor souls still using IE\n                isIE() && supportsPdfActiveX()\n            )\n        )\n    );\n\n    //Create a fragment identifier for using PDF Open parameters when embedding PDF\n    buildFragmentString = function(pdfParams){\n\n        var string = \"\",\n            prop;\n\n        if(pdfParams){\n\n            for (prop in pdfParams) {\n                if (pdfParams.hasOwnProperty(prop)) {\n                    string += encodeURIComponent(prop) + \"=\" + encodeURIComponent(pdfParams[prop]) + \"&\";\n                }\n            }\n\n            //The string will be empty if no PDF Params found\n            if(string){\n\n                string = \"#\" + string;\n\n                //Remove last ampersand\n                string = string.slice(0, string.length - 1);\n\n            }\n\n        }\n\n        return string;\n\n    };\n\n    log = function (msg){\n        if(typeof console !== \"undefined\" && console.log){\n            console.log(\"[PDFObject] \" + msg);\n        }\n    };\n\n    embedError = function (msg){\n        log(msg);\n        return false;\n    };\n\n    getTargetElement = function (targetSelector){\n\n        //Default to body for full-browser PDF\n        var targetNode = document.body;\n\n        //If a targetSelector is specified, check to see whether\n        //it's passing a selector, jQuery object, or an HTML element\n\n        if(typeof targetSelector === \"string\"){\n\n            //Is CSS selector\n            targetNode = document.querySelector(targetSelector);\n\n        } else if (typeof jQuery !== \"undefined\" && targetSelector instanceof jQuery && targetSelector.length) {\n\n            //Is jQuery element. Extract HTML node\n            targetNode = targetSelector.get(0);\n\n        } else if (typeof targetSelector.nodeType !== \"undefined\" && targetSelector.nodeType === 1){\n\n            //Is HTML element\n            targetNode = targetSelector;\n\n        }\n\n        return targetNode;\n\n    };\n\n    generatePDFJSiframe = function (targetNode, url, pdfOpenFragment, PDFJS_URL, id){\n\n        var fullURL = PDFJS_URL + \"?file=\" + encodeURIComponent(url) + pdfOpenFragment;\n        var scrollfix = (isIOS) ? \"-webkit-overflow-scrolling: touch; overflow-y: scroll; \" : \"overflow: hidden; \";\n        var iframe = \"<div style='\" + scrollfix + \"position: absolute; top: 0; right: 0; bottom: 0; left: 0;'><iframe  \" + id + \" src='\" + fullURL + \"' style='border: none; width: 100%; height: 100%;' frameborder='0'></iframe></div>\";\n        targetNode.className += \" pdfobject-container\";\n        targetNode.style.position = \"relative\";\n        targetNode.style.overflow = \"auto\";\n        targetNode.innerHTML = iframe;\n        return targetNode.getElementsByTagName(\"iframe\")[0];\n\n    };\n\n    generateEmbedElement = function (targetNode, targetSelector, url, pdfOpenFragment, width, height, id){\n\n        var style = \"\";\n\n        if(targetSelector && targetSelector !== document.body){\n            style = \"width: \" + width + \"; height: \" + height + \";\";\n        } else {\n            style = \"position: absolute; top: 0; right: 0; bottom: 0; left: 0; width: 100%; height: 100%;\";\n        }\n\n        targetNode.className += \" pdfobject-container\";\n        targetNode.innerHTML = \"<embed \" + id + \" class='pdfobject' src='\" + url + pdfOpenFragment + \"' type='application/pdf' style='overflow: auto; \" + style + \"'/>\";\n\n        return targetNode.getElementsByTagName(\"embed\")[0];\n\n    };\n\n    embed = function(url, targetSelector, options){\n\n        //Ensure URL is available. If not, exit now.\n        if(typeof url !== \"string\"){ return embedError(\"URL is not valid\"); }\n\n        //If targetSelector is not defined, convert to boolean\n        targetSelector = (typeof targetSelector !== \"undefined\") ? targetSelector : false;\n\n        //Ensure options object is not undefined -- enables easier error checking below\n        options = (typeof options !== \"undefined\") ? options : {};\n\n        //Get passed options, or set reasonable defaults\n        var id = (options.id && typeof options.id === \"string\") ? \"id='\" + options.id + \"'\" : \"\",\n            page = (options.page) ? options.page : false,\n            pdfOpenParams = (options.pdfOpenParams) ? options.pdfOpenParams : {},\n            fallbackLink = (typeof options.fallbackLink !== \"undefined\") ? options.fallbackLink : true,\n            width = (options.width) ? options.width : \"100%\",\n            height = (options.height) ? options.height : \"100%\",\n            assumptionMode = (typeof options.assumptionMode === \"boolean\") ? options.assumptionMode : true,\n            forcePDFJS = (typeof options.forcePDFJS === \"boolean\") ? options.forcePDFJS : false,\n            PDFJS_URL = (options.PDFJS_URL) ? options.PDFJS_URL : false,\n            targetNode = getTargetElement(targetSelector),\n            fallbackHTML = \"\",\n            pdfOpenFragment = \"\",\n            fallbackHTML_default = \"<p>This browser does not support inline PDFs. Please download the PDF to view it: <a href='[url]'>Download PDF</a></p>\";\n\n        //If target element is specified but is not valid, exit without doing anything\n        if(!targetNode){ return embedError(\"Target element cannot be determined\"); }\n\n\n        //page option overrides pdfOpenParams, if found\n        if(page){\n            pdfOpenParams.page = page;\n        }\n\n        //Stringify optional Adobe params for opening document (as fragment identifier)\n        pdfOpenFragment = buildFragmentString(pdfOpenParams);\n\n        //Do the dance\n\n        //If the forcePDFJS option is invoked, skip everything else and embed as directed\n        if(forcePDFJS && PDFJS_URL){\n\n            return generatePDFJSiframe(targetNode, url, pdfOpenFragment, PDFJS_URL, id);\n\n        //If traditional support is provided, or if this is a modern browser and not iOS (see comment for supportsPDFs declaration)\n        } else if(supportsPDFs || (assumptionMode && isModernBrowser && !isIOS)){\n\n            return generateEmbedElement(targetNode, targetSelector, url, pdfOpenFragment, width, height, id);\n\n        //If everything else has failed and a PDFJS fallback is provided, try to use it\n        } else if(PDFJS_URL){\n\n            return generatePDFJSiframe(targetNode, url, pdfOpenFragment, PDFJS_URL, id);\n\n        } else {\n\n            //Display the fallback link if available\n            if(fallbackLink){\n\n                fallbackHTML = (typeof fallbackLink === \"string\") ? fallbackLink : fallbackHTML_default;\n                targetNode.innerHTML = fallbackHTML.replace(/\\[url\\]/g, url);\n\n            }\n\n            return embedError(\"This browser does not support embedded PDFs\");\n\n        }\n\n    };\n\n    return {\n        embed: function (a,b,c){ return embed(a,b,c); },\n        pdfobjectversion: (function () { return pdfobjectversion; })(),\n        supportsPDFs: (function (){ return supportsPDFs; })()\n    };\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pdfobject/pdfobject.js\n// module id = UqI+\n// module chunks = 8 28 30","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-61c2f4b3\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./BadgeColumn.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./BadgeColumn.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-61c2f4b3\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":\\\"src\\\",\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./BadgeColumn.vue\"\n/* template functional */\n  var __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-61c2f4b3\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/obrada/BadgeColumn.vue\n// module id = XMpX\n// module chunks = 8 19 29 53","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-340b1f55\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/sass-loader/lib/loader.js?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Obrada.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"22c8f432\", content, true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/extract-text-webpack-plugin/dist/loader.js?{\"omit\":1,\"remove\":true}!./node_modules/vue-style-loader!./node_modules/css-loader?{\"minimize\":true,\"sourceMap\":true}!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-340b1f55\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/sass-loader/lib/loader.js?{\"sourceMap\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/components/obrada/Obrada.vue\n// module id = ZPH3\n// module chunks = 8","!function(t,e){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(\"VueLoading\",[],e):\"object\"==typeof exports?exports.VueLoading=e():t.VueLoading=e()}(\"undefined\"!=typeof self?self:this,function(){return function(t){var e={};function i(n){if(e[n])return e[n].exports;var r=e[n]={i:n,l:!1,exports:{}};return t[n].call(r.exports,r,r.exports,i),r.l=!0,r.exports}return i.m=t,i.c=e,i.d=function(t,e,n){i.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},i.r=function(t){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})},i.t=function(t,e){if(1&e&&(t=i(t)),8&e)return t;if(4&e&&\"object\"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(i.r(n),Object.defineProperty(n,\"default\",{enumerable:!0,value:t}),2&e&&\"string\"!=typeof t)for(var r in t)i.d(n,r,function(e){return t[e]}.bind(null,r));return n},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,\"a\",e),e},i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},i.p=\"\",i(i.s=1)}([function(t,e,i){},function(t,e,i){\"use strict\";i.r(e);var n=\"undefined\"!=typeof window?window.HTMLElement:Object,r={mounted:function(){document.addEventListener(\"focusin\",this.focusIn)},methods:{focusIn:function(t){if(this.isActive&&t.target!==this.$el&&!this.$el.contains(t.target)){var e=this.container?this.container:this.isFullPage?null:this.$el.parentElement;(this.isFullPage||e&&e.contains(t.target))&&(t.preventDefault(),this.$el.focus())}}},beforeDestroy:function(){document.removeEventListener(\"focusin\",this.focusIn)}};function a(t,e,i,n,r,a,o,s){var u,l=\"function\"==typeof t?t.options:t;if(e&&(l.render=e,l.staticRenderFns=i,l._compiled=!0),n&&(l.functional=!0),a&&(l._scopeId=\"data-v-\"+a),o?(u=function(t){(t=t||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||\"undefined\"==typeof __VUE_SSR_CONTEXT__||(t=__VUE_SSR_CONTEXT__),r&&r.call(this,t),t&&t._registeredComponents&&t._registeredComponents.add(o)},l._ssrRegister=u):r&&(u=s?function(){r.call(this,this.$root.$options.shadowRoot)}:r),u)if(l.functional){l._injectStyles=u;var c=l.render;l.render=function(t,e){return u.call(e),c(t,e)}}else{var d=l.beforeCreate;l.beforeCreate=d?[].concat(d,u):[u]}return{exports:t,options:l}}var o=a({name:\"spinner\",props:{color:{type:String,default:\"#000\"},height:{type:Number,default:64},width:{type:Number,default:64}}},function(){var t=this.$createElement,e=this._self._c||t;return e(\"svg\",{attrs:{viewBox:\"0 0 38 38\",xmlns:\"http://www.w3.org/2000/svg\",width:this.width,height:this.height,stroke:this.color}},[e(\"g\",{attrs:{fill:\"none\",\"fill-rule\":\"evenodd\"}},[e(\"g\",{attrs:{transform:\"translate(1 1)\",\"stroke-width\":\"2\"}},[e(\"circle\",{attrs:{\"stroke-opacity\":\".25\",cx:\"18\",cy:\"18\",r:\"18\"}}),e(\"path\",{attrs:{d:\"M36 18c0-9.94-8.06-18-18-18\"}},[e(\"animateTransform\",{attrs:{attributeName:\"transform\",type:\"rotate\",from:\"0 18 18\",to:\"360 18 18\",dur:\"0.8s\",repeatCount:\"indefinite\"}})],1)])])])},[],!1,null,null,null).exports,s=a({name:\"dots\",props:{color:{type:String,default:\"#000\"},height:{type:Number,default:240},width:{type:Number,default:60}}},function(){var t=this.$createElement,e=this._self._c||t;return e(\"svg\",{attrs:{viewBox:\"0 0 120 30\",xmlns:\"http://www.w3.org/2000/svg\",fill:this.color,width:this.width,height:this.height}},[e(\"circle\",{attrs:{cx:\"15\",cy:\"15\",r:\"15\"}},[e(\"animate\",{attrs:{attributeName:\"r\",from:\"15\",to:\"15\",begin:\"0s\",dur:\"0.8s\",values:\"15;9;15\",calcMode:\"linear\",repeatCount:\"indefinite\"}}),e(\"animate\",{attrs:{attributeName:\"fill-opacity\",from:\"1\",to:\"1\",begin:\"0s\",dur:\"0.8s\",values:\"1;.5;1\",calcMode:\"linear\",repeatCount:\"indefinite\"}})]),e(\"circle\",{attrs:{cx:\"60\",cy:\"15\",r:\"9\",\"fill-opacity\":\"0.3\"}},[e(\"animate\",{attrs:{attributeName:\"r\",from:\"9\",to:\"9\",begin:\"0s\",dur:\"0.8s\",values:\"9;15;9\",calcMode:\"linear\",repeatCount:\"indefinite\"}}),e(\"animate\",{attrs:{attributeName:\"fill-opacity\",from:\"0.5\",to:\"0.5\",begin:\"0s\",dur:\"0.8s\",values:\".5;1;.5\",calcMode:\"linear\",repeatCount:\"indefinite\"}})]),e(\"circle\",{attrs:{cx:\"105\",cy:\"15\",r:\"15\"}},[e(\"animate\",{attrs:{attributeName:\"r\",from:\"15\",to:\"15\",begin:\"0s\",dur:\"0.8s\",values:\"15;9;15\",calcMode:\"linear\",repeatCount:\"indefinite\"}}),e(\"animate\",{attrs:{attributeName:\"fill-opacity\",from:\"1\",to:\"1\",begin:\"0s\",dur:\"0.8s\",values:\"1;.5;1\",calcMode:\"linear\",repeatCount:\"indefinite\"}})])])},[],!1,null,null,null).exports,u=a({name:\"bars\",props:{color:{type:String,default:\"#000\"},height:{type:Number,default:40},width:{type:Number,default:40}}},function(){var t=this.$createElement,e=this._self._c||t;return e(\"svg\",{attrs:{xmlns:\"http://www.w3.org/2000/svg\",viewBox:\"0 0 30 30\",height:this.height,width:this.width,fill:this.color}},[e(\"rect\",{attrs:{x:\"0\",y:\"13\",width:\"4\",height:\"5\"}},[e(\"animate\",{attrs:{attributeName:\"height\",attributeType:\"XML\",values:\"5;21;5\",begin:\"0s\",dur:\"0.6s\",repeatCount:\"indefinite\"}}),e(\"animate\",{attrs:{attributeName:\"y\",attributeType:\"XML\",values:\"13; 5; 13\",begin:\"0s\",dur:\"0.6s\",repeatCount:\"indefinite\"}})]),e(\"rect\",{attrs:{x:\"10\",y:\"13\",width:\"4\",height:\"5\"}},[e(\"animate\",{attrs:{attributeName:\"height\",attributeType:\"XML\",values:\"5;21;5\",begin:\"0.15s\",dur:\"0.6s\",repeatCount:\"indefinite\"}}),e(\"animate\",{attrs:{attributeName:\"y\",attributeType:\"XML\",values:\"13; 5; 13\",begin:\"0.15s\",dur:\"0.6s\",repeatCount:\"indefinite\"}})]),e(\"rect\",{attrs:{x:\"20\",y:\"13\",width:\"4\",height:\"5\"}},[e(\"animate\",{attrs:{attributeName:\"height\",attributeType:\"XML\",values:\"5;21;5\",begin:\"0.3s\",dur:\"0.6s\",repeatCount:\"indefinite\"}}),e(\"animate\",{attrs:{attributeName:\"y\",attributeType:\"XML\",values:\"13; 5; 13\",begin:\"0.3s\",dur:\"0.6s\",repeatCount:\"indefinite\"}})])])},[],!1,null,null,null).exports,l=a({name:\"vue-loading\",mixins:[r],props:{active:Boolean,programmatic:Boolean,container:[Object,Function,n],isFullPage:{type:Boolean,default:!0},transition:{type:String,default:\"fade\"},canCancel:Boolean,onCancel:{type:Function,default:function(){}},color:String,backgroundColor:String,opacity:Number,width:Number,height:Number,zIndex:Number,loader:{type:String,default:\"spinner\"}},data:function(){return{isActive:this.active}},components:{Spinner:o,Dots:s,Bars:u},beforeMount:function(){this.programmatic&&(this.container?(this.isFullPage=!1,this.container.appendChild(this.$el)):document.body.appendChild(this.$el))},mounted:function(){this.programmatic&&(this.isActive=!0),document.addEventListener(\"keyup\",this.keyPress)},methods:{cancel:function(){this.canCancel&&this.isActive&&(this.hide(),this.onCancel.apply(null,arguments))},hide:function(){var t=this;this.$emit(\"hide\"),this.$emit(\"update:active\",!1),this.programmatic&&(this.isActive=!1,setTimeout(function(){var e;t.$destroy(),void 0!==(e=t.$el).remove?e.remove():e.parentNode.removeChild(e)},150))},keyPress:function(t){27===t.keyCode&&this.cancel()}},watch:{active:function(t){this.isActive=t}},beforeDestroy:function(){document.removeEventListener(\"keyup\",this.keyPress)}},function(){var t=this,e=t.$createElement,i=t._self._c||e;return i(\"transition\",{attrs:{name:t.transition}},[i(\"div\",{directives:[{name:\"show\",rawName:\"v-show\",value:t.isActive,expression:\"isActive\"}],staticClass:\"vld-overlay is-active\",class:{\"is-full-page\":t.isFullPage},style:{zIndex:this.zIndex},attrs:{tabindex:\"0\",\"aria-busy\":t.isActive,\"aria-label\":\"Loading\"}},[i(\"div\",{staticClass:\"vld-background\",style:{background:this.backgroundColor,opacity:this.opacity},on:{click:function(e){return e.preventDefault(),t.cancel(e)}}}),i(\"div\",{staticClass:\"vld-icon\"},[t._t(\"before\"),t._t(\"default\",[i(t.loader,{tag:\"component\",attrs:{color:t.color,width:t.width,height:t.height}})]),t._t(\"after\")],2)])])},[],!1,null,null,null).exports,c=function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return{show:function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:e,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:i,a=Object.assign({},e,n,{programmatic:!0}),o=new(t.extend(l))({el:document.createElement(\"div\"),propsData:a}),s=Object.assign({},i,r);return Object.keys(s).map(function(t){o.$slots[t]=s[t]}),o}}};i(0);l.install=function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},n=c(t,e,i);t.$loading=n,t.prototype.$loading=n};e.default=l}]).default});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loading-overlay/dist/vue-loading.min.js\n// module id = ZZvs\n// module chunks = 0 1 2 3 4 6 7 8 10 11 12 13 14 15 16 17 18 28 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46","module.exports = { \"default\": require(\"core-js/library/fn/object/get-own-property-names\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/core-js/object/get-own-property-names.js\n// module id = aFK5\n// module chunks = 8","var interpretacija = require(\"./interpretacija\");\r\n\r\nmodule.exports = {\r\n  Interpretation: function(test, result, jedinica, dref, gref, site, interp, extend, spec) {\r\n   \r\n    var rezultat = result.trim()\r\n\r\n    switch (interp) {\r\n     case \"none\":\r\n        return [test, rezultat, interpretacija.None(rezultat, dref, gref)[0], jedinica, \"/\", interpretacija.None(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"A\":\r\n        return [test, rezultat, interpretacija.Standard(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.Standard(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"ogtt\":        \r\n        if(dref == \"0\" && gref == \"0\"){\r\n          var reference = \"/\"\r\n        }else{\r\n          var reference = dref + \" - \" + gref\r\n        }\r\n        return [test, rezultat, interpretacija.Standard(rezultat, dref, gref)[0], jedinica, reference, interpretacija.Standard(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"insul\":\r\n        if(dref == \"0\" && gref == \"0\"){\r\n          var reference = \"/\"\r\n        }else{\r\n          var reference = dref + \" - \" + gref\r\n        }\r\n        return [test, rezultat, interpretacija.Standard(rezultat, dref, gref)[0], jedinica, reference, interpretacija.Standard(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"less\":\r\n        if(dref === gref){\r\n          return [test, rezultat, interpretacija.Less(rezultat, dref, gref)[0], jedinica, \" < \" + gref, interpretacija.Less(rezultat, dref, gref)[1], extend];  \r\n        }else{\r\n          return [test, rezultat, interpretacija.Less(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.Less(rezultat, dref, gref)[1], extend];\r\n        }                \r\n        break; \r\n      case \"lesseq\":\r\n        return [test, rezultat, interpretacija.LessEqual(rezultat, dref, gref)[0], jedinica, \" ≤ \" + gref, interpretacija.LessEqual(rezultat, dref, gref)[1], extend];             \r\n        break;\r\n      case \"lesspl\":\r\n          return [test, rezultat, interpretacija.LessPlus(rezultat, dref, gref)[0], jedinica, \" < \" + gref + \" x 10^6\", interpretacija.LessPlus(rezultat, dref, gref)[1], extend];             \r\n          break; \r\n      case \"infekc\":\r\n        return [test, rezultat, interpretacija.Infekcija(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.Infekcija(rezultat, dref, gref)[1], extend];             \r\n        break; \r\n      case \"grt\":\r\n        return [test, rezultat, interpretacija.Greater(rezultat, dref, gref)[0], jedinica, \" > \" + gref, interpretacija.Greater(rezultat, dref, gref)[1], extend];        \r\n        break; \r\n      case \"grtno\":\r\n          return [test, rezultat, interpretacija.GreaterNoInterp(rezultat, dref, gref)[0], jedinica, \" > \" + gref, interpretacija.GreaterNoInterp(rezultat, dref, gref)[1], extend];        \r\n          break; \r\n      case \"grtpl\":\r\n        return [test, rezultat, interpretacija.Greater(rezultat, dref, gref)[0], jedinica, \" > \" + gref + \" x 10^6\", interpretacija.Greater(rezultat, dref, gref)[1], extend];        \r\n        break; \r\n      case \"grtepl\":\r\n          return [test, rezultat, interpretacija.GreaterEqual(rezultat, dref, gref)[0], jedinica, \" ≥ \" + gref + \" x 10^6\", interpretacija.GreaterEqual(rezultat, dref, gref)[1], extend];        \r\n          break; \r\n      case \"grte\":\r\n        return [test, rezultat, interpretacija.GreaterEqual(rezultat, dref, gref)[0], jedinica, \" ≥ \" + gref, interpretacija.GreaterEqual(rezultat, dref, gref)[1], extend];        \r\n        break;  \r\n      case \"neg\":\r\n        return [test, rezultat, interpretacija.Negativan(rezultat, dref, gref)[0], jedinica, \"negativan\", interpretacija.Negativan(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"reakt\":\r\n        return [test, rezultat, interpretacija.Reaktivan(rezultat, dref, gref)[0], jedinica, \"negativan\", interpretacija.Reaktivan(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"norm\":\r\n        return [test, rezultat, interpretacija.Normalan(rezultat, dref, gref)[0], jedinica, \"normalna\", interpretacija.Normalan(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"norma\":\r\n        return [test, rezultat, interpretacija.Normalan(rezultat, dref, gref)[0], jedinica, \"normalan\", interpretacija.Normalan(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"ured\":\r\n        return [test, rezultat, interpretacija.Uredan(rezultat, dref, gref)[0], jedinica, \"uredna\", interpretacija.Uredan(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"plus\":\r\n        return [test, rezultat, interpretacija.Plus(rezultat, dref, gref)[0], jedinica, \"+ + +\", interpretacija.Plus(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"morf\":\r\n        return [test, rezultat, interpretacija.Morf(rezultat, dref, gref)[0], jedinica, gref, interpretacija.Morf(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"titar\":\r\n          return [test, rezultat, interpretacija.Titar(rezultat, dref, gref)[0], jedinica, \"< \" + dref + \":\" + gref, interpretacija.Titar(rezultat, dref, gref)[1], extend];\r\n          break;\r\n      case \"tsh\":\r\n        return [test, rezultat, interpretacija.TSH(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.TSH(rezultat, dref, gref)[1], extend];\r\n        break; \r\n      case \"trg\":      \r\n        return [test, rezultat, interpretacija.TRG(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.TRG(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"hol\":      \r\n        return [test, rezultat, interpretacija.HOL(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.HOL(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"hdl\":      \r\n        return [test, rezultat, interpretacija.HDL(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.HDL(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"ldl\":      \r\n        return [test, rezultat, interpretacija.LDL(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.LDL(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"fpsa\":      \r\n        return [test, rezultat, interpretacija.fPSA(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.fPSA(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"sediment\":\r\n        return [test, rezultat, interpretacija.Sedimentacija(rezultat, dref, gref)[0], jedinica, \"< \" + gref, interpretacija.Sedimentacija(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"bistar\":\r\n        return [test, rezultat, interpretacija.Bistar(rezultat, dref, gref)[0], jedinica, \"bistar\", interpretacija.Bistar(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"boja\":\r\n        return [test, rezultat, interpretacija.Boja(rezultat, dref, gref)[0], jedinica, \"žut\", interpretacija.Boja(rezultat, dref, gref)[1], extend];\r\n        break;   \r\n      case \"bojasp\":\r\n          return [test, rezultat, interpretacija.BojaSpermiogram(rezultat, dref, gref)[0], jedinica, \"blijedo žut\", interpretacija.BojaSpermiogram(rezultat, dref, gref)[1], extend];\r\n          break;    \r\n      case \"nesto\":\r\n        return [test, rezultat, interpretacija.Nesto(rezultat, dref, gref)[0], jedinica, \"nešto\", interpretacija.Nesto(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"exists\":\r\n        return [test, rezultat, interpretacija.Exists(rezultat, dref, gref)[0], jedinica, \" \", interpretacija.Exists(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"nema\":\r\n          return [test, rezultat, interpretacija.Nema(rezultat, dref, gref)[0], jedinica, \"nema\", interpretacija.Nema(rezultat, dref, gref)[1], extend];\r\n          break;\r\n      case \"blst\":\r\n        return [test, rezultat, interpretacija.Blasti(rezultat, dref, gref)[0], jedinica, gref, interpretacija.Blasti(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"leu\":      \r\n        return [test, rezultat, interpretacija.LeuErc(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.LeuErc(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"spec\":      \r\n        return [test, rezultat, interpretacija.Specific(rezultat, dref, gref)[0], jedinica, spec, interpretacija.Specific(rezultat, dref, gref)[1], extend];\r\n        break;      \r\n      default:\r\n        return [test, rezultat, interpretacija.None(rezultat, dref, gref)[0], jedinica, \"/\", interpretacija.None(rezultat, dref, gref)[1], extend];\r\n        break;\r\n    }\r\n  }\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/obrada/functions/reference.js","require('../../modules/es6.object.get-own-property-names');\nvar $Object = require('../../modules/_core').Object;\nmodule.exports = function getOwnPropertyNames(it) {\n  return $Object.getOwnPropertyNames(it);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/fn/object/get-own-property-names.js\n// module id = gAsd\n// module chunks = 8","export default {\r\n  hex2rgb(hex, opacity) {\r\n    hex = (hex + \"\").trim();\r\n\r\n    let rgb = null;\r\n    let match = hex.match(/^#?(([0-9a-zA-Z]{3}){1,3})$/);\r\n\r\n    if (!match) {\r\n      return null;\r\n    }\r\n\r\n    rgb = {};\r\n\r\n    hex = match[1];\r\n\r\n    if (hex.length === 6) {\r\n      rgb.r = parseInt(hex.substring(0, 2), 16);\r\n      rgb.g = parseInt(hex.substring(2, 4), 16);\r\n      rgb.b = parseInt(hex.substring(4, 6), 16);\r\n    } else if (hex.length === 3) {\r\n      rgb.r = parseInt(hex.substring(0, 1) + hex.substring(0, 1), 16);\r\n      rgb.g = parseInt(hex.substring(1, 2) + hex.substring(1, 2), 16);\r\n      rgb.b = parseInt(hex.substring(2, 3) + hex.substring(2, 3), 16);\r\n    }\r\n\r\n    rgb.css = \"rgb\" + (opacity ? \"a\" : \"\") + \"(\";\r\n    rgb.css += rgb.r + \",\" + rgb.g + \",\" + rgb.b;\r\n    rgb.css += (opacity ? \",\" + opacity : \"\") + \")\";\r\n\r\n    return rgb;\r\n  }\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/utils.js","// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)\nvar $keys = require('./_object-keys-internal');\nvar hiddenKeys = require('./_enum-bug-keys').concat('length', 'prototype');\n\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return $keys(O, hiddenKeys);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_object-gopn.js\n// module id = n0T6\n// module chunks = 8"],"sourceRoot":""}