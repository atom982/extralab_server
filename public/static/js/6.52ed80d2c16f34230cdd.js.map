{"version":3,"sources":["webpack:///static/js/6.52ed80d2c16f34230cdd.js","webpack:///./src/components/obrada/Obrada.vue","webpack:///./src/components/obrada/functions/interpretacija.js","webpack:///./src/components/obrada/Obrada.vue?3478","webpack:///./src/components/obrada/data-izbornik/izbornik.js","webpack:///./node_modules/core-js/library/modules/es6.object.get-own-property-names.js","webpack:///src/components/obrada/Obrada.vue","webpack:///./node_modules/vue-loading-overlay/dist/vue-loading.css","webpack:///./src/components/obrada/BadgeColumn.vue?6d02","webpack:///src/components/obrada/BadgeColumn.vue","webpack:///./node_modules/core-js/library/modules/_object-gopn-ext.js","webpack:///./node_modules/vue-loading-overlay/dist/vue-loading.css?ff3f","webpack:///./node_modules/pdfobject/pdfobject.js","webpack:///./src/components/obrada/BadgeColumn.vue","webpack:///./node_modules/vue-loading-overlay/dist/vue-loading.min.js","webpack:///./node_modules/babel-runtime/core-js/object/get-own-property-names.js","webpack:///./src/components/obrada/BadgeColumn.vue?7493","webpack:///./src/components/obrada/functions/reference.js","webpack:///./node_modules/core-js/library/fn/object/get-own-property-names.js","webpack:///./src/services/utils.js","webpack:///./node_modules/core-js/library/modules/_object-gopn.js","webpack:///./src/components/obrada/Obrada.vue?01b2","webpack:///./src/components/obrada/BadgeColumn.vue?3eff","webpack:///./src/components/obrada/Obrada.vue?c268"],"names":["webpackJsonp","0fl9","module","__webpack_exports__","__webpack_require__","injectStyle","ssrContext","Object","defineProperty","value","__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Obrada_vue__","__WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_5fb25dc1_hasScoped_true_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Obrada_vue__","normalizeComponent","__vue_styles__","Component","3r/r","exports","None","result","dref","gref","replace","Standard","rezultat","isNaN","Number","Math","abs","Less","Greater","GreaterEqual","Negativan","includes","Reaktivan","Normalan","toLowerCase","Uredan","Plus","trim","Infekcija","TSH","TRG","HOL","HDL","LDL","fPSA","Sedimentacija","rez1","split","rez2","Bistar","Boja","Nesto","Exists","Blasti","Morf","LeuErc","rez","Titar","Specific","4Q4j","push","i","version","sources","names","mappings","file","sourcesContent","sourceRoot","8472","data","o01","o02","o05","o06","o07","o08","o09","o10","o11","o12","se03","se04","se05","se06","se07","se08","se09","se10","neg","reakt","G5/o","f","KUw5","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_own_property_names__","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_own_property_names___default","n","__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray__","__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray___default","__WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify__","__WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default","__WEBPACK_IMPORTED_MODULE_3_vue__","__WEBPACK_IMPORTED_MODULE_4__router__","__WEBPACK_IMPORTED_MODULE_5_vuex_store__","__WEBPACK_IMPORTED_MODULE_6_services_utils__","__WEBPACK_IMPORTED_MODULE_7__config_config_js__","__WEBPACK_IMPORTED_MODULE_8__BadgeColumn_vue__","__WEBPACK_IMPORTED_MODULE_9__main__","__WEBPACK_IMPORTED_MODULE_10__functions_reference_js__","__WEBPACK_IMPORTED_MODULE_10__functions_reference_js___default","__WEBPACK_IMPORTED_MODULE_11__data_izbornik_izbornik__","__WEBPACK_IMPORTED_MODULE_12_vue_loading_overlay__","__WEBPACK_IMPORTED_MODULE_12_vue_loading_overlay___default","__WEBPACK_IMPORTED_MODULE_13_vue_loading_overlay_dist_vue_loading_css__","__WEBPACK_IMPORTED_MODULE_13_vue_loading_overlay_dist_vue_loading_css___default","__WEBPACK_IMPORTED_MODULE_14__vuestic_components_vuestic_chart_chart_types_LineChart__","__WEBPACK_IMPORTED_MODULE_15_epic_spinners__","__WEBPACK_IMPORTED_MODULE_16_pdfobject__","__WEBPACK_IMPORTED_MODULE_16_pdfobject___default","component","name","AllowGetSample","MicrobiologyOrder","MicrobiologySample","ModalNegative","ModalPositive","ModalPositiveCondition","ShowAllBacteries","ShowAntibiotics","ShowBacteries","BacteryTabs","CurrentTab","CurrentTest","MicrobiologyModalHeader","SelectedBacteries","NegativeResultSelection","PositiveResultSelection","MicrobiologyScenario","Antibiotics","TemporaryAntibiotics","TemporaryBacteries","TemporaryBacteriesAdd","Antibiograms","Bacteries","MicrobiologyResult","negative","positive","BUG","F_RESULT","M_RESULT","DefaultBacteries","RemainingBacteries","NegativeDescriptions","PositiveDescriptions","multiparam_izbor","multiparam_id","analit","multiparams","Response","spinner","multiparam_izbornik","warning","analiza","text","control","main","show","pdf","header","lokacija","timestamp","pacijent","ime","prezime","jmbg","pid","sid","email","email_tmp","verificiran","email_button","final_pdf","odobren","approved","verified","partials","partials_condition","count","nalaz","report","path","url","uzorci","vise","samples","sample_status","labassay","multi_test","multi_rezultati","check","link","spec","testovi","rezultati","analysers","analyser","analyser_selected","analyser_patient","analitiprikaz","analiti","naslov","calculated","show_table","sample","resdata","email_changed","Previous","Next","Results","Datum","today","query","next","previous","pagination","forward_disabled","backward_disabled","data_length","data_min","data_pid","data_spol","query_date","today_date","reference","interpretacije","toastText","toastIcon","toastPosition","toastDuration","isToastFullWidth","className","isLoading","fullPage","analiza_eval","showLineChart","optionsLineChart","dataLineChart","Procjena","jedinica","jedinice","graph","table_header","components","Loading","a","AtomSpinner","watch","this","console","log","beforeCreate","_this","get","$store","state","token","site","then","res","mounted","_this2","$on","forEach","element","opis","_id","_","isEmpty","palette","getters","obj","Multi","multi","param","rezultat_f","jedinice_f","interp","extend","refd","refg","updated_at","Date","datum","slice","time","getTime","getTimezoneOffset","toISOString","substring","vrijeme","kontrola","Interpretacija","length","sort","b","parse","responsive","maintainAspectRatio","title","display","scales","xAxes","gridLines","color","yAxes","labels","danger","primary","info","datasets","label","backgroundColor","hex2rgb","css","pointBorderColor","pointBackgroundColor","borderColor","transparent","setTimeout","$refs","staticModalDeleteSample","open","staticModalEditSample","staticModalComment","BarcodePrint","SaveResults","Approve","Verify","Disapprove","UnVerify","options","width","height","embed","staticModalError","pdf_exists","tip","dispatch","GetSingleSample","DeletedSample","EditSample","SaveMultiResults","SendMail","warn","AnalyserSelected","Sljedeci","Prethodni","staticModalFind","$route","params","id","patient","date","document","getElementById","click","post","userId","status","chosen","disabled","selected","antibiogram","antibiotici","ant","antibiotik","Scenario","rezultat_m","realizovan","results","zaprimljen","status_uzorka","test","removed","stat","localeCompare","undefined","numeric","sensitivity","$emit","bakterija","negativan","pozitivan","naziv","rbr_a","Antibiotici","largeModalneg","largeModalpos","concat","antibgr","antbtk","__v","beforeDestroy","$off","destroyed","created","Created","setDate","getDate","methods","ExclamationMulti","napomena","m_interp","m_opis","multiparam","interpretacija","snizeno","poviseno","Exclamation","dRef","gRef","staticModalExclamation","LabAssayEval","e","_this3","preventDefault","multidata","labassay_id","response","staticModalLabAssayEvalMulti","staticModalLabAssayEvalSingle","Evaluation","_this4","staticModalEvaluationMulti","staticModalEvaluationSingle","filteredAntibiotics","column","columns","_this5","filter","item","indexOf","filteredBacteries","_this6","AddAntibiotics","splice","AddBacteries","OpenMicroSelect","$event","_this7","topcije","grupa","grouporder","sifra","IDE","multi_count","kategorija","manual","select_options","eval","sekcija","anaassay","unit","edit","bakterije","neg_description","pos_description","refSet","retest","unshift","bakterioloski","bakterijed","bakterijei","neg_rezultati","poz_rezultati","counter","ima","bakt","maxVal","reduce","max","val","bact","staticModalMicroBacterySelect","OpenMicro","_this8","staticModalMicroBactery","SelectBactery","MicroResultSelect","event","_this9","staticModalSelectResult","ResetSample","staticModalResetSample","onCancel","_this10","found","toString","_this11","_this12","spol","Email","antibiogrami","Povratak","Nazad","_this13","SelectAnalyser","_this14","anaassays","aparat","staticModalAparati","_this15","close","success","Reference","staticModalReference","_this16","printEPL","surname","pacijentRBr","godiste","code","from","_this17","_this18","type","idNalaza","location","memo","_this19","RetestEnable","_this20","id_u","id_t","target","RetestDisable","_this21","MultiGet","ana","_this22","single","opcije","kod","module_sn","tmpOptionsAna","labID","nazivTesta","sn","dilucija","flag","rezultat_i","rezultat_multiple","izbor","largeModalMulti","MailDialog","staticModalSendMail","_this23","showToast","icon","position","duration","fullWidth","false","_this24","Calculate","edited","_this25","_this26","_this27","_this28","access","verify","sendEmail","staticModalVerifyPrivilege","_this29","GetResults","_this30","izabran","created_at","staticModalAllResults","GetResultsMulti","IzborTesta","_this31","picked","Partials","_this32","MbHo","OsVY","content","locals","R7hf","props","rowData","required","rowIndex","classObject","badge-warning","badge-primary","badge-danger","badge-info","badge-violet","badge-dark-blue","Rrel","toIObject","gOPN","windowNames","window","getOwnPropertyNames","getWindowNames","it","call","SYh3","UqI+","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","root","factory","apply","navigator","supportsPDFs","isIE","supportsPdfActiveX","createAXO","buildFragmentString","embedError","getTargetElement","generatePDFJSiframe","generateEmbedElement","ua","userAgent","supportsPdfMimeType","mimeTypes","isModernBrowser","Promise","isFirefox","isFirefoxWithPDFJS","parseInt","isIOS","ax","ActiveXObject","pdfParams","prop","string","hasOwnProperty","encodeURIComponent","msg","targetSelector","targetNode","body","querySelector","jQuery","nodeType","pdfOpenFragment","PDFJS_URL","fullURL","scrollfix","iframe","style","overflow","innerHTML","getElementsByTagName","page","pdfOpenParams","fallbackLink","assumptionMode","forcePDFJS","fallbackHTML","c","pdfobjectversion","XMpX","__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_BadgeColumn_vue__","__WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_29844c72_hasScoped_true_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_BadgeColumn_vue__","ZZvs","t","self","r","l","m","d","o","enumerable","Symbol","toStringTag","__esModule","create","bind","default","prototype","p","s","u","render","staticRenderFns","_compiled","functional","_scopeId","$vnode","parent","__VUE_SSR_CONTEXT__","_registeredComponents","add","_ssrRegister","$root","$options","shadowRoot","_injectStyles","HTMLElement","addEventListener","focusIn","isActive","$el","contains","container","isFullPage","parentElement","focus","removeEventListener","String","$createElement","_self","_c","attrs","viewBox","xmlns","stroke","fill","fill-rule","transform","stroke-width","stroke-opacity","cx","cy","attributeName","to","dur","repeatCount","begin","values","calcMode","fill-opacity","x","y","attributeType","mixins","active","Boolean","programmatic","Function","transition","canCancel","opacity","zIndex","loader","Spinner","Dots","Bars","beforeMount","appendChild","keyPress","cancel","hide","arguments","$destroy","remove","parentNode","removeChild","keyCode","directives","rawName","expression","staticClass","class","is-full-page","tabindex","aria-busy","aria-label","background","on","_t","tag","assign","el","createElement","propsData","keys","map","$slots","install","$loading","aFK5","ctRa","d5lM","Interpretation","gAsd","$Object","hLWQ","hex","rgb","match","g","n0T6","$keys","hiddenKeys","O","rl2g","_vm","_h","_v","_s","size","domProps","input","composing","for","headerText","rezultati_length","_l","uzorak","key","slot","staticStyle","line-height","align","_e","text-transform","index","table-danger","table-success","table-warning","padding","padding-left","padding-right","font-size","fa fa-exclamation-triangle icon-right input-icon error-icon","fa fa-check success-icon icon-right input-icon","contextmenu","change","$$selectedVal","Array","_value","$set","multiple","option","min-height","final","ref","cancelText","okText","update:show","min-width","large","select","update","povratak","empty","bactery","checked","isArray","_i","$$a","$$el","$$c","$$i","tab","prikazi","abtk","model","callback","$$v","pos","border","desc","href","action","JSON","stringify","level","text-align","flex-direction","justify-content","align-items","float","vertical-align","animation-duration","can-cancel","on-cancel","update:active","esExports","uW86","wY/V"],"mappings":"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","file":"static/js/6.52ed80d2c16f34230cdd.js","sourcesContent":["webpackJsonp([6,44],{\n\n/***/ \"0fl9\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Obrada_vue__ = __webpack_require__(\"KUw5\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_5fb25dc1_hasScoped_true_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Obrada_vue__ = __webpack_require__(\"rl2g\");\nfunction injectStyle (ssrContext) {\n  __webpack_require__(\"wY/V\")\n}\nvar normalizeComponent = __webpack_require__(\"VU/8\")\n/* script */\n\n/* template */\n\n/* template functional */\n  var __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-5fb25dc1\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Obrada_vue__[\"a\" /* default */],\n  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_5fb25dc1_hasScoped_true_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Obrada_vue__[\"a\" /* default */],\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Component.exports);\n\n\n/***/ }),\n\n/***/ \"3r/r\":\n/***/ (function(module, exports) {\n\nmodule.exports = {\n  None: function None(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    return [\" \", \"No Class\"];\n  },\n\n  Standard: function Standard(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (isNaN(rezultat) || rezultat === \"\" || dref == \"0\" && gref == \"0\") {\n      return [\" \", \"No Class\"];\n    } else if (Number(rezultat) < Number(Math.abs(dref))) {\n      return [\"L\", \"Red\"];\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\n      return [\"H\", \"Red\"];\n    } else if (Number(rezultat) === Number(Math.abs(dref)) || Number(rezultat) === Number(Math.abs(gref))) {\n      return [\" \", \"Yellow\"];\n    } else {\n      return [\" \", \"Green\"];\n    }\n  },\n\n  Less: function Less(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (isNaN(rezultat) || rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\n      return [\"H\", \"Red\"];\n    } else if (Number(rezultat) <= Number(Math.abs(gref)) && Number(rezultat) >= Number(Math.abs(dref))) {\n      return [\" \", \"Yellow\"];\n    } else {\n      return [\" \", \"Green\"];\n    }\n  },\n\n  Greater: function Greater(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (isNaN(rezultat) || rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (Number(rezultat) < Number(Math.abs(gref))) {\n      return [\"L\", \"Red\"];\n    } else if (Number(rezultat) == Number(Math.abs(gref))) {\n      return [\" \", \"Yellow\"];\n    } else {\n      return [\" \", \"Green\"];\n    }\n  },\n\n  GreaterEqual: function GreaterEqual(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (isNaN(rezultat) || rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (Number(rezultat) < Number(Math.abs(gref))) {\n      return [\"L\", \"Red\"];\n    } else if (Number(rezultat) == Number(Math.abs(gref))) {\n      return [\" \", \"Green\"];\n    } else {\n      return [\" \", \"Green\"];\n    }\n  },\n\n  Negativan: function Negativan(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (rezultat.includes(\"pozitivan\")) {\n      return [\"H\", \"Red\"];\n    } else if (rezultat.includes(\"negativan\")) {\n      return [\" \", \"Green\"];\n    } else if (rezultat.includes(\"graničan\")) {\n      return [\" \", \"Yellow\"];\n    } else {\n      return [\" \", \"No Class\"];\n    }\n  },\n\n  Reaktivan: function Reaktivan(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (rezultat.includes(\"reaktivan\")) {\n      return [\"H\", \"Red\"];\n    } else if (rezultat.includes(\"negativan\")) {\n      return [\" \", \"Green\"];\n    } else if (rezultat.includes(\"graničan\")) {\n      return [\" \", \"Yellow\"];\n    } else {\n      return [\" \", \"No Class\"];\n    }\n  },\n\n  Normalan: function Normalan(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (rezultat.toLowerCase().includes(\"norm\") && !rezultat.toLowerCase().includes(\"nije\")) {\n      return [\" \", \"Green\"];\n    } else {\n      return [\"H\", \"Red\"];\n    }\n  },\n\n  Uredan: function Uredan(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (rezultat.toLowerCase().includes(\"ured\") && !rezultat.toLowerCase().includes(\"nije\")) {\n      return [\" \", \"Green\"];\n    } else {\n      return [\"H\", \"Red\"];\n    }\n  },\n\n  Plus: function Plus(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (rezultat.trim() === \"+++\" || rezultat.trim() === \"+ + +\") {\n      return [\" \", \"Green\"];\n    } else {\n      return [\"H\", \"Red\"];\n    }\n  },\n\n  Infekcija: function Infekcija(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (isNaN(rezultat) || rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\n      return [\"pasivna infekcija\", \"Green\"];\n    } else if (Number(rezultat) <= Number(Math.abs(gref)) && Number(rezultat) >= Number(Math.abs(dref))) {\n      return [\"siva zona\", \"Yellow\"];\n    } else {\n      return [\"svježa infekcija\", \"Red\"];\n    }\n  },\n\n  TSH: function TSH(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (isNaN(rezultat) || rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\n      return [\"hipotireoza\", \"Red\"];\n    } else if (Number(rezultat) <= Number(Math.abs(gref)) && Number(rezultat) >= Number(Math.abs(dref))) {\n      return [\"eutireoza\", \"Green\"];\n    } else {\n      return [\"hipertireoza\", \"Red\"];\n    }\n  },\n\n  TRG: function TRG(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (isNaN(rezultat) || rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\n      return [\"visoko\", \"Red\"];\n    } else if (Number(rezultat) <= Number(Math.abs(gref)) && Number(rezultat) >= Number(Math.abs(dref))) {\n      return [\"granično\", \"Yellow\"];\n    } else {\n      return [\"idealno\", \"Green\"];\n    }\n  },\n\n  HOL: function HOL(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (isNaN(rezultat) || rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\n      return [\"visoko\", \"Red\"];\n    } else if (Number(rezultat) <= Number(Math.abs(gref)) && Number(rezultat) >= Number(Math.abs(dref))) {\n      return [\"granično\", \"Yellow\"];\n    } else {\n      return [\"idealno\", \"Green\"];\n    }\n  },\n\n  HDL: function HDL(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (isNaN(rezultat) || rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\n      return [\"nema rizika\", \"Green\"];\n    } else if (Number(rezultat) <= Number(Math.abs(gref)) && Number(rezultat) >= Number(Math.abs(dref))) {\n      return [\"rizik\", \"Yellow\"];\n    } else {\n      return [\"visok rizik\", \"Red\"];\n    }\n  },\n\n  LDL: function LDL(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (isNaN(rezultat) || rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\n      return [\"visok rizik\", \"Red\"];\n    } else if (Number(rezultat) <= Number(Math.abs(gref)) && Number(rezultat) >= Number(Math.abs(dref))) {\n      return [\"granično\", \"Yellow\"];\n    } else {\n      return [\"optimalno\", \"Green\"];\n    }\n  },\n\n  fPSA: function fPSA(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (isNaN(rezultat) || rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\n      return [\"benigni proces\", \"Green\"];\n    } else if (Number(rezultat) <= Number(Math.abs(gref)) && Number(rezultat) >= Number(Math.abs(dref))) {\n      return [\"siva zona\", \"Yellow\"];\n    } else {\n      return [\"H\", \"Red\"];\n    }\n  },\n\n  Sedimentacija: function Sedimentacija(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (rezultat.includes(\"/\")) {\n      var rez1 = rezultat.split(\"/\")[0].trim();\n      var rez2 = rezultat.split(\"/\")[1].trim();\n    } else {\n      var rez1 = rezultat.trim();\n      var rez2 = rezultat.trim();\n    }\n\n    if (isNaN(rez1) || rez1 === \"\" || isNaN(rez2) || rez2 === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (Number(rez1) > Number(Math.abs(gref))) {\n      return [\"H\", \"Red\"];\n    } else if (Number(rez1) === Number(Math.abs(gref))) {\n      return [\" \", \"Yellow\"];\n    } else {\n      return [\" \", \"Green\"];\n    }\n  },\n\n  Bistar: function Bistar(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (rezultat === \"bistar\") {\n      return [\" \", \"Green\"];\n    } else {\n      return [\"H\", \"Red\"];\n    }\n  },\n\n  Boja: function Boja(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (rezultat === \"svjetlo žut\") {\n      return [\" \", \"Green\"];\n    } else {\n      return [\"H\", \"Red\"];\n    }\n  },\n\n  Nesto: function Nesto(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (rezultat.includes(\"masa\") || rezultat.includes(\"dosta\")) {\n      return [\"H\", \"Red\"];\n    } else {\n      return [\" \", \"Green\"];\n    }\n  },\n\n  Exists: function Exists(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else {\n      return [\"H\", \"Red\"];\n    }\n  },\n\n  Blasti: function Blasti(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (isNaN(rezultat) || rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (Number(rezultat) < Number(Math.abs(dref))) {\n      return [\" \", \"No Class\"];\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\n      return [\"H\", \"Red\"];\n    } else if (Number(rezultat) === Number(Math.abs(dref)) || Number(rezultat) === Number(Math.abs(gref))) {\n      return [\" \", \"No Class\"];\n    } else {\n      return [\" \", \"Green\"];\n    }\n  },\n\n  Morf: function Morf(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (isNaN(rezultat) || rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (Number(rezultat) === Number(Math.abs(dref)) || Number(rezultat) === Number(Math.abs(gref))) {\n      return [\" \", \"Green\"];\n    } else {\n      return [\"H\", \"Red\"];\n    }\n  },\n\n  LeuErc: function LeuErc(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (rezultat.includes(\"-\")) {\n      var rez = rezultat.split(\"-\")[1].trim();\n    } else {\n      var rez = rezultat.trim();\n    }\n\n    if (rez === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (isNaN(rez)) {\n      return [\"H\", \"Red\"];\n    } else if (Number(rez) > Number(gref)) {\n      return [\"H\", \"Red\"];\n    } else if (Number(rez) === Number(gref)) {\n      return [\" \", \"Yellow\"];\n    } else {\n      return [\" \", \"Green\"];\n    }\n  },\n\n  Titar: function Titar(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (rezultat.includes(\":\")) {\n      var rez1 = rezultat.split(\":\")[0].trim();\n      var rez2 = rezultat.split(\":\")[1].trim();\n    } else {\n      var rez1 = rezultat.trim();\n      var rez2 = \"\";\n    }\n\n    if (isNaN(rez1) || rez1 === \"\" || rez1 != \"1\" || isNaN(rez2) || rez2 === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (Number(rez2) > Number(Math.abs(gref))) {\n      return [\"H\", \"Red\"];\n    } else if (Number(rez2) === Number(Math.abs(gref))) {\n      return [\" \", \"Yellow\"];\n    } else {\n      return [\" \", \"Green\"];\n    }\n  },\n\n  Specific: function Specific(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    return [\" \", \"No Class\"];\n  }\n};\n\n/***/ }),\n\n/***/ \"4Q4j\":\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(\"FZ+f\")(true);\n// imports\n\n\n// module\nexports.push([module.i, \".collapse-page__content[data-v-5fb25dc1]{padding:2rem}.collapse-page__content__title[data-v-5fb25dc1]{font-size:1.375rem;font-weight:700}.icon-bar a[data-v-5fb25dc1]{color:#fff;text-decoration:none}.icon-bar a[data-v-5fb25dc1]:hover{color:#4ae387}i[data-v-5fb25dc1]:hover{color:#4ae387!important}.circle[data-v-5fb25dc1]{width:1rem;opacity:.5;height:1rem;border-radius:50%;display:inline-block}\", \"\", {\"version\":3,\"sources\":[\"C:/Users/atom/Desktop/ATOM Sync/extralab_75000/extralab_cl25092019/src/components/obrada/Obrada.vue\"],\"names\":[],\"mappings\":\"AACA,yCACE,YAAc,CACf,AACD,gDACI,mBAAoB,AACpB,eAAkB,CACrB,AACD,6BACE,WAAY,AACZ,oBAAsB,CACvB,AACD,mCACE,aAAe,CAChB,AACD,yBACE,uBAA0B,CAC3B,AACD,yBACE,WAAY,AACZ,WAAa,AACb,YAAa,AACb,kBAAmB,AACnB,oBAAsB,CACvB\",\"file\":\"Obrada.vue\",\"sourcesContent\":[\"\\n.collapse-page__content[data-v-5fb25dc1] {\\n  padding: 2rem;\\n}\\n.collapse-page__content__title[data-v-5fb25dc1] {\\n    font-size: 1.375rem;\\n    font-weight: bold;\\n}\\n.icon-bar a[data-v-5fb25dc1] {\\n  color: #fff;\\n  text-decoration: none;\\n}\\n.icon-bar a[data-v-5fb25dc1]:hover {\\n  color: #4ae387;\\n}\\ni[data-v-5fb25dc1]:hover {\\n  color: #4ae387 !important;\\n}\\n.circle[data-v-5fb25dc1] {\\n  width: 1rem;\\n  opacity: 0.5;\\n  height: 1rem;\\n  border-radius: 50%;\\n  display: inline-block;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n\n/***/ \"8472\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar data = {\n  o01: [\"\", \"bistar\", \"blago mutan\", \"vrlo mutan\", \"krvav\"],\n  o02: [\"\", \"svjetlo žut\", \"žut\", \"tamno žut\", \"smeđ\"],\n  o05: [\"\", \"negativan\", \"lagano opalascentan\", \"opalascentan\", \"pozitivan 1+\", \"pozitivan 2+\", \"pozitivan 3+\", \"pozitivan 4+\"],\n  o06: [\"\", \"negativan\", \"pozitivan\"],\n  o07: [\"\", \"negativan\", \"pozitivan\"],\n  o08: [\"\", \"negativan\", \"trag\", \"pozitivan 1+\", \"pozitivan 2+\", \"pozitivan 3+\", \"pozitivan 4+\"],\n  o09: [\"\", \"negativan\", \"pozitivan\"],\n  o10: [\"\", \"negativan\", \"pozitivan\"],\n  o11: [\"\", \"negativan\", \"pozitivan\"],\n  o12: [\"\", \"negativan\", \"pozitivan\"],\n\n  se03: [\"\", \"nešto pločastog ep.\", \"dosta pločastog ep.\", \"masa pločastog ep.\", \"nešto vretenastog ep.\", \"dosta vretenastog ep.\", \"masa vretenastog ep.\", \"nešto okruglog ep.\", \"dosta okruglog ep.\", \"masa okruglog ep.\"],\n  se04: [\"\", \"nešto mok. kis.\", \"dosta mok. kis.\", \"masa mok. kis.\", \"nešto Ca-oxal\", \"dosta Ca-oxal\", \"masa Ca-oxal\", \"nešto tripl fosf.\", \"dosta tripl fosf.\", \"masa tripl fosf.\", \"nešto Ca-carb\", \"dosta Ca-carb\", \"masa Ca-carb\"],\n  se05: [\"\", \"nešto\", \"dosta\", \"masa\"],\n  se06: [\"\", \"nešto\", \"dosta\", \"masa\"],\n  se07: [\"\", \"nešto\", \"dosta\", \"masa\"],\n  se08: [\"\", \"nešto am. fosfata\", \"dosta am. fosfata\", \"masa am. fosfata\", \"nešto am. urata\", \"dosta am. urata\", \"masa am. urata\"],\n  se09: [\"\", \"hijalini\", \"granulirani\", \"eritrocitni\", \"leukocitni\"],\n  se10: [\"\", \"nešto\", \"dosta\", \"masa\"]\n};\n\nvar rez = {\n  neg: [\"\", \"negativan\", \"graničan\", \"pozitivan\"],\n  reakt: [\"\", \"negativan\", \"graničan\", \"reaktivan\"]\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  data: data,\n  rez: rez\n});\n\n/***/ }),\n\n/***/ \"G5/o\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// 19.1.2.7 Object.getOwnPropertyNames(O)\n__webpack_require__(\"uqUo\")('getOwnPropertyNames', function () {\n  return __webpack_require__(\"Rrel\").f;\n});\n\n\n/***/ }),\n\n/***/ \"KUw5\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_own_property_names__ = __webpack_require__(\"aFK5\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_own_property_names___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_own_property_names__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray__ = __webpack_require__(\"Gu7T\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify__ = __webpack_require__(\"mvHQ\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_vue__ = __webpack_require__(\"7+uW\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__router__ = __webpack_require__(\"YaEn\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_vuex_store__ = __webpack_require__(\"IcnI\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_services_utils__ = __webpack_require__(\"hLWQ\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__config_config_js__ = __webpack_require__(\"1wn0\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__BadgeColumn_vue__ = __webpack_require__(\"XMpX\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__main__ = __webpack_require__(\"NHnr\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__functions_reference_js__ = __webpack_require__(\"d5lM\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__functions_reference_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_10__functions_reference_js__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__data_izbornik_izbornik__ = __webpack_require__(\"8472\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12_vue_loading_overlay__ = __webpack_require__(\"ZZvs\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12_vue_loading_overlay___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_12_vue_loading_overlay__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13_vue_loading_overlay_dist_vue_loading_css__ = __webpack_require__(\"SYh3\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13_vue_loading_overlay_dist_vue_loading_css___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_13_vue_loading_overlay_dist_vue_loading_css__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__vuestic_components_vuestic_chart_chart_types_LineChart__ = __webpack_require__(\"eDOj\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15_epic_spinners__ = __webpack_require__(\"pyJd\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16_pdfobject__ = __webpack_require__(\"UqI+\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16_pdfobject___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_16_pdfobject__);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n__WEBPACK_IMPORTED_MODULE_3_vue__[\"default\"].component(\"line-chart\", __WEBPACK_IMPORTED_MODULE_14__vuestic_components_vuestic_chart_chart_types_LineChart__[\"a\" /* default */]);\n__WEBPACK_IMPORTED_MODULE_3_vue__[\"default\"].component(\"badge-column\", __WEBPACK_IMPORTED_MODULE_8__BadgeColumn_vue__[\"default\"]);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n\n  name: \"collapse-obrada\",\n\n  data: function data() {\n    return {\n\n      AllowGetSample: true,\n      MicrobiologyOrder: false,\n      MicrobiologySample: false,\n      ModalNegative: false,\n      ModalPositive: false,\n      ModalPositiveCondition: false,\n      ShowAllBacteries: false,\n      ShowAntibiotics: false,\n      ShowBacteries: false,\n      BacteryTabs: [\"\"],\n      CurrentTab: \"\",\n      CurrentTest: \"\",\n      MicrobiologyModalHeader: \"Predefinisani rezultati\",\n      SelectedBacteries: [],\n      NegativeResultSelection: \"\",\n      PositiveResultSelection: \"\",\n      MicrobiologyScenario: \"Unknown\",\n      Antibiotics: [],\n      TemporaryAntibiotics: [],\n      TemporaryBacteries: [],\n      TemporaryBacteriesAdd: [],\n      Antibiograms: [],\n      Bacteries: [],\n\n      MicrobiologyResult: {\n        negative: null,\n        positive: null,\n        BUG: null,\n        F_RESULT: \"\",\n        M_RESULT: [],\n        DefaultBacteries: [],\n        RemainingBacteries: [],\n        NegativeDescriptions: [],\n        PositiveDescriptions: []\n      },\n\n      multiparam_izbor: \"\",\n      multiparam_id: \"\",\n      analit: {},\n      multiparams: [],\n      Response: {},\n      spinner: false,\n      multiparam_izbornik: [],\n      warning: { analiza: \"\", text: \"\", control: \"\" },\n      main: false,\n      show: true,\n      pdf: false,\n      header: \"\",\n      lokacija: {},\n      timestamp: \"\",\n      pacijent: \"\",\n      ime: \"\",\n      prezime: \"\",\n      jmbg: \"\",\n      pid: \"\",\n      sid: \"\",\n      email: \"\",\n      email_tmp: \"\",\n      verificiran: false,\n      email_button: false,\n      final_pdf: false,\n      odobren: false,\n      approved: 0,\n      verified: 0,\n      partials: [],\n      partials_condition: false,\n      count: 0,\n      nalaz: {},\n      report: {},\n      path: \"\",\n      url: \"\",\n      uzorci: [],\n      vise: [],\n      samples: [],\n      sample_status: \"\",\n      labassay: \"\",\n      multi_test: \"\",\n      multi_rezultati: [],\n      check: \"\",\n      link: \"\",\n      spec: \"*\",\n      testovi: [],\n      rezultati: [],\n      analysers: [],\n      analyser: {},\n      analiza: {},\n      analyser_selected: {},\n      analyser_patient: {},\n      analitiprikaz: [],\n      analiti: [],\n      naslov: \"\",\n      calculated: false,\n      show_table: false,\n      sample: {},\n      resdata: {},\n      email_changed: false,\n      Previous: { pid: null },\n      Next: { pid: null },\n      Results: [],\n      Datum: { today: null, query: null, next: null, previous: null },\n      pagination: false,\n      forward_disabled: false,\n      backward_disabled: false,\n      data_length: 0,\n      data_min: 1,\n      data_pid: 0,\n      data_spol: \"\",\n      query_date: \"\",\n      today_date: \"\",\n      reference: {},\n      interpretacije: [\"none\", \"A\", \"ogtt\", \"insul\", \"less\", \"infekc\", \"grt\", \"grte\", \"neg\", \"urbl\", \"reakt\", \"norm\", \"norma\", \"ured\", \"plus\", \"morf\", \"titar\", \"tsh\", \"trg\", \"hol\", \"hdl\", \"ldl\", \"fpsa\", \"sediment\", \"bistar\", \"boja\", \"nesto\", \"exists\", \"blst\", \"leu\", \"spec\"],\n\n      toastText: \"\",\n      toastIcon: \"\",\n      toastPosition: \"\",\n      toastDuration: 2500,\n      isToastFullWidth: false,\n      className: \"\",\n\n      isLoading: false,\n      fullPage: true,\n\n      analiza_eval: {},\n      showLineChart: false,\n      optionsLineChart: {},\n      dataLineChart: {},\n      Procjena: [],\n\n      jedinica: \"\",\n      jedinice: [],\n      graph: false,\n      table_header: \"\"\n    };\n  },\n\n  components: {\n    Loading: __WEBPACK_IMPORTED_MODULE_12_vue_loading_overlay___default.a,\n    AtomSpinner: __WEBPACK_IMPORTED_MODULE_15_epic_spinners__[\"a\" /* AtomSpinner */]\n  },\n\n  watch: {\n    email: function email() {\n      if (this.email.trim() != this.email_tmp.trim()) {\n        this.email_changed = true;\n      }\n    },\n\n    ModalNegative: function ModalNegative() {\n      if (this.ModalNegative) {\n\n        console.log(\"Izbor: negativan\");\n\n        this.MicrobiologyModalHeader = \"Predefinisani rezultati\";\n        if (this.MicrobiologyScenario.includes(\"MANB\")) {\n          this.ModalPositiveCondition = true;\n        } else {\n          this.ModalPositiveCondition = false;\n        }\n      }\n    },\n\n    ModalPositive: function ModalPositive() {\n      if (this.ModalPositive) {\n\n        console.log(\"Izbor: pozitivan\");\n\n        if (this.MicrobiologyScenario === \"MAIBNoR\") {\n          this.MicrobiologyModalHeader = \"Bakterije\";\n        } else {\n          this.MicrobiologyModalHeader = \"Predefinisani rezultati\";\n        }\n\n        if (this.MicrobiologyScenario.includes(\"MANB\")) {\n          this.ModalPositiveCondition = true;\n        } else {\n          this.ModalPositiveCondition = false;\n        }\n      }\n    },\n\n    MicrobiologyScenario: function MicrobiologyScenario() {\n      switch (this.MicrobiologyScenario) {\n        case \"MAIBNoR\":\n          this.ModalNegative = false;\n          this.ModalPositive = false;\n          this.ModalPositiveCondition = false;\n          this.MicrobiologyModalHeader = \"Predefinisani rezultati\";\n          this.NegativeResultSelection = \"\";\n          this.PositiveResultSelection = \"\";\n          this.SelectedBacteries = [];\n          this.ShowAllBacteries = false;\n\n          break;\n\n        case \"MAIBNeR\":\n          this.SelectedBacteries = [];\n\n          break;\n\n        case \"MAIBPoR\":\n          break;\n\n        case \"MANBNoR\":\n          this.ModalNegative = false;\n          this.ModalPositive = false;\n          this.ModalPositiveCondition = false;\n          this.MicrobiologyModalHeader = \"Predefinisani rezultati\";\n          this.NegativeResultSelection = \"\";\n          this.PositiveResultSelection = \"\";\n          this.SelectedBacteries = [];\n          this.ShowAllBacteries = false;\n\n          break;\n\n        case \"MANBNeR\":\n          this.SelectedBacteries = [];\n\n          break;\n\n        case \"MANBPoR\":\n          this.SelectedBacteries = [];\n\n          break;\n\n        default:\n          break;\n      }\n    }\n\n  },\n  beforeCreate: function beforeCreate() {\n    var _this = this;\n\n    __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].get(\"postavke/jedinice/mount/list?token=\" + this.$store.state.token + \"&site=\" + this.$store.state.site, {}).then(function (res) {\n      _this.jedinice = res.data.jedinica;\n    });\n  },\n  mounted: function mounted() {\n    var _this2 = this;\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"Parametar\", function (data) {\n\n      _this2.spinner = true;\n\n      _this2.analit = {};\n\n      _this2.multiparams.forEach(function (element) {\n        if (element.opis === data) {\n          _this2.analit = element;\n          _this2.multiparam_id = element._id;\n          _this2.multiparam_izbor = data;\n        }\n      });\n\n      if (_.isEmpty(_this2.analit)) {} else {\n        if (!_.isEmpty(_this2.Response)) {\n          _this2.showLineChart = false;\n          var palette = __WEBPACK_IMPORTED_MODULE_5_vuex_store__[\"a\" /* default */].getters.palette;\n\n          _this2.Procjena = [];\n\n          var obj = {};\n          var count = 0;\n\n          _this2.Response.Multi.forEach(function (element) {\n            count++;\n            element.multi.forEach(function (param) {\n              if (_this2.multiparam_id == param.labassay && param.rezultat[0].rezultat_f.trim() != \"\") {\n                obj.rezultat = param.rezultat[0].rezultat_f;\n                obj.jedinica = param.rezultat[0].jedinice_f;\n                obj.analit = \"Nema podataka\";\n                obj.interp = param.interp;\n                obj.extend = param.extend;\n                obj.refd = param.refd;\n                obj.refg = param.refg;\n                obj.sid = \"Nema podataka\";\n                obj.updated_at = new Date(param.rezultat[0].updated_at);\n\n                var datum = __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(new Date(param.rezultat[0].updated_at)).slice(9, 11) + \".\" + __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(new Date(param.rezultat[0].updated_at)).slice(6, 8) + \".\" + __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(new Date(param.rezultat[0].updated_at)).slice(1, 5);\n                var time = __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(new Date(new Date(param.rezultat[0].updated_at).getTime() - new Date(param.rezultat[0].updated_at).getTimezoneOffset() * 60000).toISOString()).substring(12, 17);\n                obj.datum = datum;\n                obj.vrijeme = time;\n                obj.kontrola = _this2.Interpretacija(\"\", obj.rezultat, obj.jedinica, obj.refd, obj.refg, _this2.$store.state.site, obj.interp, obj.extend, _this2.spec)[5];\n\n                _this2.Procjena.push(obj);\n                obj = {};\n              }\n            });\n\n            if (count == _this2.Response.Multi.length) {\n              _this2.Procjena.sort(function (a, b) {\n                return Date.parse(a.updated_at) == Date.parse(b.updated_at) ? 0 : +(Date.parse(a.updated_at) < Date.parse(b.updated_at)) || -1;\n              });\n\n              var data = [];\n\n              if (_this2.Procjena.length) {\n                _this2.optionsLineChart = {\n                  responsive: true,\n                  maintainAspectRatio: false,\n                  title: {\n                    display: true,\n                    text: \"\"\n                  },\n                  scales: {\n                    xAxes: [{\n                      display: true,\n                      gridLines: {\n                        display: true,\n                        color: \"#eee\"\n                      }\n                    }],\n                    yAxes: [{\n                      display: true,\n                      gridLines: {\n                        display: true,\n                        color: \"#eee\"\n                      }\n                    }]\n                  }\n                };\n\n                var labels = [];\n                var kontrola = [];\n                var temp = \"\";\n\n                _this2.Procjena.forEach(function (element) {\n                  if (!isNaN(element.rezultat.trim())) {\n                    switch (element.kontrola) {\n                      case \"Red\":\n                        kontrola.push(palette.danger);\n                        break;\n                      case \"Green\":\n                        kontrola.push(palette.primary);\n                        break;\n                      case \"Yellow\":\n                        kontrola.push(palette.warning);\n                        break;\n\n                      default:\n                        kontrola.push(palette.info);\n                        break;\n                    }\n\n                    labels.push(element.datum);\n                    data.push(element.rezultat);\n                  }\n                });\n\n                _this2.dataLineChart = {\n                  labels: labels,\n                  datasets: [{\n                    label: _this2.table_header,\n                    backgroundColor: __WEBPACK_IMPORTED_MODULE_6_services_utils__[\"a\" /* default */].hex2rgb(palette.info, 0.5).css,\n                    pointBorderColor: kontrola,\n                    pointBackgroundColor: kontrola,\n                    borderColor: palette.transparent,\n                    data: data\n                  }]\n                };\n\n                if (data.length) {\n                  setTimeout(function () {\n                    _this2.showLineChart = true;\n                  }, 500);\n                }\n              } else {\n\n                _this2.spinner = false;\n              }\n            }\n          });\n        } else {}\n      }\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"graph\", function () {\n      _this2.Procjena.sort(function (a, b) {\n        return Date.parse(a.updated_at) == Date.parse(b.updated_at) ? 0 : +(Date.parse(a.updated_at) < Date.parse(b.updated_at)) || -1;\n      });\n\n      var data = [];\n\n      if (_this2.Procjena.length) {\n        var palette = __WEBPACK_IMPORTED_MODULE_5_vuex_store__[\"a\" /* default */].getters.palette;\n        _this2.optionsLineChart = {\n          responsive: true,\n          maintainAspectRatio: false,\n          title: {\n            display: true,\n            text: \"\"\n          },\n          scales: {\n            xAxes: [{\n              display: true,\n              gridLines: {\n                display: true,\n                color: \"#eee\"\n              }\n            }],\n            yAxes: [{\n              display: true,\n              gridLines: {\n                display: true,\n                color: \"#eee\"\n              }\n            }]\n          }\n        };\n\n        var labels = [];\n        var kontrola = [];\n        var temp = \"\";\n\n        _this2.Procjena.forEach(function (element) {\n          if (!isNaN(element.rezultat.trim())) {\n            switch (element.kontrola) {\n              case \"Red\":\n                kontrola.push(palette.danger);\n                break;\n              case \"Green\":\n                kontrola.push(palette.primary);\n                break;\n              case \"Yellow\":\n                kontrola.push(palette.warning);\n                break;\n\n              default:\n                kontrola.push(palette.info);\n                break;\n            }\n\n            labels.push(element.datum);\n            data.push(element.rezultat);\n          }\n        });\n\n        _this2.dataLineChart = {\n          labels: labels,\n          datasets: [{\n            label: _this2.analiza_eval.ime + \" | \" + _this2.analiza_eval.analit,\n            backgroundColor: __WEBPACK_IMPORTED_MODULE_6_services_utils__[\"a\" /* default */].hex2rgb(palette.info, 0.5).css,\n            pointBorderColor: kontrola,\n            pointBackgroundColor: kontrola,\n            borderColor: palette.transparent,\n            data: data\n          }]\n        };\n\n        if (data.length) {\n          _this2.showLineChart = true;\n        }\n      } else {}\n      _this2.graph = false;\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"table\", function () {\n      _this2.Procjena.sort(function (a, b) {\n        return Date.parse(a.updated_at) == Date.parse(b.updated_at) ? 0 : +(Date.parse(a.updated_at) > Date.parse(b.updated_at)) || -1;\n      });\n\n      var data = [];\n\n      if (_this2.Procjena.length) {\n        var palette = __WEBPACK_IMPORTED_MODULE_5_vuex_store__[\"a\" /* default */].getters.palette;\n        _this2.optionsLineChart = {\n          responsive: true,\n          maintainAspectRatio: false,\n          title: {\n            display: true,\n            text: \"\"\n          },\n          scales: {\n            xAxes: [{\n              display: true,\n              gridLines: {\n                display: true,\n                color: \"#eee\"\n              }\n            }],\n            yAxes: [{\n              display: true,\n              gridLines: {\n                display: true,\n                color: \"#eee\"\n              }\n            }]\n          }\n        };\n\n        var labels = [];\n        var kontrola = [];\n        var temp = \"\";\n\n        _this2.Procjena.forEach(function (element) {\n          if (!isNaN(element.rezultat.trim())) {\n            switch (element.kontrola) {\n              case \"Red\":\n                kontrola.push(palette.danger);\n                break;\n              case \"Green\":\n                kontrola.push(palette.primary);\n                break;\n              case \"Yellow\":\n                kontrola.push(palette.warning);\n                break;\n\n              default:\n                kontrola.push(palette.info);\n                break;\n            }\n\n            labels.push(element.datum);\n            data.push(element.rezultat);\n          }\n        });\n\n        _this2.dataLineChart = {\n          labels: labels,\n          datasets: [{\n            label: _this2.analiza_eval.ime + \" | \" + _this2.analiza_eval.analit,\n            backgroundColor: __WEBPACK_IMPORTED_MODULE_6_services_utils__[\"a\" /* default */].hex2rgb(palette.info, 0.5).css,\n            pointBorderColor: kontrola,\n            pointBackgroundColor: kontrola,\n            borderColor: palette.transparent,\n            data: data\n          }]\n        };\n\n        if (data.length) {\n          _this2.showLineChart = true;\n        }\n      } else {}\n      _this2.graph = true;\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"trash\", function (data) {\n      _this2.sid = data.sid;\n      _this2.$refs.staticModalDeleteSample.open();\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"edit\", function (data) {\n      _this2.sid = data.sid;\n      _this2.$refs.staticModalEditSample.open();\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"comment\", function (data) {\n      _this2.sid = data.sid;\n      _this2.$refs.staticModalComment.open();\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"barcode\", function (data) {\n      _this2.BarcodePrint(data);\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"save\", function (data) {\n      _this2.SaveResults(_this2.rezultati, \"save\");\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"check\", function (data) {\n      _this2.Approve(_this2.rezultati);\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"verify\", function (data) {\n      _this2.Verify(data, \"verify\");\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"undo\", function (data) {\n      _this2.Disapprove(_this2.rezultati, \"undo\");\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"unlock\", function (data) {\n      _this2.UnVerify(data, \"unlock\");\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"Nalaz\", function (data) {\n      if (!data.final_pdf) {\n        _this2.$refs.staticModalError.open();\n      } else {\n        _this2.path = _this2.timestamp + \".pdf\";\n\n        _this2.url = __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"i\" /* server */] + \"nalazi/\" + _this2.path;\n\n        var options = {\n          width: \"100%\",\n          height: \"800px\"\n        };\n        __WEBPACK_IMPORTED_MODULE_16_pdfobject___default.a.embed(_this2.url, \"#pdf-container\", options);\n\n        _this2.email_button = true;\n        _this2.main = false;\n        _this2.pdf = true;\n      }\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"pdf\", function (data) {\n      if (!data.pdf_exists) {\n        _this2.$refs.staticModalError.open();\n      } else {\n        _this2.path = \"samples/\" + data.sid + \".pdf\";\n\n        _this2.url = __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"i\" /* server */] + \"nalazi/samples/\" + data.sid + \".pdf\";\n\n        var options = {\n          width: \"100%\",\n          height: \"800px\"\n        };\n        __WEBPACK_IMPORTED_MODULE_16_pdfobject___default.a.embed(_this2.url, \"#pdf-container\", options);\n\n        _this2.main = false;\n        _this2.pdf = true;\n      }\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"Sample\", function (data) {\n\n      if (data.tip.includes(\"Mikrobiologija\")) {\n        _this2.MicrobiologySample = true;\n      } else {\n        _this2.MicrobiologySample = false;\n      }\n\n      _this2.$store.dispatch(\"SetSample\", data.sid);\n      _this2.GetSingleSample(data);\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"Deleted\", function (data) {\n      _this2.DeletedSample(data);\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"Edited\", function (data) {\n      _this2.EditSample(data);\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"SaveMulti\", function (data) {\n      _this2.SaveMultiResults(_this2.analiti, data);\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"Mail\", function () {\n      _this2.SendMail(_this2.email);\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"Error\", function () {\n      console.warn(\"Greška prilikom čitanja nalaza.\");\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"Analyser\", function (data) {\n      _this2.AnalyserSelected(data);\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"Sljedeci\", function () {\n      _this2.Sljedeci();\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"Prethodni\", function () {\n      _this2.Prethodni();\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"Search\", function () {\n      _this2.$refs.staticModalFind.open();\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"Push\", function (data) {\n      if (_this2.$route.params.id != data) {\n        _this2.Results.forEach(function (element) {\n          if (element.pid == data) {\n            __WEBPACK_IMPORTED_MODULE_4__router__[\"a\" /* default */].push(\"/obrada/rezultati/\" + element.patient + \"/\" + element.pid + \"?date=\" + element.date);\n          }\n        });\n      } else {}\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"Reference\", function () {\n      _this2.reference.dref = Math.abs(_this2.reference.dref.replace(/,/g, \".\").trim());\n      _this2.reference.gref = Math.abs(_this2.reference.gref.replace(/,/g, \".\").trim());\n\n      if (_this2.reference.interp != \"spec\") {\n        _this2.reference.extend = _this2.reference.extend.replace(/(\\r\\n|\\n|\\r)/gm, \" \");\n      }\n\n      if (isNaN(_this2.reference.dref) || isNaN(_this2.reference.gref) || _this2.reference.dref === \"\" || _this2.reference.gref === \"\" || _this2.reference.dref > _this2.reference.gref) {} else {\n        document.getElementById(_this2.$store.state.sid).click();\n\n        __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].post(\"/rezultati/odobravanje/reference/\", {\n          email: _this2.$store.state.userId,\n          token: _this2.$store.state.token,\n          site: _this2.$store.state.site,\n          reference: _this2.reference\n        }).then(function (res) {\n          setTimeout(function () {\n            document.getElementById(_this2.$store.state.sid).click();\n          }, 500);\n        });\n      }\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"Antibiotik\", function (data) {\n      if (_this2.sample.status != \"ODOBREN\" && _this2.sample.status != \"VERIFICIRAN\") {\n        _this2.TemporaryAntibiotics = [];\n        _this2.TemporaryBacteries = [];\n        _this2.TemporaryBacteriesAdd = [];\n\n        _this2.Antibiotics.forEach(function (element) {\n          element.chosen = false;\n          element.disabled = false;\n        });\n\n        _this2.SelectedBacteries.forEach(function (selected) {\n          if (selected.opis == data) {\n            selected.antibiogram.antibiotici.forEach(function (ant) {\n              _this2.Antibiotics.forEach(function (antibiotik) {\n                if (antibiotik._id == ant._id) {\n                  antibiotik.disabled = true;\n                  antibiotik.chosen = true;\n                  antibiotik.rezultat = ant.rezultat;\n                }\n              });\n            });\n          }\n        });\n\n        _this2.ShowAntibiotics = true;\n      }\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"tabChanged\", function (data) {\n      _this2.CurrentTab = data;\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"AllowClick\", function (data) {\n      if (_this2.MicrobiologySample) {\n        if (data) {\n          _this2.AllowGetSample = false;\n        } else {\n          _this2.AllowGetSample = true;\n        }\n      }\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"MicroReset\", function () {\n\n      console.log(\"Reset: \" + _this2.$store.state.sid);\n      var Scenario = _this2.MicrobiologyScenario;\n\n      _this2.rezultati[0].rezultat = \"\";\n      _this2.rezultati[0].rezultat_m = [];\n      _this2.rezultati[0].realizovan = false;\n\n      _this2.MicrobiologyResult.DefaultBacteries.forEach(function (element) {\n        element.chosen = false;\n      });\n\n      _this2.MicrobiologyResult.RemainingBacteries.forEach(function (element) {\n        element.chosen = false;\n      });\n\n      _this2.SelectedBacteries = [];\n      _this2.ShowAllBacteries = false;\n\n      if (_this2.MicrobiologyScenario.includes(\"MAIB\")) {\n        _this2.main = false;\n\n\n        __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].post(\"/rezultati/odobravanje/sacuvaj/\" + _this2.$store.state.sid, {\n          email: _this2.$store.state.userId,\n          token: _this2.$store.state.token,\n          site: _this2.$store.state.site,\n          rezultati: _this2.rezultati\n        }).then(function (res) {\n          __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].get(\"rezultati/odobravanje/samples/\" + _this2.$route.params.patient + \"/\" + _this2.$route.params.id + \"?token=\" + _this2.$store.state.token + \"&site=\" + _this2.$store.state.site + \"&date=\" + _this2.$route.query.date, {}).then(function (res) {\n            _this2.uzorci = [];\n\n            res.data.results.forEach(function (element) {\n\n              if (_this2.$store.state.sid === element.id) {\n                console.log(element.rezultati[0].rezultat[0]);\n              }\n\n              var check = 0;\n              var zaprimljen = 0;\n              var realizovan = 0;\n\n              if (element.verificiran) {\n                var status_uzorka = \"VERIFICIRAN\";\n              } else {\n                var status_uzorka = element.status;\n              }\n\n              element.rezultati.forEach(function (test) {\n                check++;\n\n                if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n                  zaprimljen++;\n                }\n\n                if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n                  realizovan++;\n                }\n\n                if (check === element.rezultati.length) {\n\n                  if (status_uzorka === \"VERIFICIRAN\") {\n                    _this2.uzorci.push({\n                      sid: element.id,\n                      status: \"VERIFICIRAN\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else if (status_uzorka === \"ODOBREN\") {\n                    _this2.uzorci.push({\n                      sid: element.id,\n                      status: \"ODOBREN\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else if (zaprimljen < 1) {\n                    _this2.uzorci.push({\n                      sid: element.id,\n                      status: \"REALIZOVAN\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else if (realizovan < 1) {\n                    var stat = \"ZAPRIMLJEN\";\n                    if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                      if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                        stat = \"REALIZOVAN\";\n                      }\n                    }\n                    _this2.uzorci.push({\n                      sid: element.id,\n                      status: stat,\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else {\n                    _this2.uzorci.push({\n                      sid: element.id,\n                      status: \"U OBRADI\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  }\n                }\n              });\n            });\n\n            _this2.uzorci = _this2.uzorci.sort(function (a, b) {\n              return a.sid.localeCompare(b.sid, undefined, {\n                numeric: true,\n                sensitivity: \"base\"\n              });\n            });\n          }).then(function (res) {\n            _this2.MicrobiologyScenario = \"MAIBNoR\";\n            console.log(\"Scenario: \" + Scenario + \" - > \" + _this2.MicrobiologyScenario);\n            _this2.main = true;\n            __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$emit(\"CloseMicroReset\");\n          });\n        });\n      } else if (_this2.MicrobiologyScenario.includes(\"MANB\")) {\n        _this2.main = false;\n\n        __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].post(\"/rezultati/odobravanje/sacuvaj/\" + _this2.$store.state.sid, {\n          email: _this2.$store.state.userId,\n          token: _this2.$store.state.token,\n          site: _this2.$store.state.site,\n          rezultati: _this2.rezultati\n        }).then(function (res) {\n          __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].get(\"rezultati/odobravanje/samples/\" + _this2.$route.params.patient + \"/\" + _this2.$route.params.id + \"?token=\" + _this2.$store.state.token + \"&site=\" + _this2.$store.state.site + \"&date=\" + _this2.$route.query.date, {}).then(function (res) {\n            _this2.uzorci = [];\n\n            res.data.results.forEach(function (element) {\n\n              if (_this2.$store.state.sid === element.id) {\n                console.log(element.rezultati[0].rezultat[0]);\n              }\n\n              var check = 0;\n              var zaprimljen = 0;\n              var realizovan = 0;\n\n              if (element.verificiran) {\n                var status_uzorka = \"VERIFICIRAN\";\n              } else {\n                var status_uzorka = element.status;\n              }\n\n              element.rezultati.forEach(function (test) {\n                check++;\n\n                if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n                  zaprimljen++;\n                }\n\n                if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n                  realizovan++;\n                }\n\n                if (check === element.rezultati.length) {\n                  if (status_uzorka === \"VERIFICIRAN\") {\n                    _this2.uzorci.push({\n                      sid: element.id,\n                      status: \"VERIFICIRAN\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else if (status_uzorka === \"ODOBREN\") {\n                    _this2.uzorci.push({\n                      sid: element.id,\n                      status: \"ODOBREN\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else if (zaprimljen < 1) {\n                    _this2.uzorci.push({\n                      sid: element.id,\n                      status: \"REALIZOVAN\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else if (realizovan < 1) {\n                    var stat = \"ZAPRIMLJEN\";\n                    if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                      if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                        stat = \"REALIZOVAN\";\n                      }\n                    }\n                    _this2.uzorci.push({\n                      sid: element.id,\n                      status: stat,\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else {\n                    _this2.uzorci.push({\n                      sid: element.id,\n                      status: \"U OBRADI\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  }\n                }\n              });\n            });\n\n            _this2.uzorci = _this2.uzorci.sort(function (a, b) {\n              return a.sid.localeCompare(b.sid, undefined, {\n                numeric: true,\n                sensitivity: \"base\"\n              });\n            });\n          }).then(function (res) {\n            _this2.MicrobiologyScenario = \"MANBNoR\";\n            console.log(\"Scenario: \" + Scenario + \" - > \" + _this2.MicrobiologyScenario);\n            _this2.main = true;\n            __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$emit(\"CloseMicroReset\");\n          });\n        });\n      } else {}\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"MicroResult\", function () {\n      console.log(\"Defining result...\");\n\n      var Scenario = _this2.MicrobiologyScenario;\n\n      switch (_this2.MicrobiologyScenario) {\n        case \"MAIBNoR\":\n          _this2.rezultati[0].rezultat_m = [];\n          _this2.rezultati[0].rezultat_m.push({\n            bakterija: false,\n            negativan: _this2.ModalNegative,\n            pozitivan: _this2.ModalPositive,\n            _id: null,\n            naziv: null,\n            opis: null,\n            antibiogram: {\n              _id: null,\n              naziv: null,\n              opis: null,\n              antibiotici: [{\n                _id: null,\n                rbr_a: null,\n                naziv: null,\n                opis: null,\n                rezultat: null\n              }]\n            }\n          });\n\n          if (_this2.ModalNegative) {\n            _this2.rezultati[0].rezultat = _this2.NegativeResultSelection;\n            _this2.isLoading = true;\n            _this2.main = false;\n\n            __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].post(\"/rezultati/odobravanje/sacuvaj/\" + _this2.$store.state.sid, {\n              email: _this2.$store.state.userId,\n              token: _this2.$store.state.token,\n              site: _this2.$store.state.site,\n              rezultati: _this2.rezultati\n            }).then(function (res) {\n              __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].get(\"rezultati/odobravanje/samples/\" + _this2.$route.params.patient + \"/\" + _this2.$route.params.id + \"?token=\" + _this2.$store.state.token + \"&site=\" + _this2.$store.state.site + \"&date=\" + _this2.$route.query.date, {}).then(function (res) {\n                _this2.uzorci = [];\n\n                res.data.results.forEach(function (element) {\n\n                  if (_this2.$store.state.sid === element.id) {\n                    console.log(element.rezultati[0].rezultat[0]);\n                  }\n\n                  var check = 0;\n                  var zaprimljen = 0;\n                  var realizovan = 0;\n\n                  if (element.verificiran) {\n                    var status_uzorka = \"VERIFICIRAN\";\n                  } else {\n                    var status_uzorka = element.status;\n                  }\n\n                  element.rezultati.forEach(function (test) {\n                    check++;\n\n                    if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n                      zaprimljen++;\n                    }\n\n                    if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n                      realizovan++;\n                    }\n\n                    if (check === element.rezultati.length) {\n                      if (status_uzorka === \"VERIFICIRAN\") {\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: \"VERIFICIRAN\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else if (status_uzorka === \"ODOBREN\") {\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: \"ODOBREN\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else if (zaprimljen < 1) {\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: \"REALIZOVAN\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else if (realizovan < 1) {\n                        var stat = \"ZAPRIMLJEN\";\n                        if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                          if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                            stat = \"REALIZOVAN\";\n                          }\n                        }\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: stat,\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else {\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: \"U OBRADI\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      }\n                    }\n                  });\n                });\n\n                _this2.uzorci = _this2.uzorci.sort(function (a, b) {\n                  return a.sid.localeCompare(b.sid, undefined, {\n                    numeric: true,\n                    sensitivity: \"base\"\n                  });\n                });\n              }).then(function (res) {\n                __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$emit(\"CloseMicroResult\");\n                _this2.rezultati[0].realizovan = true;\n                _this2.MicrobiologyScenario = \"MAIBNeR\";\n                console.log(\"Scenario: \" + Scenario + \" - > \" + _this2.MicrobiologyScenario);\n                _this2.main = true;\n                _this2.isLoading = false;\n              });\n            });\n          } else {\n            _this2.PositiveResultSelection = \"\";\n            _this2.SelectedBacteries.forEach(function (element) {\n              _this2.PositiveResultSelection = _this2.PositiveResultSelection + element.opis + \"\\n\";\n              var Antibiotici = [];\n              var antibiotik = {};\n\n              _this2.Antibiotics.forEach(function (antibiotik) {\n                element.antibiogram.antibiotici.forEach(function (ant) {\n                  if (antibiotik._id == ant) {\n                    antibiotik = {\n                      _id: antibiotik._id,\n                      rbr_a: antibiotik.rbr_a,\n                      naziv: antibiotik.naziv,\n                      opis: antibiotik.opis,\n                      disabled: false,\n                      rezultat: \"\"\n                    };\n                    Antibiotici.push(antibiotik);\n                    antibiotik = {};\n                  }\n                });\n              });\n\n              _this2.rezultati[0].rezultat_m.push({\n                bakterija: true,\n                negativan: _this2.largeModalneg,\n                pozitivan: _this2.largeModalpos,\n                _id: element._id,\n                naziv: element.naziv,\n                opis: element.opis,\n                antibiogram: {\n                  _id: element.antibiogram._id,\n                  naziv: element.antibiogram.naziv,\n                  opis: element.antibiogram.opis,\n                  antibiotici: [].concat(Antibiotici)\n                }\n              });\n            });\n\n            _this2.rezultati[0].rezultat = _this2.PositiveResultSelection.trim();\n            _this2.isLoading = true;\n            _this2.main = false;\n\n            __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].post(\"/rezultati/odobravanje/sacuvaj/\" + _this2.$store.state.sid, {\n              email: _this2.$store.state.userId,\n              token: _this2.$store.state.token,\n              site: _this2.$store.state.site,\n              rezultati: _this2.rezultati\n            }).then(function (res) {\n              __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].get(\"rezultati/odobravanje/samples/\" + _this2.$route.params.patient + \"/\" + _this2.$route.params.id + \"?token=\" + _this2.$store.state.token + \"&site=\" + _this2.$store.state.site + \"&date=\" + _this2.$route.query.date, {}).then(function (res) {\n                _this2.uzorci = [];\n\n                res.data.results.forEach(function (element) {\n\n                  if (_this2.$store.state.sid === element.id) {\n                    console.log(element.rezultati[0].rezultat[0]);\n                  }\n\n                  var check = 0;\n                  var zaprimljen = 0;\n                  var realizovan = 0;\n\n                  if (element.verificiran) {\n                    var status_uzorka = \"VERIFICIRAN\";\n                  } else {\n                    var status_uzorka = element.status;\n                  }\n\n                  element.rezultati.forEach(function (test) {\n                    check++;\n\n                    if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n                      zaprimljen++;\n                    }\n\n                    if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n                      realizovan++;\n                    }\n\n                    if (check === element.rezultati.length) {\n                      if (status_uzorka === \"VERIFICIRAN\") {\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: \"VERIFICIRAN\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else if (status_uzorka === \"ODOBREN\") {\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: \"ODOBREN\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else if (zaprimljen < 1) {\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: \"REALIZOVAN\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else if (realizovan < 1) {\n                        var stat = \"ZAPRIMLJEN\";\n                        if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                          if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                            stat = \"REALIZOVAN\";\n                          }\n                        }\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: stat,\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else {\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: \"U OBRADI\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      }\n                    }\n                  });\n                });\n\n                _this2.uzorci = _this2.uzorci.sort(function (a, b) {\n                  return a.sid.localeCompare(b.sid, undefined, {\n                    numeric: true,\n                    sensitivity: \"base\"\n                  });\n                });\n              }).then(function (res) {\n                __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$emit(\"CloseMicroResult\");\n                _this2.rezultati[0].realizovan = true;\n                _this2.MicrobiologyScenario = \"MAIBPoR\";\n                console.log(\"Scenario: \" + Scenario + \" - > \" + _this2.MicrobiologyScenario);\n                _this2.main = true;\n                _this2.isLoading = false;\n              });\n            });\n          }\n\n          break;\n\n        case \"MANBNoR\":\n          _this2.rezultati[0].rezultat_m = [{\n            bakterija: false,\n            negativan: _this2.ModalNegative,\n            pozitivan: _this2.ModalPositive,\n            _id: null,\n            naziv: null,\n            opis: null,\n            antibiogram: {\n              _id: null,\n              naziv: null,\n              opis: null,\n              antibiotici: [{\n                _id: null,\n                rbr_a: null,\n                naziv: null,\n                opis: null,\n                rezultat: null\n              }]\n            }\n          }];\n\n          if (_this2.ModalNegative) {\n            _this2.rezultati[0].rezultat = _this2.NegativeResultSelection;\n            _this2.isLoading = true;\n            _this2.main = false;\n\n            __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].post(\"/rezultati/odobravanje/sacuvaj/\" + _this2.$store.state.sid, {\n              email: _this2.$store.state.userId,\n              token: _this2.$store.state.token,\n              site: _this2.$store.state.site,\n              rezultati: _this2.rezultati\n            }).then(function (res) {\n              __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].get(\"rezultati/odobravanje/samples/\" + _this2.$route.params.patient + \"/\" + _this2.$route.params.id + \"?token=\" + _this2.$store.state.token + \"&site=\" + _this2.$store.state.site + \"&date=\" + _this2.$route.query.date, {}).then(function (res) {\n                _this2.uzorci = [];\n\n                res.data.results.forEach(function (element) {\n\n                  if (_this2.$store.state.sid === element.id) {\n                    console.log(element.rezultati[0].rezultat[0]);\n                  }\n\n                  var check = 0;\n                  var zaprimljen = 0;\n                  var realizovan = 0;\n\n                  if (element.verificiran) {\n                    var status_uzorka = \"VERIFICIRAN\";\n                  } else {\n                    var status_uzorka = element.status;\n                  }\n\n                  element.rezultati.forEach(function (test) {\n                    check++;\n\n                    if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n                      zaprimljen++;\n                    }\n\n                    if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n                      realizovan++;\n                    }\n\n                    if (check === element.rezultati.length) {\n                      if (status_uzorka === \"VERIFICIRAN\") {\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: \"VERIFICIRAN\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else if (status_uzorka === \"ODOBREN\") {\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: \"ODOBREN\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else if (zaprimljen < 1) {\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: \"REALIZOVAN\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else if (realizovan < 1) {\n                        var stat = \"ZAPRIMLJEN\";\n                        if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                          if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                            stat = \"REALIZOVAN\";\n                          }\n                        }\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: stat,\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else {\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: \"U OBRADI\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      }\n                    }\n                  });\n                });\n\n                _this2.uzorci = _this2.uzorci.sort(function (a, b) {\n                  return a.sid.localeCompare(b.sid, undefined, {\n                    numeric: true,\n                    sensitivity: \"base\"\n                  });\n                });\n              }).then(function (res) {\n                __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$emit(\"CloseMicroResult\");\n                _this2.rezultati[0].realizovan = true;\n                _this2.MicrobiologyScenario = \"MANBNeR\";\n                console.log(\"Scenario: \" + Scenario + \" - > \" + _this2.MicrobiologyScenario);\n                _this2.main = true;\n                _this2.isLoading = false;\n              });\n            });\n          } else {\n            _this2.rezultati[0].rezultat = _this2.PositiveResultSelection;\n            _this2.isLoading = true;\n            _this2.main = false;\n\n            __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].post(\"/rezultati/odobravanje/sacuvaj/\" + _this2.$store.state.sid, {\n              email: _this2.$store.state.userId,\n              token: _this2.$store.state.token,\n              site: _this2.$store.state.site,\n              rezultati: _this2.rezultati\n            }).then(function (res) {\n              __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].get(\"rezultati/odobravanje/samples/\" + _this2.$route.params.patient + \"/\" + _this2.$route.params.id + \"?token=\" + _this2.$store.state.token + \"&site=\" + _this2.$store.state.site + \"&date=\" + _this2.$route.query.date, {}).then(function (res) {\n                _this2.uzorci = [];\n\n                res.data.results.forEach(function (element) {\n\n                  if (_this2.$store.state.sid === element.id) {\n                    console.log(element.rezultati[0].rezultat[0]);\n                  }\n\n                  var check = 0;\n                  var zaprimljen = 0;\n                  var realizovan = 0;\n\n                  if (element.verificiran) {\n                    var status_uzorka = \"VERIFICIRAN\";\n                  } else {\n                    var status_uzorka = element.status;\n                  }\n\n                  element.rezultati.forEach(function (test) {\n                    check++;\n\n                    if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n                      zaprimljen++;\n                    }\n\n                    if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n                      realizovan++;\n                    }\n\n                    if (check === element.rezultati.length) {\n                      if (status_uzorka === \"VERIFICIRAN\") {\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: \"VERIFICIRAN\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else if (status_uzorka === \"ODOBREN\") {\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: \"ODOBREN\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else if (zaprimljen < 1) {\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: \"REALIZOVAN\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else if (realizovan < 1) {\n                        var stat = \"ZAPRIMLJEN\";\n                        if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                          if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                            stat = \"REALIZOVAN\";\n                          }\n                        }\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: stat,\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else {\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: \"U OBRADI\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      }\n                    }\n                  });\n                });\n\n                _this2.uzorci = _this2.uzorci.sort(function (a, b) {\n                  return a.sid.localeCompare(b.sid, undefined, {\n                    numeric: true,\n                    sensitivity: \"base\"\n                  });\n                });\n              }).then(function (res) {\n                __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$emit(\"CloseMicroResult\");\n                _this2.rezultati[0].realizovan = true;\n                _this2.MicrobiologyScenario = \"MANBPoR\";\n                console.log(\"Scenario: \" + Scenario + \" - > \" + _this2.MicrobiologyScenario);\n                _this2.main = true;\n                _this2.isLoading = false;\n              });\n            });\n          }\n\n          break;\n\n        default:\n          break;\n      }\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"ResetResultSelection\", function () {\n      switch (_this2.MicrobiologyScenario) {\n        case \"MAIBNoR\":\n          _this2.ModalNegative = false;\n          _this2.ModalPositive = false;\n          _this2.ModalPositiveCondition = false;\n          _this2.MicrobiologyModalHeader = \"Predefinisani rezultati\";\n          _this2.NegativeResultSelection = \"\";\n          _this2.PositiveResultSelection = \"\";\n          _this2.SelectedBacteries = [];\n          _this2.ShowAllBacteries = false;\n\n          break;\n\n        case \"MAIBNeR\":\n          _this2.SelectedBacteries = [];\n\n          break;\n\n        case \"MAIBPoR\":\n          break;\n\n        case \"MANBNoR\":\n          _this2.ModalNegative = false;\n          _this2.ModalPositive = false;\n          _this2.ModalPositiveCondition = false;\n          _this2.MicrobiologyModalHeader = \"Predefinisani rezultati\";\n          _this2.NegativeResultSelection = \"\";\n          _this2.PositiveResultSelection = \"\";\n          _this2.SelectedBacteries = [];\n          _this2.ShowAllBacteries = false;\n\n          break;\n\n        case \"MANBNeR\":\n          _this2.SelectedBacteries = [];\n\n          break;\n\n        case \"MANBPoR\":\n          _this2.SelectedBacteries = [];\n\n          break;\n\n        default:\n          break;\n      }\n\n      _this2.MicrobiologyResult.DefaultBacteries.forEach(function (element) {\n        element.chosen = false;\n      });\n\n      _this2.MicrobiologyResult.RemainingBacteries.forEach(function (element) {\n        element.chosen = false;\n      });\n\n      _this2.SelectedBacteries = [];\n      _this2.ShowAllBacteries = false;\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"CancelMicroResult\", function () {\n\n      switch (_this2.MicrobiologyScenario) {\n        case \"MAIBNoR\":\n          _this2.ModalNegative = false;\n          _this2.ModalPositive = false;\n          _this2.ModalPositiveCondition = false;\n          _this2.MicrobiologyModalHeader = \"Predefinisani rezultati\";\n          _this2.NegativeResultSelection = \"\";\n          _this2.PositiveResultSelection = \"\";\n          _this2.SelectedBacteries = [];\n          _this2.ShowAllBacteries = false;\n\n          break;\n\n        case \"MAIBNeR\":\n          _this2.SelectedBacteries = [];\n\n          break;\n\n        case \"MAIBPoR\":\n          break;\n\n        case \"MANBNoR\":\n          _this2.ModalNegative = false;\n          _this2.ModalPositive = false;\n          _this2.ModalPositiveCondition = false;\n          _this2.MicrobiologyModalHeader = \"Predefinisani rezultati\";\n          _this2.NegativeResultSelection = \"\";\n          _this2.PositiveResultSelection = \"\";\n          _this2.SelectedBacteries = [];\n          _this2.ShowAllBacteries = false;\n\n          break;\n\n        case \"MANBNeR\":\n          _this2.SelectedBacteries = [];\n\n          break;\n\n        case \"MANBPoR\":\n          _this2.SelectedBacteries = [];\n\n          break;\n\n        default:\n          break;\n      }\n\n      _this2.MicrobiologyResult.DefaultBacteries.forEach(function (element) {\n        element.chosen = false;\n      });\n\n      _this2.MicrobiologyResult.RemainingBacteries.forEach(function (element) {\n        element.chosen = false;\n      });\n\n      _this2.SelectedBacteries = [];\n      _this2.ShowAllBacteries = false;\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"MicroBactery\", function () {\n\n      console.log('Saving main result...');\n\n      _this2.isLoading = true;\n      _this2.main = false;\n\n      __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].post(\"/rezultati/odobravanje/sacuvaj/\" + _this2.$store.state.sid, {\n        email: _this2.$store.state.userId,\n        token: _this2.$store.state.token,\n        site: _this2.$store.state.site,\n        rezultati: _this2.rezultati\n      }).then(function (res) {\n        __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].get(\"rezultati/odobravanje/samples/\" + _this2.$route.params.patient + \"/\" + _this2.$route.params.id + \"?token=\" + _this2.$store.state.token + \"&site=\" + _this2.$store.state.site + \"&date=\" + _this2.$route.query.date, {}).then(function (res) {\n          _this2.uzorci = [];\n\n          res.data.results.forEach(function (element) {\n\n            if (_this2.$store.state.sid === element.id) {\n              console.log(element.rezultati[0].rezultat[0]);\n            }\n\n            var check = 0;\n            var zaprimljen = 0;\n            var realizovan = 0;\n\n            if (element.verificiran) {\n              var status_uzorka = \"VERIFICIRAN\";\n            } else {\n              var status_uzorka = element.status;\n            }\n\n            element.rezultati.forEach(function (test) {\n              check++;\n\n              if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n                zaprimljen++;\n              }\n\n              if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n                realizovan++;\n              }\n\n              if (check === element.rezultati.length) {\n                if (status_uzorka === \"VERIFICIRAN\") {\n                  _this2.uzorci.push({\n                    sid: element.id,\n                    status: \"VERIFICIRAN\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else if (status_uzorka === \"ODOBREN\") {\n                  _this2.uzorci.push({\n                    sid: element.id,\n                    status: \"ODOBREN\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else if (zaprimljen < 1) {\n                  _this2.uzorci.push({\n                    sid: element.id,\n                    status: \"REALIZOVAN\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else if (realizovan < 1) {\n                  var stat = \"ZAPRIMLJEN\";\n                  if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                    if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                      stat = \"REALIZOVAN\";\n                    }\n                  }\n                  _this2.uzorci.push({\n                    sid: element.id,\n                    status: stat,\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else {\n                  _this2.uzorci.push({\n                    sid: element.id,\n                    status: \"U OBRADI\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                }\n              }\n            });\n          });\n\n          _this2.uzorci = _this2.uzorci.sort(function (a, b) {\n            return a.sid.localeCompare(b.sid, undefined, {\n              numeric: true,\n              sensitivity: \"base\"\n            });\n          });\n        }).then(function (res) {\n          _this2.main = true;\n          _this2.isLoading = false;\n          __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$emit(\"CloseMicroBactery\");\n        });\n      });\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"CancelMicroBactery\", function () {});\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"PovratakMicroBactery\", function () {\n      _this2.ShowAntibiotics = false;\n      _this2.ShowBacteries = false;\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"SpasiMicroBactery\", function () {\n\n      if (_this2.TemporaryBacteriesAdd.length) {\n        console.log('Dodavanje bakterija...');\n        var bakterija = {};\n        var antibiogram = {};\n        var antibiotik = {};\n\n        _this2.TemporaryBacteriesAdd.forEach(function (element) {\n          _this2.Antibiograms.forEach(function (antibgr) {\n            if (__WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(element.antibiogram._id) === __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(antibgr._id)) {\n              antibiogram = antibgr;\n            }\n          });\n\n          antibiogram.antibiotici.forEach(function (antbtk) {\n            antbtk.disabled = false;\n            antbtk.rezultat = \"\";\n          });\n\n          bakterija.bakterija = true;\n          bakterija._id = element._id;\n          bakterija.naziv = element.naziv;\n          bakterija.opis = element.opis;\n          bakterija.antibiogram = antibiogram;\n\n          console.log(bakterija);\n\n          _this2.SelectedBacteries.push(bakterija);\n          _this2.BacteryTabs.push(bakterija.opis);\n          _this2.rezultati[0].rezultat_m.push(bakterija);\n          _this2.rezultati[0].rezultat = _this2.rezultati[0].rezultat + \"\\n\" + bakterija.opis;\n          bakterija = {};\n          antibiogram = {};\n        });\n      } else {\n        console.log('Dodavanje antibiotika...');\n      }\n\n      if (_this2.TemporaryAntibiotics.length || _this2.TemporaryBacteriesAdd.length) {\n        _this2.TemporaryAntibiotics.forEach(function (element) {\n          _this2.rezultati[0].rezultat_m.forEach(function (selected) {\n            if (selected.opis == _this2.CurrentTab) {\n              selected.antibiogram.antibiotici.push(element);\n            }\n          });\n        });\n\n        _this2.isLoading = true;\n        _this2.main = false;\n\n        __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].post(\"/rezultati/odobravanje/sacuvaj/\" + _this2.$store.state.sid, {\n          email: _this2.$store.state.userId,\n          token: _this2.$store.state.token,\n          site: _this2.$store.state.site,\n          rezultati: _this2.rezultati\n        }).then(function (res) {\n          __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].get(\"rezultati/odobravanje/samples/\" + _this2.$route.params.patient + \"/\" + _this2.$route.params.id + \"?token=\" + _this2.$store.state.token + \"&site=\" + _this2.$store.state.site + \"&date=\" + _this2.$route.query.date, {}).then(function (res) {\n            _this2.uzorci = [];\n\n            res.data.results.forEach(function (element) {\n\n              if (_this2.$store.state.sid === element.id) {\n                console.log(element.rezultati[0].rezultat[0]);\n              }\n\n              var check = 0;\n              var zaprimljen = 0;\n              var realizovan = 0;\n\n              if (element.verificiran) {\n                var status_uzorka = \"VERIFICIRAN\";\n              } else {\n                var status_uzorka = element.status;\n              }\n\n              element.rezultati.forEach(function (test) {\n                check++;\n\n                if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n                  zaprimljen++;\n                }\n\n                if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n                  realizovan++;\n                }\n\n                if (check === element.rezultati.length) {\n                  if (status_uzorka === \"VERIFICIRAN\") {\n                    _this2.uzorci.push({\n                      sid: element.id,\n                      status: \"VERIFICIRAN\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else if (status_uzorka === \"ODOBREN\") {\n                    _this2.uzorci.push({\n                      sid: element.id,\n                      status: \"ODOBREN\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else if (zaprimljen < 1) {\n                    _this2.uzorci.push({\n                      sid: element.id,\n                      status: \"REALIZOVAN\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else if (realizovan < 1) {\n                    var stat = \"ZAPRIMLJEN\";\n                    if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                      if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                        stat = \"REALIZOVAN\";\n                      }\n                    }\n                    _this2.uzorci.push({\n                      sid: element.id,\n                      status: stat,\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else {\n                    _this2.uzorci.push({\n                      sid: element.id,\n                      status: \"U OBRADI\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  }\n                }\n              });\n            });\n\n            _this2.uzorci = _this2.uzorci.sort(function (a, b) {\n              return a.sid.localeCompare(b.sid, undefined, {\n                numeric: true,\n                sensitivity: \"base\"\n              });\n            });\n          }).then(function (res) {\n            _this2.MicrobiologyScenario = \"MAIBPoR\";\n            _this2.ShowAntibiotics = false;\n            _this2.ShowBacteries = false;\n\n            _this2.main = true;\n            _this2.isLoading = false;\n\n            if (_this2.TemporaryBacteriesAdd.length) {\n              _this2.CurrentTab = _this2.BacteryTabs[_this2.BacteryTabs.length - 1];\n            }\n          });\n        });\n      } else {\n        _this2.MicrobiologyScenario = \"MAIBPoR\";\n        _this2.ShowAntibiotics = false;\n        _this2.ShowBacteries = false;\n      }\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"UpdateMicroBactery\", function (data) {\n\n      if (!_this2.ShowAntibiotics && !_this2.ShowBacteries && _this2.MicrobiologyScenario === \"MAIBPoR\") {\n        if (_this2.sample.status != \"ODOBREN\" && _this2.sample.status != \"VERIFICIRAN\") {\n          _this2.TemporaryAntibiotics = [];\n          _this2.TemporaryBacteries = [];\n          _this2.TemporaryBacteriesAdd = [];\n          var obj = {};\n\n          _this2.Bacteries.forEach(function (element) {\n            obj.chosen = false;\n            obj.disabled = false;\n            obj._id = element._id;\n            obj.naziv = element.naziv;\n            obj.opis = element.opis;\n            obj.antibiogram = element.antibiogram;\n            obj.__v = element.__v;\n            obj.chosen = element.chosen;\n            _this2.TemporaryBacteries.push(obj);\n            obj = {};\n          });\n\n          _this2.TemporaryBacteries.forEach(function (element) {\n            _this2.SelectedBacteries.forEach(function (selected) {\n              if (selected._id == element._id) {\n                element.chosen = true;\n                element.disabled = true;\n              }\n            });\n          });\n\n          _this2.ShowBacteries = true;\n        }\n      }\n    });\n  },\n  beforeDestroy: function beforeDestroy() {\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"Parametar\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"trash\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"edit\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"comment\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"barcode\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"save\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"check\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"verify\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"undo\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"unlock\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"Nalaz\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"pdf\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"Sample\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"Deleted\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"Edited\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"SaveMulti\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"Mail\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"Error\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"Analyser\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"Sljedeci\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"Prethodni\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"Search\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"Push\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"Reference\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"graph\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"table\");\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"tabChanged\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"Antibiotik\");\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"MicroResult\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"ResetResultSelection\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"CancelMicroResult\");\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"MicroReset\");\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"AllowClick\");\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"MicroBactery\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"CancelMicroBactery\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"PovratakMicroBactery\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"SpasiMicroBactery\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"UpdateMicroBactery\");\n  },\n  destroyed: function destroyed() {\n    console.log(\"Component is being destroyed...\");\n  },\n  created: function created() {\n    this.Created();\n\n    this.Previous.pid = Number(this.$route.params.id) - 1;\n    this.Next.pid = Number(this.$route.params.id) + 1;\n    this.query_date = this.$route.query.date.substring(8, 10) + \".\" + this.$route.query.date.substring(5, 7) + \".\" + this.$route.query.date.substring(0, 4);\n\n    this.Datum.today = new Date(__WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(new Date(new Date().setDate(new Date().getDate()))).substring(1, 11) + \"T00:00:00\");\n\n    this.today_date = __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(new Date(new Date().setDate(new Date().getDate()))).substring(1, 11).substring(8, 10) + \".\" + __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(new Date(new Date().setDate(new Date().getDate()))).substring(1, 11).substring(5, 7) + \".\" + __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(new Date(new Date().setDate(new Date().getDate()))).substring(1, 11).substring(0, 4);\n\n    this.Datum.query = new Date(this.$route.query.date.substring(0, 10) + \"T00:00:00\");\n\n    this.Datum.next = new Date(new Date(this.$route.query.date.substring(0, 10) + \"T00:00:00\").setDate(this.Datum.query.getDate() + 1));\n\n    this.Datum.previous = new Date(new Date(this.$route.query.date.substring(0, 10) + \"T00:00:00\").setDate(this.Datum.query.getDate() - 1));\n\n    if (new Date(this.Datum.today) > new Date(this.Datum.query)) {\n      this.pagination = false;\n    } else if (new Date(this.Datum.today) < new Date(this.Datum.query)) {\n      this.pagination = false;\n    } else {\n      this.pagination = true;\n    }\n\n    this.interpretacije = this.interpretacije.sort(function (a, b) {\n      return a.localeCompare(b, undefined, {\n        numeric: true,\n        sensitivity: \"base\"\n      });\n    });\n  },\n\n\n  methods: {\n    ExclamationMulti: function ExclamationMulti(test) {\n      this.warning = { analiza: \"\", text: \"\", napomena: \"\", control: \"\" };\n      var rezultat = test.rezultat.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n      var m_interp = {};\n      var m_opis = \"\";\n\n      this.analitiprikaz.forEach(function (element) {\n        element.labassay.multiparam.forEach(function (param) {\n          if (__WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(param._id) == __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(test.analit)) {\n\n            m_interp = param.interpretacija;\n            m_opis = param.opis;\n          }\n        });\n      });\n\n      switch (this.Interpretacija(test.opis, rezultat, test.jedinica, test.refd, test.refg, this.$store.state.site, test.interp, \"\", this.spec)[2]) {\n        case \"L\":\n          this.warning = {\n            analiza: m_opis,\n            text: m_interp.snizeno.text.trim(),\n            napomena: m_interp.napomena.trim(),\n            control: \"Sniženo\"\n          };\n          break;\n\n        case \"H\":\n          switch (test.interp) {\n            case \"neg\":\n              this.warning = {\n                analiza: m_opis,\n                text: m_interp.poviseno.text.trim(),\n                napomena: m_interp.napomena.trim(),\n                control: \"Pozitivan\"\n              };\n              break;\n\n            default:\n              this.warning = {\n                analiza: m_opis,\n                text: m_interp.poviseno.text.trim(),\n                napomena: m_interp.napomena.trim(),\n                control: \"Povišeno\"\n              };\n              break;\n          }\n\n          break;\n\n        default:\n          this.warning = { analiza: \"\", text: \"\", napomena: \"\", control: \"\" };\n          break;\n      }\n\n      if (this.warning.text && this.warning.text != \"\") {}\n    },\n    Exclamation: function Exclamation(test) {\n      this.warning = { analiza: \"\", text: \"\", napomena: \"\", control: \"\" };\n      var rezultat = test.rezultat.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n      switch (this.Interpretacija(test.opis, rezultat, test.jedinica, test.dRef, test.gRef, this.$store.state.site, test.interp, test.extend, this.spec)[2]) {\n        case \"L\":\n          this.warning = {\n            analiza: test.analit,\n            text: test.interpretacija.snizeno.text.trim(),\n            napomena: test.interpretacija.napomena.trim(),\n            control: \"Sniženo\"\n          };\n          break;\n\n        case \"H\":\n          switch (test.interp) {\n            case \"neg\":\n              this.warning = {\n                analiza: test.analit,\n                text: test.interpretacija.poviseno.text.trim(),\n                napomena: test.interpretacija.napomena.trim(),\n                control: \"Pozitivan\"\n              };\n              break;\n\n            default:\n              this.warning = {\n                analiza: test.analit,\n                text: test.interpretacija.poviseno.text.trim(),\n                napomena: test.interpretacija.napomena.trim(),\n                control: \"Povišeno\"\n              };\n              break;\n          }\n\n          break;\n\n        default:\n          this.warning = { analiza: \"\", text: \"\", napomena: \"\", control: \"\" };\n          break;\n      }\n\n      if (this.warning.text && this.warning.text != \"\") {\n        this.$refs.staticModalExclamation.open();\n      }\n    },\n    LabAssayEval: function LabAssayEval(e, test) {\n      var _this3 = this;\n\n      this.analiza_eval = test;\n      e.preventDefault();\n      this.spinner = false;\n      this.showLineChart = false;\n      var palette = __WEBPACK_IMPORTED_MODULE_5_vuex_store__[\"a\" /* default */].getters.palette;\n      this.table_header = test.ime + \" | \" + test.analit;\n      if (!test.multidata) {\n        this.isLoading = true;\n        this.Procjena = [];\n\n        __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].get(\"/labassay/evaluation/single\" + \"?token=\" + this.$store.state.token + \"&site=\" + this.$store.state.site + \"&range=\" + \"14\", {}).then(function (response) {\n          if (response.data.Results.length) {\n            var obj = {};\n            var count = 0;\n\n            response.data.Results.forEach(function (element) {\n              count++;\n              element.rezultati.forEach(function (rez) {\n                if (rez.labassay === test.labassay_id && element.verificiran && rez.rezultat[rez.rezultat.length - 1].rezultat_f.trim() != \"\") {\n                  obj.rezultat = rez.rezultat[rez.rezultat.length - 1].rezultat_f;\n                  obj.jedinica = rez.rezultat[rez.rezultat.length - 1].jedinice_f;\n                  obj.analit = \"\";\n                  obj.interp = rez.interp;\n                  obj.extend = rez.extend;\n                  obj.refd = rez.refd;\n                  obj.refg = rez.refg;\n                  obj.sid = element.id;\n                  obj.updated_at = rez.rezultat[rez.rezultat.length - 1].updated_at;\n\n                  var datum = __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(rez.rezultat[rez.rezultat.length - 1].updated_at).slice(9, 11) + \".\" + __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(rez.rezultat[rez.rezultat.length - 1].updated_at).slice(6, 8) + \".\" + __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(rez.rezultat[rez.rezultat.length - 1].updated_at).slice(1, 5);\n                  var time = __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(new Date(new Date(rez.rezultat[rez.rezultat.length - 1].updated_at).getTime() - new Date(rez.rezultat[rez.rezultat.length - 1].updated_at).getTimezoneOffset() * 60000).toISOString()).substring(12, 17);\n\n                  obj.datum = datum;\n                  obj.vrijeme = time;\n                  obj.kontrola = _this3.Interpretacija(\"\", obj.rezultat, obj.jedinica, obj.refd, obj.refg, _this3.$store.state.site, obj.interp, obj.extend, _this3.spec)[5];\n\n                  _this3.Procjena.push(obj);\n                  obj = {};\n                }\n              });\n\n              if (count == response.data.Results.length) {\n                _this3.Procjena.sort(function (a, b) {\n                  return Date.parse(a.updated_at) == Date.parse(b.updated_at) ? 0 : +(Date.parse(a.updated_at) < Date.parse(b.updated_at)) || -1;\n                });\n\n                var data = [];\n\n                if (_this3.Procjena.length) {\n                  _this3.optionsLineChart = {\n                    responsive: true,\n                    maintainAspectRatio: false,\n                    title: {\n                      display: true,\n                      text: \"\"\n                    },\n                    scales: {\n                      xAxes: [{\n                        display: true,\n                        gridLines: {\n                          display: true,\n                          color: \"#eee\"\n                        }\n                      }],\n                      yAxes: [{\n                        display: true,\n                        gridLines: {\n                          display: true,\n                          color: \"#eee\"\n                        }\n                      }]\n                    }\n                  };\n\n                  var labels = [];\n                  var kontrola = [];\n                  var temp = \"\";\n\n                  _this3.Procjena.forEach(function (element) {\n                    if (!isNaN(element.rezultat.trim())) {\n                      switch (element.kontrola) {\n                        case \"Red\":\n                          kontrola.push(palette.danger);\n                          break;\n                        case \"Green\":\n                          kontrola.push(palette.primary);\n                          break;\n                        case \"Yellow\":\n                          kontrola.push(palette.warning);\n                          break;\n\n                        default:\n                          kontrola.push(palette.info);\n                          break;\n                      }\n\n                      labels.push(element.datum);\n                      data.push(element.rezultat);\n                    }\n                  });\n\n                  _this3.dataLineChart = {\n                    labels: labels,\n                    datasets: [{\n                      label: test.ime + \" | \" + test.analit,\n                      backgroundColor: __WEBPACK_IMPORTED_MODULE_6_services_utils__[\"a\" /* default */].hex2rgb(palette.info, 0.5).css,\n                      pointBorderColor: kontrola,\n                      pointBackgroundColor: kontrola,\n                      borderColor: palette.transparent,\n                      data: data\n                    }]\n                  };\n\n                  if (data.length) {\n                    _this3.showLineChart = true;\n                  }\n\n                  _this3.$refs.staticModalLabAssayEvalSingle.open();\n                } else {}\n              }\n            });\n          } else {}\n          _this3.isLoading = false;\n        });\n      } else {\n\n        this.multiparam_izbor = test.multiparam[0].opis;\n        this.multiparam_id = test.multiparam[0]._id;\n\n        this.multiparams = [];\n\n        this.multiparam_izbornik = [];\n\n        test.multiparam.forEach(function (element) {\n          _this3.multiparam_izbornik.push(element.opis);\n          _this3.multiparams.push(element);\n        });\n\n        this.isLoading = true;\n        this.Procjena = [];\n\n        __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].get(\"/labassay/evaluation/multi\" + \"?token=\" + this.$store.state.token + \"&site=\" + this.$store.state.site + \"&labassay=\" + test.labassay_id + \"&range=\" + \"14\", {}).then(function (response) {\n          if (response.data.Multi.length) {\n            _this3.Response = response.data;\n\n            var obj = {};\n            var count = 0;\n\n            response.data.Multi.forEach(function (element) {\n              count++;\n              element.multi.forEach(function (param) {\n                if (_this3.multiparam_id == param.labassay && param.rezultat[0].rezultat_f.trim() != \"\") {\n                  obj.rezultat = param.rezultat[0].rezultat_f;\n                  obj.jedinica = param.rezultat[0].jedinice_f;\n                  obj.analit = \"Nema podataka\";\n                  obj.interp = param.interp;\n                  obj.extend = param.extend;\n                  obj.refd = param.refd;\n                  obj.refg = param.refg;\n                  obj.sid = \"Nema podataka\";\n                  obj.updated_at = new Date(param.rezultat[0].updated_at);\n\n                  var datum = __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(new Date(param.rezultat[0].updated_at)).slice(9, 11) + \".\" + __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(new Date(param.rezultat[0].updated_at)).slice(6, 8) + \".\" + __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(new Date(param.rezultat[0].updated_at)).slice(1, 5);\n                  var time = __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(new Date(new Date(param.rezultat[0].updated_at).getTime() - new Date(param.rezultat[0].updated_at).getTimezoneOffset() * 60000).toISOString()).substring(12, 17);\n                  obj.datum = datum;\n                  obj.vrijeme = time;\n                  obj.kontrola = _this3.Interpretacija(\"\", obj.rezultat, obj.jedinica, obj.refd, obj.refg, _this3.$store.state.site, obj.interp, obj.extend, _this3.spec)[5];\n\n                  _this3.Procjena.push(obj);\n                  obj = {};\n                }\n              });\n\n              if (count == response.data.Multi.length) {\n                _this3.Procjena.sort(function (a, b) {\n                  return Date.parse(a.updated_at) == Date.parse(b.updated_at) ? 0 : +(Date.parse(a.updated_at) < Date.parse(b.updated_at)) || -1;\n                });\n\n                var data = [];\n\n                if (_this3.Procjena.length) {\n                  _this3.optionsLineChart = {\n                    responsive: true,\n                    maintainAspectRatio: false,\n                    title: {\n                      display: true,\n                      text: \"\"\n                    },\n                    scales: {\n                      xAxes: [{\n                        display: true,\n                        gridLines: {\n                          display: true,\n                          color: \"#eee\"\n                        }\n                      }],\n                      yAxes: [{\n                        display: true,\n                        gridLines: {\n                          display: true,\n                          color: \"#eee\"\n                        }\n                      }]\n                    }\n                  };\n\n                  var labels = [];\n                  var kontrola = [];\n                  var temp = \"\";\n\n                  _this3.Procjena.forEach(function (element) {\n                    if (!isNaN(element.rezultat.trim())) {\n                      switch (element.kontrola) {\n                        case \"Red\":\n                          kontrola.push(palette.danger);\n                          break;\n                        case \"Green\":\n                          kontrola.push(palette.primary);\n                          break;\n                        case \"Yellow\":\n                          kontrola.push(palette.warning);\n                          break;\n\n                        default:\n                          kontrola.push(palette.info);\n                          break;\n                      }\n\n                      labels.push(element.datum);\n                      data.push(element.rezultat);\n                    }\n                  });\n\n                  _this3.dataLineChart = {\n                    labels: labels,\n                    datasets: [{\n                      label: test.ime + \" | \" + test.analit,\n                      backgroundColor: __WEBPACK_IMPORTED_MODULE_6_services_utils__[\"a\" /* default */].hex2rgb(palette.info, 0.5).css,\n                      pointBorderColor: kontrola,\n                      pointBackgroundColor: kontrola,\n                      borderColor: palette.transparent,\n                      data: data\n                    }]\n                  };\n\n                  if (data.length) {\n                    _this3.showLineChart = true;\n                  }\n\n                  _this3.$refs.staticModalLabAssayEvalMulti.open();\n                } else {}\n              }\n            });\n          } else {}\n          _this3.isLoading = false;\n        });\n      }\n    },\n    Evaluation: function Evaluation(test) {\n      var _this4 = this;\n\n      this.analiza_eval = test;\n      this.spinner = false;\n      if (true) {\n        this.showLineChart = false;\n        var palette = __WEBPACK_IMPORTED_MODULE_5_vuex_store__[\"a\" /* default */].getters.palette;\n        this.table_header = test.ime + \" | \" + test.analit;\n\n        if (test.multidata) {\n          this.multiparam_izbor = test.multiparam[0].opis;\n          this.multiparam_id = test.multiparam[0]._id;\n\n          this.multiparams = [];\n\n          this.multiparam_izbornik = [];\n\n          test.multiparam.forEach(function (element) {\n            _this4.multiparam_izbornik.push(element.opis);\n            _this4.multiparams.push(element);\n          });\n\n          this.isLoading = true;\n          this.Procjena = [];\n\n          __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].get(\"/patient/evaluation/multi\" + \"?token=\" + this.$store.state.token + \"&site=\" + this.$store.state.site + \"&patient=\" + this.pacijent + \"&labassay=\" + test.labassay_id, {}).then(function (response) {\n            if (response.data.Multi.length) {\n              _this4.Response = response.data;\n\n              var obj = {};\n              var count = 0;\n\n              response.data.Multi.forEach(function (element) {\n                count++;\n                element.multi.forEach(function (param) {\n                  if (_this4.multiparam_id == param.labassay && param.rezultat[0].rezultat_f.trim() != \"\") {\n                    obj.rezultat = param.rezultat[0].rezultat_f;\n                    obj.jedinica = param.rezultat[0].jedinice_f;\n                    obj.analit = \"Nema podataka\";\n                    obj.interp = param.interp;\n                    obj.extend = param.extend;\n                    obj.refd = param.refd;\n                    obj.refg = param.refg;\n                    obj.sid = \"Nema podataka\";\n                    obj.updated_at = new Date(param.rezultat[0].updated_at);\n\n                    var datum = __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(new Date(param.rezultat[0].updated_at)).slice(9, 11) + \".\" + __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(new Date(param.rezultat[0].updated_at)).slice(6, 8) + \".\" + __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(new Date(param.rezultat[0].updated_at)).slice(1, 5);\n                    var time = __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(new Date(new Date(param.rezultat[0].updated_at).getTime() - new Date(param.rezultat[0].updated_at).getTimezoneOffset() * 60000).toISOString()).substring(12, 17);\n                    obj.datum = datum;\n                    obj.vrijeme = time;\n                    obj.kontrola = _this4.Interpretacija(\"\", obj.rezultat, obj.jedinica, obj.refd, obj.refg, _this4.$store.state.site, obj.interp, obj.extend, _this4.spec)[5];\n\n                    _this4.Procjena.push(obj);\n                    obj = {};\n                  }\n                });\n\n                if (count == response.data.Multi.length) {\n                  _this4.Procjena.sort(function (a, b) {\n                    return Date.parse(a.updated_at) == Date.parse(b.updated_at) ? 0 : +(Date.parse(a.updated_at) < Date.parse(b.updated_at)) || -1;\n                  });\n\n                  var data = [];\n\n                  if (_this4.Procjena.length) {\n                    _this4.optionsLineChart = {\n                      responsive: true,\n                      maintainAspectRatio: false,\n                      title: {\n                        display: true,\n                        text: \"\"\n                      },\n                      scales: {\n                        xAxes: [{\n                          display: true,\n                          gridLines: {\n                            display: true,\n                            color: \"#eee\"\n                          }\n                        }],\n                        yAxes: [{\n                          display: true,\n                          gridLines: {\n                            display: true,\n                            color: \"#eee\"\n                          }\n                        }]\n                      }\n                    };\n\n                    var labels = [];\n                    var kontrola = [];\n                    var temp = \"\";\n\n                    _this4.Procjena.forEach(function (element) {\n                      if (!isNaN(element.rezultat.trim())) {\n                        switch (element.kontrola) {\n                          case \"Red\":\n                            kontrola.push(palette.danger);\n                            break;\n                          case \"Green\":\n                            kontrola.push(palette.primary);\n                            break;\n                          case \"Yellow\":\n                            kontrola.push(palette.warning);\n                            break;\n\n                          default:\n                            kontrola.push(palette.info);\n                            break;\n                        }\n\n                        labels.push(element.datum);\n                        data.push(element.rezultat);\n                      }\n                    });\n\n                    _this4.dataLineChart = {\n                      labels: labels,\n                      datasets: [{\n                        label: test.ime + \" | \" + test.analit,\n                        backgroundColor: __WEBPACK_IMPORTED_MODULE_6_services_utils__[\"a\" /* default */].hex2rgb(palette.info, 0.5).css,\n                        pointBorderColor: kontrola,\n                        pointBackgroundColor: kontrola,\n                        borderColor: palette.transparent,\n                        data: data\n                      }]\n                    };\n\n                    if (data.length) {\n                      _this4.showLineChart = true;\n                    }\n\n                    _this4.$refs.staticModalEvaluationMulti.open();\n                  } else {}\n                }\n              });\n            } else {}\n            _this4.isLoading = false;\n          });\n        } else {\n          this.isLoading = true;\n          this.Procjena = [];\n\n          __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].get(\"/patient/evaluation/single\" + \"?token=\" + this.$store.state.token + \"&site=\" + this.$store.state.site + \"&patient=\" + this.pacijent, {}).then(function (response) {\n            if (response.data.Results.length) {\n              var obj = {};\n              var count = 0;\n\n              response.data.Results.forEach(function (element) {\n                count++;\n                element.rezultati.forEach(function (rez) {\n                  if (rez.labassay === test.labassay_id && element.verificiran && rez.rezultat[rez.rezultat.length - 1].rezultat_f.trim() != \"\") {\n                    obj.rezultat = rez.rezultat[rez.rezultat.length - 1].rezultat_f;\n                    obj.jedinica = rez.rezultat[rez.rezultat.length - 1].jedinice_f;\n                    obj.analit = \"\";\n                    obj.interp = rez.interp;\n                    obj.extend = rez.extend;\n                    obj.refd = rez.refd;\n                    obj.refg = rez.refg;\n                    obj.sid = element.id;\n                    obj.updated_at = rez.rezultat[rez.rezultat.length - 1].updated_at;\n\n                    var datum = __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(rez.rezultat[rez.rezultat.length - 1].updated_at).slice(9, 11) + \".\" + __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(rez.rezultat[rez.rezultat.length - 1].updated_at).slice(6, 8) + \".\" + __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(rez.rezultat[rez.rezultat.length - 1].updated_at).slice(1, 5);\n                    var time = __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(new Date(new Date(rez.rezultat[rez.rezultat.length - 1].updated_at).getTime() - new Date(rez.rezultat[rez.rezultat.length - 1].updated_at).getTimezoneOffset() * 60000).toISOString()).substring(12, 17);\n\n                    obj.datum = datum;\n                    obj.vrijeme = time;\n                    obj.kontrola = _this4.Interpretacija(\"\", obj.rezultat, obj.jedinica, obj.refd, obj.refg, _this4.$store.state.site, obj.interp, obj.extend, _this4.spec)[5];\n\n                    _this4.Procjena.push(obj);\n                    obj = {};\n                  }\n                });\n\n                if (count == response.data.Results.length) {\n                  _this4.Procjena.sort(function (a, b) {\n                    return Date.parse(a.updated_at) == Date.parse(b.updated_at) ? 0 : +(Date.parse(a.updated_at) < Date.parse(b.updated_at)) || -1;\n                  });\n\n                  var data = [];\n\n                  if (_this4.Procjena.length) {\n                    _this4.optionsLineChart = {\n                      responsive: true,\n                      maintainAspectRatio: false,\n                      title: {\n                        display: true,\n                        text: \"\"\n                      },\n                      scales: {\n                        xAxes: [{\n                          display: true,\n                          gridLines: {\n                            display: true,\n                            color: \"#eee\"\n                          }\n                        }],\n                        yAxes: [{\n                          display: true,\n                          gridLines: {\n                            display: true,\n                            color: \"#eee\"\n                          }\n                        }]\n                      }\n                    };\n\n                    var labels = [];\n                    var kontrola = [];\n                    var temp = \"\";\n\n                    _this4.Procjena.forEach(function (element) {\n                      if (!isNaN(element.rezultat.trim())) {\n                        switch (element.kontrola) {\n                          case \"Red\":\n                            kontrola.push(palette.danger);\n                            break;\n                          case \"Green\":\n                            kontrola.push(palette.primary);\n                            break;\n                          case \"Yellow\":\n                            kontrola.push(palette.warning);\n                            break;\n\n                          default:\n                            kontrola.push(palette.info);\n                            break;\n                        }\n\n                        labels.push(element.datum);\n                        data.push(element.rezultat);\n                      }\n                    });\n\n                    _this4.dataLineChart = {\n                      labels: labels,\n                      datasets: [{\n                        label: test.ime + \" | \" + test.analit,\n                        backgroundColor: __WEBPACK_IMPORTED_MODULE_6_services_utils__[\"a\" /* default */].hex2rgb(palette.info, 0.5).css,\n                        pointBorderColor: kontrola,\n                        pointBackgroundColor: kontrola,\n                        borderColor: palette.transparent,\n                        data: data\n                      }]\n                    };\n\n                    if (data.length) {\n                      _this4.showLineChart = true;\n                    }\n\n                    _this4.$refs.staticModalEvaluationSingle.open();\n                  } else {}\n                }\n              });\n            } else {}\n            _this4.isLoading = false;\n          });\n        }\n      }\n    },\n    filteredAntibiotics: function filteredAntibiotics(column, columns) {\n      var _this5 = this;\n\n      return this.Antibiotics.filter(function (item) {\n        return _this5.Antibiotics.indexOf(item) % columns === column - 1;\n      });\n    },\n    filteredBacteries: function filteredBacteries(column, columns) {\n      var _this6 = this;\n\n      return this.TemporaryBacteries.filter(function (item) {\n        return _this6.TemporaryBacteries.indexOf(item) % columns === column - 1;\n      });\n    },\n    AddAntibiotics: function AddAntibiotics(data) {\n      var obj = {};\n\n      if (!data.chosen) {\n        obj._id = data._id, obj.rbr_a = data.rbr_a, obj.naziv = data.naziv, obj.opis = data.opis, obj.rezultat = \"\";\n        this.TemporaryAntibiotics.push(obj);\n      } else {\n        for (var i = 0; i < this.TemporaryAntibiotics.length; i++) {\n          if (this.TemporaryAntibiotics[i]._id === data._id) {\n            this.TemporaryAntibiotics.splice(i, 1);\n            break;\n          }\n        }\n      }\n    },\n    AddBacteries: function AddBacteries(data) {\n      if (!data.chosen) {\n        this.TemporaryBacteriesAdd.push(data);\n      } else {\n        for (var i = 0; i < this.TemporaryBacteriesAdd.length; i++) {\n          if (this.TemporaryBacteriesAdd[i]._id === data._id) {\n            this.TemporaryBacteriesAdd.splice(i, 1);\n            break;\n          }\n        }\n      }\n    },\n    OpenMicroSelect: function OpenMicroSelect($event, test) {\n      var _this7 = this;\n\n      console.log(\"Select Modal opening...\");\n\n      this.CurrentTab = \"\";\n      this.testovi = [];\n      this.rezultati = [];\n      this.analitiprikaz = [];\n      this.calculated = false;\n      this.show_table = false;\n      this.main = false;\n\n      var topcije = null;\n      topcije = __WEBPACK_IMPORTED_MODULE_11__data_izbornik_izbornik__[\"a\" /* default */].rez;\n\n      __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].get(\"rezultati/showsingle/\" + this.$store.state.sid + \"?token=\" + this.$store.state.token + \"&site=\" + this.$store.state.site, {}).then(function (res) {\n        console.log(res.data);\n        var test = {};\n\n        if (res.data.data.length) {\n          res.data.data.sort(function (a, b) {\n            return a.testovi.labassay.grupa + a.testovi.labassay.grouporder == b.testovi.labassay.grupa + b.testovi.labassay.grouporder ? 0 : +(a.testovi.labassay.grupa + a.testovi.labassay.grouporder > b.testovi.labassay.grupa + b.testovi.labassay.grouporder) || -1;\n          });\n\n          _this7.testovi = res.data.data;\n          _this7.analitiprikaz = res.data.multidata;\n\n          res.data.data.forEach(function (element) {\n            test = {};\n            test.realizovan = false;\n\n            test.ime = element.testovi.labassay.naziv;\n            test.test = element.testovi.labassay.sifra;\n            test.analit = element.testovi.labassay.analit;\n            test.IDE = element.testovi._id;\n            test.labassay_id = element.testovi.labassay._id;\n\n            test.multi_count = 0;\n            test.multi_rezultati = [];\n\n            res.data.multidata.forEach(function (multi) {\n              if (multi.labassay._id === element.testovi.labassay._id) {\n                test.multi_rezultati = multi.rezultat;\n                test.multi_count = multi.rezultat[0].rezultat.length;\n              }\n            });\n\n            test.kategorija = element.testovi.labassay.kategorija;\n            test.analyser = element.testovi.labassay.analyser;\n            test.multiparam = element.testovi.labassay.multiparam;\n            test.vise = element.testovi.rezultat.length;\n            test.calculated = element.testovi.labassay.calculated;\n            test.manual = element.testovi.labassay.manual;\n\n            test.select_options = eval(\"topcije.\" + element.testovi.interp.replace(\"%\", \"_\").replace(\"/\", \"_\").replace(\" \", \"_\").replace(/-/g, \"_\").replace(\"#\", \"_\").replace(/^\\d+/, \"\"));\n\n            element.testovi.rezultat.forEach(function (rezultat) {\n              test.sekcija = rezultat.anaassay.sekcija;\n              test.rezultat = rezultat.rezultat_f;\n              test.result = rezultat;\n              test.anaassay = rezultat.anaassay;\n\n              if (rezultat.rezultat_f != \"\") {\n                test.realizovan = true;\n              }\n\n              test.unit = rezultat.jedinice_f;\n\n              if (res.data.verificiran || res.data.status === \"ODOBREN\") {\n                test.odobren = \"ODOBREN\";\n                test.edit = false;\n              } else {\n                test.odobren != \"ODOBREN\";\n                test.edit = true;\n              }\n\n              test.jedinica = rezultat.jedinice_f;\n              test.id = rezultat._id;\n              test.multidata = element.testovi.labassay.multi;\n              test.rezultat_m = rezultat.rezultat_m;\n              test.bakterije = element.testovi.labassay.bakterije;\n              test.neg_description = element.testovi.labassay.neg_description;\n              test.pos_description = element.testovi.labassay.pos_description;\n              test.refSet = element.testovi.grupa;\n              test.dRef = element.testovi.refd;\n              test.gRef = element.testovi.refg;\n              test.interp = element.testovi.interp;\n              test.extend = element.testovi.extend;\n              test.retest = element.testovi.retest;\n              test.interpretacija = element.testovi.labassay.interpretacija;\n            });\n\n            if (test.select_options != undefined && !test.select_options.includes(test.rezultat)) {\n              test.select_options.unshift(test.rezultat);\n            }\n            _this7.rezultati.push(test);\n          });\n\n          if (_this7.MicrobiologySample && _this7.AllowGetSample) {\n            var bakterioloski = false;\n            var negativan = false;\n            var pozitivan = false;\n            var bakterijed = [];\n            var bakterijei = [];\n            var neg_rezultati = [];\n            var poz_rezultati = [];\n\n            _this7.CurrentTest = _this7.rezultati[0].analit;\n\n            neg_rezultati = [].concat(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray___default()(_this7.rezultati[0].neg_description));\n            poz_rezultati = [].concat(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray___default()(_this7.rezultati[0].pos_description));\n\n            if (_this7.rezultati[0].bakterije.length) {\n              bakterioloski = true;\n\n              var counter = 0;\n              var ima = false;\n\n              _this7.Bacteries.forEach(function (element) {\n                element.chosen = false;\n                counter = 0;\n                ima = false;\n                _this7.rezultati[0].bakterije.forEach(function (bakt) {\n                  counter++;\n                  if (element._id == bakt) {\n                    ima = true;\n                  }\n\n                  if (counter === _this7.rezultati[0].bakterije.length && !ima) {\n                    bakterijed.push(element);\n                  }\n\n                  if (counter === _this7.rezultati[0].bakterije.length && ima) {\n                    bakterijei.push(element);\n                  }\n                });\n              });\n\n              switch (_this7.rezultati[0].rezultat_m.length) {\n                case 0:\n                  _this7.MicrobiologyScenario = \"MAIBNoR\";\n                  _this7.SelectedBacteries = [];\n                  break;\n                case 1:\n                  _this7.MicrobiologyScenario = \"MAIBNeR\";\n                  _this7.SelectedBacteries = [];\n\n                  negativan = true;\n\n                  if (!neg_rezultati.includes(_this7.rezultati[0].rezultat.trim())) {\n                    neg_rezultati.unshift(_this7.rezultati[0].rezultat.trim());\n                  }\n\n                  break;\n\n                default:\n                  _this7.MicrobiologyScenario = \"MAIBPoR\";\n                  _this7.SelectedBacteries = [];\n                  _this7.BacteryTabs = [];\n\n                  _this7.rezultati[0].rezultat_m.forEach(function (element) {\n                    if (element.bakterija) {\n                      _this7.SelectedBacteries.push(element);\n                      _this7.BacteryTabs.push(element.opis);\n                    }\n                  });\n\n                  console.log(\"Izabrane bakterije:\");\n                  console.log(_this7.SelectedBacteries);\n\n                  var maxVal = _this7.SelectedBacteries.reduce(function (max, val) {\n                    return max.antibiogram.antibiotici.length > val.antibiogram.antibiotici.length ? max : val;\n                  });\n\n                  if (_this7.CurrentTab == \"\") {}\n                  _this7.CurrentTab = _this7.SelectedBacteries[0].opis;\n\n                  bakterijed.forEach(function (element) {\n                    _this7.SelectedBacteries.forEach(function (bact) {\n                      if (element._id == bact._id) {\n                        element.chosen = true;\n                      }\n                    });\n                  });\n\n                  bakterijei.forEach(function (element) {\n                    _this7.SelectedBacteries.forEach(function (bact) {\n                      if (element._id == bact._id) {\n                        element.chosen = true;\n                      }\n                    });\n                  });\n\n                  pozitivan = true;\n                  if (!poz_rezultati.includes(_this7.rezultati[0].rezultat.trim())) {\n                    poz_rezultati.unshift(_this7.rezultati[0].rezultat.trim());\n                  }\n\n                  break;\n              }\n            } else {\n              bakterioloski = false;\n              _this7.SelectedBacteries = [];\n\n              switch (_this7.rezultati[0].rezultat_m.length) {\n                case 0:\n                  _this7.MicrobiologyScenario = \"MANBNoR\";\n                  neg_rezultati = _this7.rezultati[0].neg_description;\n                  poz_rezultati = _this7.rezultati[0].pos_description;\n\n                  break;\n\n                case 1:\n                  if (_this7.rezultati[0].rezultat_m[0].negativan === true) {\n                    _this7.MicrobiologyScenario = \"MANBNeR\";\n\n                    negativan = true;\n\n                    if (!neg_rezultati.includes(_this7.rezultati[0].rezultat.trim())) {\n                      neg_rezultati.unshift(_this7.rezultati[0].rezultat.trim());\n                    }\n                  } else {\n                    _this7.MicrobiologyScenario = \"MANBPoR\";\n\n                    pozitivan = true;\n\n                    if (!poz_rezultati.includes(_this7.rezultati[0].rezultat.trim())) {\n                      poz_rezultati.unshift(_this7.rezultati[0].rezultat.trim());\n                    }\n                  }\n\n                  break;\n\n                default:\n                  _this7.MicrobiologyScenario = \"Unknown\";\n\n                  break;\n              }\n            }\n\n            _this7.MicrobiologyResult = {\n              negative: negativan,\n              positive: pozitivan,\n              BUG: bakterioloski,\n              F_RESULT: _this7.rezultati[0].rezultat,\n              M_RESULT: [].concat(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray___default()(_this7.rezultati[0].rezultat_m)),\n              DefaultBacteries: [].concat(bakterijei),\n              RemainingBacteries: [].concat(bakterijed),\n              NegativeDescriptions: [].concat(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray___default()(neg_rezultati)),\n              PositiveDescriptions: [].concat(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray___default()(poz_rezultati))\n            };\n          } else {\n            _this7.MicrobiologyScenario = \"Unknown\";\n\n            _this7.MicrobiologyResult = {\n              negative: null,\n              positive: null,\n              BUG: null,\n              F_RESULT: \"\",\n              M_RESULT: [],\n              DefaultBacteries: [],\n              RemainingBacteries: [],\n              NegativeDescriptions: [],\n              PositiveDescriptions: []\n            };\n          }\n\n          _this7.rezultati.forEach(function (element) {\n            if (element.calculated) {\n              _this7.calculated = true;\n            }\n          });\n        }\n      }).then(function () {\n        _this7.ShowAntibiotics = false;\n        _this7.ShowBacteries = false;\n        _this7.show_table = true;\n        _this7.main = true;\n        _this7.$refs.staticModalMicroBacterySelect.open();\n      });\n    },\n    OpenMicro: function OpenMicro($event, test) {\n      var _this8 = this;\n\n      console.log(\"Result Modal opening...\");\n      this.CurrentTab = \"\";\n      this.testovi = [];\n      this.rezultati = [];\n      this.analitiprikaz = [];\n      this.calculated = false;\n      this.show_table = false;\n      this.main = false;\n\n      var topcije = null;\n      topcije = __WEBPACK_IMPORTED_MODULE_11__data_izbornik_izbornik__[\"a\" /* default */].rez;\n\n      __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].get(\"rezultati/showsingle/\" + this.$store.state.sid + \"?token=\" + this.$store.state.token + \"&site=\" + this.$store.state.site, {}).then(function (res) {\n        console.log(res.data);\n        var test = {};\n\n        if (res.data.data.length) {\n          res.data.data.sort(function (a, b) {\n            return a.testovi.labassay.grupa + a.testovi.labassay.grouporder == b.testovi.labassay.grupa + b.testovi.labassay.grouporder ? 0 : +(a.testovi.labassay.grupa + a.testovi.labassay.grouporder > b.testovi.labassay.grupa + b.testovi.labassay.grouporder) || -1;\n          });\n\n          _this8.testovi = res.data.data;\n          _this8.analitiprikaz = res.data.multidata;\n\n          res.data.data.forEach(function (element) {\n            test = {};\n            test.realizovan = false;\n\n            test.ime = element.testovi.labassay.naziv;\n            test.test = element.testovi.labassay.sifra;\n            test.analit = element.testovi.labassay.analit;\n            test.IDE = element.testovi._id;\n            test.labassay_id = element.testovi.labassay._id;\n\n            test.multi_count = 0;\n            test.multi_rezultati = [];\n\n            res.data.multidata.forEach(function (multi) {\n              if (multi.labassay._id === element.testovi.labassay._id) {\n                test.multi_rezultati = multi.rezultat;\n                test.multi_count = multi.rezultat[0].rezultat.length;\n              }\n            });\n\n            test.kategorija = element.testovi.labassay.kategorija;\n            test.analyser = element.testovi.labassay.analyser;\n            test.multiparam = element.testovi.labassay.multiparam;\n            test.vise = element.testovi.rezultat.length;\n            test.calculated = element.testovi.labassay.calculated;\n            test.manual = element.testovi.labassay.manual;\n\n            test.select_options = eval(\"topcije.\" + element.testovi.interp.replace(\"%\", \"_\").replace(\"/\", \"_\").replace(\" \", \"_\").replace(/-/g, \"_\").replace(\"#\", \"_\").replace(/^\\d+/, \"\"));\n\n            element.testovi.rezultat.forEach(function (rezultat) {\n              test.sekcija = rezultat.anaassay.sekcija;\n              test.rezultat = rezultat.rezultat_f;\n              test.result = rezultat;\n              test.anaassay = rezultat.anaassay;\n\n              if (rezultat.rezultat_f != \"\") {\n                test.realizovan = true;\n              }\n\n              test.unit = rezultat.jedinice_f;\n\n              if (res.data.verificiran || res.data.status === \"ODOBREN\") {\n                test.odobren = \"ODOBREN\";\n                test.edit = false;\n              } else {\n                test.odobren != \"ODOBREN\";\n                test.edit = true;\n              }\n\n              test.jedinica = rezultat.jedinice_f;\n              test.id = rezultat._id;\n              test.multidata = element.testovi.labassay.multi;\n              test.rezultat_m = rezultat.rezultat_m;\n              test.bakterije = element.testovi.labassay.bakterije;\n              test.neg_description = element.testovi.labassay.neg_description;\n              test.pos_description = element.testovi.labassay.pos_description;\n              test.refSet = element.testovi.grupa;\n              test.dRef = element.testovi.refd;\n              test.gRef = element.testovi.refg;\n              test.interp = element.testovi.interp;\n              test.extend = element.testovi.extend;\n              test.retest = element.testovi.retest;\n              test.interpretacija = element.testovi.labassay.interpretacija;\n            });\n\n            if (test.select_options != undefined && !test.select_options.includes(test.rezultat)) {\n              test.select_options.unshift(test.rezultat);\n            }\n            _this8.rezultati.push(test);\n          });\n\n          if (_this8.MicrobiologySample && _this8.AllowGetSample) {\n            var bakterioloski = false;\n            var negativan = false;\n            var pozitivan = false;\n            var bakterijed = [];\n            var bakterijei = [];\n            var neg_rezultati = [];\n            var poz_rezultati = [];\n\n            _this8.CurrentTest = _this8.rezultati[0].analit;\n\n            neg_rezultati = [].concat(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray___default()(_this8.rezultati[0].neg_description));\n            poz_rezultati = [].concat(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray___default()(_this8.rezultati[0].pos_description));\n\n            if (_this8.rezultati[0].bakterije.length) {\n              bakterioloski = true;\n\n              var counter = 0;\n              var ima = false;\n\n              _this8.Bacteries.forEach(function (element) {\n                element.chosen = false;\n                counter = 0;\n                ima = false;\n                _this8.rezultati[0].bakterije.forEach(function (bakt) {\n                  counter++;\n                  if (element._id == bakt) {\n                    ima = true;\n                  }\n\n                  if (counter === _this8.rezultati[0].bakterije.length && !ima) {\n                    bakterijed.push(element);\n                  }\n\n                  if (counter === _this8.rezultati[0].bakterije.length && ima) {\n                    bakterijei.push(element);\n                  }\n                });\n              });\n\n              switch (_this8.rezultati[0].rezultat_m.length) {\n                case 0:\n                  _this8.MicrobiologyScenario = \"MAIBNoR\";\n                  _this8.SelectedBacteries = [];\n                  break;\n                case 1:\n                  _this8.MicrobiologyScenario = \"MAIBNeR\";\n                  _this8.SelectedBacteries = [];\n\n                  negativan = true;\n\n                  if (!neg_rezultati.includes(_this8.rezultati[0].rezultat.trim())) {\n                    neg_rezultati.unshift(_this8.rezultati[0].rezultat.trim());\n                  }\n\n                  break;\n\n                default:\n                  _this8.MicrobiologyScenario = \"MAIBPoR\";\n                  _this8.SelectedBacteries = [];\n                  _this8.BacteryTabs = [];\n\n                  _this8.rezultati[0].rezultat_m.forEach(function (element) {\n                    if (element.bakterija) {\n                      _this8.SelectedBacteries.push(element);\n                      _this8.BacteryTabs.push(element.opis);\n                    }\n                  });\n\n                  console.log(\"Izabrane bakterije:\");\n                  console.log(_this8.SelectedBacteries);\n\n                  var maxVal = _this8.SelectedBacteries.reduce(function (max, val) {\n                    return max.antibiogram.antibiotici.length > val.antibiogram.antibiotici.length ? max : val;\n                  });\n\n                  if (_this8.CurrentTab == \"\") {}\n                  _this8.CurrentTab = _this8.SelectedBacteries[0].opis;\n\n                  bakterijed.forEach(function (element) {\n                    _this8.SelectedBacteries.forEach(function (bact) {\n                      if (element._id == bact._id) {\n                        element.chosen = true;\n                      }\n                    });\n                  });\n\n                  bakterijei.forEach(function (element) {\n                    _this8.SelectedBacteries.forEach(function (bact) {\n                      if (element._id == bact._id) {\n                        element.chosen = true;\n                      }\n                    });\n                  });\n\n                  pozitivan = true;\n                  if (!poz_rezultati.includes(_this8.rezultati[0].rezultat.trim())) {\n                    poz_rezultati.unshift(_this8.rezultati[0].rezultat.trim());\n                  }\n\n                  break;\n              }\n            } else {\n              bakterioloski = false;\n              _this8.SelectedBacteries = [];\n\n              switch (_this8.rezultati[0].rezultat_m.length) {\n                case 0:\n                  _this8.MicrobiologyScenario = \"MANBNoR\";\n                  neg_rezultati = _this8.rezultati[0].neg_description;\n                  poz_rezultati = _this8.rezultati[0].pos_description;\n\n                  break;\n\n                case 1:\n                  if (_this8.rezultati[0].rezultat_m[0].negativan === true) {\n                    _this8.MicrobiologyScenario = \"MANBNeR\";\n\n                    negativan = true;\n\n                    if (!neg_rezultati.includes(_this8.rezultati[0].rezultat.trim())) {\n                      neg_rezultati.unshift(_this8.rezultati[0].rezultat.trim());\n                    }\n                  } else {\n                    _this8.MicrobiologyScenario = \"MANBPoR\";\n\n                    pozitivan = true;\n\n                    if (!poz_rezultati.includes(_this8.rezultati[0].rezultat.trim())) {\n                      poz_rezultati.unshift(_this8.rezultati[0].rezultat.trim());\n                    }\n                  }\n\n                  break;\n\n                default:\n                  _this8.MicrobiologyScenario = \"Unknown\";\n\n                  break;\n              }\n            }\n\n            _this8.MicrobiologyResult = {\n              negative: negativan,\n              positive: pozitivan,\n              BUG: bakterioloski,\n              F_RESULT: _this8.rezultati[0].rezultat,\n              M_RESULT: [].concat(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray___default()(_this8.rezultati[0].rezultat_m)),\n              DefaultBacteries: [].concat(bakterijei),\n              RemainingBacteries: [].concat(bakterijed),\n              NegativeDescriptions: [].concat(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray___default()(neg_rezultati)),\n              PositiveDescriptions: [].concat(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray___default()(poz_rezultati))\n            };\n          } else {\n            _this8.MicrobiologyScenario = \"Unknown\";\n\n            _this8.MicrobiologyResult = {\n              negative: null,\n              positive: null,\n              BUG: null,\n              F_RESULT: \"\",\n              M_RESULT: [],\n              DefaultBacteries: [],\n              RemainingBacteries: [],\n              NegativeDescriptions: [],\n              PositiveDescriptions: []\n            };\n          }\n\n          _this8.rezultati.forEach(function (element) {\n            if (element.calculated) {\n              _this8.calculated = true;\n            }\n          });\n        }\n      }).then(function () {\n        _this8.ShowAntibiotics = false;\n        _this8.ShowBacteries = false;\n        _this8.show_table = true;\n        _this8.main = true;\n        _this8.$refs.staticModalMicroBactery.open();\n      });\n    },\n    SelectBactery: function SelectBactery(data) {\n      if (!data.chosen) {\n        this.SelectedBacteries.push(data);\n      } else {\n        for (var i = this.SelectedBacteries.length - 1; i >= 0; i--) {\n          if (this.SelectedBacteries[i]._id === data._id) {\n            this.SelectedBacteries.splice(i, 1);\n          }\n        }\n      }\n\n      if (this.SelectedBacteries.length > 0) {\n        this.ModalPositiveCondition = true;\n      } else {\n        this.ModalPositiveCondition = false;\n      }\n    },\n    MicroResultSelect: function MicroResultSelect(event) {\n      var _this9 = this;\n\n      this.uzorci.forEach(function (element) {\n        if (element.sid === _this9.$store.state.sid) {\n          _this9.sample.status = \"ZAPRIMLJEN\";\n        }\n      });\n      this.$refs.staticModalSelectResult.open();\n    },\n    ResetSample: function ResetSample(event) {\n      this.$refs.staticModalResetSample.open();\n    },\n    onCancel: function onCancel() {},\n    Prethodni: function Prethodni() {\n      var _this10 = this;\n\n      this.pagination = false;\n\n      var check = 0;\n      var found = false;\n      this.Results.forEach(function (element) {\n        check++;\n        if (element.pid == _this10.Previous.pid) {\n          found = true;\n          __WEBPACK_IMPORTED_MODULE_4__router__[\"a\" /* default */].push(\"/obrada/rezultati/\" + element.patient + \"/\" + element.pid + \"?date=\" + element.date);\n        }\n      });\n\n      if (check === this.Results.length) {\n        if (found) {\n          __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].get(\"/rezultati/pagination\" + \"?token=\" + this.$store.state.token + \"&site=\" + this.$store.state.site + \"&pid=\" + this.Previous.pid.toString() + \"&date=\" + this.$route.query.date, {}).then(function (res) {\n            res.data.rezultati = res.data.rezultati.sort(function (a, b) {\n              return a.pid.localeCompare(b.pid, undefined, {\n                numeric: true,\n                sensitivity: \"base\"\n              });\n            });\n\n            _this10.data_length = res.data.rezultati[res.data.rezultati.length - 1].pid;\n            _this10.data_min = res.data.rezultati[0].pid;\n            if (__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_own_property_names___default()(res.data).length === 0) {\n\n              _this10.pagination = true;\n              _this10.backward_disabled = true;\n            } else {\n              _this10.data_pid = res.data.data.pid;\n              _this10.Results = res.data.rezultati;\n\n              __WEBPACK_IMPORTED_MODULE_4__router__[\"a\" /* default */].push(\"/obrada/rezultati/\" + res.data.data.patient + \"/\" + res.data.data.pid + \"?date=\" + res.data.data.date);\n            }\n          });\n        } else {\n          this.Previous.pid = this.Previous.pid - 1;\n          if (this.Previous.pid > 0) {\n            this.Prethodni();\n          } else {}\n        }\n      } else {}\n    },\n    Sljedeci: function Sljedeci() {\n      var _this11 = this;\n\n      this.pagination = false;\n\n      var check = 0;\n      var found = false;\n      this.Results.forEach(function (element) {\n        check++;\n        if (element.pid == _this11.Next.pid) {\n          found = true;\n          __WEBPACK_IMPORTED_MODULE_4__router__[\"a\" /* default */].push(\"/obrada/rezultati/\" + element.patient + \"/\" + element.pid + \"?date=\" + element.date);\n        }\n      });\n\n      if (check === this.Results.length) {\n        if (found) {\n          __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].get(\"/rezultati/pagination\" + \"?token=\" + this.$store.state.token + \"&site=\" + this.$store.state.site + \"&pid=\" + this.Next.pid.toString() + \"&date=\" + this.$route.query.date, {}).then(function (res) {\n            res.data.rezultati = res.data.rezultati.sort(function (a, b) {\n              return a.pid.localeCompare(b.pid, undefined, {\n                numeric: true,\n                sensitivity: \"base\"\n              });\n            });\n\n            _this11.data_length = res.data.rezultati[res.data.rezultati.length - 1].pid;\n            _this11.data_min = res.data.rezultati[0].pid;\n            if (__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_own_property_names___default()(res.data).length === 0) {\n\n              _this11.pagination = true;\n              _this11.forward_disabled = true;\n            } else {\n              _this11.data_pid = res.data.data.pid;\n              _this11.Results = res.data.rezultati;\n\n              __WEBPACK_IMPORTED_MODULE_4__router__[\"a\" /* default */].push(\"/obrada/rezultati/\" + res.data.data.patient + \"/\" + res.data.data.pid + \"?date=\" + res.data.data.date);\n            }\n          });\n        } else {\n          this.Next.pid = this.Next.pid + 1;\n          this.Sljedeci();\n        }\n      } else {}\n    },\n    Created: function Created() {\n      var _this12 = this;\n\n      this.MicrobiologyOrder = false;\n\n      __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].get(\"rezultati/odobravanje/samples/\" + this.$route.params.patient + \"/\" + this.$route.params.id + \"?token=\" + this.$store.state.token + \"&site=\" + this.$store.state.site + \"&date=\" + this.$route.query.date, {}).then(function (res) {\n        _this12.header = res.data.results[0].patient.ime + \" \" + res.data.results[0].patient.prezime;\n        _this12.lokacija = res.data.lokacija;\n        _this12.final_pdf = res.data.final_pdf;\n\n        _this12.analyser_patient = res.data.results[0].patient;\n\n        _this12.timestamp = res.data.results[0].timestamp;\n\n        _this12.pacijent = res.data.results[0].patient._id;\n        _this12.ime = res.data.results[0].patient.ime;\n        _this12.prezime = res.data.results[0].patient.prezime;\n        _this12.data_spol = res.data.results[0].patient.spol;\n        _this12.jmbg = res.data.results[0].patient.jmbg;\n        _this12.pid = res.data.results[0].sample.pid;\n\n        _this12.email = res.data.results[0].patient.email.trim();\n        _this12.email_tmp = res.data.results[0].patient.email.trim();\n\n        if (!_this12.Email(_this12.email)) {\n          _this12.email = \"\";\n          _this12.email_tmp = \"\";\n        }\n\n        _this12.count = res.data.results.length;\n        _this12.approved = 0;\n        _this12.verified = 0;\n\n        _this12.odobren = true;\n        _this12.verificiran = true;\n        _this12.partials = [];\n        _this12.partials_condition = false;\n\n        res.data.results.forEach(function (element) {\n          if (element.verificiran) {\n            _this12.verified++;\n            _this12.partials.push(element._id);\n          }\n          if (element.status === \"ODOBREN\" || element.status === \"VERIFICIRAN\") {\n            _this12.approved++;\n          }\n          if (element.status != \"ODOBREN\" && element.status != \"VERIFICIRAN\") {\n            _this12.odobren = false;\n          }\n          if (!element.verificiran) {\n            _this12.verificiran = false;\n          }\n        });\n\n        if (_this12.count > _this12.verified && _this12.verified > 1) {\n          _this12.partials_condition = true;\n        }\n\n        _this12.uzorci = [];\n\n        _this12.nalaz.patient = res.data.results[0].patient._id;\n        _this12.nalaz.samples = [];\n\n        res.data.results.forEach(function (element) {\n          var check = 0;\n          var zaprimljen = 0;\n          var realizovan = 0;\n\n          if (element.verificiran) {\n            var status_uzorka = \"VERIFICIRAN\";\n          } else {\n            var status_uzorka = element.status;\n          }\n\n          _this12.nalaz.samples.push(element._id);\n\n          element.rezultati.forEach(function (test) {\n            check++;\n\n            if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n              zaprimljen++;\n            }\n\n            if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n              realizovan++;\n            }\n\n            if (check === element.rezultati.length) {\n\n              if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                _this12.MicrobiologyOrder = true;\n              }\n\n              if (status_uzorka === \"VERIFICIRAN\") {\n                _this12.uzorci.push({\n                  sid: element.id,\n                  status: \"VERIFICIRAN\",\n                  pdf_exists: element.pdf_exists,\n                  tip: element.sample.tip,\n                  _id: element._id,\n                  removed: false\n                });\n              } else if (status_uzorka === \"ODOBREN\") {\n                _this12.uzorci.push({\n                  sid: element.id,\n                  status: \"ODOBREN\",\n                  pdf_exists: element.pdf_exists,\n                  tip: element.sample.tip,\n                  _id: element._id,\n                  removed: false\n                });\n              } else if (zaprimljen < 1) {\n                _this12.uzorci.push({\n                  sid: element.id,\n                  status: \"REALIZOVAN\",\n                  pdf_exists: element.pdf_exists,\n                  tip: element.sample.tip,\n                  _id: element._id,\n                  removed: false\n                });\n              } else if (realizovan < 1) {\n                var stat = \"ZAPRIMLJEN\";\n                if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                  if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                    stat = \"REALIZOVAN\";\n                  }\n                }\n                _this12.uzorci.push({\n                  sid: element.id,\n                  status: stat,\n                  pdf_exists: element.pdf_exists,\n                  tip: element.sample.tip,\n                  _id: element._id,\n                  removed: false\n                });\n              } else {\n                _this12.uzorci.push({\n                  sid: element.id,\n                  status: \"U OBRADI\",\n                  pdf_exists: element.pdf_exists,\n                  tip: element.sample.tip,\n                  _id: element._id,\n                  removed: false\n                });\n              }\n            }\n          });\n        });\n\n        _this12.uzorci = _this12.uzorci.sort(function (a, b) {\n          return a.sid.localeCompare(b.sid, undefined, {\n            numeric: true,\n            sensitivity: \"base\"\n          });\n        });\n        _this12.main = true;\n\n        _this12.pagination = true;\n\n        __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].get(\"/rezultati/pagination\" + \"?token=\" + _this12.$store.state.token + \"&site=\" + _this12.$store.state.site + \"&pid=\" + _this12.$route.params.id + \"&date=\" + _this12.$route.query.date, {}).then(function (res) {\n          res.data.rezultati = res.data.rezultati.sort(function (a, b) {\n            return a.pid.localeCompare(b.pid, undefined, {\n              numeric: true,\n              sensitivity: \"base\"\n            });\n          });\n\n          _this12.data_length = res.data.rezultati[res.data.rezultati.length - 1].pid;\n          _this12.data_min = res.data.rezultati[0].pid;\n          if (__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_own_property_names___default()(res.data).length === 0) {\n\n            _this12.pagination = true;\n          } else {\n            _this12.data_pid = res.data.data.pid;\n            _this12.Results = res.data.rezultati;\n          }\n\n          if (_this12.MicrobiologyOrder) {\n            __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].get(\"mikrobiologija/bakterije/get?token=\" + _this12.$store.state.token + \"&site=\" + _this12.$store.state.site, {}).then(function (res) {\n              _this12.Bacteries = res.data.bakterije;\n              __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].get(\"mikrobiologija/antibiogrami/get?token=\" + _this12.$store.state.token + \"&site=\" + _this12.$store.state.site, {}).then(function (res) {\n                _this12.Antibiograms = res.data.antibiogrami;\n\n                _this12.Antibiograms.sort(function (a, b) {\n                  return a.naziv.localeCompare(b.naziv, undefined, {\n                    numeric: true,\n                    sensitivity: \"base\"\n                  });\n                });\n\n                __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].get(\"mikrobiologija/antibiotici/get?token=\" + _this12.$store.state.token + \"&site=\" + _this12.$store.state.site, {}).then(function (res) {\n                  res.data.antibiotici.sort(function (a, b) {\n                    return a.rbr_a.localeCompare(b.rbr_a, undefined, {\n                      numeric: true,\n                      sensitivity: \"base\"\n                    });\n                  });\n\n                  _this12.Antibiotics = [];\n\n                  res.data.antibiotici.forEach(function (element) {\n                    element.chosen = false;\n                    element.disabled = false;\n                    _this12.Antibiotics.push(element);\n                  });\n                });\n              });\n            });\n          }\n        });\n      });\n    },\n    Povratak: function Povratak() {\n      __WEBPACK_IMPORTED_MODULE_4__router__[\"a\" /* default */].push(\"/obrada/pregled/\" + \"?sekcija=\" + \"SVE\");\n    },\n    Nazad: function Nazad() {\n      this.email_button = false;\n      this.main = true;\n      this.pdf = false;\n    },\n\n\n    Email: function Email(email) {\n      if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email)) {\n        return true;\n      } else {\n        return false;\n      }\n    },\n\n    GetSingleSample: function GetSingleSample(data) {\n      var _this13 = this;\n\n      this.testovi = [];\n      this.rezultati = [];\n      this.analitiprikaz = [];\n      this.calculated = false;\n\n      var topcije = null;\n      topcije = __WEBPACK_IMPORTED_MODULE_11__data_izbornik_izbornik__[\"a\" /* default */].rez;\n\n      this.show_table = false;\n\n      __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].get(\"rezultati/showsingle/\" + data.sid + \"?token=\" + this.$store.state.token + \"&site=\" + this.$store.state.site, {}).then(function (res) {\n        var test = {};\n\n        if (res.data.data.length) {\n          res.data.data.sort(function (a, b) {\n            return a.testovi.labassay.grupa + a.testovi.labassay.grouporder == b.testovi.labassay.grupa + b.testovi.labassay.grouporder ? 0 : +(a.testovi.labassay.grupa + a.testovi.labassay.grouporder > b.testovi.labassay.grupa + b.testovi.labassay.grouporder) || -1;\n          });\n\n          _this13.testovi = res.data.data;\n          _this13.analitiprikaz = res.data.multidata;\n\n          res.data.data.forEach(function (element) {\n            test = {};\n            test.realizovan = false;\n\n            test.ime = element.testovi.labassay.naziv;\n            test.test = element.testovi.labassay.sifra;\n            test.analit = element.testovi.labassay.analit;\n            test.IDE = element.testovi._id;\n            test.labassay_id = element.testovi.labassay._id;\n\n            test.multi_count = 0;\n            test.multi_rezultati = [];\n\n            res.data.multidata.forEach(function (multi) {\n              if (multi.labassay._id === element.testovi.labassay._id) {\n                test.multi_rezultati = multi.rezultat;\n                test.multi_count = multi.rezultat[0].rezultat.length;\n              }\n            });\n\n            test.kategorija = element.testovi.labassay.kategorija;\n            test.analyser = element.testovi.labassay.analyser;\n            test.multiparam = element.testovi.labassay.multiparam;\n            test.vise = element.testovi.rezultat.length;\n            test.calculated = element.testovi.labassay.calculated;\n            test.manual = element.testovi.labassay.manual;\n\n            test.select_options = eval(\"topcije.\" + element.testovi.interp.replace(\"%\", \"_\").replace(\"/\", \"_\").replace(\" \", \"_\").replace(/-/g, \"_\").replace(\"#\", \"_\").replace(/^\\d+/, \"\"));\n\n            element.testovi.rezultat.forEach(function (rezultat) {\n              test.sekcija = rezultat.anaassay.sekcija;\n              test.rezultat = rezultat.rezultat_f;\n              test.result = rezultat;\n              test.anaassay = rezultat.anaassay;\n\n              if (rezultat.rezultat_f != \"\") {\n                test.realizovan = true;\n              }\n\n              test.unit = rezultat.jedinice_f;\n\n              if (res.data.verificiran || res.data.status === \"ODOBREN\") {\n                test.odobren = \"ODOBREN\";\n                test.edit = false;\n              } else {\n                test.odobren != \"ODOBREN\";\n                test.edit = true;\n              }\n\n              test.jedinica = rezultat.jedinice_f;\n              test.id = rezultat._id;\n              test.multidata = element.testovi.labassay.multi;\n              test.rezultat_m = rezultat.rezultat_m;\n              test.bakterije = element.testovi.labassay.bakterije;\n              test.neg_description = element.testovi.labassay.neg_description;\n              test.pos_description = element.testovi.labassay.pos_description;\n              test.refSet = element.testovi.grupa;\n              test.dRef = element.testovi.refd;\n              test.gRef = element.testovi.refg;\n              test.interp = element.testovi.interp;\n              test.extend = element.testovi.extend;\n              test.retest = element.testovi.retest;\n              test.interpretacija = element.testovi.labassay.interpretacija;\n            });\n\n            if (test.select_options != undefined && !test.select_options.includes(test.rezultat)) {\n              test.select_options.unshift(test.rezultat);\n            }\n            _this13.rezultati.push(test);\n          });\n\n          if (_this13.MicrobiologySample) {\n\n            var bakterioloski = false;\n            var negativan = false;\n            var pozitivan = false;\n            var bakterijed = [];\n            var bakterijei = [];\n            var neg_rezultati = [];\n            var poz_rezultati = [];\n\n            _this13.CurrentTest = _this13.rezultati[0].analit;\n\n            neg_rezultati = [].concat(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray___default()(_this13.rezultati[0].neg_description));\n            poz_rezultati = [].concat(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray___default()(_this13.rezultati[0].pos_description));\n\n            if (_this13.rezultati[0].bakterije.length) {\n\n              console.log(\"Ima bakterije.\");\n\n              bakterioloski = true;\n\n              var counter = 0;\n              var ima = false;\n\n              _this13.Bacteries.forEach(function (element) {\n                element.chosen = false;\n                counter = 0;\n                ima = false;\n                _this13.rezultati[0].bakterije.forEach(function (bakt) {\n                  counter++;\n                  if (element._id == bakt) {\n                    ima = true;\n                  }\n\n                  if (counter === _this13.rezultati[0].bakterije.length && !ima) {\n                    bakterijed.push(element);\n                  }\n\n                  if (counter === _this13.rezultati[0].bakterije.length && ima) {\n                    bakterijei.push(element);\n                  }\n                });\n              });\n\n              switch (_this13.rezultati[0].rezultat_m.length) {\n                case 0:\n                  _this13.MicrobiologyScenario = \"MAIBNoR\";\n                  _this13.SelectedBacteries = [];\n                  break;\n                case 1:\n                  _this13.MicrobiologyScenario = \"MAIBNeR\";\n                  _this13.SelectedBacteries = [];\n\n                  negativan = true;\n\n                  if (!neg_rezultati.includes(_this13.rezultati[0].rezultat.trim())) {\n                    neg_rezultati.unshift(_this13.rezultati[0].rezultat.trim());\n                  }\n\n                  break;\n\n                default:\n                  _this13.MicrobiologyScenario = \"MAIBPoR\";\n                  _this13.SelectedBacteries = [];\n                  _this13.BacteryTabs = [];\n\n                  _this13.rezultati[0].rezultat_m.forEach(function (element) {\n                    if (element.bakterija) {\n                      _this13.SelectedBacteries.push(element);\n                      _this13.BacteryTabs.push(element.opis);\n                    }\n                  });\n\n                  console.log(\"Izabrane bakterije:\");\n                  console.log(_this13.SelectedBacteries);\n\n                  var maxVal = _this13.SelectedBacteries.reduce(function (max, val) {\n                    return max.antibiogram.antibiotici.length > val.antibiogram.antibiotici.length ? max : val;\n                  });\n\n                  if (_this13.CurrentTab == \"\") {}\n                  _this13.CurrentTab = _this13.SelectedBacteries[0].opis;\n\n                  bakterijed.forEach(function (element) {\n                    _this13.SelectedBacteries.forEach(function (bact) {\n                      if (element._id == bact._id) {\n                        element.chosen = true;\n                      }\n                    });\n                  });\n\n                  bakterijei.forEach(function (element) {\n                    _this13.SelectedBacteries.forEach(function (bact) {\n                      if (element._id == bact._id) {\n                        element.chosen = true;\n                      }\n                    });\n                  });\n\n                  pozitivan = true;\n                  if (!poz_rezultati.includes(_this13.rezultati[0].rezultat.trim())) {\n                    poz_rezultati.unshift(_this13.rezultati[0].rezultat.trim());\n                  }\n\n                  break;\n              }\n            } else {\n              bakterioloski = false;\n\n              console.log(\"Nema bakterije.\");\n\n              _this13.SelectedBacteries = [];\n\n              switch (_this13.rezultati[0].rezultat_m.length) {\n                case 0:\n                  _this13.MicrobiologyScenario = \"MANBNoR\";\n                  neg_rezultati = _this13.rezultati[0].neg_description;\n                  poz_rezultati = _this13.rezultati[0].pos_description;\n\n                  break;\n\n                case 1:\n                  if (_this13.rezultati[0].rezultat_m[0].negativan === true) {\n                    _this13.MicrobiologyScenario = \"MANBNeR\";\n\n                    negativan = true;\n\n                    if (!neg_rezultati.includes(_this13.rezultati[0].rezultat.trim())) {\n                      neg_rezultati.unshift(_this13.rezultati[0].rezultat.trim());\n                    }\n                  } else {\n                    _this13.MicrobiologyScenario = \"MANBPoR\";\n\n                    pozitivan = true;\n\n                    if (!poz_rezultati.includes(_this13.rezultati[0].rezultat.trim())) {\n                      poz_rezultati.unshift(_this13.rezultati[0].rezultat.trim());\n                    }\n                  }\n\n                  break;\n\n                default:\n                  _this13.MicrobiologyScenario = \"Unknown\";\n\n                  break;\n              }\n            }\n\n            _this13.MicrobiologyResult = {\n              negative: negativan,\n              positive: pozitivan,\n              BUG: bakterioloski,\n              F_RESULT: _this13.rezultati[0].rezultat,\n              M_RESULT: [].concat(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray___default()(_this13.rezultati[0].rezultat_m)),\n              DefaultBacteries: [].concat(bakterijei),\n              RemainingBacteries: [].concat(bakterijed),\n              NegativeDescriptions: [].concat(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray___default()(neg_rezultati)),\n              PositiveDescriptions: [].concat(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray___default()(poz_rezultati))\n            };\n          } else {\n\n            _this13.MicrobiologyScenario = \"Unknown\";\n\n            _this13.MicrobiologyResult = {\n              negative: null,\n              positive: null,\n              BUG: null,\n              F_RESULT: \"\",\n              M_RESULT: [],\n              DefaultBacteries: [],\n              RemainingBacteries: [],\n              NegativeDescriptions: [],\n              PositiveDescriptions: []\n            };\n          }\n\n          _this13.rezultati.forEach(function (element) {\n            if (element.calculated) {\n              _this13.calculated = true;\n            }\n          });\n\n          _this13.sample = data;\n          _this13.show_table = true;\n        }\n      }).then(function () {\n        __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$emit(\"SetClientHeight\", data.sid);\n      });\n    },\n    SelectAnalyser: function SelectAnalyser(test) {\n      var _this14 = this;\n\n      __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].get(\"rezultati/odobravanje/analysers\" + \"?token=\" + this.$store.state.token + \"&site=\" + this.$store.state.site + \"&test=\" + test.labassay_id, {}).then(function (res) {\n        _this14.analysers = [];\n\n        res.data.anaassays.forEach(function (element) {\n          element.aparat.site = element.site;\n          _this14.analysers.push(element.aparat);\n        });\n\n        _this14.analysers.forEach(function (analyser) {\n          analyser.selected = false;\n        });\n\n        _this14.analiza = test;\n\n        _this14.rezultati.forEach(function (element) {\n          _this14.analysers.forEach(function (analyser) {\n            if (element.ime === _this14.analiza.ime && element.anaassay.aparat === analyser._id) {\n              analyser.selected = true;\n              _this14.analyser_selected = analyser;\n            }\n          });\n        });\n        _this14.$refs.staticModalAparati.open();\n      });\n    },\n    AnalyserSelected: function AnalyserSelected(analyser) {\n      var _this15 = this;\n\n      this.analyser = analyser;\n\n      if (this.analyser_selected._id === analyser._id) {\n        this.$refs.staticModalAparati.close();\n      } else {\n        __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].post(\"rezultati/odobravanje/references\", {\n          token: this.$store.state.token,\n          site: this.$store.state.site,\n          id: this.sample.sid,\n          pacijent: this.analyser_patient,\n          analiza: this.analiza,\n          analyser: this.analyser\n        }).then(function (res) {\n          if (res.data.success) {\n            var data = {};\n\n            _this15.uzorci.forEach(function (element) {\n              if (element.sid === _this15.$store.state.sid) {\n                data = element;\n              }\n            });\n\n            _this15.testovi = [];\n            _this15.rezultati = [];\n            _this15.analitiprikaz = [];\n            _this15.calculated = false;\n\n            var topcije = null;\n            topcije = __WEBPACK_IMPORTED_MODULE_11__data_izbornik_izbornik__[\"a\" /* default */].rez;\n\n            _this15.show_table = false;\n\n            __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].get(\"rezultati/showsingle/\" + data.sid + \"?token=\" + _this15.$store.state.token + \"&site=\" + _this15.$store.state.site, {}).then(function (res) {\n              var test = {};\n\n              if (res.data.data.length) {\n                res.data.data.sort(function (a, b) {\n                  return a.testovi.labassay.grupa + a.testovi.labassay.grouporder == b.testovi.labassay.grupa + b.testovi.labassay.grouporder ? 0 : +(a.testovi.labassay.grupa + a.testovi.labassay.grouporder > b.testovi.labassay.grupa + b.testovi.labassay.grouporder) || -1;\n                });\n\n                _this15.testovi = res.data.data;\n                _this15.analitiprikaz = res.data.multidata;\n\n                res.data.data.forEach(function (element) {\n                  test = {};\n                  test.realizovan = false;\n\n                  test.ime = element.testovi.labassay.naziv;\n                  test.test = element.testovi.labassay.sifra;\n                  test.analit = element.testovi.labassay.analit;\n                  test.IDE = element.testovi._id;\n                  test.labassay_id = element.testovi.labassay._id;\n\n                  test.multi_count = 0;\n                  test.multi_rezultati = [];\n\n                  res.data.multidata.forEach(function (multi) {\n                    if (multi.labassay._id === element.testovi.labassay._id) {\n                      test.multi_rezultati = multi.rezultat;\n                      test.multi_count = multi.rezultat[0].rezultat.length;\n                    }\n                  });\n\n                  test.kategorija = element.testovi.labassay.kategorija;\n                  test.analyser = element.testovi.labassay.analyser;\n                  test.multiparam = element.testovi.labassay.multiparam;\n                  test.vise = element.testovi.rezultat.length;\n                  test.calculated = element.testovi.labassay.calculated;\n                  test.manual = element.testovi.labassay.manual;\n\n                  test.select_options = eval(\"topcije.\" + element.testovi.interp.replace(\"%\", \"_\").replace(\"/\", \"_\").replace(\" \", \"_\").replace(/-/g, \"_\").replace(\"#\", \"_\").replace(/^\\d+/, \"\"));\n\n                  element.testovi.rezultat.forEach(function (rezultat) {\n                    test.sekcija = rezultat.anaassay.sekcija;\n                    test.rezultat = rezultat.rezultat_f;\n                    test.result = rezultat;\n                    test.anaassay = rezultat.anaassay;\n\n                    if (rezultat.rezultat_f != \"\") {\n                      test.realizovan = true;\n                    }\n\n                    test.unit = rezultat.jedinice_f;\n\n                    if (res.data.verificiran || res.data.status === \"ODOBREN\") {\n                      test.odobren = \"ODOBREN\";\n                      test.edit = false;\n                    } else {\n                      test.odobren != \"ODOBREN\";\n                      test.edit = true;\n                    }\n\n                    test.jedinica = rezultat.jedinice_f;\n                    test.id = rezultat._id;\n                    test.multidata = element.testovi.labassay.multi;\n                    test.rezultat_m = rezultat.rezultat_m;\n                    test.bakterije = element.testovi.labassay.bakterije;\n                    test.neg_description = element.testovi.labassay.neg_description;\n                    test.pos_description = element.testovi.labassay.pos_description;\n                    test.refSet = element.testovi.grupa;\n                    test.dRef = element.testovi.refd;\n                    test.gRef = element.testovi.refg;\n                    test.interp = element.testovi.interp;\n                    test.extend = element.testovi.extend;\n                    test.retest = element.testovi.retest;\n                    test.interpretacija = element.testovi.labassay.interpretacija;\n                  });\n\n                  if (test.select_options != undefined && !test.select_options.includes(test.rezultat)) {\n                    test.select_options.unshift(test.rezultat);\n                  }\n                  _this15.rezultati.push(test);\n                });\n\n                _this15.rezultati.forEach(function (element) {\n                  if (element.calculated) {\n                    _this15.calculated = true;\n                  }\n                });\n\n                _this15.sample = data;\n                _this15.show_table = true;\n              }\n            });\n            _this15.$refs.staticModalAparati.close();\n          } else {}\n        });\n      }\n    },\n    Reference: function Reference(event, test) {\n      this.reference = {\n        sample: this.$store.state.sid,\n        labassay: test.labassay_id,\n        naziv: test.ime,\n        opis: test.analit,\n        dref: test.dRef,\n        gref: test.gRef,\n        interp: test.interp,\n        extend: test.extend,\n        jedinica: test.jedinica\n      };\n      this.$refs.staticModalReference.open();\n    },\n    BarcodePrint: function BarcodePrint(data) {\n      var _this16 = this;\n\n      var link = __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"g\" /* barcode */] + data.sid + \".png\";\n\n      __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].get(\"uzorci/barcode/\" + data.sid + \"?token=\" + this.$store.state.token + \"&site=\" + this.$store.state.site, {}).then(function (res) {\n        printEPL(res.data.name + \" \" + res.data.surname, _this16.sid, res.data.pacijentRBr, res.data.godiste, res.data.datum, link, res.data.code, _this16.$store.state.site, undefined, undefined);\n      });\n    },\n    SaveResults: function SaveResults(rezultati, from) {\n      var _this17 = this;\n\n      this.isLoading = true;\n\n      if (!this.MicrobiologySample) {\n        rezultati.forEach(function (element) {\n          element.rezultat = element.rezultat.replace(/,/g, \".\");\n        });\n\n        rezultati[0].rezultat_m = [];\n      }\n\n      __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].post(\"/rezultati/odobravanje/sacuvaj/\" + this.$store.state.sid, {\n        email: this.$store.state.userId,\n        token: this.$store.state.token,\n        site: this.$store.state.site,\n        rezultati: rezultati\n      }).then(function (res) {\n        __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].get(\"rezultati/odobravanje/samples/\" + _this17.$route.params.patient + \"/\" + _this17.$route.params.id + \"?token=\" + _this17.$store.state.token + \"&site=\" + _this17.$store.state.site + \"&date=\" + _this17.$route.query.date, {}).then(function (res) {\n          _this17.uzorci = [];\n\n          res.data.results.forEach(function (element) {\n            var check = 0;\n            var zaprimljen = 0;\n            var realizovan = 0;\n\n            if (element.verificiran) {\n              var status_uzorka = \"VERIFICIRAN\";\n            } else {\n              var status_uzorka = element.status;\n            }\n\n            element.rezultati.forEach(function (test) {\n              check++;\n\n              if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n                zaprimljen++;\n              }\n\n              if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n                realizovan++;\n              }\n\n              if (check === element.rezultati.length) {\n\n                if (status_uzorka === \"VERIFICIRAN\") {\n                  _this17.uzorci.push({\n                    sid: element.id,\n                    status: \"VERIFICIRAN\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else if (status_uzorka === \"ODOBREN\") {\n                  _this17.uzorci.push({\n                    sid: element.id,\n                    status: \"ODOBREN\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else if (zaprimljen < 1) {\n                  _this17.uzorci.push({\n                    sid: element.id,\n                    status: \"REALIZOVAN\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else if (realizovan < 1) {\n                  var stat = \"ZAPRIMLJEN\";\n                  if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                    if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                      stat = \"REALIZOVAN\";\n                    }\n                  }\n                  _this17.uzorci.push({\n                    sid: element.id,\n                    status: stat,\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else {\n                  _this17.uzorci.push({\n                    sid: element.id,\n                    status: \"U OBRADI\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                }\n              }\n            });\n          });\n\n          _this17.uzorci = _this17.uzorci.sort(function (a, b) {\n            return a.sid.localeCompare(b.sid, undefined, {\n              numeric: true,\n              sensitivity: \"base\"\n            });\n          });\n\n          _this17.isLoading = false;\n        });\n      });\n    },\n    DeletedSample: function DeletedSample(data) {\n      var _this18 = this;\n\n      this.uzorci.forEach(function (element) {\n        if (element.sid === data) {\n          element.removed = false;\n        }\n      });\n\n      for (var i = 0; i < this.uzorci.length; i++) {\n        if (this.uzorci[i].sid === data) {\n          this.uzorci.splice(i, 1);\n          break;\n        }\n      }\n\n      if (this.uzorci.length) {\n        this.show = false;\n        this.main = false;\n        __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].get(\"rezultati/odobravanje/samples/\" + this.$route.params.patient + \"/\" + this.$route.params.id + \"?token=\" + this.$store.state.token + \"&site=\" + this.$store.state.site + \"&date=\" + this.$route.query.date, {}).then(function (res) {\n          _this18.count = res.data.results.length;\n          _this18.approved = 0;\n\n          _this18.odobren = true;\n          _this18.verificiran = true;\n\n          _this18.resdata = {};\n\n          _this18.resdata = res.data.results;\n\n          res.data.results.forEach(function (element) {\n            if (element.status === \"ODOBREN\" || element.status === \"VERIFICIRAN\") {\n              _this18.approved++;\n            }\n            if (element.status != \"ODOBREN\" && element.status != \"VERIFICIRAN\") {\n              _this18.odobren = false;\n            }\n            if (!element.verificiran) {\n              _this18.verificiran = false;\n            }\n          });\n\n          if (_this18.count == _this18.approved) {\n            var report = [];\n\n            _this18.uzorci.forEach(function (element) {\n              report.push(element._id);\n            });\n\n            __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].post(\"nalazi/create\", {\n              token: _this18.$store.state.token,\n              site: _this18.$store.state.site,\n              type: \"multi\",\n              uzorci: _this18.uzorci,\n              samples: report,\n              timestamp: _this18.timestamp,\n              napomena: \"\",\n              status: false,\n              idNalaza: \"\",\n              location: \"/\",\n              naziv: _this18.timestamp\n            }).then(function (res) {\n              if (res.data.success) {\n                __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].post(\"nalazi/memo\", {\n                  token: _this18.$store.state.token,\n                  site: _this18.$store.state.site,\n                  timestamp: _this18.timestamp,\n                  height: res.data.memo,\n                  location: \"/\",\n                  naziv: _this18.timestamp\n                }).then(function (res) {\n                  _this18.final_pdf = true;\n\n                  _this18.uzorci = [];\n\n                  _this18.resdata.forEach(function (element) {\n                    var check = 0;\n                    var zaprimljen = 0;\n                    var realizovan = 0;\n\n                    if (element.verificiran) {\n                      var status_uzorka = \"VERIFICIRAN\";\n                    } else {\n                      var status_uzorka = element.status;\n                    }\n\n                    element.rezultati.forEach(function (test) {\n                      check++;\n\n                      if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n                        zaprimljen++;\n                      }\n\n                      if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n                        realizovan++;\n                      }\n\n                      if (check === element.rezultati.length) {\n\n                        if (status_uzorka === \"VERIFICIRAN\") {\n                          _this18.uzorci.push({\n                            sid: element.id,\n                            status: \"VERIFICIRAN\",\n                            pdf_exists: element.pdf_exists,\n                            tip: element.sample.tip,\n                            _id: element._id,\n                            removed: false\n                          });\n                        } else if (status_uzorka === \"ODOBREN\") {\n                          _this18.uzorci.push({\n                            sid: element.id,\n                            status: \"ODOBREN\",\n                            pdf_exists: element.pdf_exists,\n                            tip: element.sample.tip,\n                            _id: element._id,\n                            removed: false\n                          });\n                        } else if (zaprimljen < 1) {\n                          _this18.uzorci.push({\n                            sid: element.id,\n                            status: \"REALIZOVAN\",\n                            pdf_exists: element.pdf_exists,\n                            tip: element.sample.tip,\n                            _id: element._id,\n                            removed: false\n                          });\n                        } else if (realizovan < 1) {\n                          var stat = \"ZAPRIMLJEN\";\n                          if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                            if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                              stat = \"REALIZOVAN\";\n                            }\n                          }\n                          _this18.uzorci.push({\n                            sid: element.id,\n                            status: stat,\n                            pdf_exists: element.pdf_exists,\n                            tip: element.sample.tip,\n                            _id: element._id,\n                            removed: false\n                          });\n                        } else {\n                          _this18.uzorci.push({\n                            sid: element.id,\n                            status: \"U OBRADI\",\n                            pdf_exists: element.pdf_exists,\n                            tip: element.sample.tip,\n                            _id: element._id,\n                            removed: false\n                          });\n                        }\n                      }\n                    });\n                  });\n\n                  _this18.uzorci = _this18.uzorci.sort(function (a, b) {\n                    return a.sid.localeCompare(b.sid, undefined, {\n                      numeric: true,\n                      sensitivity: \"base\"\n                    });\n                  });\n\n                  _this18.main = true;\n                  _this18.show = true;\n                });\n              }\n            });\n          } else {\n            _this18.uzorci = [];\n\n            res.data.results.forEach(function (element) {\n              var check = 0;\n              var zaprimljen = 0;\n              var realizovan = 0;\n\n              if (element.verificiran) {\n                var status_uzorka = \"VERIFICIRAN\";\n              } else {\n                var status_uzorka = element.status;\n              }\n\n              element.rezultati.forEach(function (test) {\n                check++;\n\n                if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n                  zaprimljen++;\n                }\n\n                if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n                  realizovan++;\n                }\n\n                if (check === element.rezultati.length) {\n\n                  if (status_uzorka === \"VERIFICIRAN\") {\n                    _this18.uzorci.push({\n                      sid: element.id,\n                      status: \"VERIFICIRAN\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else if (status_uzorka === \"ODOBREN\") {\n                    _this18.uzorci.push({\n                      sid: element.id,\n                      status: \"ODOBREN\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else if (zaprimljen < 1) {\n                    _this18.uzorci.push({\n                      sid: element.id,\n                      status: \"REALIZOVAN\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else if (realizovan < 1) {\n                    var stat = \"ZAPRIMLJEN\";\n                    if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                      if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                        stat = \"REALIZOVAN\";\n                      }\n                    }\n                    _this18.uzorci.push({\n                      sid: element.id,\n                      status: stat,\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else {\n                    _this18.uzorci.push({\n                      sid: element.id,\n                      status: \"U OBRADI\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  }\n                }\n              });\n            });\n\n            _this18.uzorci = _this18.uzorci.sort(function (a, b) {\n              return a.sid.localeCompare(b.sid, undefined, {\n                numeric: true,\n                sensitivity: \"base\"\n              });\n            });\n\n            _this18.main = true;\n            _this18.show = true;\n          }\n        });\n      } else {\n        __WEBPACK_IMPORTED_MODULE_4__router__[\"a\" /* default */].push(\"/obrada/pregled\");\n      }\n    },\n    EditSample: function EditSample(data) {\n      var _this19 = this;\n\n      document.getElementById(data).click();\n\n      __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].get(\"rezultati/odobravanje/samples/\" + this.$route.params.patient + \"/\" + this.$route.params.id + \"?token=\" + this.$store.state.token + \"&site=\" + this.$store.state.site + \"&date=\" + this.$route.query.date, {}).then(function (res) {\n        _this19.uzorci = [];\n\n        res.data.results.forEach(function (element) {\n          var check = 0;\n          var zaprimljen = 0;\n          var realizovan = 0;\n\n          if (element.verificiran) {\n            var status_uzorka = \"VERIFICIRAN\";\n          } else {\n            var status_uzorka = element.status;\n          }\n\n          element.rezultati.forEach(function (test) {\n            check++;\n\n            if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n              zaprimljen++;\n            }\n\n            if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n              realizovan++;\n            }\n\n            if (check === element.rezultati.length) {\n\n              if (status_uzorka === \"VERIFICIRAN\") {\n                _this19.uzorci.push({\n                  sid: element.id,\n                  status: \"VERIFICIRAN\",\n                  pdf_exists: element.pdf_exists,\n                  tip: element.sample.tip,\n                  _id: element._id,\n                  removed: false\n                });\n              } else if (status_uzorka === \"ODOBREN\") {\n                _this19.uzorci.push({\n                  sid: element.id,\n                  status: \"ODOBREN\",\n                  pdf_exists: element.pdf_exists,\n                  tip: element.sample.tip,\n                  _id: element._id,\n                  removed: false\n                });\n              } else if (zaprimljen < 1) {\n                _this19.uzorci.push({\n                  sid: element.id,\n                  status: \"REALIZOVAN\",\n                  pdf_exists: element.pdf_exists,\n                  tip: element.sample.tip,\n                  _id: element._id,\n                  removed: false\n                });\n              } else if (realizovan < 1) {\n                var stat = \"ZAPRIMLJEN\";\n                if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                  if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                    stat = \"REALIZOVAN\";\n                  }\n                }\n                _this19.uzorci.push({\n                  sid: element.id,\n                  status: stat,\n                  pdf_exists: element.pdf_exists,\n                  tip: element.sample.tip,\n                  _id: element._id,\n                  removed: false\n                });\n              } else {\n                _this19.uzorci.push({\n                  sid: element.id,\n                  status: \"U OBRADI\",\n                  pdf_exists: element.pdf_exists,\n                  tip: element.sample.tip,\n                  _id: element._id,\n                  removed: false\n                });\n              }\n            }\n          });\n        });\n\n        _this19.uzorci = _this19.uzorci.sort(function (a, b) {\n          return a.sid.localeCompare(b.sid, undefined, {\n            numeric: true,\n            sensitivity: \"base\"\n          });\n        });\n      }).then(function () {\n        setTimeout(function () {\n          document.getElementById(_this19.$store.state.sid).click();\n        }, 500);\n      });\n    },\n\n\n    RetestEnable: function RetestEnable(event) {\n      var _this20 = this;\n\n      __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].post(\"rezultati/odobravanje/retest/da/\", {\n        id_u: this.$store.state.sid,\n        id_t: event.target.id,\n        site: this.$store.state.site,\n        token: this.$store.state.token\n      }).then(function (res) {\n        if (res.data.success) {\n          _this20.rezultati.forEach(function (element) {\n            if (element.test === event.target.id) {\n              element.retest = true;\n            }\n          });\n        }\n      });\n    },\n\n    RetestDisable: function RetestDisable(event) {\n      var _this21 = this;\n\n      __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].post(\"rezultati/odobravanje/retest/ne/\", {\n        id_u: this.$store.state.sid,\n        id_t: event.target.id,\n        site: this.$store.state.site,\n        token: this.$store.state.token\n      }).then(function (res) {\n        if (res.data.success) {\n          _this21.rezultati.forEach(function (element) {\n            if (element.test === event.target.id) {\n              element.retest = false;\n            }\n          });\n        }\n      });\n    },\n\n    MultiGet: function MultiGet(event, naziv, ana, rezultat, odobren) {\n      var _this22 = this;\n\n      this.naslov = \"Rezultati testa: \" + naziv + \" (\" + ana + \")\";\n      this.analiti = [];\n      var single = {};\n      var i = 0;\n      var kontrola = false;\n\n      this.uzorci.forEach(function (element) {\n        if (element.sid === _this22.$store.state.sid) {\n          _this22.check = element.status;\n        }\n      });\n\n      this.analitiprikaz.forEach(function (element) {\n        i++;\n        single = {};\n\n        var opcije = null;\n        opcije = __WEBPACK_IMPORTED_MODULE_11__data_izbornik_izbornik__[\"a\" /* default */].data;\n\n        if (event.target.id === element.labassay._id) {\n          element.rezultat.forEach(function (analit) {\n            single.kod = analit.rezultat[0].module_sn;\n            single.select_options = eval(\"opcije.\" + analit.rezultat[0].module_sn.replace(\"%\", \"_\").replace(\"/\", \"_\").replace(\" \", \"_\").replace(/-/g, \"_\").replace(\"#\", \"_\").replace(/^\\d+/, \"\"));\n\n            var tmpOptionsAna = [];\n            if (single.select_options != undefined) {\n              tmpOptionsAna = single.select_options.slice();\n              single.select_options = tmpOptionsAna.slice();\n            }\n\n            if (analit.rezultat[0].rezultat_f.trim() != \"\" && single.select_options != undefined && !single.select_options.includes(analit.rezultat[0].rezultat_f)) {\n              if (single.kod != \"s03\" && single.kod != \"s04\" && single.kod != \"s08\" && single.kod != \"s09\") {\n                single.select_options.unshift(analit.rezultat[0].rezultat_f);\n              }\n            }\n\n            single.refd = analit.refd;\n            single.labID = event.target.id;\n            single.refg = analit.refg;\n            single.interp = analit.interp;\n            single.interpretacija = null;\n            single.nazivTesta = naziv;\n            single.grupa = analit.grupa;\n            single.naziv = analit.rezultat[0].sn;\n            single.opis = analit.rezultat[0].dilucija;\n            single.jedinica = analit.rezultat[0].jedinice_f;\n            single.rezultat = analit.rezultat[0].rezultat_f;\n            single.flag = analit.rezultat[0].rezultat_i;\n            single.manual = element.labassay.manual;\n            single.odobren = odobren;\n\n            if (single.select_options != undefined && (single.kod === \"s03\" || single.kod === \"s04\" || single.kod === \"s08\" || single.kod === \"s09\")) {\n              single.rezultat_multiple = single.rezultat.split(\";\");\n              for (var i = single.rezultat_multiple.length - 1; i >= 0; i--) {\n                single.rezultat_multiple[i] = single.rezultat_multiple[i].trim();\n                if (single.rezultat_multiple[i] === \"\") {\n                  single.rezultat_multiple.splice(i, 1);\n                }\n              }\n            } else {\n              single.rezultat_multiple = [];\n            }\n\n            if (_this22.check === \"ODOBREN\" || _this22.check === \"VERIFICIRAN\") {\n              single.edit = false;\n            } else {\n              single.edit = true;\n            }\n\n            if (ana === \"Opšti pregled urina\" && _this22.check != \"ODOBREN\" && _this22.check != \"VERIFICIRAN\") {\n              if (analit.rezultat[0].rezultat_f === \"\" && single.select_options != undefined) {\n                single.rezultat = single.select_options[1];\n              }\n            }\n\n            single.analit = analit.rezultat[0].anaassay;\n            single.izbor = ana;\n\n            _this22.analiti.push(single);\n\n            single = {};\n          });\n        }\n\n        if (i === _this22.analitiprikaz.length) {\n          kontrola = true;\n        }\n      });\n\n      if (kontrola) {\n        this.$refs.largeModalMulti.open();\n      }\n    },\n\n    Interpretacija: function Interpretacija(test, rezultat, jedinica, refd, refg, site, interp, extend, spec) {\n      return Object(__WEBPACK_IMPORTED_MODULE_10__functions_reference_js__[\"Interpretation\"])(test, rezultat, jedinica, refd, refg, site, interp, extend, spec);\n    },\n\n    MailDialog: function MailDialog() {\n      this.$refs.staticModalSendMail.open();\n    },\n    SendMail: function SendMail(email) {\n      var _this23 = this;\n\n      this.isLoading = true;\n\n      __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].post(\"nalazi/mail\", {\n        token: this.$store.state.token,\n        site: this.$store.state.site,\n        email: email,\n        timestamp: this.timestamp,\n        location: \"/\",\n        naziv: this.timestamp\n      }).then(function (res) {\n        _this23.isLoading = false;\n\n        if (res.data.success) {\n          _this23.toastText = \"Nalaz uspješno poslan.\";\n          _this23.toastIcon = \"fa-check\";\n          _this23.toastPosition = \"top-right\";\n          _this23.className = \"vuestic-toast-primary\";\n\n          _this23.showToast(_this23.toastText, {\n            icon: _this23.toastIcon,\n            position: _this23.toastPosition,\n            duration: 2500,\n            fullWidth: _this23.false,\n            className: _this23.className\n          });\n\n          if (_this23.email_changed) {\n            __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].post(\"pacijenti/detalji/update/\" + _this23.pacijent, {\n              email: email.trim(),\n              token: _this23.$store.state.token,\n              site: _this23.$store.state.site\n            }).then(function (res) {});\n          }\n        } else {\n          _this23.toastText = \"Greška prilikom slanja nalaza!\";\n          _this23.toastIcon = \"fa-remove\";\n          _this23.toastPosition = \"top-right\";\n          _this23.className = \"vuestic-toast-danger\";\n\n          _this23.showToast(_this23.toastText, {\n            icon: _this23.toastIcon,\n            position: _this23.toastPosition,\n            duration: 2500,\n            fullWidth: _this23.false,\n            className: _this23.className\n          });\n        }\n      });\n    },\n    SaveMultiResults: function SaveMultiResults(analiti, data) {\n      var _this24 = this;\n\n      analiti.forEach(function (analit) {\n        analit.rezultat = analit.rezultat.replace(/,/g, \".\");\n\n        if (analit.rezultat_multiple.length) {\n          analit.rezultat = \"\";\n\n          analit.rezultat_multiple.forEach(function (element) {\n            if (element === \"\") {} else {\n              analit.rezultat = analit.rezultat + element + \";\";\n            }\n          });\n\n          analit.rezultat = analit.rezultat.trim().slice(0, analit.rezultat.length - 1);\n        }\n      });\n\n      this.isLoading = true;\n\n      __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].post(\"/rezultati/odobravanje/analiti/\" + this.$store.state.sid, {\n        analiti: analiti,\n        site: this.$store.state.site,\n        token: this.$store.state.token\n      }).then(function (res) {\n        __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].get(\"rezultati/odobravanje/samples/\" + _this24.$route.params.patient + \"/\" + _this24.$route.params.id + \"?token=\" + _this24.$store.state.token + \"&site=\" + _this24.$store.state.site + \"&date=\" + _this24.$route.query.date, {}).then(function (res) {\n          _this24.uzorci = [];\n\n          res.data.results.forEach(function (element) {\n            var check = 0;\n            var zaprimljen = 0;\n            var realizovan = 0;\n\n            if (element.verificiran) {\n              var status_uzorka = \"VERIFICIRAN\";\n            } else {\n              var status_uzorka = element.status;\n            }\n\n            element.rezultati.forEach(function (test) {\n              check++;\n\n              if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n                zaprimljen++;\n              }\n\n              if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n                realizovan++;\n              }\n\n              if (check === element.rezultati.length) {\n\n                if (status_uzorka === \"VERIFICIRAN\") {\n                  _this24.uzorci.push({\n                    sid: element.id,\n                    status: \"VERIFICIRAN\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else if (status_uzorka === \"ODOBREN\") {\n                  _this24.uzorci.push({\n                    sid: element.id,\n                    status: \"ODOBREN\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else if (zaprimljen < 1) {\n                  _this24.uzorci.push({\n                    sid: element.id,\n                    status: \"REALIZOVAN\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else if (realizovan < 1) {\n                  var stat = \"ZAPRIMLJEN\";\n                  if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                    if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                      stat = \"REALIZOVAN\";\n                    }\n                  }\n                  _this24.uzorci.push({\n                    sid: element.id,\n                    status: stat,\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else {\n                  _this24.uzorci.push({\n                    sid: element.id,\n                    status: \"U OBRADI\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                }\n              }\n            });\n          });\n\n          _this24.uzorci = _this24.uzorci.sort(function (a, b) {\n            return a.sid.localeCompare(b.sid, undefined, {\n              numeric: true,\n              sensitivity: \"base\"\n            });\n          });\n\n          _this24.isLoading = false;\n        });\n      }).then(function (res) {\n        var data = {};\n\n        _this24.uzorci.forEach(function (element) {\n          if (element.sid === _this24.$store.state.sid) {\n            data = element;\n          }\n        });\n\n        _this24.testovi = [];\n        _this24.rezultati = [];\n        _this24.analitiprikaz = [];\n        _this24.calculated = false;\n\n        var topcije = null;\n        topcije = __WEBPACK_IMPORTED_MODULE_11__data_izbornik_izbornik__[\"a\" /* default */].rez;\n\n        _this24.show_table = false;\n\n        __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].get(\"rezultati/showsingle/\" + data.sid + \"?token=\" + _this24.$store.state.token + \"&site=\" + _this24.$store.state.site, {}).then(function (res) {\n          var test = {};\n\n          if (res.data.data.length) {\n            res.data.data.sort(function (a, b) {\n              return a.testovi.labassay.grupa + a.testovi.labassay.grouporder == b.testovi.labassay.grupa + b.testovi.labassay.grouporder ? 0 : +(a.testovi.labassay.grupa + a.testovi.labassay.grouporder > b.testovi.labassay.grupa + b.testovi.labassay.grouporder) || -1;\n            });\n\n            _this24.testovi = res.data.data;\n            _this24.analitiprikaz = res.data.multidata;\n\n            res.data.data.forEach(function (element) {\n              test = {};\n              test.realizovan = false;\n\n              test.ime = element.testovi.labassay.naziv;\n              test.test = element.testovi.labassay.sifra;\n              test.analit = element.testovi.labassay.analit;\n              test.IDE = element.testovi._id;\n              test.labassay_id = element.testovi.labassay._id;\n\n              test.multi_count = 0;\n              test.multi_rezultati = [];\n\n              res.data.multidata.forEach(function (multi) {\n                if (multi.labassay._id === element.testovi.labassay._id) {\n                  test.multi_rezultati = multi.rezultat;\n                  test.multi_count = multi.rezultat[0].rezultat.length;\n                }\n              });\n\n              test.kategorija = element.testovi.labassay.kategorija;\n              test.analyser = element.testovi.labassay.analyser;\n              test.multiparam = element.testovi.labassay.multiparam;\n              test.vise = element.testovi.rezultat.length;\n              test.calculated = element.testovi.labassay.calculated;\n              test.manual = element.testovi.labassay.manual;\n\n              test.select_options = eval(\"topcije.\" + element.testovi.interp.replace(\"%\", \"_\").replace(\"/\", \"_\").replace(\" \", \"_\").replace(/-/g, \"_\").replace(\"#\", \"_\").replace(/^\\d+/, \"\"));\n\n              element.testovi.rezultat.forEach(function (rezultat) {\n                test.sekcija = rezultat.anaassay.sekcija;\n                test.rezultat = rezultat.rezultat_f;\n                test.result = rezultat;\n                test.anaassay = rezultat.anaassay;\n\n                if (rezultat.rezultat_f != \"\") {\n                  test.realizovan = true;\n                }\n\n                test.unit = rezultat.jedinice_f;\n\n                if (res.data.verificiran || res.data.status === \"ODOBREN\") {\n                  test.odobren = \"ODOBREN\";\n                  test.edit = false;\n                } else {\n                  test.odobren != \"ODOBREN\";\n                  test.edit = true;\n                }\n\n                test.jedinica = rezultat.jedinice_f;\n                test.id = rezultat._id;\n                test.multidata = element.testovi.labassay.multi;\n                test.rezultat_m = rezultat.rezultat_m;\n                test.bakterije = element.testovi.labassay.bakterije;\n                test.neg_description = element.testovi.labassay.neg_description;\n                test.pos_description = element.testovi.labassay.pos_description;\n                test.refSet = element.testovi.grupa;\n                test.dRef = element.testovi.refd;\n                test.gRef = element.testovi.refg;\n                test.interp = element.testovi.interp;\n                test.extend = element.testovi.extend;\n                test.retest = element.testovi.retest;\n                test.interpretacija = element.testovi.labassay.interpretacija;\n              });\n\n              if (test.select_options != undefined && !test.select_options.includes(test.rezultat)) {\n                test.select_options.unshift(test.rezultat);\n              }\n              _this24.rezultati.push(test);\n            });\n\n            _this24.rezultati.forEach(function (element) {\n              if (element.calculated) {\n                _this24.calculated = true;\n              }\n            });\n\n            _this24.sample = data;\n            _this24.show_table = true;\n          }\n        });\n      });\n    },\n\n\n    Calculate: function Calculate(event, id, ime, edited) {\n      var _this25 = this;\n\n      __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].post(\"/rezultati/odobravanje/calculate/\" + this.$store.state.sid, {\n        _id: id,\n        token: this.$store.state.token,\n        site: this.$store.state.site,\n        ime: ime,\n        pid: this.pid\n      }).then(function (res) {\n        __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].get(\"rezultati/odobravanje/samples/\" + _this25.$route.params.patient + \"/\" + _this25.$route.params.id + \"?token=\" + _this25.$store.state.token + \"&site=\" + _this25.$store.state.site + \"&date=\" + _this25.$route.query.date, {}).then(function (res) {\n          _this25.uzorci = [];\n\n          res.data.results.forEach(function (element) {\n            var check = 0;\n            var zaprimljen = 0;\n            var realizovan = 0;\n\n            if (element.verificiran) {\n              var status_uzorka = \"VERIFICIRAN\";\n            } else {\n              var status_uzorka = element.status;\n            }\n\n            element.rezultati.forEach(function (test) {\n              check++;\n\n              if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n                zaprimljen++;\n              }\n\n              if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n                realizovan++;\n              }\n\n              if (check === element.rezultati.length) {\n\n                if (status_uzorka === \"VERIFICIRAN\") {\n                  _this25.uzorci.push({\n                    sid: element.id,\n                    status: \"VERIFICIRAN\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else if (status_uzorka === \"ODOBREN\") {\n                  _this25.uzorci.push({\n                    sid: element.id,\n                    status: \"ODOBREN\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else if (zaprimljen < 1) {\n                  _this25.uzorci.push({\n                    sid: element.id,\n                    status: \"REALIZOVAN\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else if (realizovan < 1) {\n                  var stat = \"ZAPRIMLJEN\";\n                  if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                    if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                      stat = \"REALIZOVAN\";\n                    }\n                  }\n                  _this25.uzorci.push({\n                    sid: element.id,\n                    status: stat,\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else {\n                  _this25.uzorci.push({\n                    sid: element.id,\n                    status: \"U OBRADI\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                }\n              }\n            });\n          });\n\n          _this25.uzorci = _this25.uzorci.sort(function (a, b) {\n            return a.sid.localeCompare(b.sid, undefined, {\n              numeric: true,\n              sensitivity: \"base\"\n            });\n          });\n        });\n      }).then(function (res) {\n        var data = {};\n\n        _this25.uzorci.forEach(function (element) {\n          if (element.sid === _this25.$store.state.sid) {\n            data = element;\n          }\n        });\n\n        _this25.testovi = [];\n        _this25.rezultati = [];\n        _this25.analitiprikaz = [];\n        _this25.calculated = false;\n\n        var topcije = null;\n        topcije = __WEBPACK_IMPORTED_MODULE_11__data_izbornik_izbornik__[\"a\" /* default */].rez;\n\n        __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].get(\"rezultati/showsingle/\" + data.sid + \"?token=\" + _this25.$store.state.token + \"&site=\" + _this25.$store.state.site, {}).then(function (res) {\n          var test = {};\n\n          if (res.data.data.length) {\n            res.data.data.sort(function (a, b) {\n              return a.testovi.labassay.grupa + a.testovi.labassay.grouporder == b.testovi.labassay.grupa + b.testovi.labassay.grouporder ? 0 : +(a.testovi.labassay.grupa + a.testovi.labassay.grouporder > b.testovi.labassay.grupa + b.testovi.labassay.grouporder) || -1;\n            });\n\n            _this25.testovi = res.data.data;\n            _this25.analitiprikaz = res.data.multidata;\n\n            res.data.data.forEach(function (element) {\n              test = {};\n              test.realizovan = false;\n\n              test.ime = element.testovi.labassay.naziv;\n              test.test = element.testovi.labassay.sifra;\n              test.analit = element.testovi.labassay.analit;\n              test.IDE = element.testovi._id;\n              test.labassay_id = element.testovi.labassay._id;\n\n              test.multi_count = 0;\n              test.multi_rezultati = [];\n\n              res.data.multidata.forEach(function (multi) {\n                if (multi.labassay._id === element.testovi.labassay._id) {\n                  test.multi_rezultati = multi.rezultat;\n                  test.multi_count = multi.rezultat[0].rezultat.length;\n                }\n              });\n\n              test.kategorija = element.testovi.labassay.kategorija;\n              test.analyser = element.testovi.labassay.analyser;\n              test.multiparam = element.testovi.labassay.multiparam;\n              test.vise = element.testovi.rezultat.length;\n              test.calculated = element.testovi.labassay.calculated;\n              test.manual = element.testovi.labassay.manual;\n\n              test.select_options = eval(\"topcije.\" + element.testovi.interp.replace(\"%\", \"_\").replace(\"/\", \"_\").replace(\" \", \"_\").replace(/-/g, \"_\").replace(\"#\", \"_\").replace(/^\\d+/, \"\"));\n\n              element.testovi.rezultat.forEach(function (rezultat) {\n                test.sekcija = rezultat.anaassay.sekcija;\n                test.rezultat = rezultat.rezultat_f;\n                test.result = rezultat;\n                test.anaassay = rezultat.anaassay;\n\n                if (rezultat.rezultat_f != \"\") {\n                  test.realizovan = true;\n                }\n\n                test.unit = rezultat.jedinice_f;\n\n                if (res.data.verificiran || res.data.status === \"ODOBREN\") {\n                  test.odobren = \"ODOBREN\";\n                  test.edit = false;\n                } else {\n                  test.odobren != \"ODOBREN\";\n                  test.edit = true;\n                }\n\n                test.jedinica = rezultat.jedinice_f;\n                test.id = rezultat._id;\n                test.multidata = element.testovi.labassay.multi;\n                test.rezultat_m = rezultat.rezultat_m;\n                test.bakterije = element.testovi.labassay.bakterije;\n                test.neg_description = element.testovi.labassay.neg_description;\n                test.pos_description = element.testovi.labassay.pos_description;\n                test.refSet = element.testovi.grupa;\n                test.dRef = element.testovi.refd;\n                test.gRef = element.testovi.refg;\n                test.interp = element.testovi.interp;\n                test.extend = element.testovi.extend;\n                test.retest = element.testovi.retest;\n                test.interpretacija = element.testovi.labassay.interpretacija;\n              });\n\n              if (test.select_options != undefined && !test.select_options.includes(test.rezultat)) {\n                test.select_options.unshift(test.rezultat);\n              }\n              _this25.rezultati.push(test);\n            });\n\n            _this25.rezultati.forEach(function (element) {\n              if (element.calculated) {\n                _this25.calculated = true;\n              }\n            });\n\n            _this25.sample = data;\n          }\n        });\n      });\n    },\n\n    Approve: function Approve(rezultati) {\n      var _this26 = this;\n\n      this.rezultati.forEach(function (element) {\n        element.edit = false;\n      });\n\n      this.calculated = false;\n\n      if (!this.MicrobiologySample) {\n        rezultati.forEach(function (element) {\n          element.rezultat = element.rezultat.replace(/,/g, \".\");\n        });\n\n        rezultati[0].rezultat_m = [];\n      }\n\n      __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].post(\"/rezultati/odobravanje/sacuvaj/\" + this.$store.state.sid, {\n        email: this.$store.state.userId,\n        token: this.$store.state.token,\n        site: this.$store.state.site,\n        rezultati: rezultati\n      }).then(function (res) {\n        _this26.isLoading = true;\n\n        __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].post(\"/rezultati/odobravanje/odobri/\" + _this26.$store.state.sid, {\n          testovi: rezultati,\n          site: _this26.$store.state.site,\n          token: _this26.$store.state.token\n        }).then(function (res) {\n          _this26.sample.status = \"ODOBREN\";\n\n          _this26.report = {};\n\n          _this26.uzorci.forEach(function (element) {\n            if (element.sid === _this26.$store.state.sid) {\n              _this26.report = element;\n            }\n          });\n\n          var sample = [];\n          sample.push(_this26.report._id);\n\n          __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].post(\"nalazi/create\", {\n            token: _this26.$store.state.token,\n            site: _this26.$store.state.site,\n            type: \"single\",\n            uzorci: _this26.uzorci,\n            samples: sample,\n            timestamp: _this26.timestamp,\n            napomena: \"\",\n            status: false,\n            idNalaza: \"\",\n            location: \"/samples\",\n            naziv: _this26.report.sid\n          }).then(function (res) {\n            __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].get(\"rezultati/odobravanje/samples/\" + _this26.$route.params.patient + \"/\" + _this26.$route.params.id + \"?token=\" + _this26.$store.state.token + \"&site=\" + _this26.$store.state.site + \"&date=\" + _this26.$route.query.date, {}).then(function (res) {\n              _this26.final_pdf = res.data.final_pdf;\n\n              _this26.count = res.data.results.length;\n              _this26.approved = 0;\n\n              _this26.odobren = true;\n              _this26.verificiran = true;\n\n              res.data.results.forEach(function (element) {\n                if (element.status === \"ODOBREN\" || element.status === \"VERIFICIRAN\") {\n                  _this26.approved++;\n                }\n                if (element.status != \"ODOBREN\" && element.status != \"VERIFICIRAN\") {\n                  _this26.odobren = false;\n                }\n                if (!element.verificiran) {\n                  _this26.verificiran = false;\n                }\n              });\n\n              var response = res.data.results;\n\n              if (_this26.count == _this26.approved) {\n\n                var report = [];\n\n                _this26.uzorci.forEach(function (element) {\n                  report.push(element._id);\n                });\n\n                __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].post(\"nalazi/create\", {\n                  token: _this26.$store.state.token,\n                  site: _this26.$store.state.site,\n                  type: \"multi\",\n                  uzorci: _this26.uzorci,\n                  samples: report,\n                  timestamp: _this26.timestamp,\n                  napomena: \"\",\n                  status: false,\n                  idNalaza: \"\",\n                  location: \"/\",\n                  naziv: _this26.timestamp\n                }).then(function (res) {\n                  if (res.data.success) {\n                    __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].post(\"nalazi/memo\", {\n                      token: _this26.$store.state.token,\n                      site: _this26.$store.state.site,\n                      timestamp: _this26.timestamp,\n                      height: res.data.memo,\n                      location: \"/\",\n                      naziv: _this26.timestamp\n                    }).then(function (res) {\n                      _this26.uzorci = [];\n\n                      response.forEach(function (element) {\n                        var check = 0;\n                        var zaprimljen = 0;\n                        var realizovan = 0;\n\n                        if (element.verificiran) {\n                          var status_uzorka = \"VERIFICIRAN\";\n                        } else {\n                          var status_uzorka = element.status;\n                        }\n\n                        element.rezultati.forEach(function (test) {\n                          check++;\n\n                          if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n                            zaprimljen++;\n                          }\n\n                          if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n                            realizovan++;\n                          }\n\n                          if (check === element.rezultati.length) {\n\n                            if (status_uzorka === \"VERIFICIRAN\") {\n                              _this26.uzorci.push({\n                                sid: element.id,\n                                status: \"VERIFICIRAN\",\n                                pdf_exists: element.pdf_exists,\n                                tip: element.sample.tip,\n                                _id: element._id,\n                                removed: false\n                              });\n                            } else if (status_uzorka === \"ODOBREN\") {\n                              _this26.uzorci.push({\n                                sid: element.id,\n                                status: \"ODOBREN\",\n                                pdf_exists: element.pdf_exists,\n                                tip: element.sample.tip,\n                                _id: element._id,\n                                removed: false\n                              });\n                            } else if (zaprimljen < 1) {\n                              _this26.uzorci.push({\n                                sid: element.id,\n                                status: \"REALIZOVAN\",\n                                pdf_exists: element.pdf_exists,\n                                tip: element.sample.tip,\n                                _id: element._id,\n                                removed: false\n                              });\n                            } else if (realizovan < 1) {\n                              var stat = \"ZAPRIMLJEN\";\n                              if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                                if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                                  stat = \"REALIZOVAN\";\n                                }\n                              }\n                              _this26.uzorci.push({\n                                sid: element.id,\n                                status: stat,\n                                pdf_exists: element.pdf_exists,\n                                tip: element.sample.tip,\n                                _id: element._id,\n                                removed: false\n                              });\n                            } else {\n                              _this26.uzorci.push({\n                                sid: element.id,\n                                status: \"U OBRADI\",\n                                pdf_exists: element.pdf_exists,\n                                tip: element.sample.tip,\n                                _id: element._id,\n                                removed: false\n                              });\n                            }\n                          }\n                        });\n                      });\n\n                      _this26.uzorci = _this26.uzorci.sort(function (a, b) {\n                        return a.sid.localeCompare(b.sid, undefined, {\n                          numeric: true,\n                          sensitivity: \"base\"\n                        });\n                      });\n\n                      _this26.main = true;\n\n                      _this26.isLoading = false;\n                    });\n                  }\n                });\n              } else {\n                _this26.uzorci = [];\n\n                res.data.results.forEach(function (element) {\n                  var check = 0;\n                  var zaprimljen = 0;\n                  var realizovan = 0;\n\n                  if (element.verificiran) {\n                    var status_uzorka = \"VERIFICIRAN\";\n                  } else {\n                    var status_uzorka = element.status;\n                  }\n\n                  element.rezultati.forEach(function (test) {\n                    check++;\n\n                    if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n                      zaprimljen++;\n                    }\n\n                    if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n                      realizovan++;\n                    }\n\n                    if (check === element.rezultati.length) {\n\n                      if (status_uzorka === \"VERIFICIRAN\") {\n                        _this26.uzorci.push({\n                          sid: element.id,\n                          status: \"VERIFICIRAN\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else if (status_uzorka === \"ODOBREN\") {\n                        _this26.uzorci.push({\n                          sid: element.id,\n                          status: \"ODOBREN\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else if (zaprimljen < 1) {\n                        _this26.uzorci.push({\n                          sid: element.id,\n                          status: \"REALIZOVAN\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else if (realizovan < 1) {\n                        var stat = \"ZAPRIMLJEN\";\n                        if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                          if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                            stat = \"REALIZOVAN\";\n                          }\n                        }\n                        _this26.uzorci.push({\n                          sid: element.id,\n                          status: stat,\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else {\n                        _this26.uzorci.push({\n                          sid: element.id,\n                          status: \"U OBRADI\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      }\n                    }\n                  });\n                });\n\n                _this26.uzorci = _this26.uzorci.sort(function (a, b) {\n                  return a.sid.localeCompare(b.sid, undefined, {\n                    numeric: true,\n                    sensitivity: \"base\"\n                  });\n                });\n\n                _this26.main = true;\n\n                _this26.isLoading = false;\n              }\n            }).then(function (res) {});\n          });\n        });\n      });\n    },\n    Disapprove: function Disapprove(rezultati, from) {\n      var _this27 = this;\n\n      this.rezultati.forEach(function (element) {\n        if (element.calculated) {\n          _this27.calculated = true;\n        }\n      });\n\n      __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].post(\"/rezultati/odobravanje/ukloni/\" + this.$store.state.sid, {\n        testovi: rezultati,\n        site: this.$store.state.site,\n        token: this.$store.state.token\n      }).then(function (res) {\n        _this27.isLoading = true;\n\n        __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].get(\"rezultati/odobravanje/samples/\" + _this27.$route.params.patient + \"/\" + _this27.$route.params.id + \"?token=\" + _this27.$store.state.token + \"&site=\" + _this27.$store.state.site + \"&date=\" + _this27.$route.query.date, {}).then(function (res) {\n          _this27.sample.status = \"REALIZOVAN\";\n\n          _this27.final_pdf = res.data.final_pdf;\n\n          _this27.count = res.data.results.length;\n          _this27.approved = 0;\n\n          _this27.odobren = true;\n          _this27.verificiran = true;\n\n          res.data.results.forEach(function (element) {\n            if (element.status === \"ODOBREN\" || element.status === \"VERIFICIRAN\") {\n              _this27.approved++;\n            }\n            if (element.status != \"ODOBREN\" && element.status != \"VERIFICIRAN\") {\n              _this27.odobren = false;\n            }\n            if (!element.verificiran) {\n              _this27.verificiran = false;\n            }\n          });\n\n          _this27.uzorci = [];\n\n          res.data.results.forEach(function (element) {\n            var check = 0;\n            var zaprimljen = 0;\n            var realizovan = 0;\n\n            if (element.verificiran) {\n              var status_uzorka = \"VERIFICIRAN\";\n            } else {\n              var status_uzorka = element.status;\n            }\n\n            element.rezultati.forEach(function (test) {\n              check++;\n\n              if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n                zaprimljen++;\n              }\n\n              if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n                realizovan++;\n              }\n\n              if (check === element.rezultati.length) {\n\n                if (status_uzorka === \"VERIFICIRAN\") {\n                  _this27.uzorci.push({\n                    sid: element.id,\n                    status: \"VERIFICIRAN\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else if (status_uzorka === \"ODOBREN\") {\n                  _this27.uzorci.push({\n                    sid: element.id,\n                    status: \"ODOBREN\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else if (zaprimljen < 1) {\n                  _this27.uzorci.push({\n                    sid: element.id,\n                    status: \"REALIZOVAN\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else if (realizovan < 1) {\n                  var stat = \"ZAPRIMLJEN\";\n                  if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                    if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                      stat = \"REALIZOVAN\";\n                    }\n                  }\n                  _this27.uzorci.push({\n                    sid: element.id,\n                    status: stat,\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else {\n                  _this27.uzorci.push({\n                    sid: element.id,\n                    status: \"U OBRADI\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                }\n              }\n            });\n          });\n\n          _this27.uzorci = _this27.uzorci.sort(function (a, b) {\n            return a.sid.localeCompare(b.sid, undefined, {\n              numeric: true,\n              sensitivity: \"base\"\n            });\n          });\n\n          _this27.main = true;\n        });\n\n        _this27.rezultati.forEach(function (element) {\n          element.edit = true;\n        });\n\n        _this27.isLoading = false;\n      });\n    },\n    Verify: function Verify(data) {\n      var _this28 = this;\n\n      if (!this.$store.state.access.verify) {\n        this.$refs.staticModalVerifyPrivilege.open();\n      } else {\n        __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].post(\"/rezultati/obrada/verifikacija/\" + this.$store.state.sid, {\n          site: this.$store.state.site,\n          token: this.$store.state.token,\n          verify: true\n        }).then(function (res) {\n          __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].get(\"rezultati/odobravanje/samples/\" + _this28.$route.params.patient + \"/\" + _this28.$route.params.id + \"?token=\" + _this28.$store.state.token + \"&site=\" + _this28.$store.state.site + \"&date=\" + _this28.$route.query.date, {}).then(function (res) {\n            _this28.sample.status = \"VERIFICIRAN\";\n\n            _this28.final_pdf = res.data.final_pdf;\n\n            _this28.count = res.data.results.length;\n            _this28.approved = 0;\n            _this28.verified = 0;\n\n            _this28.odobren = true;\n            _this28.verificiran = true;\n            _this28.partials = [];\n            _this28.partials_condition = false;\n\n            res.data.results.forEach(function (element) {\n              if (element.verificiran) {\n                _this28.partials.push(element._id);\n                _this28.verified++;\n              }\n              if (element.status === \"ODOBREN\" || element.status === \"VERIFICIRAN\") {\n                _this28.approved++;\n              }\n              if (element.status != \"ODOBREN\" && element.status != \"VERIFICIRAN\") {\n                _this28.odobren = false;\n              }\n              if (!element.verificiran) {\n                _this28.verificiran = false;\n              }\n            });\n\n            if (_this28.count > _this28.verified && _this28.verified > 1) {\n              _this28.partials_condition = true;\n            }\n\n            _this28.uzorci = [];\n\n            res.data.results.forEach(function (element) {\n              var check = 0;\n              var zaprimljen = 0;\n              var realizovan = 0;\n\n              if (element.verificiran) {\n                var status_uzorka = \"VERIFICIRAN\";\n              } else {\n                var status_uzorka = element.status;\n              }\n\n              element.rezultati.forEach(function (test) {\n                check++;\n\n                if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n                  zaprimljen++;\n                }\n\n                if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n                  realizovan++;\n                }\n\n                if (check === element.rezultati.length) {\n\n                  if (status_uzorka === \"VERIFICIRAN\") {\n                    _this28.uzorci.push({\n                      sid: element.id,\n                      status: \"VERIFICIRAN\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else if (status_uzorka === \"ODOBREN\") {\n                    _this28.uzorci.push({\n                      sid: element.id,\n                      status: \"ODOBREN\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else if (zaprimljen < 1) {\n                    _this28.uzorci.push({\n                      sid: element.id,\n                      status: \"REALIZOVAN\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else if (realizovan < 1) {\n                    var stat = \"ZAPRIMLJEN\";\n                    if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                      if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                        stat = \"REALIZOVAN\";\n                      }\n                    }\n                    _this28.uzorci.push({\n                      sid: element.id,\n                      status: stat,\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else {\n                    _this28.uzorci.push({\n                      sid: element.id,\n                      status: \"U OBRADI\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  }\n                }\n              });\n            });\n\n            _this28.uzorci = _this28.uzorci.sort(function (a, b) {\n              return a.sid.localeCompare(b.sid, undefined, {\n                numeric: true,\n                sensitivity: \"base\"\n              });\n            });\n\n            if (_this28.verificiran) {\n              __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].post(\"rezultati/nalazi/status\", {\n                token: _this28.$store.state.token,\n                site: _this28.$store.state.site,\n                timestamp: _this28.timestamp,\n                location: \"/\",\n                naziv: _this28.timestamp,\n                status: true\n              }).then(function (res) {\n                _this28.main = true;\n\n                if (_this28.lokacija.sendEmail) {\n                  __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].post(\"nalazi/mail\", {\n                    token: _this28.$store.state.token,\n                    site: _this28.$store.state.site,\n                    email: _this28.lokacija.email,\n                    timestamp: _this28.timestamp,\n                    location: \"/\",\n                    naziv: _this28.timestamp\n                  }).then(function (res) {\n                    if (res.data.success) {} else {\n                      _this28.toastText = \"Greška prilikom slanja nalaza!\";\n                      _this28.toastIcon = \"fa-remove\";\n                      _this28.toastPosition = \"top-right\";\n                      _this28.className = \"vuestic-toast-danger\";\n\n                      _this28.showToast(_this28.toastText, {\n                        icon: _this28.toastIcon,\n                        position: _this28.toastPosition,\n                        duration: 2500,\n                        fullWidth: _this28.false,\n                        className: _this28.className\n                      });\n                    }\n                  });\n                } else {}\n              });\n            } else {\n              _this28.main = true;\n            }\n          });\n        });\n      }\n    },\n    UnVerify: function UnVerify(data) {\n      var _this29 = this;\n\n      if (!this.$store.state.access.verify) {\n        this.$refs.staticModalVerifyPrivilege.open();\n      } else {\n        this.verificiran = false;\n        this.sid = data.sid;\n\n        __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].post(\"/rezultati/obrada/verifikacija/\" + data.sid, {\n          site: this.$store.state.site,\n          token: this.$store.state.token,\n          verify: false\n        }).then(function (res) {\n          __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].get(\"rezultati/odobravanje/samples/\" + _this29.$route.params.patient + \"/\" + _this29.$route.params.id + \"?token=\" + _this29.$store.state.token + \"&site=\" + _this29.$store.state.site + \"&date=\" + _this29.$route.query.date, {}).then(function (res) {\n            _this29.sample.status = \"ODOBREN\";\n\n            _this29.final_pdf = res.data.final_pdf;\n\n            _this29.count = res.data.results.length;\n            _this29.approved = 0;\n\n            _this29.odobren = true;\n            _this29.verificiran = true;\n            _this29.verified = 0;\n            _this29.partials = [];\n            _this29.partials_condition = false;\n\n            res.data.results.forEach(function (element) {\n              if (element.verificiran) {\n                _this29.verified++;\n                _this29.partials.push(element._id);\n              }\n              if (element.status === \"ODOBREN\" || element.status === \"VERIFICIRAN\") {\n                _this29.approved++;\n              }\n              if (element.status != \"ODOBREN\" && element.status != \"VERIFICIRAN\") {\n                _this29.odobren = false;\n              }\n              if (!element.verificiran) {\n                _this29.verificiran = false;\n              }\n            });\n\n            if (_this29.count > _this29.verified && _this29.verified > 1) {\n              _this29.partials_condition = true;\n            }\n\n            _this29.uzorci = [];\n\n            res.data.results.forEach(function (element) {\n              var check = 0;\n              var zaprimljen = 0;\n              var realizovan = 0;\n\n              if (element.verificiran) {\n                var status_uzorka = \"VERIFICIRAN\";\n              } else {\n                var status_uzorka = element.status;\n              }\n\n              element.rezultati.forEach(function (test) {\n                check++;\n\n                if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n                  zaprimljen++;\n                }\n\n                if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n                  realizovan++;\n                }\n\n                if (check === element.rezultati.length) {\n\n                  if (status_uzorka === \"VERIFICIRAN\") {\n                    _this29.uzorci.push({\n                      sid: element.id,\n                      status: \"VERIFICIRAN\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else if (status_uzorka === \"ODOBREN\") {\n                    _this29.uzorci.push({\n                      sid: element.id,\n                      status: \"ODOBREN\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else if (zaprimljen < 1) {\n                    _this29.uzorci.push({\n                      sid: element.id,\n                      status: \"REALIZOVAN\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else if (realizovan < 1) {\n                    var stat = \"ZAPRIMLJEN\";\n                    if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                      if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                        stat = \"REALIZOVAN\";\n                      }\n                    }\n                    _this29.uzorci.push({\n                      sid: element.id,\n                      status: stat,\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else {\n                    _this29.uzorci.push({\n                      sid: element.id,\n                      status: \"U OBRADI\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  }\n                }\n              });\n            });\n\n            _this29.uzorci = _this29.uzorci.sort(function (a, b) {\n              return a.sid.localeCompare(b.sid, undefined, {\n                numeric: true,\n                sensitivity: \"base\"\n              });\n            });\n\n            if (!_this29.verificiran) {\n              __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].post(\"rezultati/nalazi/status\", {\n                token: _this29.$store.state.token,\n                site: _this29.$store.state.site,\n                timestamp: _this29.timestamp,\n                location: \"/\",\n                naziv: _this29.timestamp,\n                status: false\n              }).then(function (res) {\n                _this29.main = true;\n              });\n            } else {\n              _this29.main = true;\n            }\n          });\n        });\n      }\n    },\n    GetResults: function GetResults(data, status) {\n      var _this30 = this;\n\n      this.sample_status = status;\n      this.vise = [];\n      this.labassay = \"\";\n      __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].post(\"/rezultati/odobravanje/results\" + \"?token=\" + this.$store.state.token + \"&site=\" + this.$store.state.site, {\n        id: this.sample.sid,\n        labassay: data.labassay_id\n      }).then(function (res) {\n        if (res.data.success) {\n          _this30.vise = res.data.element;\n          _this30.labassay = _this30.vise.labassay.naziv + \" (\" + _this30.vise.labassay.analit + \")\";\n\n          var i = 0;\n          res.data.element.rezultat.forEach(function (element) {\n            i++;\n            if (res.data.element.rezultat.length == i) {\n              element.izabran = true;\n            } else {\n              element.izabran = false;\n            }\n          });\n\n          _this30.vise.rezultat.sort(function (a, b) {\n            return Date.parse(a.created_at) == Date.parse(b.created_at) ? 0 : +(Date.parse(a.created_at) < Date.parse(b.created_at)) || -1;\n          });\n\n          _this30.$refs.staticModalAllResults.open();\n        }\n      });\n    },\n    GetResultsMulti: function GetResultsMulti(data, status) {\n      this.sample_status = status;\n\n      this.multi_rezultati = [];\n      this.multi_test = data.ime + \" (\" + data.analit + \")\";\n\n      data.multi_rezultati.forEach(function (element) {\n        element.rezultat.forEach(function (rez) {});\n      });\n    },\n    IzborTesta: function IzborTesta(vise, test) {\n      var _this31 = this;\n\n      document.getElementById(this.sample.sid).click();\n\n      __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].post(\"/rezultati/odobravanje/choose\" + \"?token=\" + this.$store.state.token + \"&site=\" + this.$store.state.site, {\n        id: this.sample.sid,\n        labassay: vise.labassay._id,\n        picked: test._id\n      }).then(function (res) {\n        document.getElementById(_this31.sample.sid).click();\n        _this31.$refs.staticModalAllResults.close();\n      });\n    },\n    Partials: function Partials() {\n      var _this32 = this;\n\n      __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].post(\"nalazi/create\", {\n        token: this.$store.state.token,\n        site: this.$store.state.site,\n        type: \"partial\",\n        uzorci: this.uzorci,\n        samples: this.partials,\n        timestamp: this.timestamp,\n        napomena: \"\",\n        status: false,\n        idNalaza: \"\",\n        location: \"/partials\",\n        naziv: this.timestamp\n      }).then(function (res) {\n        if (res.data.success) {\n          if (!res.data.success) {\n            _this32.$refs.staticModalError.open();\n          } else {\n            _this32.path = _this32.timestamp + \".pdf\";\n\n            _this32.url = __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"i\" /* server */] + \"nalazi/partials/\" + _this32.path;\n\n            var options = {\n              width: \"100%\",\n              height: \"800px\"\n            };\n            __WEBPACK_IMPORTED_MODULE_16_pdfobject___default.a.embed(_this32.url, \"#pdf-container\", options);\n\n            _this32.email_button = true;\n            _this32.main = false;\n            _this32.pdf = true;\n          }\n        }\n      });\n    }\n  }\n});\n\n/***/ }),\n\n/***/ \"MbHo\":\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(\"FZ+f\")(true);\n// imports\n\n\n// module\nexports.push([module.i, \".vld-overlay{bottom:0;left:0;position:absolute;right:0;top:0;align-items:center;display:none;justify-content:center;overflow:hidden;z-index:1}.vld-overlay.is-active{display:flex}.vld-overlay.is-full-page{z-index:999;position:fixed}.vld-overlay .vld-background{bottom:0;left:0;position:absolute;right:0;top:0;background:#fff;opacity:.5}.vld-overlay .vld-icon,.vld-parent{position:relative}\", \"\", {\"version\":3,\"sources\":[\"C:/Users/atom/Desktop/ATOM Sync/extralab_75000/extralab_cl25092019/node_modules/vue-loading-overlay/dist/vue-loading.css\"],\"names\":[],\"mappings\":\"AAAA,aACE,SAAU,AACV,OAAQ,AACR,kBAAmB,AACnB,QAAS,AACT,MAAO,AACP,mBAAoB,AACpB,aAAc,AACd,uBAAwB,AACxB,gBAAiB,AACjB,SAAU,CACX,AAED,uBACE,YAAa,CACd,AAED,0BACE,YAAa,AACb,cAAe,CAChB,AAED,6BACE,SAAU,AACV,OAAQ,AACR,kBAAmB,AACnB,QAAS,AACT,MAAO,AACP,gBAAiB,AACjB,UAAY,CACb,AAED,mCACE,iBAAkB,CACnB\",\"file\":\"vue-loading.css\",\"sourcesContent\":[\".vld-overlay {\\n  bottom: 0;\\n  left: 0;\\n  position: absolute;\\n  right: 0;\\n  top: 0;\\n  align-items: center;\\n  display: none;\\n  justify-content: center;\\n  overflow: hidden;\\n  z-index: 1\\n}\\n\\n.vld-overlay.is-active {\\n  display: flex\\n}\\n\\n.vld-overlay.is-full-page {\\n  z-index: 999;\\n  position: fixed\\n}\\n\\n.vld-overlay .vld-background {\\n  bottom: 0;\\n  left: 0;\\n  position: absolute;\\n  right: 0;\\n  top: 0;\\n  background: #fff;\\n  opacity: 0.5\\n}\\n\\n.vld-overlay .vld-icon, .vld-parent {\\n  position: relative\\n}\\n\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n\n/***/ \"OsVY\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(\"ctRa\");\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(\"rjj0\")(\"56a5fb2f\", content, true);\n\n/***/ }),\n\n/***/ \"R7hf\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: \"badgeColumn\",\n  props: {\n    rowData: {\n      type: Object,\n      required: true\n    },\n    rowIndex: {\n      type: Number\n    }\n  },\n  data: function data() {\n    return {\n      classObject: {\n        \"badge-warning\": this.rowIndex % 6 === 0,\n        \"badge-primary\": this.rowIndex % 6 === 1,\n        \"badge-danger\": this.rowIndex % 6 === 2,\n        \"badge-info\": this.rowIndex % 6 === 3,\n        \"badge-violet\": this.rowIndex % 6 === 4,\n        \"badge-dark-blue\": this.rowIndex % 6 === 5\n      }\n    };\n  }\n});\n\n/***/ }),\n\n/***/ \"Rrel\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window\nvar toIObject = __webpack_require__(\"TcQ7\");\nvar gOPN = __webpack_require__(\"n0T6\").f;\nvar toString = {}.toString;\n\nvar windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames\n  ? Object.getOwnPropertyNames(window) : [];\n\nvar getWindowNames = function (it) {\n  try {\n    return gOPN(it);\n  } catch (e) {\n    return windowNames.slice();\n  }\n};\n\nmodule.exports.f = function getOwnPropertyNames(it) {\n  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));\n};\n\n\n/***/ }),\n\n/***/ \"SYh3\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(\"MbHo\");\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(\"rjj0\")(\"745170b4\", content, true);\n\n/***/ }),\n\n/***/ \"UqI+\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*global ActiveXObject, window, console, define, module, jQuery */\n//jshint unused:false, strict: false\n\n/*\n    PDFObject v2.1.1\n    https://github.com/pipwerks/PDFObject\n    Copyright (c) 2008-2018 Philip Hutchison\n    MIT-style license: http://pipwerks.mit-license.org/\n    UMD module pattern from https://github.com/umdjs/umd/blob/master/templates/returnExports.js\n*/\n\n(function (root, factory) {\n    if (true) {\n        // AMD. Register as an anonymous module.\n        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    } else if (typeof module === 'object' && module.exports) {\n        // Node. Does not work with strict CommonJS, but\n        // only CommonJS-like environments that support module.exports,\n        // like Node.\n        module.exports = factory();\n    } else {\n        // Browser globals (root is window)\n        root.PDFObject = factory();\n  }\n}(this, function () {\n\n    \"use strict\";\n    //jshint unused:true\n\n    //PDFObject is designed for client-side (browsers), not server-side (node)\n    //Will choke on undefined navigator and window vars when run on server\n    //Return boolean false and exit function when running server-side\n\n    if(typeof window === \"undefined\" || typeof navigator === \"undefined\"){ return false; }\n\n    var pdfobjectversion = \"2.1.1\",\n        ua = window.navigator.userAgent,\n\n        //declare booleans\n        supportsPDFs,\n        isIE,\n        supportsPdfMimeType = (typeof navigator.mimeTypes['application/pdf'] !== \"undefined\"),\n        supportsPdfActiveX,\n        isModernBrowser = (function (){ return (typeof window.Promise !== \"undefined\"); })(),\n        isFirefox = (function (){ return (ua.indexOf(\"irefox\") !== -1); } )(),\n        isFirefoxWithPDFJS = (function (){\n            //Firefox started shipping PDF.js in Firefox 19.\n            //If this is Firefox 19 or greater, assume PDF.js is available\n            if(!isFirefox){ return false; }\n            //parse userAgent string to get release version (\"rv\")\n            //ex: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.12; rv:57.0) Gecko/20100101 Firefox/57.0\n            return (parseInt(ua.split(\"rv:\")[1].split(\".\")[0], 10) > 18);\n        })(),\n        isIOS = (function (){ return (/iphone|ipad|ipod/i.test(ua.toLowerCase())); })(),\n\n        //declare functions\n        createAXO,\n        buildFragmentString,\n        log,\n        embedError,\n        embed,\n        getTargetElement,\n        generatePDFJSiframe,\n        generateEmbedElement;\n\n\n    /* ----------------------------------------------------\n       Supporting functions\n       ---------------------------------------------------- */\n\n    createAXO = function (type){\n        var ax;\n        try {\n            ax = new ActiveXObject(type);\n        } catch (e) {\n            ax = null; //ensure ax remains null\n        }\n        return ax;\n    };\n\n    //IE11 still uses ActiveX for Adobe Reader, but IE 11 doesn't expose\n    //window.ActiveXObject the same way previous versions of IE did\n    //window.ActiveXObject will evaluate to false in IE 11, but \"ActiveXObject\" in window evaluates to true\n    //so check the first one for older IE, and the second for IE11\n    //FWIW, MS Edge (replacing IE11) does not support ActiveX at all, both will evaluate false\n    //Constructed as a method (not a prop) to avoid unneccesarry overhead -- will only be evaluated if needed\n    isIE = function (){ return !!(window.ActiveXObject || \"ActiveXObject\" in window); };\n\n    //If either ActiveX support for \"AcroPDF.PDF\" or \"PDF.PdfCtrl\" are found, return true\n    //Constructed as a method (not a prop) to avoid unneccesarry overhead -- will only be evaluated if needed\n    supportsPdfActiveX = function (){ return !!(createAXO(\"AcroPDF.PDF\") || createAXO(\"PDF.PdfCtrl\")); };\n\n    //Determines whether PDF support is available\n    supportsPDFs = (\n        //as of iOS 12, inline PDF rendering is still not supported in Safari or native webview\n        //3rd-party browsers (eg Chrome, Firefox) use Apple's webview for rendering, and thus the same result as Safari\n        //Therefore if iOS, we shall assume that PDF support is not available\n        !isIOS && (\n            //Modern versions of Firefox come bundled with PDFJS\n            isFirefoxWithPDFJS || \n            //Browsers that still support the original MIME type check\n            supportsPdfMimeType || (\n                //Pity the poor souls still using IE\n                isIE() && supportsPdfActiveX()\n            )\n        )\n    );\n\n    //Create a fragment identifier for using PDF Open parameters when embedding PDF\n    buildFragmentString = function(pdfParams){\n\n        var string = \"\",\n            prop;\n\n        if(pdfParams){\n\n            for (prop in pdfParams) {\n                if (pdfParams.hasOwnProperty(prop)) {\n                    string += encodeURIComponent(prop) + \"=\" + encodeURIComponent(pdfParams[prop]) + \"&\";\n                }\n            }\n\n            //The string will be empty if no PDF Params found\n            if(string){\n\n                string = \"#\" + string;\n\n                //Remove last ampersand\n                string = string.slice(0, string.length - 1);\n\n            }\n\n        }\n\n        return string;\n\n    };\n\n    log = function (msg){\n        if(typeof console !== \"undefined\" && console.log){\n            console.log(\"[PDFObject] \" + msg);\n        }\n    };\n\n    embedError = function (msg){\n        log(msg);\n        return false;\n    };\n\n    getTargetElement = function (targetSelector){\n\n        //Default to body for full-browser PDF\n        var targetNode = document.body;\n\n        //If a targetSelector is specified, check to see whether\n        //it's passing a selector, jQuery object, or an HTML element\n\n        if(typeof targetSelector === \"string\"){\n\n            //Is CSS selector\n            targetNode = document.querySelector(targetSelector);\n\n        } else if (typeof jQuery !== \"undefined\" && targetSelector instanceof jQuery && targetSelector.length) {\n\n            //Is jQuery element. Extract HTML node\n            targetNode = targetSelector.get(0);\n\n        } else if (typeof targetSelector.nodeType !== \"undefined\" && targetSelector.nodeType === 1){\n\n            //Is HTML element\n            targetNode = targetSelector;\n\n        }\n\n        return targetNode;\n\n    };\n\n    generatePDFJSiframe = function (targetNode, url, pdfOpenFragment, PDFJS_URL, id){\n\n        var fullURL = PDFJS_URL + \"?file=\" + encodeURIComponent(url) + pdfOpenFragment;\n        var scrollfix = (isIOS) ? \"-webkit-overflow-scrolling: touch; overflow-y: scroll; \" : \"overflow: hidden; \";\n        var iframe = \"<div style='\" + scrollfix + \"position: absolute; top: 0; right: 0; bottom: 0; left: 0;'><iframe  \" + id + \" src='\" + fullURL + \"' style='border: none; width: 100%; height: 100%;' frameborder='0'></iframe></div>\";\n        targetNode.className += \" pdfobject-container\";\n        targetNode.style.position = \"relative\";\n        targetNode.style.overflow = \"auto\";\n        targetNode.innerHTML = iframe;\n        return targetNode.getElementsByTagName(\"iframe\")[0];\n\n    };\n\n    generateEmbedElement = function (targetNode, targetSelector, url, pdfOpenFragment, width, height, id){\n\n        var style = \"\";\n\n        if(targetSelector && targetSelector !== document.body){\n            style = \"width: \" + width + \"; height: \" + height + \";\";\n        } else {\n            style = \"position: absolute; top: 0; right: 0; bottom: 0; left: 0; width: 100%; height: 100%;\";\n        }\n\n        targetNode.className += \" pdfobject-container\";\n        targetNode.innerHTML = \"<embed \" + id + \" class='pdfobject' src='\" + url + pdfOpenFragment + \"' type='application/pdf' style='overflow: auto; \" + style + \"'/>\";\n\n        return targetNode.getElementsByTagName(\"embed\")[0];\n\n    };\n\n    embed = function(url, targetSelector, options){\n\n        //Ensure URL is available. If not, exit now.\n        if(typeof url !== \"string\"){ return embedError(\"URL is not valid\"); }\n\n        //If targetSelector is not defined, convert to boolean\n        targetSelector = (typeof targetSelector !== \"undefined\") ? targetSelector : false;\n\n        //Ensure options object is not undefined -- enables easier error checking below\n        options = (typeof options !== \"undefined\") ? options : {};\n\n        //Get passed options, or set reasonable defaults\n        var id = (options.id && typeof options.id === \"string\") ? \"id='\" + options.id + \"'\" : \"\",\n            page = (options.page) ? options.page : false,\n            pdfOpenParams = (options.pdfOpenParams) ? options.pdfOpenParams : {},\n            fallbackLink = (typeof options.fallbackLink !== \"undefined\") ? options.fallbackLink : true,\n            width = (options.width) ? options.width : \"100%\",\n            height = (options.height) ? options.height : \"100%\",\n            assumptionMode = (typeof options.assumptionMode === \"boolean\") ? options.assumptionMode : true,\n            forcePDFJS = (typeof options.forcePDFJS === \"boolean\") ? options.forcePDFJS : false,\n            PDFJS_URL = (options.PDFJS_URL) ? options.PDFJS_URL : false,\n            targetNode = getTargetElement(targetSelector),\n            fallbackHTML = \"\",\n            pdfOpenFragment = \"\",\n            fallbackHTML_default = \"<p>This browser does not support inline PDFs. Please download the PDF to view it: <a href='[url]'>Download PDF</a></p>\";\n\n        //If target element is specified but is not valid, exit without doing anything\n        if(!targetNode){ return embedError(\"Target element cannot be determined\"); }\n\n\n        //page option overrides pdfOpenParams, if found\n        if(page){\n            pdfOpenParams.page = page;\n        }\n\n        //Stringify optional Adobe params for opening document (as fragment identifier)\n        pdfOpenFragment = buildFragmentString(pdfOpenParams);\n\n        //Do the dance\n\n        //If the forcePDFJS option is invoked, skip everything else and embed as directed\n        if(forcePDFJS && PDFJS_URL){\n\n            return generatePDFJSiframe(targetNode, url, pdfOpenFragment, PDFJS_URL, id);\n\n        //If traditional support is provided, or if this is a modern browser and not iOS (see comment for supportsPDFs declaration)\n        } else if(supportsPDFs || (assumptionMode && isModernBrowser && !isIOS)){\n\n            return generateEmbedElement(targetNode, targetSelector, url, pdfOpenFragment, width, height, id);\n\n        //If everything else has failed and a PDFJS fallback is provided, try to use it\n        } else if(PDFJS_URL){\n\n            return generatePDFJSiframe(targetNode, url, pdfOpenFragment, PDFJS_URL, id);\n\n        } else {\n\n            //Display the fallback link if available\n            if(fallbackLink){\n\n                fallbackHTML = (typeof fallbackLink === \"string\") ? fallbackLink : fallbackHTML_default;\n                targetNode.innerHTML = fallbackHTML.replace(/\\[url\\]/g, url);\n\n            }\n\n            return embedError(\"This browser does not support embedded PDFs\");\n\n        }\n\n    };\n\n    return {\n        embed: function (a,b,c){ return embed(a,b,c); },\n        pdfobjectversion: (function () { return pdfobjectversion; })(),\n        supportsPDFs: (function (){ return supportsPDFs; })()\n    };\n\n}));\n\n/***/ }),\n\n/***/ \"XMpX\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_BadgeColumn_vue__ = __webpack_require__(\"R7hf\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_29844c72_hasScoped_true_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_BadgeColumn_vue__ = __webpack_require__(\"uW86\");\nfunction injectStyle (ssrContext) {\n  __webpack_require__(\"OsVY\")\n}\nvar normalizeComponent = __webpack_require__(\"VU/8\")\n/* script */\n\n/* template */\n\n/* template functional */\n  var __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-29844c72\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_BadgeColumn_vue__[\"a\" /* default */],\n  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_29844c72_hasScoped_true_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_BadgeColumn_vue__[\"a\" /* default */],\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Component.exports);\n\n\n/***/ }),\n\n/***/ \"ZZvs\":\n/***/ (function(module, exports, __webpack_require__) {\n\n!function(t,e){ true?module.exports=e():\"function\"==typeof define&&define.amd?define(\"VueLoading\",[],e):\"object\"==typeof exports?exports.VueLoading=e():t.VueLoading=e()}(\"undefined\"!=typeof self?self:this,function(){return function(t){var e={};function i(n){if(e[n])return e[n].exports;var r=e[n]={i:n,l:!1,exports:{}};return t[n].call(r.exports,r,r.exports,i),r.l=!0,r.exports}return i.m=t,i.c=e,i.d=function(t,e,n){i.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},i.r=function(t){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})},i.t=function(t,e){if(1&e&&(t=i(t)),8&e)return t;if(4&e&&\"object\"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(i.r(n),Object.defineProperty(n,\"default\",{enumerable:!0,value:t}),2&e&&\"string\"!=typeof t)for(var r in t)i.d(n,r,function(e){return t[e]}.bind(null,r));return n},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,\"a\",e),e},i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},i.p=\"\",i(i.s=1)}([function(t,e,i){},function(t,e,i){\"use strict\";i.r(e);var n=\"undefined\"!=typeof window?window.HTMLElement:Object,r={mounted:function(){document.addEventListener(\"focusin\",this.focusIn)},methods:{focusIn:function(t){if(this.isActive&&t.target!==this.$el&&!this.$el.contains(t.target)){var e=this.container?this.container:this.isFullPage?null:this.$el.parentElement;(this.isFullPage||e&&e.contains(t.target))&&(t.preventDefault(),this.$el.focus())}}},beforeDestroy:function(){document.removeEventListener(\"focusin\",this.focusIn)}};function a(t,e,i,n,r,a,o,s){var u,l=\"function\"==typeof t?t.options:t;if(e&&(l.render=e,l.staticRenderFns=i,l._compiled=!0),n&&(l.functional=!0),a&&(l._scopeId=\"data-v-\"+a),o?(u=function(t){(t=t||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||\"undefined\"==typeof __VUE_SSR_CONTEXT__||(t=__VUE_SSR_CONTEXT__),r&&r.call(this,t),t&&t._registeredComponents&&t._registeredComponents.add(o)},l._ssrRegister=u):r&&(u=s?function(){r.call(this,this.$root.$options.shadowRoot)}:r),u)if(l.functional){l._injectStyles=u;var c=l.render;l.render=function(t,e){return u.call(e),c(t,e)}}else{var d=l.beforeCreate;l.beforeCreate=d?[].concat(d,u):[u]}return{exports:t,options:l}}var o=a({name:\"spinner\",props:{color:{type:String,default:\"#000\"},height:{type:Number,default:64},width:{type:Number,default:64}}},function(){var t=this.$createElement,e=this._self._c||t;return e(\"svg\",{attrs:{viewBox:\"0 0 38 38\",xmlns:\"http://www.w3.org/2000/svg\",width:this.width,height:this.height,stroke:this.color}},[e(\"g\",{attrs:{fill:\"none\",\"fill-rule\":\"evenodd\"}},[e(\"g\",{attrs:{transform:\"translate(1 1)\",\"stroke-width\":\"2\"}},[e(\"circle\",{attrs:{\"stroke-opacity\":\".25\",cx:\"18\",cy:\"18\",r:\"18\"}}),e(\"path\",{attrs:{d:\"M36 18c0-9.94-8.06-18-18-18\"}},[e(\"animateTransform\",{attrs:{attributeName:\"transform\",type:\"rotate\",from:\"0 18 18\",to:\"360 18 18\",dur:\"0.8s\",repeatCount:\"indefinite\"}})],1)])])])},[],!1,null,null,null).exports,s=a({name:\"dots\",props:{color:{type:String,default:\"#000\"},height:{type:Number,default:240},width:{type:Number,default:60}}},function(){var t=this.$createElement,e=this._self._c||t;return e(\"svg\",{attrs:{viewBox:\"0 0 120 30\",xmlns:\"http://www.w3.org/2000/svg\",fill:this.color,width:this.width,height:this.height}},[e(\"circle\",{attrs:{cx:\"15\",cy:\"15\",r:\"15\"}},[e(\"animate\",{attrs:{attributeName:\"r\",from:\"15\",to:\"15\",begin:\"0s\",dur:\"0.8s\",values:\"15;9;15\",calcMode:\"linear\",repeatCount:\"indefinite\"}}),e(\"animate\",{attrs:{attributeName:\"fill-opacity\",from:\"1\",to:\"1\",begin:\"0s\",dur:\"0.8s\",values:\"1;.5;1\",calcMode:\"linear\",repeatCount:\"indefinite\"}})]),e(\"circle\",{attrs:{cx:\"60\",cy:\"15\",r:\"9\",\"fill-opacity\":\"0.3\"}},[e(\"animate\",{attrs:{attributeName:\"r\",from:\"9\",to:\"9\",begin:\"0s\",dur:\"0.8s\",values:\"9;15;9\",calcMode:\"linear\",repeatCount:\"indefinite\"}}),e(\"animate\",{attrs:{attributeName:\"fill-opacity\",from:\"0.5\",to:\"0.5\",begin:\"0s\",dur:\"0.8s\",values:\".5;1;.5\",calcMode:\"linear\",repeatCount:\"indefinite\"}})]),e(\"circle\",{attrs:{cx:\"105\",cy:\"15\",r:\"15\"}},[e(\"animate\",{attrs:{attributeName:\"r\",from:\"15\",to:\"15\",begin:\"0s\",dur:\"0.8s\",values:\"15;9;15\",calcMode:\"linear\",repeatCount:\"indefinite\"}}),e(\"animate\",{attrs:{attributeName:\"fill-opacity\",from:\"1\",to:\"1\",begin:\"0s\",dur:\"0.8s\",values:\"1;.5;1\",calcMode:\"linear\",repeatCount:\"indefinite\"}})])])},[],!1,null,null,null).exports,u=a({name:\"bars\",props:{color:{type:String,default:\"#000\"},height:{type:Number,default:40},width:{type:Number,default:40}}},function(){var t=this.$createElement,e=this._self._c||t;return e(\"svg\",{attrs:{xmlns:\"http://www.w3.org/2000/svg\",viewBox:\"0 0 30 30\",height:this.height,width:this.width,fill:this.color}},[e(\"rect\",{attrs:{x:\"0\",y:\"13\",width:\"4\",height:\"5\"}},[e(\"animate\",{attrs:{attributeName:\"height\",attributeType:\"XML\",values:\"5;21;5\",begin:\"0s\",dur:\"0.6s\",repeatCount:\"indefinite\"}}),e(\"animate\",{attrs:{attributeName:\"y\",attributeType:\"XML\",values:\"13; 5; 13\",begin:\"0s\",dur:\"0.6s\",repeatCount:\"indefinite\"}})]),e(\"rect\",{attrs:{x:\"10\",y:\"13\",width:\"4\",height:\"5\"}},[e(\"animate\",{attrs:{attributeName:\"height\",attributeType:\"XML\",values:\"5;21;5\",begin:\"0.15s\",dur:\"0.6s\",repeatCount:\"indefinite\"}}),e(\"animate\",{attrs:{attributeName:\"y\",attributeType:\"XML\",values:\"13; 5; 13\",begin:\"0.15s\",dur:\"0.6s\",repeatCount:\"indefinite\"}})]),e(\"rect\",{attrs:{x:\"20\",y:\"13\",width:\"4\",height:\"5\"}},[e(\"animate\",{attrs:{attributeName:\"height\",attributeType:\"XML\",values:\"5;21;5\",begin:\"0.3s\",dur:\"0.6s\",repeatCount:\"indefinite\"}}),e(\"animate\",{attrs:{attributeName:\"y\",attributeType:\"XML\",values:\"13; 5; 13\",begin:\"0.3s\",dur:\"0.6s\",repeatCount:\"indefinite\"}})])])},[],!1,null,null,null).exports,l=a({name:\"vue-loading\",mixins:[r],props:{active:Boolean,programmatic:Boolean,container:[Object,Function,n],isFullPage:{type:Boolean,default:!0},transition:{type:String,default:\"fade\"},canCancel:Boolean,onCancel:{type:Function,default:function(){}},color:String,backgroundColor:String,opacity:Number,width:Number,height:Number,zIndex:Number,loader:{type:String,default:\"spinner\"}},data:function(){return{isActive:this.active}},components:{Spinner:o,Dots:s,Bars:u},beforeMount:function(){this.programmatic&&(this.container?(this.isFullPage=!1,this.container.appendChild(this.$el)):document.body.appendChild(this.$el))},mounted:function(){this.programmatic&&(this.isActive=!0),document.addEventListener(\"keyup\",this.keyPress)},methods:{cancel:function(){this.canCancel&&this.isActive&&(this.hide(),this.onCancel.apply(null,arguments))},hide:function(){var t=this;this.$emit(\"hide\"),this.$emit(\"update:active\",!1),this.programmatic&&(this.isActive=!1,setTimeout(function(){var e;t.$destroy(),void 0!==(e=t.$el).remove?e.remove():e.parentNode.removeChild(e)},150))},keyPress:function(t){27===t.keyCode&&this.cancel()}},watch:{active:function(t){this.isActive=t}},beforeDestroy:function(){document.removeEventListener(\"keyup\",this.keyPress)}},function(){var t=this,e=t.$createElement,i=t._self._c||e;return i(\"transition\",{attrs:{name:t.transition}},[i(\"div\",{directives:[{name:\"show\",rawName:\"v-show\",value:t.isActive,expression:\"isActive\"}],staticClass:\"vld-overlay is-active\",class:{\"is-full-page\":t.isFullPage},style:{zIndex:this.zIndex},attrs:{tabindex:\"0\",\"aria-busy\":t.isActive,\"aria-label\":\"Loading\"}},[i(\"div\",{staticClass:\"vld-background\",style:{background:this.backgroundColor,opacity:this.opacity},on:{click:function(e){return e.preventDefault(),t.cancel(e)}}}),i(\"div\",{staticClass:\"vld-icon\"},[t._t(\"before\"),t._t(\"default\",[i(t.loader,{tag:\"component\",attrs:{color:t.color,width:t.width,height:t.height}})]),t._t(\"after\")],2)])])},[],!1,null,null,null).exports,c=function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return{show:function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:e,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:i,a=Object.assign({},e,n,{programmatic:!0}),o=new(t.extend(l))({el:document.createElement(\"div\"),propsData:a}),s=Object.assign({},i,r);return Object.keys(s).map(function(t){o.$slots[t]=s[t]}),o}}};i(0);l.install=function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},n=c(t,e,i);t.$loading=n,t.prototype.$loading=n};e.default=l}]).default});\n\n/***/ }),\n\n/***/ \"aFK5\":\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = { \"default\": __webpack_require__(\"gAsd\"), __esModule: true };\n\n/***/ }),\n\n/***/ \"ctRa\":\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(\"FZ+f\")(true);\n// imports\n\n\n// module\nexports.push([module.i, \".circle[data-v-29844c72]{width:.4rem;height:.4rem;border-radius:50%;display:inline-block}\", \"\", {\"version\":3,\"sources\":[\"C:/Users/atom/Desktop/ATOM Sync/extralab_75000/extralab_cl25092019/src/components/obrada/BadgeColumn.vue\"],\"names\":[],\"mappings\":\"AACA,yBACE,YAAc,AACd,aAAe,AACf,kBAAmB,AACnB,oBAAsB,CACvB\",\"file\":\"BadgeColumn.vue\",\"sourcesContent\":[\"\\n.circle[data-v-29844c72] {\\n  width: 0.4rem;\\n  height: 0.4rem;\\n  border-radius: 50%;\\n  display: inline-block;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n\n/***/ \"d5lM\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar interpretacija = __webpack_require__(\"3r/r\");\n\nmodule.exports = {\n  Interpretation: function Interpretation(test, result, jedinica, dref, gref, site, interp, extend, spec) {\n\n    var rezultat = result.trim();\n\n    switch (interp) {\n      case \"none\":\n        return [test, rezultat, interpretacija.None(rezultat, dref, gref)[0], jedinica, \"/\", interpretacija.None(rezultat, dref, gref)[1], extend];\n        break;\n      case \"A\":\n        return [test, rezultat, interpretacija.Standard(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.Standard(rezultat, dref, gref)[1], extend];\n        break;\n      case \"ogtt\":\n        if (dref == \"0\" && gref == \"0\") {\n          var reference = \"/\";\n        } else {\n          var reference = dref + \" - \" + gref;\n        }\n        return [test, rezultat, interpretacija.Standard(rezultat, dref, gref)[0], jedinica, reference, interpretacija.Standard(rezultat, dref, gref)[1], extend];\n        break;\n      case \"insul\":\n        if (dref == \"0\" && gref == \"0\") {\n          var reference = \"/\";\n        } else {\n          var reference = dref + \" - \" + gref;\n        }\n        return [test, rezultat, interpretacija.Standard(rezultat, dref, gref)[0], jedinica, reference, interpretacija.Standard(rezultat, dref, gref)[1], extend];\n        break;\n      case \"less\":\n        if (dref === gref) {\n          return [test, rezultat, interpretacija.Less(rezultat, dref, gref)[0], jedinica, \" < \" + gref, interpretacija.Less(rezultat, dref, gref)[1], extend];\n        } else {\n          return [test, rezultat, interpretacija.Less(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.Less(rezultat, dref, gref)[1], extend];\n        }\n        break;\n      case \"infekc\":\n        return [test, rezultat, interpretacija.Infekcija(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.Infekcija(rezultat, dref, gref)[1], extend];\n        break;\n      case \"grt\":\n        return [test, rezultat, interpretacija.Greater(rezultat, dref, gref)[0], jedinica, \" > \" + gref, interpretacija.Greater(rezultat, dref, gref)[1], extend];\n        break;\n      case \"grte\":\n        return [test, rezultat, interpretacija.GreaterEqual(rezultat, dref, gref)[0], jedinica, \" ≥ \" + gref, interpretacija.GreaterEqual(rezultat, dref, gref)[1], extend];\n        break;\n      case \"neg\":\n        return [test, rezultat, interpretacija.Negativan(rezultat, dref, gref)[0], jedinica, \"negativan\", interpretacija.Negativan(rezultat, dref, gref)[1], extend];\n        break;\n      case \"reakt\":\n        return [test, rezultat, interpretacija.Reaktivan(rezultat, dref, gref)[0], jedinica, \"negativan\", interpretacija.Reaktivan(rezultat, dref, gref)[1], extend];\n        break;\n      case \"norm\":\n        return [test, rezultat, interpretacija.Normalan(rezultat, dref, gref)[0], jedinica, \"normalna\", interpretacija.Normalan(rezultat, dref, gref)[1], extend];\n        break;\n      case \"norma\":\n        return [test, rezultat, interpretacija.Normalan(rezultat, dref, gref)[0], jedinica, \"normalan\", interpretacija.Normalan(rezultat, dref, gref)[1], extend];\n        break;\n      case \"ured\":\n        return [test, rezultat, interpretacija.Uredan(rezultat, dref, gref)[0], jedinica, \"uredna\", interpretacija.Uredan(rezultat, dref, gref)[1], extend];\n        break;\n      case \"plus\":\n        return [test, rezultat, interpretacija.Plus(rezultat, dref, gref)[0], jedinica, \"+ + +\", interpretacija.Plus(rezultat, dref, gref)[1], extend];\n        break;\n      case \"morf\":\n        return [test, rezultat, interpretacija.Morf(rezultat, dref, gref)[0], jedinica, gref, interpretacija.Morf(rezultat, dref, gref)[1], extend];\n        break;\n      case \"titar\":\n        return [test, rezultat, interpretacija.Titar(rezultat, dref, gref)[0], jedinica, \"< \" + dref + \":\" + gref, interpretacija.Titar(rezultat, dref, gref)[1], extend];\n        break;\n      case \"tsh\":\n        return [test, rezultat, interpretacija.TSH(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.TSH(rezultat, dref, gref)[1], extend];\n        break;\n      case \"trg\":\n        return [test, rezultat, interpretacija.TRG(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.TRG(rezultat, dref, gref)[1], extend];\n        break;\n      case \"hol\":\n        return [test, rezultat, interpretacija.HOL(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.HOL(rezultat, dref, gref)[1], extend];\n        break;\n      case \"hdl\":\n        return [test, rezultat, interpretacija.HDL(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.HDL(rezultat, dref, gref)[1], extend];\n        break;\n      case \"ldl\":\n        return [test, rezultat, interpretacija.LDL(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.LDL(rezultat, dref, gref)[1], extend];\n        break;\n      case \"fpsa\":\n        return [test, rezultat, interpretacija.fPSA(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.fPSA(rezultat, dref, gref)[1], extend];\n        break;\n      case \"sediment\":\n        return [test, rezultat, interpretacija.Sedimentacija(rezultat, dref, gref)[0], jedinica, \"< \" + gref, interpretacija.Sedimentacija(rezultat, dref, gref)[1], extend];\n        break;\n      case \"bistar\":\n        return [test, rezultat, interpretacija.Bistar(rezultat, dref, gref)[0], jedinica, \"bistar\", interpretacija.Bistar(rezultat, dref, gref)[1], extend];\n        break;\n      case \"boja\":\n        return [test, rezultat, interpretacija.Boja(rezultat, dref, gref)[0], jedinica, \"svjetlo žut\", interpretacija.Boja(rezultat, dref, gref)[1], extend];\n        break;\n      case \"nesto\":\n        return [test, rezultat, interpretacija.Nesto(rezultat, dref, gref)[0], jedinica, \"nešto\", interpretacija.Nesto(rezultat, dref, gref)[1], extend];\n        break;\n      case \"exists\":\n        return [test, rezultat, interpretacija.Exists(rezultat, dref, gref)[0], jedinica, \" \", interpretacija.Exists(rezultat, dref, gref)[1], extend];\n        break;\n      case \"blst\":\n        return [test, rezultat, interpretacija.Blasti(rezultat, dref, gref)[0], jedinica, gref, interpretacija.Blasti(rezultat, dref, gref)[1], extend];\n        break;\n      case \"leu\":\n        return [test, rezultat, interpretacija.LeuErc(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.LeuErc(rezultat, dref, gref)[1], extend];\n        break;\n      case \"spec\":\n        return [test, rezultat, interpretacija.Specific(rezultat, dref, gref)[0], jedinica, spec, interpretacija.Specific(rezultat, dref, gref)[1], extend];\n        break;\n      default:\n        return [test, rezultat, interpretacija.None(rezultat, dref, gref)[0], jedinica, \"/\", interpretacija.None(rezultat, dref, gref)[1], extend];\n        break;\n    }\n  }\n};\n\n/***/ }),\n\n/***/ \"gAsd\":\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(\"G5/o\");\nvar $Object = __webpack_require__(\"FeBl\").Object;\nmodule.exports = function getOwnPropertyNames(it) {\n  return $Object.getOwnPropertyNames(it);\n};\n\n\n/***/ }),\n\n/***/ \"hLWQ\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n    hex2rgb: function hex2rgb(hex, opacity) {\n        hex = (hex + \"\").trim();\n\n        var rgb = null;\n        var match = hex.match(/^#?(([0-9a-zA-Z]{3}){1,3})$/);\n\n        if (!match) {\n            return null;\n        }\n\n        rgb = {};\n\n        hex = match[1];\n\n        if (hex.length === 6) {\n            rgb.r = parseInt(hex.substring(0, 2), 16);\n            rgb.g = parseInt(hex.substring(2, 4), 16);\n            rgb.b = parseInt(hex.substring(4, 6), 16);\n        } else if (hex.length === 3) {\n            rgb.r = parseInt(hex.substring(0, 1) + hex.substring(0, 1), 16);\n            rgb.g = parseInt(hex.substring(1, 2) + hex.substring(1, 2), 16);\n            rgb.b = parseInt(hex.substring(2, 3) + hex.substring(2, 3), 16);\n        }\n\n        rgb.css = \"rgb\" + (opacity ? \"a\" : \"\") + \"(\";\n        rgb.css += rgb.r + \",\" + rgb.g + \",\" + rgb.b;\n        rgb.css += (opacity ? \",\" + opacity : \"\") + \")\";\n\n        return rgb;\n    }\n});\n\n/***/ }),\n\n/***/ \"n0T6\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)\nvar $keys = __webpack_require__(\"Ibhu\");\nvar hiddenKeys = __webpack_require__(\"xnc9\").concat('length', 'prototype');\n\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return $keys(O, hiddenKeys);\n};\n\n\n/***/ }),\n\n/***/ \"rl2g\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"collapse-page\"},[(_vm.show)?_c('div',{staticClass:\"flex md12\"},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.main && _vm.pdf),expression:\"!main && pdf\"}]},[_c('div',{staticClass:\"btn-container\"},[_c('button',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.verificiran),expression:\"verificiran\"}],staticClass:\"btn btn-secondary btn-sm\",on:{\"click\":function($event){$event.preventDefault();_vm.Nazad()}}},[_c('span',{staticClass:\"fa fa-step-backward\"}),_vm._v(\"\\n            \"+_vm._s(' NAZAD')+\"\\n          \")]),_vm._v(\" \"),_c('button',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.verificiran),expression:\"!verificiran\"}],staticClass:\"btn btn-secondary-danger btn-sm\",on:{\"click\":function($event){$event.preventDefault();_vm.Nazad()}}},[_c('span',{staticClass:\"fa fa-step-backward\"}),_vm._v(\"\\n            \"+_vm._s(' NAZAD')+\"\\n          \")]),_vm._v(\" \"),_c('button',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.email_button && _vm.verificiran),expression:\"email_button && verificiran\"}],staticClass:\"btn btn-secondary btn-sm pull-right\",attrs:{\"disabled\":!_vm.Email(_vm.email)},on:{\"click\":function($event){$event.preventDefault();_vm.MailDialog()}}},[_c('span',{staticClass:\"glyphicon glyphicon-send\"}),_vm._v(\"\\n            \"+_vm._s(' Pošalji')+\"\\n          \")]),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.email_button && _vm.verificiran),expression:\"email_button && verificiran\"}],staticClass:\"form-group with-icon-left pull-right\"},[_c('div',{staticClass:\"input-group\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.email),expression:\"email\"}],attrs:{\"size\":\"40\",\"id\":\"input-icon-left\",\"name\":\"input-icon-left\",\"title\":\" \",\"required\":\"\"},domProps:{\"value\":(_vm.email)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.email=$event.target.value}}}),_vm._v(\" \"),_c('i',{staticClass:\"fa fa-envelope-o icon-left input-icon\"}),_vm._v(\" \"),_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"input-icon-left\"}},[_vm._v(_vm._s('Email adresa'))]),_vm._v(\" \"),_c('i',{staticClass:\"bar\"})])])]),_vm._v(\" \"),_c('hr'),_vm._v(\" \"),_c('div',{attrs:{\"id\":\"pdf-container\"}})]),_vm._v(\" \"),_c('vuestic-widget',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.main),expression:\"main\"}],attrs:{\"headerText\":_vm.header,\"pagination\":_vm.pagination,\"main\":_vm.main,\"data_pid\":Number(_vm.data_pid),\"data_length\":Number(_vm.data_length),\"rezultati_length\":_vm.Results.length,\"spol\":_vm.data_spol,\"data_min\":Number(_vm.data_min),\"datum\":_vm.query_date,\"today\":_vm.today_date,\"forward_disabled\":_vm.forward_disabled,\"backward_disabled\":_vm.backward_disabled}},[_c('vuestic-accordion-obrada',_vm._l((_vm.uzorci),function(uzorak){return _c('vuestic-collapse-obrada',{directives:[{name:\"show\",rawName:\"v-show\",value:(!uzorak.removed),expression:\"!uzorak.removed\"}],key:uzorak.sid,attrs:{\"id\":uzorak.sid,\"sample\":uzorak}},[_c('span',{attrs:{\"slot\":\"header\",\"id\":uzorak.sid},slot:\"header\"},[_vm._v(_vm._s(uzorak.sid))]),_vm._v(\" \"),_c('div',{attrs:{\"slot\":\"body\"},slot:\"body\"},[_c('div',{staticStyle:{\"line-height\":\"10px\"}},[_vm._v(\" \")]),_vm._v(\" \"),(uzorak.tip.includes('Mikrobiologija'))?_c('div',{staticClass:\"va-row\"},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.show_table),expression:\"show_table\"}],staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped first-td-padding\"},[_c('thead',[_c('tr',{attrs:{\"align\":\"middle\"}},[(uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN')?_c('td'):_vm._e(),_vm._v(\" \"),_c('td',[_vm._v(_vm._s('ANALIZA'))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s('REZULTAT'))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s('JEDINICA'))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s('REFERENCE'))]),_vm._v(\" \"),(uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN')?_c('td'):_vm._e(),_vm._v(\" \"),(uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN' && _vm.MicrobiologyScenario != 'MAIBPoR')?_c('td',[_vm._v(_vm._s('PONOVI'))]):_vm._e(),_vm._v(\" \"),(_vm.MicrobiologyScenario === 'MAIBPoR')?_c('td',{staticStyle:{\"text-transform\":\"none\"}},[_vm._v(_vm._s('Bakterije'))]):_vm._e(),_vm._v(\" \"),_c('td')])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.rezultati),function(test,index){return _c('tr',{directives:[{name:\"show\",rawName:\"v-show\",value:(index < 1),expression:\"index < 1\"}],key:test.labassay_id,class:{\n                          'table-danger': (test.rezultat_m.length && test.rezultat_m[0].pozitivan), \n                          'table-success': (test.rezultat_m.length && test.rezultat_m[0].negativan),\n                          'table-warning': false\n                        },attrs:{\"align\":\"middle\"}},[(uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN')?_c('td',[(uzorak.status === 'ZAPRIMLJEN')?_c('button',{staticClass:\"btn btn-secondary-danger btn-micro\",staticStyle:{\"padding\":\"0.4px\",\"padding-left\":\"2px\"},on:{\"click\":function($event){$event.preventDefault();_vm.MicroResultSelect($event)}}},[_c('i',{staticClass:\"fa fa-bug\",on:{\"click\":function($event){$event.preventDefault();_vm.MicroResultSelect($event)}}})]):_vm._e(),_vm._v(\" \"),(uzorak.status != 'ZAPRIMLJEN')?_c('button',{staticClass:\"btn btn-secondary-danger btn-micro\",staticStyle:{\"padding\":\"0.6px\",\"padding-right\":\"1px\",\"padding-left\":\"1.2px\"},on:{\"click\":function($event){$event.preventDefault();_vm.ResetSample($event)}}},[_c('i',{staticClass:\"fa fa-backward\",on:{\"click\":function($event){$event.preventDefault();_vm.ResetSample($event)}}})]):_vm._e()]):_vm._e(),_vm._v(\" \"),_c('td',{attrs:{\"title\":test.analit}},[_c('span',[_vm._v(_vm._s(test.ime))])]),_vm._v(\" \"),(test.rezultat_m.length > 0)?_c('td',[_c('button',{staticClass:\"btn btn-primary btn-micro\",attrs:{\"id\":test.labassay_id},on:{\"click\":function($event){$event.preventDefault();_vm.OpenMicro($event, test)}}},[_c('span',{staticClass:\"glyphicon glyphicon-search\",attrs:{\"id\":test.labassay_id}}),_vm._v(\"\\n                            \"+_vm._s('VIŠE')+\"\\n                          \")])]):_vm._e(),_vm._v(\" \"),(test.rezultat_m.length < 1)?_c('td',[_c('button',{staticClass:\"btn btn-pale btn-micro\",attrs:{\"id\":test.labassay_id}},[_c('span',{staticClass:\"glyphicon glyphicon-ban-circle\",attrs:{\"id\":test.labassay_id}}),_vm._v(\"\\n                            \"+_vm._s('VIŠE')+\"\\n                          \")])]):_vm._e(),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(test.unit))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s('/'))]),_vm._v(\" \"),(uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN')?_c('td',[_c('i',{staticClass:\"glyphicon glyphicon-stats\",staticStyle:{\"font-size\":\"15px\",\"color\":\"#f7cc36\",\"opacity\":\"0\"},attrs:{\"id\":\"reference\",\"title\":\" \"}})]):_vm._e(),_vm._v(\" \"),(uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN' && _vm.MicrobiologyScenario != 'MAIBPoR')?_c('td',[_c('button',{staticClass:\"btn btn-pale btn-micro\"},[_c('span',{staticClass:\"glyphicon glyphicon-ban-circle\"})])]):_vm._e(),_vm._v(\" \"),(_vm.MicrobiologyScenario === 'MAIBPoR')?_c('td',[_c('button',{staticClass:\"btn btn-primary btn-micro\",on:{\"click\":function($event){$event.preventDefault();_vm.OpenMicroSelect($event, test)}}},[_c('span',{staticClass:\"fa fa-bug\"})])]):_vm._e(),_vm._v(\" \"),_c('td',[_c('i',{class:{'fa fa-exclamation-triangle icon-right input-icon error-icon' : false},on:{\"click\":function($event){$event.preventDefault();_vm.Exclamation(test)}}}),_vm._v(\" \"),_c('i',{class:{'fa fa-check success-icon icon-right input-icon' : false}})])])}))])])]):_vm._e(),_vm._v(\" \"),(!uzorak.tip.includes('Mikrobiologija'))?_c('div',{staticClass:\"va-row\"},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.show_table),expression:\"show_table\"}],staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped first-td-padding\"},[_c('thead',[_c('tr',{attrs:{\"align\":\"middle\"}},[(uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN')?_c('td'):_vm._e(),_vm._v(\" \"),_c('td',[_vm._v(_vm._s('ANALIZA'))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s('REZULTAT'))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s('JEDINICA'))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s('REFERENCE'))]),_vm._v(\" \"),(uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN')?_c('td'):_vm._e(),_vm._v(\" \"),(uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN' && _vm.calculated)?_c('td',[_vm._v(_vm._s('AKCIJA'))]):_vm._e(),_vm._v(\" \"),(uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN')?_c('td',[_vm._v(_vm._s('PONOVI'))]):_vm._e(),_vm._v(\" \"),_c('td')])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.rezultati),function(test){return _c('tr',{key:test.labassay_id,class:{\n                          'table-danger': _vm.Interpretacija(test.analit, test.rezultat, test.unit, test.dRef, test.gRef, _vm.$store.state.site, test.interp, test.extend, _vm.spec)[5] === 'Red' && !test.multidata, \n                          'table-success': _vm.Interpretacija(test.analit, test.rezultat, test.unit, test.dRef, test.gRef, _vm.$store.state.site, test.interp, test.extend, _vm.spec)[5] === 'Green' && !test.multidata,\n                          'table-warning': _vm.Interpretacija(test.analit, test.rezultat, test.unit, test.dRef, test.gRef, _vm.$store.state.site, test.interp, test.extend, _vm.spec)[5] === 'Yellow' && !test.multidata\n                        },attrs:{\"align\":\"middle\"}},[(uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN')?_c('td',[(!test.multidata)?_c('i',{staticClass:\"glyphicon glyphicon-object-align-bottom\",staticStyle:{\"color\":\"#4ae387\"},on:{\"click\":function($event){$event.preventDefault();_vm.SelectAnalyser(test)}}}):_vm._e(),_vm._v(\" \"),(test.multidata)?_c('span',{staticClass:\"glyphicon glyphicon-object-align-bottom\",staticStyle:{\"color\":\"#d9d9d9\"}}):_vm._e()]):_vm._e(),_vm._v(\" \"),_c('td',{attrs:{\"title\":test.analit}},[_c('span',{on:{\"contextmenu\":function($event){_vm.LabAssayEval($event, test)},\"click\":function($event){$event.preventDefault();_vm.Evaluation(test)}}},[_vm._v(_vm._s(test.ime))])]),_vm._v(\" \"),(!test.multidata)?_c('td',[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.edit == false),expression:\"test.edit == false\"}],staticStyle:{\"display\":\"inline\",\"font-size\":\"14px\",\"line-height\":\"4.5px\"}},[_c('label',[_c('strong',[_vm._v(_vm._s(test.rezultat))])])]),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.edit == true),expression:\"test.edit == true\"}],staticStyle:{\"display\":\"inline\",\"line-height\":\"5px\"}},[(test.select_options != undefined)?_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(test.rezultat),expression:\"test.rezultat\"}],staticStyle:{\"width\":\"110px\"},on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.$set(test, \"rezultat\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},_vm._l((test.select_options),function(option){return _c('option',{key:option},[_vm._v(_vm._s(option))])})):_vm._e()]),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.edit == true),expression:\"test.edit == true\"}],staticStyle:{\"display\":\"inline\"}},[(test.select_options === undefined)?_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(test.rezultat),expression:\"test.rezultat\"}],staticStyle:{\"width\":\"110px\",\"font-size\":\"12px\",\"line-height\":\"7px\"},domProps:{\"value\":(test.rezultat)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(test, \"rezultat\", $event.target.value)}}}):_vm._e()]),_vm._v(\" \"),_c('sup',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.vise > 2),expression:\"test.vise > 2\"}],on:{\"click\":function($event){$event.preventDefault();_vm.GetResults(test, uzorak.status)}}},[_c('i',{staticClass:\"fa fa-star\",staticStyle:{\"font-size\":\"5px\",\"color\":\"#e34a4a\"},attrs:{\"id\":\"star\",\"title\":\" \"}})]),_vm._v(\" \"),_c('sup',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.vise < 3),expression:\"test.vise < 3\"}]},[_c('i',{staticClass:\"fa fa-star-o\",staticStyle:{\"font-size\":\"5px\",\"opacity\":\"0\"},attrs:{\"id\":\"star\",\"title\":\" \"}})])]):_vm._e(),_vm._v(\" \"),(test.multidata && test.realizovan)?_c('td',[_c('button',{staticClass:\"btn btn-primary btn-micro\",attrs:{\"id\":test.labassay_id},on:{\"click\":function($event){$event.preventDefault();_vm.MultiGet($event, test.ime, test.analit, test.rezultat, test.odobren)}}},[_c('span',{staticClass:\"glyphicon glyphicon-search\",attrs:{\"id\":test.labassay_id},on:{\"click\":function($event){$event.preventDefault();_vm.MultiGet($event, test.ime, test.analit, test.rezultat, test.odobren)}}}),_vm._v(\"\\n                            \"+_vm._s('VIŠE')+\"\\n                          \")]),_vm._v(\" \"),_c('sup',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.multi_count > 2),expression:\"test.multi_count > 2\"}],on:{\"click\":function($event){$event.preventDefault();_vm.GetResultsMulti(test, uzorak.status)}}},[_c('i',{staticClass:\"fa fa-star\",staticStyle:{\"font-size\":\"5px\",\"color\":\"#e34a4a\"},attrs:{\"id\":\"star\",\"title\":\" \"}})]),_vm._v(\" \"),_c('sup',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.multi_count < 3),expression:\"test.multi_count < 3\"}]},[_c('i',{staticClass:\"fa fa-star-o\",staticStyle:{\"font-size\":\"5px\",\"opacity\":\"0\"},attrs:{\"id\":\"star\",\"title\":\" \"}})])]):_vm._e(),_vm._v(\" \"),(test.multidata && !test.realizovan)?_c('td',[_c('button',{staticClass:\"btn btn-warning btn-micro\",attrs:{\"id\":test.labassay_id},on:{\"click\":function($event){$event.preventDefault();_vm.MultiGet($event, test.ime, test.analit, test.rezultat, test.odobren)}}},[_c('span',{staticClass:\"glyphicon glyphicon-search\",attrs:{\"id\":test.labassay_id},on:{\"click\":function($event){$event.preventDefault();_vm.MultiGet($event, test.ime, test.analit, test.rezultat, test.odobren)}}}),_vm._v(\"\\n                            \"+_vm._s('VIŠE')+\"\\n                          \")]),_vm._v(\" \"),_c('sup',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.multi_count > 2),expression:\"test.multi_count > 2\"}],on:{\"click\":function($event){$event.preventDefault();_vm.GetResultsMulti(test, uzorak.status)}}},[_c('i',{staticClass:\"fa fa-star\",staticStyle:{\"font-size\":\"5px\",\"color\":\"#e34a4a\"},attrs:{\"id\":\"star\",\"title\":\" \"}})]),_vm._v(\" \"),_c('sup',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.multi_count < 3),expression:\"test.multi_count < 3\"}]},[_c('i',{staticClass:\"fa fa-star-o\",staticStyle:{\"font-size\":\"5px\",\"opacity\":\"0\"},attrs:{\"id\":\"star\",\"title\":\" \"}})])]):_vm._e(),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(test.unit))]),_vm._v(\" \"),(!test.multidata)?_c('td',[_vm._v(_vm._s(_vm.Interpretacija(test.analit, test.rezultat, test.unit, test.dRef, test.gRef, _vm.$store.state.site, test.interp, test.extend, _vm.spec)[4]))]):_vm._e(),_vm._v(\" \"),(test.multidata)?_c('td',[_vm._v(_vm._s('/'))]):_vm._e(),_vm._v(\" \"),(uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN')?_c('td',[(!test.multidata)?_c('i',{staticClass:\"glyphicon glyphicon-stats\",staticStyle:{\"font-size\":\"15px\",\"color\":\"#f7cc36\"},attrs:{\"id\":\"reference\",\"title\":\" \"},on:{\"click\":function($event){$event.preventDefault();_vm.Reference($event, test)}}}):_vm._e(),_vm._v(\" \"),(test.multidata)?_c('i',{staticClass:\"glyphicon glyphicon-stats\",staticStyle:{\"font-size\":\"15px\",\"color\":\"#f7cc36\",\"opacity\":\"0\"},attrs:{\"id\":\"reference\",\"title\":\" \"}}):_vm._e()]):_vm._e(),_vm._v(\" \"),(uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN' && _vm.calculated && !test.calculated)?_c('td',[_c('button',{staticClass:\"btn btn-pale btn-micro\"},[_c('span',{staticClass:\"glyphicon glyphicon-ban-circle\"})])]):_vm._e(),_vm._v(\" \"),(uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN' && _vm.calculated && test.calculated)?_c('td',[_c('button',{staticClass:\"btn btn-primary btn-micro\",attrs:{\"id\":test.test},on:{\"click\":function($event){$event.preventDefault();_vm.Calculate($event, test.labassay_id, test.ime, test.id)}}},[_c('span',{staticClass:\"fa fa-calculator\",attrs:{\"id\":test.test}})])]):_vm._e(),_vm._v(\" \"),(uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN' \n                          && (test.rezultat === '' || test.manual || test.calculated))?_c('td',[_c('button',{staticClass:\"btn btn-pale btn-micro\"},[_c('span',{staticClass:\"glyphicon glyphicon-ban-circle\"})])]):_vm._e(),_vm._v(\" \"),(uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN' \n                          && test.rezultat != '' && !test.manual && !test.calculated)?_c('td',[(!test.retest)?_c('button',{staticClass:\"btn btn-primary btn-micro\",attrs:{\"id\":test.test},on:{\"click\":function($event){$event.preventDefault();_vm.RetestEnable($event)}}},[_c('span',{staticClass:\"fa fa-refresh\",attrs:{\"id\":test.test}})]):_vm._e(),_vm._v(\" \"),(test.retest)?_c('button',{staticClass:\"btn btn-info btn-micro\",attrs:{\"id\":test.test},on:{\"click\":function($event){$event.preventDefault();_vm.RetestDisable($event)}}},[_c('span',{staticClass:\"glyphicon glyphicon-duplicate\",attrs:{\"id\":test.test}})]):_vm._e()]):_vm._e(),_vm._v(\" \"),_c('td',[_c('i',{class:{'fa fa-exclamation-triangle icon-right input-icon error-icon' : _vm.Interpretacija(test.analit, test.rezultat, test.unit, test.dRef, test.gRef, _vm.$store.state.site, test.interp, test.extend, _vm.spec)[5] === 'Red' && !test.multidata},on:{\"click\":function($event){$event.preventDefault();_vm.Exclamation(test)}}}),_vm._v(\" \"),_c('i',{class:{'fa fa-check success-icon icon-right input-icon' : _vm.Interpretacija(test.analit, test.rezultat, test.unit, test.dRef, test.gRef, _vm.$store.state.site, test.interp, test.extend, _vm.spec)[5] === 'Green' && !test.multidata}})])])}))])])]):_vm._e()])])})),_vm._v(\" \"),_c('div',{staticStyle:{\"min-height\":\"10px\"}}),_vm._v(\" \"),(_vm.verificiran)?_c('div',{staticClass:\"va-row\"},[_c('div',{staticClass:\"flex md12\"},[_c('vuestic-collapse-nalaz',{attrs:{\"final\":_vm.verificiran,\"final_pdf\":_vm.final_pdf,\"samples\":_vm.samples,\"pdf\":_vm.link,\"pacijent\":_vm.ime + ' ' + _vm.prezime}},[_c('span',{attrs:{\"slot\":\"header\"},slot:\"header\"},[_vm._v(\"Nalaz\")]),_vm._v(\" \"),_c('div',{attrs:{\"slot\":\"body\"},slot:\"body\"},[_c('div',{staticClass:\"va-row\"})])])],1)]):_vm._e(),_vm._v(\" \"),_c('div',[_c('hr')]),_vm._v(\" \"),_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-3\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-6\"},[_c('div',{staticClass:\"btn-container\"},[_c('button',{staticClass:\"btn btn-secondary btn-sm wizard-back pull-left\",on:{\"click\":function($event){$event.preventDefault();_vm.Povratak()}}},[_c('span',{staticClass:\"fa fa-backward\"}),_vm._v(\"\\n                \"+_vm._s(' POVRATAK')+\"\\n              \")]),_vm._v(\" \"),(_vm.partials_condition && !_vm.verificiran)?_c('button',{staticClass:\"btn btn-secondary-warning btn-sm wizard-back pull-right\",staticStyle:{\"text-transform\":\"none\",\"color\":\"#e34a4a\"},on:{\"click\":function($event){$event.preventDefault();_vm.Partials()}}},[_c('span',{staticClass:\"fa fa-file-pdf-o\",staticStyle:{\"color\":\"#e34a4a\"}}),_vm._v(\"\\n                \"+_vm._s(' Djelimični nalaz')+\"\\n              \")]):_vm._e()])])])],1),_vm._v(\" \"),_c('vuestic-modal-multi',{ref:\"largeModalMulti\",attrs:{\"show\":_vm.show,\"sample\":_vm.sample,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(_vm._s(_vm.naslov))]),_vm._v(\" \"),_c('div',{staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped first-td-padding\"},[_c('thead',[_c('tr',{attrs:{\"align\":\"middle\"}},[_c('td',{attrs:{\"width\":\"10%\"}}),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('ANALIT'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"30%\"}},[_vm._v(_vm._s('REZULTAT'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"10%\"}},[_vm._v(_vm._s('JEDINICA'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('REFERENCE'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"10%\"}})])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.analiti),function(test){return _c('tr',{key:test.labID,class:{\n                    'table-danger': _vm.Interpretacija(test.opis, test.rezultat, test.jedinica, test.refd, test.refg, _vm.$store.state.site, test.interp, test.extend, _vm.spec)[5] === 'Red' && !test.rezultat_multiple.length, \n                    'table-success': _vm.Interpretacija(test.opis, test.rezultat, test.jedinica, test.refd, test.refg, _vm.$store.state.site, test.interp, test.extend, _vm.spec)[5] === 'Green' && !test.rezultat_multiple.length, \n                    'table-warning': _vm.Interpretacija(test.opis, test.rezultat, test.jedinica, test.refd, test.refg, _vm.$store.state.site, test.interp, test.extend, _vm.spec)[5] === 'Yellow' && !test.rezultat_multiple.length                                  \n                  },attrs:{\"align\":\"middle\"}},[(test.flag != '')?_c('td',[_vm._v(_vm._s(test.flag))]):_vm._e(),_vm._v(\" \"),(test.flag === '')?_c('td',[_vm._v(\" \")]):_vm._e(),_vm._v(\" \"),_c('td',{attrs:{\"title\":test.opis}},[_vm._v(_vm._s(test.naziv))]),_vm._v(\" \"),_c('td',{attrs:{\"id\":test.analit}},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.edit == false),expression:\"test.edit == false\"}]},[_c('label',[_c('strong',[_vm._v(_vm._s(test.rezultat))])])]),_vm._v(\" \"),(test.select_options != undefined && (test.kod === 's03' || test.kod === 's04' || test.kod === 's08' || test.kod === 's09'))?_c('select',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.edit == true),expression:\"test.edit == true\"},{name:\"model\",rawName:\"v-model\",value:(test.rezultat_multiple),expression:\"test.rezultat_multiple\"}],staticStyle:{\"min-width\":\"200px\"},attrs:{\"multiple\":\"\",\"size\":test.select_options.length},on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.$set(test, \"rezultat_multiple\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},_vm._l((test.select_options),function(option){return _c('option',{key:option},[_vm._v(_vm._s(option))])})):_vm._e(),_vm._v(\" \"),(test.select_options != undefined && (test.kod != 's03' && test.kod != 's04' && test.kod != 's08' && test.kod != 's09'))?_c('select',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.edit == true),expression:\"test.edit == true\"},{name:\"model\",rawName:\"v-model\",value:(test.rezultat),expression:\"test.rezultat\"}],staticStyle:{\"width\":\"200px\"},on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.$set(test, \"rezultat\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},_vm._l((test.select_options),function(option){return _c('option',{key:option},[_vm._v(_vm._s(option))])})):_vm._e(),_vm._v(\" \"),(test.select_options === undefined)?_c('input',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.edit == true),expression:\"test.edit == true\"},{name:\"model\",rawName:\"v-model\",value:(test.rezultat),expression:\"test.rezultat\"}],staticStyle:{\"width\":\"200px\"},domProps:{\"value\":(test.rezultat)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(test, \"rezultat\", $event.target.value)}}}):_vm._e()]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(_vm.Interpretacija(test.opis, test.rezultat, test.jedinica, test.refd, test.refg, _vm.$store.state.site, test.interp, test.extend, _vm.spec)[3]))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(_vm.Interpretacija(test.opis, test.rezultat, test.jedinica, test.refd, test.refg, _vm.$store.state.site, test.interp, test.extend, _vm.spec)[4]))]),_vm._v(\" \"),_c('td',[_c('i',{class:{'fa fa-exclamation-triangle icon-right input-icon error-icon' : _vm.Interpretacija(test.opis, test.rezultat, test.jedinica, test.refd, test.refg, _vm.$store.state.site, test.interp, test.extend, _vm.spec)[5] === 'Red' && !test.rezultat_multiple.length},on:{\"click\":function($event){$event.preventDefault();_vm.ExclamationMulti(test)}}}),_vm._v(\" \"),_c('i',{class:{'fa fa-check success-icon icon-right input-icon' : _vm.Interpretacija(test.opis, test.rezultat, test.jedinica, test.refd, test.refg, _vm.$store.state.site, test.interp, test.extend, _vm.spec)[5] === 'Green' && !test.rezultat_multiple.length}})])])}))])])]),_vm._v(\" \"),_c('vuestic-modal-micro-reset',{ref:\"staticModalResetSample\",attrs:{\"show\":_vm.show,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',{staticStyle:{\"color\":\"#acb5be\"}},[_vm._v(_vm._s('Brisanje rezultata: '))]),_vm._v(\" \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(_vm.CurrentTest))])]),_vm._v(\" \"),_c('div',[_c('h5',[_vm._v(_vm._s('Jeste li sigurni da želite obrisati rezultat?'))])])]),_vm._v(\" \"),_c('vuestic-modal-micro-bactery',{ref:\"staticModalMicroBacterySelect\",attrs:{\"show\":_vm.show,\"large\":true,\"sample\":_vm.sample,\"select\":true,\"update\":!_vm.ShowAntibiotics && !_vm.ShowBacteries && _vm.MicrobiologyScenario === 'MAIBPoR',\"povratak\":_vm.ShowAntibiotics || _vm.ShowBacteries,\"empty\":_vm.TemporaryAntibiotics.length > 0 || _vm.TemporaryBacteriesAdd.length > 0,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[(!_vm.ShowAntibiotics && !_vm.ShowBacteries)?_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',{staticStyle:{\"color\":\"#acb5be\"}},[_vm._v(_vm._s('Rezultat analize: '))]),_vm._v(\" \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(_vm.CurrentTest))])]):_vm._e(),_vm._v(\" \"),(_vm.ShowAntibiotics && !_vm.ShowBacteries)?_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',{staticStyle:{\"color\":\"#acb5be\"}},[_vm._v(_vm._s('Antibiotici | '))]),_vm._v(\" \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"Izbornik\"))])]):_vm._e(),_vm._v(\" \"),(!_vm.ShowAntibiotics && _vm.ShowBacteries)?_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',{staticStyle:{\"color\":\"#acb5be\"}},[_vm._v(_vm._s('Bakterije | '))]),_vm._v(\" \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"Izbornik\"))])]):_vm._e(),_vm._v(\" \"),_c('div',[(_vm.show_table)?_c('div',{staticClass:\"row\"},[(_vm.MicrobiologyScenario === 'MAIBPoR' && _vm.ShowBacteries && !_vm.ShowAntibiotics)?_c('div',{staticClass:\"col-md-1\"}):_vm._e(),_vm._v(\" \"),(_vm.MicrobiologyScenario === 'MAIBPoR' && _vm.ShowBacteries && !_vm.ShowAntibiotics)?_c('div',{staticClass:\"col-md-10\"},[(_vm.TemporaryBacteries.length)?_c('div',{staticClass:\"col-md-12\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-4\"},_vm._l((_vm.filteredBacteries(1, 3)),function(bactery){return _c('div',{key:bactery._id,staticClass:\"form-check abc-checkbox abc-checkbox-primary\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(bactery.chosen),expression:\"bactery.chosen\"}],staticClass:\"form-check-input\",attrs:{\"id\":bactery._id,\"type\":\"checkbox\",\"disabled\":bactery.disabled},domProps:{\"checked\":Array.isArray(bactery.chosen)?_vm._i(bactery.chosen,null)>-1:(bactery.chosen)},on:{\"click\":function($event){_vm.AddBacteries(bactery)},\"change\":function($event){var $$a=bactery.chosen,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(bactery.chosen=$$a.concat([$$v]))}else{$$i>-1&&(bactery.chosen=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.$set(bactery, \"chosen\", $$c)}}}}),_vm._v(\" \"),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":bactery._id}},[(!bactery.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(bactery.opis))]):_vm._e(),_vm._v(\" \"),(bactery.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#4ae387\"}},[_vm._v(_vm._s(bactery.opis))]):_vm._e()])])})),_vm._v(\" \"),_c('div',{staticClass:\"col-md-4\"},_vm._l((_vm.filteredBacteries(2, 3)),function(bactery){return _c('div',{key:bactery._id,staticClass:\"form-check abc-checkbox abc-checkbox-primary\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(bactery.chosen),expression:\"bactery.chosen\"}],staticClass:\"form-check-input\",attrs:{\"id\":bactery._id,\"type\":\"checkbox\",\"disabled\":bactery.disabled},domProps:{\"checked\":Array.isArray(bactery.chosen)?_vm._i(bactery.chosen,null)>-1:(bactery.chosen)},on:{\"click\":function($event){_vm.AddBacteries(bactery)},\"change\":function($event){var $$a=bactery.chosen,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(bactery.chosen=$$a.concat([$$v]))}else{$$i>-1&&(bactery.chosen=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.$set(bactery, \"chosen\", $$c)}}}}),_vm._v(\" \"),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":bactery._id}},[(!bactery.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(bactery.opis))]):_vm._e(),_vm._v(\" \"),(bactery.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#4ae387\"}},[_vm._v(_vm._s(bactery.opis))]):_vm._e()])])})),_vm._v(\" \"),_c('div',{staticClass:\"col-md-4\"},_vm._l((_vm.filteredBacteries(3, 3)),function(bactery){return _c('div',{key:bactery._id,staticClass:\"form-check abc-checkbox abc-checkbox-primary\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(bactery.chosen),expression:\"bactery.chosen\"}],staticClass:\"form-check-input\",attrs:{\"id\":bactery._id,\"type\":\"checkbox\",\"disabled\":bactery.disabled},domProps:{\"checked\":Array.isArray(bactery.chosen)?_vm._i(bactery.chosen,null)>-1:(bactery.chosen)},on:{\"click\":function($event){_vm.AddBacteries(bactery)},\"change\":function($event){var $$a=bactery.chosen,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(bactery.chosen=$$a.concat([$$v]))}else{$$i>-1&&(bactery.chosen=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.$set(bactery, \"chosen\", $$c)}}}}),_vm._v(\" \"),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":bactery._id}},[(!bactery.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(bactery.opis))]):_vm._e(),_vm._v(\" \"),(bactery.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#4ae387\"}},[_vm._v(_vm._s(bactery.opis))]):_vm._e()])])}))])]):_vm._e()]):_vm._e(),_vm._v(\" \"),(_vm.MicrobiologyScenario === 'MAIBPoR' && _vm.ShowAntibiotics && !_vm.ShowBacteries)?_c('div',{staticClass:\"col-md-1\"}):_vm._e(),_vm._v(\" \"),(_vm.MicrobiologyScenario === 'MAIBPoR' && _vm.ShowAntibiotics && !_vm.ShowBacteries)?_c('div',{staticClass:\"col-md-10\"},[(_vm.Antibiotics.length)?_c('div',{staticClass:\"col-md-12\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-4\"},_vm._l((_vm.filteredAntibiotics(1, 3)),function(antibiotik){return _c('div',{key:antibiotik._id,staticClass:\"form-check abc-checkbox abc-checkbox-primary\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(antibiotik.chosen),expression:\"antibiotik.chosen\"}],staticClass:\"form-check-input\",attrs:{\"id\":antibiotik._id,\"type\":\"checkbox\",\"disabled\":antibiotik.disabled},domProps:{\"checked\":Array.isArray(antibiotik.chosen)?_vm._i(antibiotik.chosen,null)>-1:(antibiotik.chosen)},on:{\"click\":function($event){_vm.AddAntibiotics(antibiotik)},\"change\":function($event){var $$a=antibiotik.chosen,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(antibiotik.chosen=$$a.concat([$$v]))}else{$$i>-1&&(antibiotik.chosen=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.$set(antibiotik, \"chosen\", $$c)}}}}),_vm._v(\" \"),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":antibiotik._id}},[(!antibiotik.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(antibiotik.opis))]):_vm._e(),_vm._v(\" \"),(antibiotik.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#4ae387\"}},[_vm._v(_vm._s(antibiotik.opis))]):_vm._e()])])})),_vm._v(\" \"),_c('div',{staticClass:\"col-md-4\"},_vm._l((_vm.filteredAntibiotics(2, 3)),function(antibiotik){return _c('div',{key:antibiotik._id,staticClass:\"form-check abc-checkbox abc-checkbox-primary\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(antibiotik.chosen),expression:\"antibiotik.chosen\"}],staticClass:\"form-check-input\",attrs:{\"id\":antibiotik._id,\"type\":\"checkbox\",\"disabled\":antibiotik.disabled},domProps:{\"checked\":Array.isArray(antibiotik.chosen)?_vm._i(antibiotik.chosen,null)>-1:(antibiotik.chosen)},on:{\"click\":function($event){_vm.AddAntibiotics(antibiotik)},\"change\":function($event){var $$a=antibiotik.chosen,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(antibiotik.chosen=$$a.concat([$$v]))}else{$$i>-1&&(antibiotik.chosen=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.$set(antibiotik, \"chosen\", $$c)}}}}),_vm._v(\" \"),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":antibiotik._id}},[(!antibiotik.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(antibiotik.opis))]):_vm._e(),_vm._v(\" \"),(antibiotik.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#4ae387\"}},[_vm._v(_vm._s(antibiotik.opis))]):_vm._e()])])})),_vm._v(\" \"),_c('div',{staticClass:\"col-md-4\"},_vm._l((_vm.filteredAntibiotics(3, 3)),function(antibiotik){return _c('div',{key:antibiotik._id,staticClass:\"form-check abc-checkbox abc-checkbox-primary\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(antibiotik.chosen),expression:\"antibiotik.chosen\"}],staticClass:\"form-check-input\",attrs:{\"id\":antibiotik._id,\"type\":\"checkbox\",\"disabled\":antibiotik.disabled},domProps:{\"checked\":Array.isArray(antibiotik.chosen)?_vm._i(antibiotik.chosen,null)>-1:(antibiotik.chosen)},on:{\"click\":function($event){_vm.AddAntibiotics(antibiotik)},\"change\":function($event){var $$a=antibiotik.chosen,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(antibiotik.chosen=$$a.concat([$$v]))}else{$$i>-1&&(antibiotik.chosen=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.$set(antibiotik, \"chosen\", $$c)}}}}),_vm._v(\" \"),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":antibiotik._id}},[(!antibiotik.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(antibiotik.opis))]):_vm._e(),_vm._v(\" \"),(antibiotik.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#4ae387\"}},[_vm._v(_vm._s(antibiotik.opis))]):_vm._e()])])}))])]):_vm._e()]):_vm._e(),_vm._v(\" \"),(_vm.MicrobiologyScenario === 'MAIBPoR' && !_vm.ShowAntibiotics && !_vm.ShowBacteries)?_c('div',{staticClass:\"col-md-1\"}):_vm._e(),_vm._v(\" \"),(_vm.MicrobiologyScenario === 'MAIBPoR' && !_vm.ShowAntibiotics && !_vm.ShowBacteries)?_c('div',{staticClass:\"col-md-10\"},[(_vm.SelectedBacteries.length)?_c('vuestic-tabs-bactery',{ref:\"tabs\",attrs:{\"names\":_vm.BacteryTabs,\"tab\":_vm.CurrentTab,\"id\":_vm.CurrentTab,\"prikazi\":_vm.sample.status != 'VERIFICIRAN' && _vm.sample.status != 'ODOBREN'}},_vm._l((_vm.SelectedBacteries),function(test){return _c('div',{key:test._id,attrs:{\"slot\":_vm.CurrentTab},slot:_vm.CurrentTab},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.opis === _vm.CurrentTab),expression:\"test.opis === CurrentTab\"}],staticClass:\"row\"},[_c('div',{staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped first-td-padding\"},[_c('thead',[_c('tr',{attrs:{\"align\":\"left\"}},[_c('td',{staticStyle:{\"text-transform\":\"none\"},attrs:{\"width\":\"30%\"}},[_vm._v(_vm._s(test.antibiogram.opis))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"10%\"}},[_vm._v(_vm._s(''))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(''))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(''))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(''))])])]),_vm._v(\" \"),_c('tbody',_vm._l((test.antibiogram.antibiotici),function(abtk){return _c('tr',{key:abtk._id,class:{'table-danger': false, 'table-success': false,'table-warning': false},attrs:{\"align\":\"left\"}},[_c('td',{attrs:{\"title\":abtk.opis}},[_vm._v(_vm._s(abtk.opis))]),_vm._v(\" \"),_c('td',[_c('bactery-radio-button',{attrs:{\"disabled\":_vm.sample.status === 'ODOBREN' || _vm.sample.status === 'VERIFICIRAN',\"label\":'',\"value\":'',\"id\":'' + test._id + abtk._id,\"name\":test._id + abtk._id},model:{value:(abtk.rezultat),callback:function ($$v) {_vm.$set(abtk, \"rezultat\", $$v)},expression:\"abtk.rezultat\"}})],1),_vm._v(\" \"),_c('td',[_c('postavke-radio-button',{attrs:{\"disabled\":_vm.sample.status === 'ODOBREN' || _vm.sample.status === 'VERIFICIRAN',\"label\":'Senzitivan',\"value\":'S',\"id\":'S' + test._id + abtk._id,\"name\":test._id + abtk._id},model:{value:(abtk.rezultat),callback:function ($$v) {_vm.$set(abtk, \"rezultat\", $$v)},expression:\"abtk.rezultat\"}})],1),_vm._v(\" \"),_c('td',[_c('postavke-radio-button',{attrs:{\"disabled\":_vm.sample.status === 'ODOBREN' || _vm.sample.status === 'VERIFICIRAN',\"label\":'Intermedijaran',\"value\":'I',\"id\":'I' + test._id + abtk._id,\"name\":test._id + abtk._id},model:{value:(abtk.rezultat),callback:function ($$v) {_vm.$set(abtk, \"rezultat\", $$v)},expression:\"abtk.rezultat\"}})],1),_vm._v(\" \"),_c('td',[_c('postavke-radio-button',{attrs:{\"disabled\":_vm.sample.status === 'ODOBREN' || _vm.sample.status === 'VERIFICIRAN',\"label\":'Rezistentan',\"value\":'R',\"id\":'R' + test._id + abtk._id,\"name\":test._id + abtk._id},model:{value:(abtk.rezultat),callback:function ($$v) {_vm.$set(abtk, \"rezultat\", $$v)},expression:\"abtk.rezultat\"}})],1)])}))])])])])})):_vm._e()],1):_vm._e(),_vm._v(\" \"),(_vm.MicrobiologyScenario === 'MANBNeR' || _vm.MicrobiologyScenario === 'MANBPoR' || _vm.MicrobiologyScenario === 'MAIBNeR')?_c('div',{staticClass:\"col-md-12\"},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.show_table),expression:\"show_table\"}],staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped first-td-padding\"},[_c('thead',[_c('tr',{attrs:{\"align\":\"left\"}},[_c('td',[_vm._v(_vm._s('REZULTAT'))])])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.rezultati),function(test,index){return _c('tr',{directives:[{name:\"show\",rawName:\"v-show\",value:(index < 1),expression:\"index < 1\"}],key:test.labassay_id,class:{\n                          'table-danger':  (test.rezultat_m.length && test.rezultat_m[0].pozitivan), \n                          'table-success':  (test.rezultat_m.length && test.rezultat_m[0].negativan),\n                          'table-warning': false\n                        },attrs:{\"align\":\"left\"}},[(_vm.sample.status != 'ODOBREN' &&  _vm.sample.status != 'VERIFICIRAN')?_c('td',[_c('div',{staticClass:\"form-group\"},[_c('div',{staticClass:\"input-group\"},[_c('textarea',{directives:[{name:\"model\",rawName:\"v-model\",value:(test.rezultat),expression:\"test.rezultat\"}],attrs:{\"type\":\"text\",\"id\":\"simple-textarea\",\"required\":\"\"},domProps:{\"value\":(test.rezultat)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(test, \"rezultat\", $event.target.value)}}}),_vm._v(\" \"),_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"simple-textarea\"}},[_vm._v(_vm._s(''))]),_vm._v(\" \"),_c('i',{staticClass:\"bar\"})])])]):_vm._e(),_vm._v(\" \"),(_vm.sample.status === 'ODOBREN' ||  _vm.sample.status === 'VERIFICIRAN')?_c('td',[_c('div',{staticClass:\"form-group\"},[_c('div',{staticClass:\"input-group\"},[_c('input',{attrs:{\"id\":\"input-icon-left\",\"title\":\" \",\"name\":\"input-icon-left\",\"disabled\":\"\"}}),_vm._v(\" \"),(test.rezultat.length)?_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"input-icon-left\"}},[_vm._v(_vm._s(test.rezultat))]):_vm._e(),_vm._v(\" \"),(!test.rezultat.length)?_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"input-icon-left\"}},[_vm._v(_vm._s(\"Nema podataka.\"))]):_vm._e(),_vm._v(\" \"),_c('i',{staticClass:\"bar\"})])])]):_vm._e()])}))])])]):_vm._e()]):_vm._e()])]),_vm._v(\" \"),_c('vuestic-modal-micro-bactery',{ref:\"staticModalMicroBactery\",attrs:{\"show\":_vm.show,\"large\":true,\"sample\":_vm.sample,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',{staticStyle:{\"color\":\"#acb5be\"}},[_vm._v(_vm._s('Rezultat analize: '))]),_vm._v(\" \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(_vm.CurrentTest))])]),_vm._v(\" \"),_c('div',[(_vm.show_table)?_c('div',{staticClass:\"row\"},[(true)?_c('div',{staticClass:\"col-md-12\"},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.show_table),expression:\"show_table\"}],staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped first-td-padding\"},[_c('thead',[_c('tr',{attrs:{\"align\":\"left\"}},[_c('td',[_vm._v(_vm._s('REZULTAT'))])])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.rezultati),function(test,index){return _c('tr',{directives:[{name:\"show\",rawName:\"v-show\",value:(index < 1),expression:\"index < 1\"}],key:test.labassay_id,class:{\n                          'table-danger':  (test.rezultat_m.length && test.rezultat_m[0].pozitivan), \n                          'table-success':  (test.rezultat_m.length && test.rezultat_m[0].negativan),\n                          'table-warning': false\n                        },attrs:{\"align\":\"left\"}},[(_vm.sample.status != 'ODOBREN' &&  _vm.sample.status != 'VERIFICIRAN')?_c('td',[_c('div',{staticClass:\"form-group\"},[_c('div',{staticClass:\"input-group\"},[_c('textarea',{directives:[{name:\"model\",rawName:\"v-model\",value:(test.rezultat),expression:\"test.rezultat\"}],attrs:{\"type\":\"text\",\"id\":\"simple-textarea\",\"required\":\"\"},domProps:{\"value\":(test.rezultat)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(test, \"rezultat\", $event.target.value)}}}),_vm._v(\" \"),_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"simple-textarea\"}},[_vm._v(_vm._s(''))]),_vm._v(\" \"),_c('i',{staticClass:\"bar\"})])])]):_vm._e(),_vm._v(\" \"),(_vm.sample.status === 'ODOBREN' ||  _vm.sample.status === 'VERIFICIRAN')?_c('td',[_c('div',{staticClass:\"form-group\"},[_c('div',{staticClass:\"input-group\"},[_c('input',{attrs:{\"id\":\"input-icon-left\",\"title\":\" \",\"name\":\"input-icon-left\",\"disabled\":\"\"}}),_vm._v(\" \"),(test.rezultat.length)?_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"input-icon-left\"}},[_vm._v(_vm._s(test.rezultat))]):_vm._e(),_vm._v(\" \"),(!test.rezultat.length)?_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"input-icon-left\"}},[_vm._v(_vm._s(\"Nema podataka.\"))]):_vm._e(),_vm._v(\" \"),_c('i',{staticClass:\"bar\"})])])]):_vm._e()])}))])])]):_vm._e()]):_vm._e()])]),_vm._v(\" \"),_c('vuestic-modal-micro-result',{ref:\"staticModalSelectResult\",attrs:{\"show\":_vm.show,\"sample\":_vm.sample,\"large\":_vm.ShowAllBacteries,\"neg\":_vm.ModalNegative,\"pos\":_vm.ModalPositive,\"selected\":_vm.ModalPositiveCondition,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',{staticStyle:{\"color\":\"#acb5be\"}},[_vm._v(_vm._s(_vm.MicrobiologyModalHeader)+\" |\")]),_vm._v(\" \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"Izbornik\"))])]),_vm._v(\" \"),(!_vm.ModalNegative && !_vm.ModalPositive)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-6\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-3\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-6\"},[_c('button',{staticClass:\"btn btn-secondary btn-sm wizard-back pull-left\",staticStyle:{\"text-transform\":\"none\",\"border\":\"0px\"},on:{\"click\":function($event){_vm.ModalNegative = true; _vm.ModalPositive = false;}}},[_vm._v(_vm._s('Negativan'))])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-3\"})])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-6\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-2\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-6\"},[_c('button',{staticClass:\"btn btn-secondary-danger btn-sm wizard-next pull-right\",staticStyle:{\"text-transform\":\"none\",\"border\":\"0px\"},on:{\"click\":function($event){_vm.ModalPositive = true; _vm.ModalNegative = false;}}},[_vm._v(_vm._s('Pozitivan'))])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-4\"})])])]):_vm._e(),_vm._v(\" \"),(_vm.ModalNegative && !_vm.ModalPositive)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-1\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-11\"},_vm._l((_vm.MicrobiologyResult.NegativeDescriptions),function(desc,index){return _c('vuestic-radio-button',{key:index,attrs:{\"label\":_vm.MicrobiologyResult.NegativeDescriptions[index],\"id\":_vm.MicrobiologyResult.NegativeDescriptions[index],\"value\":_vm.MicrobiologyResult.NegativeDescriptions[index],\"name\":_vm.MicrobiologyResult.NegativeDescriptions[index],\"disabled\":false},model:{value:(_vm.NegativeResultSelection),callback:function ($$v) {_vm.NegativeResultSelection=$$v},expression:\"NegativeResultSelection\"}})}))]):_vm._e(),_vm._v(\" \"),(!_vm.ModalNegative && _vm.ModalPositive && !_vm.MicrobiologyResult.DefaultBacteries.length)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-1\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-11\"},_vm._l((_vm.MicrobiologyResult.PositiveDescriptions),function(desc,index){return _c('vuestic-radio-button',{key:index,attrs:{\"label\":_vm.MicrobiologyResult.PositiveDescriptions[index],\"id\":_vm.MicrobiologyResult.PositiveDescriptions[index],\"value\":_vm.MicrobiologyResult.PositiveDescriptions[index],\"name\":_vm.MicrobiologyResult.PositiveDescriptions[index],\"disabled\":false},model:{value:(_vm.PositiveResultSelection),callback:function ($$v) {_vm.PositiveResultSelection=$$v},expression:\"PositiveResultSelection\"}})}))]):_vm._e(),_vm._v(\" \"),(!_vm.ModalNegative && _vm.ModalPositive && _vm.MicrobiologyResult.DefaultBacteries.length)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-6\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-2\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-10\"},_vm._l((_vm.MicrobiologyResult.DefaultBacteries),function(bakt,index){return _c('div',{key:index,staticClass:\"form-check abc-checkbox abc-checkbox-primary\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(bakt.chosen),expression:\"bakt.chosen\"}],staticClass:\"form-check-input\",attrs:{\"id\":bakt._id,\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(bakt.chosen)?_vm._i(bakt.chosen,null)>-1:(bakt.chosen)},on:{\"click\":function($event){_vm.SelectBactery(bakt, index)},\"change\":function($event){var $$a=bakt.chosen,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(bakt.chosen=$$a.concat([$$v]))}else{$$i>-1&&(bakt.chosen=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.$set(bakt, \"chosen\", $$c)}}}}),_vm._v(\" \"),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":bakt._id}},[_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(bakt.opis))])])])}))])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-6\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-1\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-6\"},[(!_vm.ShowAllBacteries)?_c('a',{staticStyle:{\"font-size\":\"16px\",\"color\":\"#4ae387\"},attrs:{\"href\":\"#\"},on:{\"click\":function($event){$event.preventDefault();_vm.ShowAllBacteries = true}}},[_vm._v(\"Prikaži više\")]):_vm._e()]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-5\"})]),_vm._v(\" \"),(_vm.ShowAllBacteries)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-1\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-10\"},_vm._l((_vm.MicrobiologyResult.RemainingBacteries),function(bakt,index){return _c('div',{key:index,staticClass:\"form-check abc-checkbox abc-checkbox-primary\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(bakt.chosen),expression:\"bakt.chosen\"}],staticClass:\"form-check-input\",attrs:{\"id\":bakt._id,\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(bakt.chosen)?_vm._i(bakt.chosen,null)>-1:(bakt.chosen)},on:{\"click\":function($event){_vm.SelectBactery(bakt, index)},\"change\":function($event){var $$a=bakt.chosen,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(bakt.chosen=$$a.concat([$$v]))}else{$$i>-1&&(bakt.chosen=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.$set(bakt, \"chosen\", $$c)}}}}),_vm._v(\" \"),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":bakt._id}},[_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(bakt.opis))])])])}))]):_vm._e()])]):_vm._e()]),_vm._v(\" \"),_c('vuestic-modal-delete',{ref:\"staticModalDeleteSample\",attrs:{\"show\":_vm.show,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',{staticStyle:{\"color\":\"#acb5be\"}},[_vm._v(_vm._s('Brisanje uzorka: '))]),_vm._v(\" \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(_vm.sid))])]),_vm._v(\" \"),_c('div',[_c('h5',[_vm._v(_vm._s('Jeste li sigurni da želite obrisati uzorak?'))])])]),_vm._v(\" \"),_c('vuestic-modal-comment',{ref:\"staticModalComment\",attrs:{\"show\":_vm.show,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(_vm._s('Unos komentara za uzorak: ' + _vm.sid))]),_vm._v(\" \"),_c('div',[_c('h5')])]),_vm._v(\" \"),_c('vuestic-modal-edit',{ref:\"staticModalEditSample\",attrs:{\"show\":_vm.show,\"sample\":_vm.sid,\"action\":\"Edit\",\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(_vm._s('Uređivanje uzorka: ' + _vm.sid))]),_vm._v(\" \"),_c('div',[_c('h5')])]),_vm._v(\" \"),_c('vuestic-modal-mail',{ref:\"staticModalSendMail\",attrs:{\"show\":_vm.show,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"\\n          \"+_vm._s('Slanje nalaza na adresu: ')+\"\\n          \"),_c('span',{staticStyle:{\"color\":\"#4ae387\"}},[_vm._v(_vm._s(_vm.email))])]),_vm._v(\" \"),_c('div',[_c('h5',[_vm._v(_vm._s('Jeste li sigurni da želite poslati nalaz?'))])])]),_vm._v(\" \"),_c('vuestic-modal-all-results',{ref:\"staticModalAllResults\",attrs:{\"show\":_vm.show,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"\\n          \"+_vm._s('Izbor rezultata: ')+\"\\n          \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(_vm.labassay))])]),_vm._v(\" \"),_c('div',[_c('div',{staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped first-td-padding\"},[_c('thead',[_c('tr',[_c('td',[_vm._v(\"analizator\")]),_vm._v(\" \"),_c('td',[_vm._v(\"vrijeme\")]),_vm._v(\" \"),_c('td',[_vm._v(\"rezultat\")]),_vm._v(\" \"),_c('td',[_vm._v(\"jedinica\")]),_vm._v(\" \"),_c('td',[_vm._v(\"reference\")]),_vm._v(\" \"),(_vm.sample_status != 'ODOBREN' &&  _vm.sample_status != 'VERIFICIRAN')?_c('td',[_vm._v(\"izbor\")]):_vm._e(),_vm._v(\" \"),_c('td',{attrs:{\"align\":\"middle\"}})])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.vise.rezultat),function(test){return _c('tr',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.rezultat_f != ''),expression:\"test.rezultat_f != ''\"}],key:test._id,class:{\n                    'table-danger': _vm.Interpretacija(_vm.vise.labassay.analit, test.rezultat_f, test.jedinice_f, _vm.vise.refd, _vm.vise.refg, _vm.$store.state.site, _vm.vise.interp, _vm.vise.extend, _vm.spec)[5] === 'Red' && !test.multidata, \n                    'table-success': _vm.Interpretacija(_vm.vise.labassay.analit, test.rezultat_f, test.jedinice_f, _vm.vise.refd, _vm.vise.refg, _vm.$store.state.site, _vm.vise.interp, _vm.vise.extend, _vm.spec)[5] === 'Green' && !test.multidata,\n                    'table-warning': _vm.Interpretacija(_vm.vise.labassay.analit, test.rezultat_f, test.jedinice_f, _vm.vise.refd, _vm.vise.refg, _vm.$store.state.site, _vm.vise.interp, _vm.vise.extend, _vm.spec)[5] === 'Yellow' && !test.multidata\n                  }},[_c('td',[_vm._v(_vm._s(test.anaassay.aparat.ime))]),_vm._v(\" \"),_c('td',[_vm._v(\"\\n                    \"+_vm._s(JSON.stringify(\n                    test.updated_at\n                    ).slice(9, 11) +\n                    \".\" +\n                    JSON.stringify(\n                    test.updated_at\n                    ).slice(6, 8) +\n                    \".\" +\n                    JSON.stringify(\n                    test.updated_at\n                    ).slice(1, 5) + ' | ')+\"\\n                    \"),_c('sub',[_vm._v(\"\\n                      \"+_vm._s(JSON.stringify(\n                      test.updated_at\n                      ).slice(12, 20))+\"\\n                    \")])]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(test.rezultat_f))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(test.jedinice_f))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(_vm.Interpretacija(_vm.vise.labassay.analit, test.rezultat_f, test.jedinice_f, _vm.vise.refd, _vm.vise.refg, _vm.$store.state.site, _vm.vise.interp, _vm.vise.extend, _vm.spec)[4]))]),_vm._v(\" \"),(_vm.sample_status != 'ODOBREN' &&  _vm.sample_status != 'VERIFICIRAN')?_c('td',[(!test.izabran)?_c('i',{staticClass:\"glyphicon glyphicon-unchecked\",staticStyle:{\"font-size\":\"18px\",\"color\":\"#e34a4a\"},on:{\"click\":function($event){$event.preventDefault();_vm.IzborTesta(_vm.vise, test)}}}):_vm._e(),_vm._v(\" \"),(test.izabran)?_c('i',{staticClass:\"glyphicon glyphicon-check\",staticStyle:{\"font-size\":\"18px\",\"color\":\"#4ae387\"}}):_vm._e()]):_vm._e(),_vm._v(\" \"),_c('td',[_c('i',{class:{'fa fa-exclamation-triangle icon-right input-icon error-icon' : _vm.Interpretacija(_vm.vise.labassay.analit, test.rezultat_f, test.jedinice_f, _vm.vise.refd, _vm.vise.refg, _vm.$store.state.site, _vm.vise.interp, _vm.vise.extend, _vm.spec)[5] === 'Red'}}),_vm._v(\" \"),_c('i',{class:{'fa fa-check success-icon icon-right input-icon' : _vm.Interpretacija(_vm.vise.labassay.analit, test.rezultat_f, test.jedinice_f, _vm.vise.refd, _vm.vise.refg, _vm.$store.state.site, _vm.vise.interp, _vm.vise.extend, _vm.spec)[5] === 'Green'}})])])}))])])])]),_vm._v(\" \"),_c('vuestic-modal-error',{ref:\"staticModalError\",attrs:{\"show\":_vm.show,\"cancelText\":\"ZATVORI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"\\n          \"+_vm._s('')+\"\\n          \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s('404: Not Found'))])]),_vm._v(\" \"),_c('div',[_c('h5',[_vm._v(_vm._s('Greška prilikom čitanja nalaza.'))])])]),_vm._v(\" \"),_c('vuestic-modal-error',{ref:\"staticModalVerifyPrivilege\",attrs:{\"show\":_vm.show,\"cancelText\":\"ZATVORI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"\\n          \"+_vm._s('')+\"\\n          \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s('401: Not Authorized'))])]),_vm._v(\" \"),_c('div',[_c('h5',[_vm._v(_vm._s('Nemate odgovarajuće privilegije.'))])])]),_vm._v(\" \"),_c('vuestic-modal-exclamation',{ref:\"staticModalExclamation\",attrs:{\"show\":_vm.show,\"cancelText\":\"ZATVORI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"\\n          \"+_vm._s('')+\"\\n          \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(_vm.warning.analiza))])]),_vm._v(\" \"),_c('div',[_c('h5',[_vm._v(_vm._s(_vm.warning.control))]),_vm._v(\" \"),_c('p',[_vm._v(_vm._s(_vm.warning.text))])])]),_vm._v(\" \"),_c('vuestic-modal-reference',{ref:\"staticModalReference\",attrs:{\"show\":_vm.show,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"\\n          \"+_vm._s('Referentne vrijednosti: ')+\"\\n          \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(_vm.reference.naziv)+\" (\"+_vm._s(_vm.reference.opis)+\")\")])]),_vm._v(\" \"),_c('div',[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-1\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-2\"},[_c('div',{staticClass:\"form-group\"},[_c('div',{staticClass:\"input-group\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.reference.dref),expression:\"reference.dref\"}],staticStyle:{\"color\":\"#e34a4a\"},attrs:{\"id\":\"input-icon-left\",\"title\":\" \",\"name\":\"input-icon-left\",\"required\":\"\"},domProps:{\"value\":(_vm.reference.dref)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.reference, \"dref\", $event.target.value)}}}),_vm._v(\" \"),_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"input-icon-left\"}},[_vm._v(_vm._s('Donja'))]),_vm._v(\" \"),_c('i',{staticClass:\"bar\"})])])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-1\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-2\"},[_c('div',{staticClass:\"form-group\"},[_c('div',{staticClass:\"input-group\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.reference.gref),expression:\"reference.gref\"}],staticStyle:{\"color\":\"#e34a4a\"},attrs:{\"id\":\"input-icon-left\",\"title\":\" \",\"name\":\"input-icon-left\",\"required\":\"\"},domProps:{\"value\":(_vm.reference.gref)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.reference, \"gref\", $event.target.value)}}}),_vm._v(\" \"),_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"input-icon-left\"}},[_vm._v(_vm._s('Gornja'))]),_vm._v(\" \"),_c('i',{staticClass:\"bar\"})])])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-1\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-4\"},[(_vm.$store.state.access.level < 1)?_c('vuestic-simple-select',{staticStyle:{\"font-size\":\"14px\"},attrs:{\"label\":\"Interpretacija\",\"title\":\" \",\"options\":_vm.interpretacije},model:{value:(_vm.reference.interp),callback:function ($$v) {_vm.$set(_vm.reference, \"interp\", $$v)},expression:\"reference.interp\"}}):_vm._e(),_vm._v(\" \"),(_vm.$store.state.access.level > 0)?_c('div',{staticClass:\"form-group\"},[_c('div',{staticClass:\"input-group\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.reference.interp),expression:\"reference.interp\"}],attrs:{\"id\":\"input-icon-left\",\"title\":\" \",\"name\":\"input-icon-left\",\"required\":\"\",\"disabled\":true},domProps:{\"value\":(_vm.reference.interp)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.reference, \"interp\", $event.target.value)}}}),_vm._v(\" \"),_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"input-icon-left\"}},[_vm._v(_vm._s(_vm.reference.interp))]),_vm._v(\" \"),_c('i',{staticClass:\"bar\"})])]):_vm._e()],1),_vm._v(\" \"),_c('div',{staticClass:\"col-md-1\"})]),_vm._v(\" \"),_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-1\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-2\"},[_c('vuestic-simple-select',{staticStyle:{\"font-size\":\"14px\"},attrs:{\"label\":\"Jedinica\",\"title\":\" \",\"options\":_vm.jedinice},model:{value:(_vm.reference.jedinica),callback:function ($$v) {_vm.$set(_vm.reference, \"jedinica\", $$v)},expression:\"reference.jedinica\"}})],1),_vm._v(\" \"),_c('div',{staticClass:\"col-md-1\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-7\"},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.reference.interp != 'spec'),expression:\"reference.interp != 'spec'\"}],staticClass:\"form-group\"},[_c('div',{staticClass:\"input-group\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.reference.extend),expression:\"reference.extend\"}],staticStyle:{\"color\":\"#e34a4a\"},attrs:{\"id\":\"input-icon-left\",\"title\":\" \",\"name\":\"input-icon-left\",\"required\":\"\"},domProps:{\"value\":(_vm.reference.extend)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.reference, \"extend\", $event.target.value)}}}),_vm._v(\" \"),_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"input-icon-left\"}},[_vm._v(_vm._s('Proširena referentna vrijednost'))]),_vm._v(\" \"),_c('i',{staticClass:\"bar\"})])]),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.reference.interp === 'spec'),expression:\"reference.interp === 'spec'\"}],staticClass:\"form-group\"},[_c('div',{staticClass:\"input-group\"},[_c('textarea',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.reference.extend),expression:\"reference.extend\"}],staticStyle:{\"color\":\"#e34a4a\"},attrs:{\"type\":\"text\",\"id\":\"simple-textarea\",\"required\":\"\"},domProps:{\"value\":(_vm.reference.extend)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.reference, \"extend\", $event.target.value)}}}),_vm._v(\" \"),_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"simple-textarea\"}},[_vm._v(_vm._s('Specifična interpretacija rezultata'))]),_vm._v(\" \"),_c('i',{staticClass:\"bar\"})])])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-1\"})])])]),_vm._v(\" \"),_c('vuestic-modal-find',{ref:\"staticModalFind\",attrs:{\"show\":_vm.show,\"data_pid\":Number(_vm.data_pid),\"data_length\":Number(_vm.data_length),\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"\\n          \"+_vm._s('')+\"\\n          \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s('Redni broj pacijenta'))])]),_vm._v(\" \"),_c('div',[_c('h5')])]),_vm._v(\" \"),_c('vuestic-modal-aparati',{ref:\"staticModalAparati\",attrs:{\"show\":_vm.show,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"\\n          \"+_vm._s('Izbor analizatora: ')+\"\\n          \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(this.analiza.ime + ' (' + this.analiza.analit + ')'))])]),_vm._v(\" \"),_c('div',[_c('vuestic-accordion-obrada',_vm._l((_vm.analysers),function(element){return _c('vuestic-collapse-aparati',{key:element._id,attrs:{\"analyser\":element}},[_c('span',{attrs:{\"slot\":\"header\"},slot:\"header\"},[_vm._v(_vm._s(element.ime + ', ' + element.site.naziv))]),_vm._v(\" \"),_c('div',{attrs:{\"slot\":\"body\"},slot:\"body\"},[_c('div',{staticClass:\"va-row\"})])])}))],1)]),_vm._v(\" \"),_c('vuestic-modal-results-multi',{ref:\"staticModalResultsMulti\",attrs:{\"show\":_vm.show,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"\\n          \"+_vm._s('Izbor rezultata: ')+\"\\n          \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(_vm.multi_test))])]),_vm._v(\" \"),_c('div')]),_vm._v(\" \"),_c('patient-evaluation-single',{ref:\"staticModalEvaluationSingle\",attrs:{\"show\":_vm.show,\"cancelText\":\"ZATVORI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',[_vm._v(_vm._s(_vm.ime + ' ' + _vm.prezime))])]),_vm._v(\" \"),(_vm.Procjena.length && !_vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',{staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped table-sm color-icon-label-table\"},[_c('thead',[_c('tr',{attrs:{\"align\":\"middle\"}},[_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('REZULTAT'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('JEDINICA'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('REFERENCE'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('DATUM'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"15%\"}},[_vm._v(_vm._s('VRIJEME'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"5%\",\"align\":\"middle\"}})])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.Procjena),function(element,index){return _c('tr',{key:index,class:{\n                          'table-danger': _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Red', \n                          'table-success': _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Green',\n                          'table-warning': _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Yellow'\n                        },attrs:{\"align\":\"middle\"}},[_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.rezultat))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.jedinica))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(_vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[4]))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.datum))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"15%\"}},[_vm._v(_vm._s(element.vrijeme))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"9%\",\"align\":\"middle\"}},[_c('i',{class:{'fa fa-exclamation-triangle icon-right input-icon error-icon' : _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Red'}}),_vm._v(\" \"),_c('i',{class:{'fa fa-check success-icon icon-right input-icon' : _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Green'}})])])}))]),_vm._v(\" \"),_c('div',{staticStyle:{\"text-align\":\"center\"}},[_c('span',{staticClass:\"circle badge-info\"}),_vm._v(\"\\n                \"+_vm._s(_vm.table_header)+\"\\n              \")])])])]):_vm._e(),_vm._v(\" \"),(_vm.showLineChart && _vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('line-chart',{attrs:{\"options\":_vm.optionsLineChart,\"data\":_vm.dataLineChart,\"type\":\"line\"}})],1)]):_vm._e(),_vm._v(\" \"),(!_vm.showLineChart && _vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',[_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"Nema podataka.\"))])])])]):_vm._e()]),_vm._v(\" \"),_c('patient-evaluation-single',{ref:\"staticModalLabAssayEvalSingle\",attrs:{\"show\":_vm.show,\"cancelText\":\"ZATVORI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',{staticStyle:{\"color\":\"#4ae387\"}},[_vm._v(_vm._s(_vm.analiza_eval.ime + ' (' + _vm.analiza_eval.analit + ')'))]),_vm._v(\" \"),_c('span',[_vm._v(_vm._s(\" - Rezultati analize u zadnjih 14 dana\"))])]),_vm._v(\" \"),(_vm.Procjena.length && !_vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',{staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped table-sm color-icon-label-table\"},[_c('thead',[_c('tr',{attrs:{\"align\":\"middle\"}},[_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('REZULTAT'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('JEDINICA'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('REFERENCE'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('DATUM'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"15%\"}},[_vm._v(_vm._s('VRIJEME'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"5%\",\"align\":\"middle\"}})])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.Procjena),function(element,index){return _c('tr',{key:index,class:{\n                      'table-danger': _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Red', \n                      'table-success': _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Green',\n                      'table-warning': _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Yellow'\n                    },attrs:{\"align\":\"middle\"}},[_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.rezultat))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.jedinica))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(_vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[4]))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.datum))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"15%\"}},[_vm._v(_vm._s(element.vrijeme))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"9%\",\"align\":\"middle\"}},[_c('i',{class:{'fa fa-exclamation-triangle icon-right input-icon error-icon' : _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Red'}}),_vm._v(\" \"),_c('i',{class:{'fa fa-check success-icon icon-right input-icon' : _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Green'}})])])}))]),_vm._v(\" \"),_c('div',{staticStyle:{\"text-align\":\"center\"}},[_c('span',{staticClass:\"circle badge-info\"}),_vm._v(\"\\n                \"+_vm._s(_vm.table_header)+\"\\n              \")])])])]):_vm._e(),_vm._v(\" \"),(_vm.showLineChart && _vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('line-chart',{attrs:{\"options\":_vm.optionsLineChart,\"data\":_vm.dataLineChart,\"type\":\"line\"}})],1)]):_vm._e(),_vm._v(\" \"),(!_vm.showLineChart && _vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',[_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"Nema podataka.\"))])])])]):_vm._e()]),_vm._v(\" \"),_c('patient-evaluation-multi',{ref:\"staticModalEvaluationMulti\",attrs:{\"show\":_vm.show,\"multiparam_izbor\":_vm.multiparam_izbor,\"multiparam_izbornik\":_vm.multiparam_izbornik,\"cancelText\":\"ZATVORI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',[_vm._v(_vm._s(_vm.ime + ' ' + _vm.prezime))])]),_vm._v(\" \"),(_vm.Procjena.length && !_vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',{staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped table-sm color-icon-label-table\"},[_c('thead',[_c('tr',{attrs:{\"align\":\"middle\"}},[_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('REZULTAT'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('JEDINICA'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('REFERENCE'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('DATUM'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"15%\"}},[_vm._v(_vm._s('VRIJEME'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"5%\",\"align\":\"middle\"}})])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.Procjena),function(element,index){return _c('tr',{key:index,class:{\n                      'table-danger': _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Red', \n                      'table-success': _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Green',\n                      'table-warning': _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Yellow'\n                    },attrs:{\"align\":\"middle\"}},[_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.rezultat))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.jedinica))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(_vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[4]))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.datum))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"15%\"}},[_vm._v(_vm._s(element.vrijeme))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"9%\",\"align\":\"middle\"}},[_c('i',{class:{'fa fa-exclamation-triangle icon-right input-icon error-icon' : _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Red'}}),_vm._v(\" \"),_c('i',{class:{'fa fa-check success-icon icon-right input-icon' : _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Green'}})])])}))]),_vm._v(\" \"),_c('div',{staticStyle:{\"text-align\":\"center\"}},[_c('span',{staticClass:\"circle badge-info\"}),_vm._v(\"\\n                \"+_vm._s(_vm.table_header)+\"\\n              \")])])])]):_vm._e(),_vm._v(\" \"),(!_vm.Procjena.length && !_vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',[_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"Nema podataka.\"))])])])]):_vm._e(),_vm._v(\" \"),(_vm.showLineChart && _vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('line-chart',{attrs:{\"options\":_vm.optionsLineChart,\"data\":_vm.dataLineChart,\"type\":\"line\"}})],1)]):_vm._e(),_vm._v(\" \"),(!_vm.showLineChart && _vm.graph)?_c('div',{staticClass:\"row\"},[(!_vm.showLineChart && !_vm.spinner)?_c('div',{staticClass:\"col-md-12\"},[_c('div',[_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"Nema podataka.\"))])])]):_vm._e(),_vm._v(\" \"),(!_vm.showLineChart && _vm.spinner)?_c('div',{staticClass:\"col-md-12\",staticStyle:{\"min-height\":\"400px\"}},[_c('div',{staticStyle:{\"display\":\"flex\",\"flex-direction\":\"row\",\"justify-content\":\"center\",\"align-items\":\"center\"}},[_c('div',{staticStyle:{\"float\":\"left\"}}),_vm._v(\" \"),_c('span',{staticStyle:{\"vertical-align\":\"middle\"}},[_c('atom-spinner',{staticStyle:{\"opacity\":\"0.25\"},attrs:{\"animation-duration\":1000,\"size\":300,\"color\":'#4ae387'}})],1)])]):_vm._e()]):_vm._e()]),_vm._v(\" \"),_c('patient-evaluation-multi',{ref:\"staticModalLabAssayEvalMulti\",attrs:{\"show\":_vm.show,\"multiparam_izbor\":_vm.multiparam_izbor,\"multiparam_izbornik\":_vm.multiparam_izbornik,\"cancelText\":\"ZATVORI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',{staticStyle:{\"color\":\"#4ae387\"}},[_vm._v(_vm._s(_vm.analiza_eval.ime + ' (' + _vm.analiza_eval.analit + ')'))]),_vm._v(\" \"),_c('span',[_vm._v(_vm._s(\" - Rezultati analize u zadnjih 14 dana\"))])]),_vm._v(\" \"),(_vm.Procjena.length && !_vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',{staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped table-sm color-icon-label-table\"},[_c('thead',[_c('tr',{attrs:{\"align\":\"middle\"}},[_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('REZULTAT'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('JEDINICA'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('REFERENCE'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('DATUM'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"15%\"}},[_vm._v(_vm._s('VRIJEME'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"5%\",\"align\":\"middle\"}})])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.Procjena),function(element,index){return _c('tr',{key:index,class:{\n                      'table-danger': _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Red', \n                      'table-success': _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Green',\n                      'table-warning': _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Yellow'\n                    },attrs:{\"align\":\"middle\"}},[_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.rezultat))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.jedinica))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(_vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[4]))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.datum))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"15%\"}},[_vm._v(_vm._s(element.vrijeme))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"9%\",\"align\":\"middle\"}},[_c('i',{class:{'fa fa-exclamation-triangle icon-right input-icon error-icon' : _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Red'}}),_vm._v(\" \"),_c('i',{class:{'fa fa-check success-icon icon-right input-icon' : _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Green'}})])])}))]),_vm._v(\" \"),_c('div',{staticStyle:{\"text-align\":\"center\"}},[_c('span',{staticClass:\"circle badge-info\"}),_vm._v(\"\\n                \"+_vm._s(_vm.table_header)+\"\\n              \")])])])]):_vm._e(),_vm._v(\" \"),(!_vm.Procjena.length && !_vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',[_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"Nema podataka.\"))])])])]):_vm._e(),_vm._v(\" \"),(_vm.showLineChart && _vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('line-chart',{attrs:{\"options\":_vm.optionsLineChart,\"data\":_vm.dataLineChart,\"type\":\"line\"}})],1)]):_vm._e(),_vm._v(\" \"),(!_vm.showLineChart && _vm.graph)?_c('div',{staticClass:\"row\"},[(!_vm.showLineChart && !_vm.spinner)?_c('div',{staticClass:\"col-md-12\"},[_c('div',[_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"Nema podataka.\"))])])]):_vm._e(),_vm._v(\" \"),(!_vm.showLineChart && _vm.spinner)?_c('div',{staticClass:\"col-md-12\",staticStyle:{\"min-height\":\"400px\"}},[_c('div',{staticStyle:{\"display\":\"flex\",\"flex-direction\":\"row\",\"justify-content\":\"center\",\"align-items\":\"center\"}},[_c('div',{staticStyle:{\"float\":\"left\"}}),_vm._v(\" \"),_c('span',{staticStyle:{\"vertical-align\":\"middle\"}},[_c('atom-spinner',{staticStyle:{\"opacity\":\"0.25\"},attrs:{\"animation-duration\":1000,\"size\":300,\"color\":'#4ae387'}})],1)])]):_vm._e()]):_vm._e()])],1):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',{staticClass:\"col-md-6\"},[_c('loading',{attrs:{\"active\":_vm.isLoading,\"can-cancel\":false,\"on-cancel\":_vm.onCancel,\"color\":\"#4ae387\",\"is-full-page\":_vm.fullPage},on:{\"update:active\":function($event){_vm.isLoading=$event}}})],1),_vm._v(\" \"),_c('div',{staticClass:\"col-md-6\"},[(false)?_c('button',{on:{\"click\":function($event){$event.preventDefault();_vm.Test($event)}}},[_vm._v(_vm._s('Loading...'))]):_vm._e()])])])])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\n/* harmony default export */ __webpack_exports__[\"a\"] = (esExports);\n\n/***/ }),\n\n/***/ \"uW86\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('span',{staticClass:\"circle\",class:_vm.classObject})}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\n/* harmony default export */ __webpack_exports__[\"a\"] = (esExports);\n\n/***/ }),\n\n/***/ \"wY/V\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(\"4Q4j\");\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(\"rjj0\")(\"8bc691c8\", content, true);\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/6.52ed80d2c16f34230cdd.js","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-5fb25dc1\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Obrada.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Obrada.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-5fb25dc1\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":\\\"src\\\",\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./Obrada.vue\"\n/* template functional */\n  var __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-5fb25dc1\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/obrada/Obrada.vue\n// module id = 0fl9\n// module chunks = 6","module.exports = {\r\n  None: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\")    \r\n    // (Interpretacija: \"none\")\r\n    return [\" \", \"No Class\"];\r\n  },\r\n\r\n  Standard: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"A\", \"ogtt\", \"insul\")\r\n    if (isNaN(rezultat) || rezultat === \"\" || (dref == \"0\" && gref == \"0\")) {\r\n      return [\" \", \"No Class\"];\r\n    } else if (Number(rezultat) < Number(Math.abs(dref))) {\r\n      return [\"L\", \"Red\"];\r\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\r\n      return [\"H\", \"Red\"];\r\n    } else if (Number(rezultat) === Number(Math.abs(dref)) || Number(rezultat) === Number(Math.abs(gref))) {\r\n      return [\" \", \"Yellow\"];\r\n    } else {\r\n      return [\" \", \"Green\"];\r\n    }\r\n  },\r\n\r\n  Less: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"less\")\r\n    if (isNaN(rezultat) || rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\r\n      return [\"H\", \"Red\"];\r\n    } else if (Number(rezultat) <= Number(Math.abs(gref)) && Number(rezultat) >= Number(Math.abs(dref))) {\r\n      return [\" \", \"Yellow\"];\r\n    } else {\r\n      return [\" \", \"Green\"];\r\n    }\r\n  },\r\n\r\n  Greater: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\")   \r\n    // (Interpretacija: \"grt\")\r\n    if (isNaN(rezultat) || rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (Number(rezultat) < Number(Math.abs(gref))) {\r\n      return [\"L\", \"Red\"];\r\n    } else if (Number(rezultat) == Number(Math.abs(gref))) {\r\n      return [\" \", \"Yellow\"];\r\n    } else {\r\n      return [\" \", \"Green\"];\r\n    }\r\n  },\r\n\r\n  GreaterEqual: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\")   \r\n    // (Interpretacija: \"grte\")\r\n    if (isNaN(rezultat) || rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (Number(rezultat) < Number(Math.abs(gref))) {\r\n      return [\"L\", \"Red\"];\r\n    } else if (Number(rezultat) == Number(Math.abs(gref))) {\r\n      return [\" \", \"Green\"];\r\n    } else {\r\n      return [\" \", \"Green\"];\r\n    }\r\n  },\r\n\r\n  Negativan: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"neg\")\r\n    if (rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (rezultat.includes(\"pozitivan\")) {\r\n      return [\"H\", \"Red\"];\r\n    } else if (rezultat.includes(\"negativan\")) {\r\n      return [\" \", \"Green\"];\r\n    } else if (rezultat.includes(\"graničan\")) {\r\n      return [\" \", \"Yellow\"];\r\n    } else {\r\n      return [\" \", \"No Class\"];\r\n    }\r\n  },\r\n\r\n  Reaktivan: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"reakt\")\r\n    if (rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (rezultat.includes(\"reaktivan\")) {\r\n      return [\"H\", \"Red\"];\r\n    } else if (rezultat.includes(\"negativan\")) {\r\n      return [\" \", \"Green\"];\r\n    } else if (rezultat.includes(\"graničan\")) {\r\n      return [\" \", \"Yellow\"];\r\n    } else {\r\n      return [\" \", \"No Class\"];\r\n    }\r\n  },\r\n\r\n  Normalan: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"norm\")\r\n    if (rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (rezultat.toLowerCase().includes(\"norm\") && !rezultat.toLowerCase().includes(\"nije\")) {\r\n      return [\" \", \"Green\"];\r\n    } else {\r\n      return [\"H\", \"Red\"];\r\n    }\r\n  },\r\n\r\n  Uredan: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"ured\")\r\n    if (rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (rezultat.toLowerCase().includes(\"ured\") && !rezultat.toLowerCase().includes(\"nije\")) {\r\n      return [\" \", \"Green\"];\r\n    } else {\r\n      return [\"H\", \"Red\"];\r\n    }\r\n  },\r\n\r\n  Plus: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"ured\")\r\n    if (rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (rezultat.trim() === \"+++\" || rezultat.trim() === \"+ + +\") {\r\n      return [\" \", \"Green\"];\r\n    } else {\r\n      return [\"H\", \"Red\"];\r\n    }\r\n  },\r\n\r\n  Infekcija: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"infekc\")\r\n    if (isNaN(rezultat) || rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\r\n      return [\"pasivna infekcija\", \"Green\"]; // pasivna infekcija\r\n    } else if (Number(rezultat) <= Number(Math.abs(gref)) && Number(rezultat) >= Number(Math.abs(dref))) {\r\n      return [\"siva zona\", \"Yellow\"]; // siva zona\r\n    } else {\r\n      return [\"svježa infekcija\", \"Red\"]; // svježa infekcija\r\n    }\r\n  },\r\n\r\n  TSH: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"tsh\")\r\n    if (isNaN(rezultat) || rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\r\n      return [\"hipotireoza\", \"Red\"];\r\n    } else if (Number(rezultat) <= Number(Math.abs(gref)) && Number(rezultat) >= Number(Math.abs(dref))) {\r\n      return [\"eutireoza\", \"Green\"];\r\n    } else {\r\n      return [\"hipertireoza\", \"Red\"];\r\n    }\r\n  },\r\n\r\n  TRG: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"trg\")\r\n    if (isNaN(rezultat) || rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\r\n      return [\"visoko\", \"Red\"]; // visoko\r\n    } else if (Number(rezultat) <= Number(Math.abs(gref)) && Number(rezultat) >= Number(Math.abs(dref))) {\r\n      return [\"granično\", \"Yellow\"]; // granično\r\n    } else {\r\n      return [\"idealno\", \"Green\"]; // idealno\r\n    }\r\n  },\r\n\r\n  HOL: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"hol\")\r\n    if (isNaN(rezultat) || rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\r\n      return [\"visoko\", \"Red\"]; // visoko\r\n    } else if (Number(rezultat) <= Number(Math.abs(gref)) && Number(rezultat) >= Number(Math.abs(dref))) {\r\n      return [\"granično\", \"Yellow\"]; // granično\r\n    } else {\r\n      return [\"idealno\", \"Green\"]; // idealno\r\n    }\r\n  },\r\n\r\n  HDL: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"hdl\")    \r\n    if (isNaN(rezultat) || rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\r\n      return [\"nema rizika\", \"Green\"]; // nema rizika\r\n    } else if (Number(rezultat) <= Number(Math.abs(gref)) && Number(rezultat) >= Number(Math.abs(dref))) {\r\n      return [\"rizik\", \"Yellow\"]; // rizik\r\n    } else {\r\n      return [\"visok rizik\", \"Red\"]; // visok rizik\r\n    }\r\n  },\r\n\r\n  LDL: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"ldl\")\r\n    if (isNaN(rezultat) || rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\r\n      return [\"visok rizik\", \"Red\"]; // visok rizik\r\n    } else if (Number(rezultat) <= Number(Math.abs(gref)) && Number(rezultat) >= Number(Math.abs(dref))) {\r\n      return [\"granično\", \"Yellow\"]; // granično\r\n    } else {\r\n      return [\"optimalno\", \"Green\"]; // optimalno\r\n    }\r\n  },\r\n\r\n  fPSA: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\")  \r\n    // (Interpretacija: \"fpsa\")\r\n    if (isNaN(rezultat) || rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\r\n      return [\"benigni proces\", \"Green\"]; // benigni proces\r\n    } else if (Number(rezultat) <= Number(Math.abs(gref)) && Number(rezultat) >= Number(Math.abs(dref))) {\r\n      return [\"siva zona\", \"Yellow\"]; // siva zona\r\n    } else {\r\n      return [\"H\", \"Red\"];\r\n    }\r\n  },\r\n\r\n  Sedimentacija: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"sediment\")\r\n    if (rezultat.includes(\"/\")) {\r\n      var rez1 = rezultat.split(\"/\")[0].trim();\r\n      var rez2 = rezultat.split(\"/\")[1].trim();\r\n    }else{\r\n      var rez1 = rezultat.trim();\r\n      var rez2 = rezultat.trim();\r\n    }\r\n\r\n    if (isNaN(rez1) || rez1 === \"\" || isNaN(rez2) || rez2 === \"\" ) {\r\n      return [\" \", \"No Class\"];\r\n    } else if (Number(rez1) > Number(Math.abs(gref))) { // } else if (Number(rez1) > Number(Math.abs(gref)) || Number(rez2) > Number(Math.abs(gref))) {\r\n      return [\"H\", \"Red\"];\r\n    } else if (Number(rez1) === Number(Math.abs(gref))) { // } else if (Number(rez1) === Number(Math.abs(gref)) || Number(rez2) === Number(Math.abs(gref))) {\r\n      return [\" \", \"Yellow\"];\r\n    } else {\r\n      return [\" \", \"Green\"];\r\n    }\r\n  },\r\n\r\n  Bistar: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"bistar\")\r\n    if (rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (rezultat === \"bistar\") {\r\n      return [\" \", \"Green\"];\r\n    } else {\r\n      return [\"H\", \"Red\"];\r\n    }\r\n  },\r\n\r\n  Boja: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"boja\")\r\n    if (rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (rezultat === \"svjetlo žut\") {\r\n      return [\" \", \"Green\"];\r\n    } else {\r\n      return [\"H\", \"Red\"];\r\n    }\r\n  },\r\n\r\n  Nesto: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"nesto\")\r\n    if (rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (rezultat.includes(\"masa\") || rezultat.includes(\"dosta\")) {\r\n      return [\"H\", \"Red\"];\r\n    } else {\r\n      return [\" \", \"Green\"];\r\n    }\r\n  },\r\n\r\n  Exists: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"exists\")\r\n    if (rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else {      \r\n      return [\"H\", \"Red\"];\r\n    }\r\n  },\r\n\r\n  Blasti: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // DKS: Blasti (Interpretacija: \"blst\")\r\n    if (isNaN(rezultat) || rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (Number(rezultat) < Number(Math.abs(dref))) {\r\n      return [\" \", \"No Class\"];\r\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\r\n      return [\"H\", \"Red\"];\r\n    } else if (Number(rezultat) === Number(Math.abs(dref)) || Number(rezultat) === Number(Math.abs(gref))) {\r\n      return [\" \", \"No Class\"];\r\n    } else {\r\n      return [\" \", \"Green\"];\r\n    }\r\n  },\r\n\r\n  Morf: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // Spermiogram: Uredne morfološke forme (Interpretacija: \"morf\")\r\n    if (isNaN(rezultat) || rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (Number(rezultat) === Number(Math.abs(dref)) || Number(rezultat) === Number(Math.abs(gref))) {\r\n      return [\" \", \"Green\"];\r\n    } else {\r\n      return [\"H\", \"Red\"];\r\n    }\r\n  },\r\n\r\n  LeuErc: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // Sediment: Leukociti, Eritrociti (Interpretacija: \"leu\")\r\n    if (rezultat.includes(\"-\")) {\r\n      var rez = rezultat.split(\"-\")[1].trim();      \r\n    }else{\r\n      var rez = rezultat.trim();      \r\n    }\r\n    \r\n    if (rez === \"\") {     \r\n      return [\" \", \"No Class\"];\r\n    } else if (isNaN(rez)) {      \r\n      return [\"H\", \"Red\"];\r\n    } else if (Number(rez) > Number(gref)) {      \r\n      return [\"H\", \"Red\"];\r\n    } else if (Number(rez) === Number(gref)) {      \r\n      return [\" \", \"Yellow\"];\r\n    } else {      \r\n      return [\" \", \"Green\"];\r\n    }\r\n  },\r\n\r\n  Titar: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"titar\")\r\n    if (rezultat.includes(\":\")) {\r\n      var rez1 = rezultat.split(\":\")[0].trim();\r\n      var rez2 = rezultat.split(\":\")[1].trim();\r\n    }else{\r\n      var rez1 = rezultat.trim();\r\n      var rez2 = \"\";\r\n    }\r\n\r\n    if (isNaN(rez1) || rez1 === \"\" || rez1 != \"1\" || isNaN(rez2) || rez2 === \"\" ) {\r\n      return [\" \", \"No Class\"];\r\n    } else if (Number(rez2) > Number(Math.abs(gref))) {\r\n      return [\"H\", \"Red\"];\r\n    } else if (Number(rez2) === Number(Math.abs(gref))) {\r\n      return [\" \", \"Yellow\"];\r\n    } else {\r\n      return [\" \", \"Green\"];\r\n    }\r\n  },\r\n\r\n  Specific: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"spec\")\r\n    return [\" \", \"No Class\"];\r\n  },\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/obrada/functions/interpretacija.js","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \".collapse-page__content[data-v-5fb25dc1]{padding:2rem}.collapse-page__content__title[data-v-5fb25dc1]{font-size:1.375rem;font-weight:700}.icon-bar a[data-v-5fb25dc1]{color:#fff;text-decoration:none}.icon-bar a[data-v-5fb25dc1]:hover{color:#4ae387}i[data-v-5fb25dc1]:hover{color:#4ae387!important}.circle[data-v-5fb25dc1]{width:1rem;opacity:.5;height:1rem;border-radius:50%;display:inline-block}\", \"\", {\"version\":3,\"sources\":[\"C:/Users/atom/Desktop/ATOM Sync/extralab_75000/extralab_cl25092019/src/components/obrada/Obrada.vue\"],\"names\":[],\"mappings\":\"AACA,yCACE,YAAc,CACf,AACD,gDACI,mBAAoB,AACpB,eAAkB,CACrB,AACD,6BACE,WAAY,AACZ,oBAAsB,CACvB,AACD,mCACE,aAAe,CAChB,AACD,yBACE,uBAA0B,CAC3B,AACD,yBACE,WAAY,AACZ,WAAa,AACb,YAAa,AACb,kBAAmB,AACnB,oBAAsB,CACvB\",\"file\":\"Obrada.vue\",\"sourcesContent\":[\"\\n.collapse-page__content[data-v-5fb25dc1] {\\n  padding: 2rem;\\n}\\n.collapse-page__content__title[data-v-5fb25dc1] {\\n    font-size: 1.375rem;\\n    font-weight: bold;\\n}\\n.icon-bar a[data-v-5fb25dc1] {\\n  color: #fff;\\n  text-decoration: none;\\n}\\n.icon-bar a[data-v-5fb25dc1]:hover {\\n  color: #4ae387;\\n}\\ni[data-v-5fb25dc1]:hover {\\n  color: #4ae387 !important;\\n}\\n.circle[data-v-5fb25dc1] {\\n  width: 1rem;\\n  opacity: 0.5;\\n  height: 1rem;\\n  border-radius: 50%;\\n  display: inline-block;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader?{\"minimize\":true,\"sourceMap\":true}!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-5fb25dc1\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/sass-loader/lib/loader.js?{\"sourceMap\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/components/obrada/Obrada.vue\n// module id = 4Q4j\n// module chunks = 6","let data = {\r\n  // Opšti pregled urina\r\n  o01: [\"\", \"bistar\", \"blago mutan\", \"vrlo mutan\", \"krvav\"],\r\n  o02: [\"\", \"svjetlo žut\", \"žut\", \"tamno žut\", \"smeđ\"],\r\n  o05: [\r\n    \"\",\r\n    \"negativan\",\r\n    \"lagano opalascentan\",\r\n    \"opalascentan\",\r\n    \"pozitivan 1+\",\r\n    \"pozitivan 2+\",\r\n    \"pozitivan 3+\",\r\n    \"pozitivan 4+\"\r\n  ],\r\n  o06: [\"\", \"negativan\", \"pozitivan\"],\r\n  o07: [\"\", \"negativan\", \"pozitivan\"],\r\n  o08: [\r\n    \"\",\r\n    \"negativan\",\r\n    \"trag\",\r\n    \"pozitivan 1+\",\r\n    \"pozitivan 2+\",\r\n    \"pozitivan 3+\",\r\n    \"pozitivan 4+\"\r\n  ],\r\n  o09: [\"\", \"negativan\", \"pozitivan\"],\r\n  o10: [\"\", \"negativan\", \"pozitivan\"],\r\n  o11: [\"\", \"negativan\", \"pozitivan\"],\r\n  o12: [\"\", \"negativan\", \"pozitivan\"],\r\n\r\n  // Sediment urina\r\n  se03: [\r\n    \"\",\r\n    \"nešto pločastog ep.\",\r\n    \"dosta pločastog ep.\",\r\n    \"masa pločastog ep.\",\r\n    \"nešto vretenastog ep.\",\r\n    \"dosta vretenastog ep.\",\r\n    \"masa vretenastog ep.\",\r\n    \"nešto okruglog ep.\",\r\n    \"dosta okruglog ep.\",\r\n    \"masa okruglog ep.\"\r\n  ],\r\n  se04: [\r\n    \"\",\r\n    \"nešto mok. kis.\",\r\n    \"dosta mok. kis.\",\r\n    \"masa mok. kis.\",\r\n    \"nešto Ca-oxal\",\r\n    \"dosta Ca-oxal\",\r\n    \"masa Ca-oxal\",\r\n    \"nešto tripl fosf.\",\r\n    \"dosta tripl fosf.\",\r\n    \"masa tripl fosf.\",\r\n    \"nešto Ca-carb\",\r\n    \"dosta Ca-carb\",\r\n    \"masa Ca-carb\"\r\n  ],\r\n  se05: [\"\", \"nešto\", \"dosta\", \"masa\"],\r\n  se06: [\"\", \"nešto\", \"dosta\", \"masa\"],\r\n  se07: [\"\", \"nešto\", \"dosta\", \"masa\"],\r\n  se08: [\r\n    \"\",\r\n    \"nešto am. fosfata\",\r\n    \"dosta am. fosfata\",\r\n    \"masa am. fosfata\",\r\n    \"nešto am. urata\",\r\n    \"dosta am. urata\",\r\n    \"masa am. urata\"\r\n  ],\r\n  se09: [\"\", \"hijalini\", \"granulirani\", \"eritrocitni\", \"leukocitni\"],\r\n  se10: [\"\", \"nešto\", \"dosta\", \"masa\"]\r\n};\r\n\r\nlet rez = {\r\n  neg: [\"\", \"negativan\", \"graničan\", \"pozitivan\"],\r\n  reakt: [\"\", \"negativan\", \"graničan\", \"reaktivan\"]\r\n};\r\n\r\nexport default {\r\n  data,\r\n  rez\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/obrada/data-izbornik/izbornik.js","// 19.1.2.7 Object.getOwnPropertyNames(O)\nrequire('./_object-sap')('getOwnPropertyNames', function () {\n  return require('./_object-gopn-ext').f;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/es6.object.get-own-property-names.js\n// module id = G5/o\n// module chunks = 6","<template>\r\n  <div class=\"collapse-page\">\r\n    <div v-if=\"show\" class=\"flex md12\">\r\n\r\n      <!-- Prikaz nalaza -->\r\n\r\n      <div v-show=\"!main && pdf\">\r\n        <div class=\"btn-container\">\r\n          <button v-show=\"verificiran\" class=\"btn btn-secondary btn-sm\" @click.prevent=\"Nazad()\">\r\n            <span class=\"fa fa-step-backward\"></span>\r\n            {{ ' NAZAD'}}\r\n          </button>\r\n          <button\r\n            v-show=\"!verificiran\"\r\n            class=\"btn btn-secondary-danger btn-sm\"\r\n            @click.prevent=\"Nazad()\"\r\n          >\r\n            <span class=\"fa fa-step-backward\"></span>\r\n            {{ ' NAZAD'}}\r\n          </button>\r\n          <button\r\n            v-show=\"email_button && verificiran\"\r\n            class=\"btn btn-secondary btn-sm pull-right\"\r\n            :disabled=\"!Email(email)\"\r\n            @click.prevent=\"MailDialog()\"\r\n          >\r\n            <span class=\"glyphicon glyphicon-send\"></span>\r\n            {{ ' Pošalji'}}\r\n          </button>\r\n          <div v-show=\"email_button && verificiran\" class=\"form-group with-icon-left pull-right\">\r\n            <div class=\"input-group\">\r\n              <input\r\n                size=\"40\"\r\n                id=\"input-icon-left\"\r\n                name=\"input-icon-left\"\r\n                v-model=\"email\"\r\n                title=\" \"\r\n                required\r\n              />\r\n              <i class=\"fa fa-envelope-o icon-left input-icon\"></i>\r\n              <label class=\"control-label\" for=\"input-icon-left\">{{'Email adresa'}}</label>\r\n              <i class=\"bar\"></i>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <hr />\r\n\r\n        <!-- PDFObject -->\r\n\r\n        <div id=\"pdf-container\"></div>\r\n      </div>\r\n\r\n      <!-- Prikaz rezultata (Main screen) -->\r\n\r\n      <vuestic-widget\r\n        v-show=\"main\"\r\n        :headerText=\"header\"\r\n        :pagination=\"pagination\"\r\n        :main=\"main\"\r\n        :data_pid=\"Number(data_pid)\"\r\n        :data_length=\"Number(data_length)\"\r\n        :rezultati_length=\"Results.length\"\r\n        :spol=\"data_spol\"\r\n        :data_min=\"Number(data_min)\"\r\n        :datum=\"query_date\"\r\n        :today=\"today_date\"\r\n        :forward_disabled=\"forward_disabled\"\r\n        :backward_disabled=\"backward_disabled\"\r\n      >\r\n        <vuestic-accordion-obrada>\r\n          <vuestic-collapse-obrada\r\n            v-for=\"uzorak in uzorci\"\r\n            v-show=\"!uzorak.removed\"\r\n            :id=\"uzorak.sid\"\r\n            :key=\"uzorak.sid\"\r\n            :sample=\"uzorak\"\r\n          >\r\n            <span :id=\"uzorak.sid\" slot=\"header\">{{uzorak.sid}}</span>\r\n            <div slot=\"body\">\r\n              <div style=\"line-height: 10px;\">&nbsp;</div>\r\n\r\n              <!--  -->\r\n              <!--  -->\r\n              <!--  -->\r\n              <!--  -->\r\n              <!--  -->\r\n              <!-- \r\n\r\n\r\n\r\n\r\n\r\n| Microbiology Table\r\n\r\n\r\n\r\n\r\n\r\n              -->\r\n              <!--  -->\r\n              <!--  -->\r\n              <!--  -->\r\n              <!--  -->\r\n              <!--  -->\r\n\r\n              <div v-if=\"uzorak.tip.includes('Mikrobiologija')\" class=\"va-row\">\r\n                <div v-show=\"show_table\" class=\"table-responsive\">\r\n                  <table class=\"table table-striped first-td-padding\">\r\n                    <thead>\r\n                      <tr align=\"middle\">\r\n                        <td v-if=\"uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN'\"></td>\r\n                        <td>{{'ANALIZA'}}</td>\r\n                        <td>{{'REZULTAT'}}</td>\r\n                        <td>{{'JEDINICA'}}</td>\r\n                        <td>{{'REFERENCE'}}</td>\r\n                        <td v-if=\"uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN'\"></td>\r\n                        <td\r\n                          v-if=\"uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN' && MicrobiologyScenario != 'MAIBPoR'\"\r\n                        >{{'PONOVI'}}</td>\r\n                        <td\r\n                          v-if=\"MicrobiologyScenario === 'MAIBPoR'\"\r\n                          style=\"text-transform: none;\"\r\n                        >{{'Bakterije'}}</td>\r\n                        <td></td>\r\n                      </tr>\r\n                    </thead>\r\n\r\n                    <!-- Table Body -->\r\n\r\n                    <tbody>\r\n                      <tr\r\n                        align=\"middle\"\r\n                        v-for=\"(test, index) in rezultati\"\r\n                        v-show=\"index < 1\"\r\n                        :key=\"test.labassay_id\"\r\n                        v-bind:class=\"{\r\n                          'table-danger': (test.rezultat_m.length && test.rezultat_m[0].pozitivan), \r\n                          'table-success': (test.rezultat_m.length && test.rezultat_m[0].negativan),\r\n                          'table-warning': false\r\n                        }\"\r\n                      >\r\n                        <td v-if=\"uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN'\">\r\n                          <button\r\n                            style=\"padding: 0.4px; padding-left: 2px;\"\r\n                            v-if=\"uzorak.status === 'ZAPRIMLJEN'\"\r\n                            @click.prevent=\"MicroResultSelect($event)\"\r\n                            class=\"btn btn-secondary-danger btn-micro\"\r\n                          >\r\n                            <i class=\"fa fa-bug\" @click.prevent=\"MicroResultSelect($event)\"></i>\r\n                          </button>\r\n                          <button\r\n                            style=\"padding: 0.6px; padding-right: 1px; padding-left: 1.2px;\"\r\n                            v-if=\"uzorak.status != 'ZAPRIMLJEN'\"\r\n                            @click.prevent=\"ResetSample($event)\"\r\n                            class=\"btn btn-secondary-danger btn-micro\"\r\n                          >\r\n                            <i class=\"fa fa-backward\" @click.prevent=\"ResetSample($event)\"></i>\r\n                          </button>\r\n                        </td>\r\n\r\n                        <!-- ANALIZA -->\r\n\r\n                        <td :title=\"test.analit\">\r\n                          <span>{{test.ime}}</span>\r\n                        </td>\r\n\r\n                        <!-- REZULTAT -->\r\n\r\n                        <td v-if=\"test.rezultat_m.length > 0\">\r\n                          <button\r\n                            :id=\"test.labassay_id\"\r\n                            class=\"btn btn-primary btn-micro\"\r\n                            @click.prevent=\"OpenMicro($event, test)\"\r\n                          >\r\n                            <span\r\n                              :id=\"test.labassay_id\"                              \r\n                              class=\"glyphicon glyphicon-search\"\r\n                            ></span>\r\n                            {{'VIŠE'}}\r\n                          </button>\r\n                        </td>\r\n                        <td v-if=\"test.rezultat_m.length < 1\">\r\n                          <button :id=\"test.labassay_id\" class=\"btn btn-pale btn-micro\">\r\n                            <span :id=\"test.labassay_id\" class=\"glyphicon glyphicon-ban-circle\"></span>\r\n                            {{'VIŠE'}}\r\n                          </button>\r\n                        </td>\r\n\r\n                        <!-- JEDINICA -->\r\n\r\n                        <td>{{test.unit}}</td>\r\n\r\n                        <!-- REFERENCE -->\r\n\r\n                        <td>{{'/'}}</td>\r\n                        <td v-if=\"uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN'\">\r\n                          <i\r\n                            style=\"font-size: 15px; color: #f7cc36; opacity: 0;\"\r\n                            class=\"glyphicon glyphicon-stats\"\r\n                            id=\"reference\"\r\n                            title=\" \"\r\n                          ></i>\r\n                        </td>\r\n\r\n                        <!-- PONOVI -->\r\n\r\n                        <td\r\n                          v-if=\"uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN' && MicrobiologyScenario != 'MAIBPoR'\"\r\n                        >\r\n                          <button class=\"btn btn-pale btn-micro\">\r\n                            <span class=\"glyphicon glyphicon-ban-circle\"></span>\r\n                          </button>\r\n                        </td>\r\n\r\n                        <td v-if=\"MicrobiologyScenario === 'MAIBPoR'\">\r\n                          <button\r\n                            @click.prevent=\"OpenMicroSelect($event, test)\"\r\n                            class=\"btn btn-primary btn-micro\"\r\n                          >\r\n                            <span class=\"fa fa-bug\"></span>\r\n                          </button>\r\n                        </td>\r\n\r\n                        <!--  -->\r\n\r\n                        <td>\r\n                          <i\r\n                            @click.prevent=\"Exclamation(test)\"\r\n                            v-bind:class=\"{'fa fa-exclamation-triangle icon-right input-icon error-icon' : false}\"\r\n                          ></i>\r\n                          <i\r\n                            v-bind:class=\"{'fa fa-check success-icon icon-right input-icon' : false}\"\r\n                          ></i>\r\n                        </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n\r\n              <!--  -->\r\n              <!--  -->\r\n              <!--  -->\r\n              <!--  -->\r\n              <!--  -->\r\n              <!-- \r\n\r\n\r\n\r\n\r\n\r\nEND of Microbiology Table |\r\n\r\n\r\n\r\n\r\n\r\n              -->\r\n              <!--  -->\r\n              <!--  -->\r\n              <!--  -->\r\n              <!--  -->\r\n              <!--  -->\r\n\r\n              <!-- Uzorci | Default Table -->\r\n\r\n              <div v-if=\"!uzorak.tip.includes('Mikrobiologija')\" class=\"va-row\">\r\n                <div v-show=\"show_table\" class=\"table-responsive\">\r\n                  <table class=\"table table-striped first-td-padding\">\r\n                    <thead>\r\n                      <tr align=\"middle\">\r\n                        <td v-if=\"uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN'\"></td>\r\n                        <td>{{'ANALIZA'}}</td>\r\n                        <td>{{'REZULTAT'}}</td>\r\n                        <td>{{'JEDINICA'}}</td>\r\n                        <td>{{'REFERENCE'}}</td>\r\n                        <td v-if=\"uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN'\"></td>\r\n                        <td\r\n                          v-if=\"uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN' && calculated\"\r\n                        >{{'AKCIJA'}}</td>\r\n                        <td\r\n                          v-if=\"uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN'\"\r\n                        >{{'PONOVI'}}</td>\r\n                        <td></td>\r\n                      </tr>\r\n                    </thead>\r\n\r\n                    <!-- Table Body -->\r\n\r\n                    <tbody>\r\n                      <tr\r\n                        align=\"middle\"\r\n                        v-for=\"test in rezultati\"\r\n                        :key=\"test.labassay_id\"\r\n                        v-bind:class=\"{\r\n                          'table-danger': Interpretacija(test.analit, test.rezultat, test.unit, test.dRef, test.gRef, $store.state.site, test.interp, test.extend, spec)[5] === 'Red' && !test.multidata, \r\n                          'table-success': Interpretacija(test.analit, test.rezultat, test.unit, test.dRef, test.gRef, $store.state.site, test.interp, test.extend, spec)[5] === 'Green' && !test.multidata,\r\n                          'table-warning': Interpretacija(test.analit, test.rezultat, test.unit, test.dRef, test.gRef, $store.state.site, test.interp, test.extend, spec)[5] === 'Yellow' && !test.multidata\r\n                        }\"\r\n                      >\r\n                        <td v-if=\"uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN'\">\r\n                          <i\r\n                            v-if=\"!test.multidata\"\r\n                            @click.prevent=\"SelectAnalyser(test)\"\r\n                            style=\"color:#4ae387;\"\r\n                            class=\"glyphicon glyphicon-object-align-bottom\"\r\n                          ></i>\r\n\r\n                          <span\r\n                            v-if=\"test.multidata\"\r\n                            style=\"color:#d9d9d9;\"\r\n                            class=\"glyphicon glyphicon-object-align-bottom\"\r\n                          ></span>\r\n                        </td>\r\n\r\n                        <!-- ANALIZA -->\r\n\r\n                        <td :title=\"test.analit\">\r\n                          <span\r\n                            @contextmenu=\"LabAssayEval($event, test)\"\r\n                            @click.prevent=\"Evaluation(test)\"\r\n                          >{{test.ime}}</span>\r\n                        </td>\r\n\r\n                        <!-- REZULTAT -->\r\n\r\n                        <td v-if=\"!test.multidata\">\r\n                          <div\r\n                            v-show=\"test.edit == false\"\r\n                            style=\"display:inline; font-size: 14px; line-height: 4.5px;\"\r\n                          >\r\n                            <label>\r\n                              <strong>{{ test.rezultat }}</strong>\r\n                            </label>\r\n                          </div>\r\n                          <div v-show=\"test.edit == true\" style=\"display:inline; line-height: 5px;\">\r\n                            <select\r\n                              v-if=\"test.select_options != undefined\"\r\n                              style=\"width:110px\"\r\n                              v-model=\"test.rezultat\"\r\n                            >\r\n                              <option\r\n                                v-for=\"option in test.select_options\"\r\n                                :key=\"option\"\r\n                              >{{ option }}</option>\r\n                            </select>\r\n                          </div>\r\n                          <div v-show=\"test.edit == true\" style=\"display:inline;\">\r\n                            <input\r\n                              v-if=\"test.select_options === undefined\"\r\n                              v-model=\"test.rezultat\"\r\n                              style=\"width:110px;font-size: 12px; line-height: 7px;\"\r\n                            />\r\n                          </div>\r\n                          <sup\r\n                            v-show=\"test.vise > 2\"\r\n                            @click.prevent=\"GetResults(test, uzorak.status)\"\r\n                          >\r\n                            <i\r\n                              style=\"font-size: 5px; color: #e34a4a;\"\r\n                              class=\"fa fa-star\"\r\n                              id=\"star\"\r\n                              title=\" \"\r\n                            ></i>\r\n                          </sup>\r\n                          <sup v-show=\"test.vise < 3\">\r\n                            <i\r\n                              style=\"font-size: 5px;  opacity: 0;\"\r\n                              class=\"fa fa-star-o\"\r\n                              id=\"star\"\r\n                              title=\" \"\r\n                            ></i>\r\n                          </sup>\r\n                        </td>\r\n                        <td v-if=\"test.multidata && test.realizovan\">\r\n                          <button\r\n                            :id=\"test.labassay_id\"\r\n                            class=\"btn btn-primary btn-micro\"\r\n                            @click.prevent=\"MultiGet($event, test.ime, test.analit, test.rezultat, test.odobren)\"\r\n                          >\r\n                            <span\r\n                              :id=\"test.labassay_id\"\r\n                              @click.prevent=\"MultiGet($event, test.ime, test.analit, test.rezultat, test.odobren)\"\r\n                              class=\"glyphicon glyphicon-search\"\r\n                            ></span>\r\n                            {{'VIŠE'}}\r\n                          </button>\r\n                          <sup\r\n                            v-show=\"test.multi_count > 2\"\r\n                            @click.prevent=\"GetResultsMulti(test, uzorak.status)\"\r\n                          >\r\n                            <i\r\n                              style=\"font-size: 5px; color: #e34a4a;\"\r\n                              class=\"fa fa-star\"\r\n                              id=\"star\"\r\n                              title=\" \"\r\n                            ></i>\r\n                          </sup>\r\n                          <sup v-show=\"test.multi_count < 3\">\r\n                            <i\r\n                              style=\"font-size: 5px; opacity: 0;\"\r\n                              class=\"fa fa-star-o\"\r\n                              id=\"star\"\r\n                              title=\" \"\r\n                            ></i>\r\n                          </sup>\r\n                        </td>\r\n                        <td v-if=\"test.multidata && !test.realizovan\">\r\n                          <button\r\n                            :id=\"test.labassay_id\"\r\n                            class=\"btn btn-warning btn-micro\"\r\n                            @click.prevent=\"MultiGet($event, test.ime, test.analit, test.rezultat, test.odobren)\"\r\n                          >\r\n                            <span\r\n                              :id=\"test.labassay_id\"\r\n                              @click.prevent=\"MultiGet($event, test.ime, test.analit, test.rezultat, test.odobren)\"\r\n                              class=\"glyphicon glyphicon-search\"\r\n                            ></span>\r\n                            {{'VIŠE'}}\r\n                          </button>\r\n                          <sup\r\n                            v-show=\"test.multi_count > 2\"\r\n                            @click.prevent=\"GetResultsMulti(test, uzorak.status)\"\r\n                          >\r\n                            <i\r\n                              style=\"font-size: 5px; color: #e34a4a;\"\r\n                              class=\"fa fa-star\"\r\n                              id=\"star\"\r\n                              title=\" \"\r\n                            ></i>\r\n                          </sup>\r\n                          <sup v-show=\"test.multi_count < 3\">\r\n                            <i\r\n                              style=\"font-size: 5px; opacity: 0;\"\r\n                              class=\"fa fa-star-o\"\r\n                              id=\"star\"\r\n                              title=\" \"\r\n                            ></i>\r\n                          </sup>\r\n                        </td>\r\n\r\n                        <!-- JEDINICA -->\r\n\r\n                        <td>{{test.unit}}</td>\r\n\r\n                        <!-- REFERENCE -->\r\n\r\n                        <td\r\n                          v-if=\"!test.multidata\"\r\n                        >{{Interpretacija(test.analit, test.rezultat, test.unit, test.dRef, test.gRef, $store.state.site, test.interp, test.extend, spec)[4]}}</td>\r\n                        <td v-if=\"test.multidata\">{{'/'}}</td>\r\n                        <td v-if=\"uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN'\">\r\n                          <i\r\n                            v-if=\"!test.multidata\"\r\n                            @click.prevent=\"Reference($event, test)\"\r\n                            style=\"font-size: 15px; color: #f7cc36;\"\r\n                            class=\"glyphicon glyphicon-stats\"\r\n                            id=\"reference\"\r\n                            title=\" \"\r\n                          ></i>\r\n                          <i\r\n                            v-if=\"test.multidata\"\r\n                            style=\"font-size: 15px; color: #f7cc36; opacity: 0;\"\r\n                            class=\"glyphicon glyphicon-stats\"\r\n                            id=\"reference\"\r\n                            title=\" \"\r\n                          ></i>\r\n                        </td>\r\n\r\n                        <!-- AKCIJA -->\r\n\r\n                        <td\r\n                          v-if=\"uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN' && calculated && !test.calculated\"\r\n                        >\r\n                          <button class=\"btn btn-pale btn-micro\">\r\n                            <span class=\"glyphicon glyphicon-ban-circle\"></span>\r\n                          </button>\r\n                        </td>\r\n                        <td\r\n                          v-if=\"uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN' && calculated && test.calculated\"\r\n                        >\r\n                          <button\r\n                            @click.prevent=\"Calculate($event, test.labassay_id, test.ime, test.id)\"\r\n                            :id=\"test.test\"\r\n                            class=\"btn btn-primary btn-micro\"\r\n                          >\r\n                            <span :id=\"test.test\" class=\"fa fa-calculator\"></span>\r\n                          </button>\r\n                        </td>\r\n\r\n                        <!-- PONOVI -->\r\n\r\n                        <td\r\n                          v-if=\"uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN' \r\n                          && (test.rezultat === '' || test.manual || test.calculated)\"\r\n                        >\r\n                          <button class=\"btn btn-pale btn-micro\">\r\n                            <span class=\"glyphicon glyphicon-ban-circle\"></span>\r\n                          </button>\r\n                        </td>\r\n                        <td\r\n                          v-if=\"uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN' \r\n                          && test.rezultat != '' && !test.manual && !test.calculated\"\r\n                        >\r\n                          <button\r\n                            v-if=\"!test.retest\"\r\n                            :id=\"test.test\"\r\n                            class=\"btn btn-primary btn-micro\"\r\n                            @click.prevent=\"RetestEnable($event)\"\r\n                          >\r\n                            <span :id=\"test.test\" class=\"fa fa-refresh\"></span>\r\n                          </button>\r\n                          <button\r\n                            v-if=\"test.retest\"\r\n                            :id=\"test.test\"\r\n                            class=\"btn btn-info btn-micro\"\r\n                            @click.prevent=\"RetestDisable($event)\"\r\n                          >\r\n                            <span :id=\"test.test\" class=\"glyphicon glyphicon-duplicate\"></span>\r\n                          </button>\r\n                        </td>\r\n\r\n                        <!--  -->\r\n\r\n                        <td>\r\n                          <i\r\n                            @click.prevent=\"Exclamation(test)\"\r\n                            v-bind:class=\"{'fa fa-exclamation-triangle icon-right input-icon error-icon' : Interpretacija(test.analit, test.rezultat, test.unit, test.dRef, test.gRef, $store.state.site, test.interp, test.extend, spec)[5] === 'Red' && !test.multidata}\"\r\n                          ></i>\r\n                          <i\r\n                            v-bind:class=\"{'fa fa-check success-icon icon-right input-icon' : Interpretacija(test.analit, test.rezultat, test.unit, test.dRef, test.gRef, $store.state.site, test.interp, test.extend, spec)[5] === 'Green' && !test.multidata}\"\r\n                          ></i>\r\n                        </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n\r\n              <!-- END of Uzorci | Default Table -->\r\n\r\n            </div>\r\n          </vuestic-collapse-obrada>\r\n        </vuestic-accordion-obrada>\r\n\r\n        <div style=\"min-height: 10px;\"></div>\r\n\r\n        <!-- Nalaz -->\r\n\r\n        <div v-if=\"verificiran\" class=\"va-row\">\r\n          <div class=\"flex md12\">\r\n            <vuestic-collapse-nalaz\r\n              :final=\"verificiran\"\r\n              :final_pdf=\"final_pdf\"\r\n              :samples=\"samples\"\r\n              :pdf=\"link\"\r\n              :pacijent=\"ime + ' ' + prezime\"\r\n            >\r\n              <span slot=\"header\">Nalaz</span>\r\n              <div slot=\"body\">\r\n                <div class=\"va-row\"></div>\r\n              </div>\r\n            </vuestic-collapse-nalaz>\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <hr />\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n          <div class=\"col-md-3\"></div>\r\n          <div class=\"col-md-6\">\r\n            <div class=\"btn-container\">\r\n              <button\r\n                class=\"btn btn-secondary btn-sm wizard-back pull-left\"\r\n                @click.prevent=\"Povratak()\"\r\n              >\r\n                <span class=\"fa fa-backward\"></span>\r\n                {{ ' POVRATAK'}}\r\n              </button>\r\n              <button\r\n                style=\"text-transform: none; color: #e34a4a;\"\r\n                v-if=\"partials_condition && !verificiran\"\r\n                class=\"btn btn-secondary-warning btn-sm wizard-back pull-right\"\r\n                @click.prevent=\"Partials()\"\r\n              >\r\n                <span style=\"color: #e34a4a;\" class=\"fa fa-file-pdf-o\"></span>\r\n                {{ ' Djelimični nalaz'}}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </vuestic-widget>\r\n\r\n      <!-- Modals -->\r\n\r\n      <!-- Prikaz Analita za Multi Testove -->\r\n\r\n      <vuestic-modal-multi\r\n        :show.sync=\"show\"\r\n        :sample=\"sample\"\r\n        ref=\"largeModalMulti\"\r\n        cancelText=\"ODUSTANI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\">{{naslov}}</div>\r\n        <div class=\"table-responsive\">\r\n          <table class=\"table table-striped first-td-padding\">\r\n            <thead>\r\n              <tr align=\"middle\">\r\n                <td width=\"10%\"></td>\r\n                <td width=\"20%\">{{'ANALIT'}}</td>\r\n                <td width=\"30%\">{{'REZULTAT'}}</td>\r\n                <td width=\"10%\">{{'JEDINICA'}}</td>\r\n                <td width=\"20%\">{{'REFERENCE'}}</td>\r\n                <td width=\"10%\"></td>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr\r\n                align=\"middle\"\r\n                v-for=\"test in analiti\"\r\n                :key=\"test.labID\"\r\n                v-bind:class=\"{\r\n                    'table-danger': Interpretacija(test.opis, test.rezultat, test.jedinica, test.refd, test.refg, $store.state.site, test.interp, test.extend, spec)[5] === 'Red' && !test.rezultat_multiple.length, \r\n                    'table-success': Interpretacija(test.opis, test.rezultat, test.jedinica, test.refd, test.refg, $store.state.site, test.interp, test.extend, spec)[5] === 'Green' && !test.rezultat_multiple.length, \r\n                    'table-warning': Interpretacija(test.opis, test.rezultat, test.jedinica, test.refd, test.refg, $store.state.site, test.interp, test.extend, spec)[5] === 'Yellow' && !test.rezultat_multiple.length                                  \r\n                  }\"\r\n              >\r\n                <td v-if=\"test.flag != ''\">{{test.flag}}</td>\r\n                <td v-if=\"test.flag === ''\">&nbsp;</td>\r\n                <td :title=\"test.opis\">{{test.naziv}}</td>\r\n                <td :id=\"test.analit\">\r\n                  <div v-show=\"test.edit == false\">\r\n                    <label>\r\n                      <strong>{{ test.rezultat }}</strong>\r\n                    </label>\r\n                  </div>\r\n                  <select\r\n                    multiple\r\n                    :size=\"test.select_options.length\"\r\n                    v-if=\"test.select_options != undefined && (test.kod === 's03' || test.kod === 's04' || test.kod === 's08' || test.kod === 's09')\"\r\n                    style=\"min-width:200px;\"\r\n                    v-show=\"test.edit == true\"\r\n                    v-model=\"test.rezultat_multiple\"\r\n                  >\r\n                    <option v-for=\"option in test.select_options\" :key=\"option\">{{ option }}</option>\r\n                  </select>\r\n                  <select\r\n                    v-if=\"test.select_options != undefined && (test.kod != 's03' && test.kod != 's04' && test.kod != 's08' && test.kod != 's09')\"\r\n                    style=\"width:200px;\"\r\n                    v-show=\"test.edit == true\"\r\n                    v-model=\"test.rezultat\"\r\n                  >\r\n                    <option v-for=\"option in test.select_options\" :key=\"option\">{{ option }}</option>\r\n                  </select>\r\n                  <input\r\n                    v-if=\"test.select_options === undefined\"\r\n                    style=\"width:200px;\"\r\n                    v-show=\"test.edit == true\"\r\n                    v-model=\"test.rezultat\"\r\n                  />\r\n                </td>\r\n                <td>{{Interpretacija(test.opis, test.rezultat, test.jedinica, test.refd, test.refg, $store.state.site, test.interp, test.extend, spec)[3]}}</td>\r\n                <td>{{Interpretacija(test.opis, test.rezultat, test.jedinica, test.refd, test.refg, $store.state.site, test.interp, test.extend, spec)[4]}}</td>\r\n                <td>\r\n                  <i\r\n                    @click.prevent=\"ExclamationMulti(test)\"\r\n                    v-bind:class=\"{'fa fa-exclamation-triangle icon-right input-icon error-icon' : Interpretacija(test.opis, test.rezultat, test.jedinica, test.refd, test.refg, $store.state.site, test.interp, test.extend, spec)[5] === 'Red' && !test.rezultat_multiple.length}\"\r\n                  ></i>\r\n                  <i\r\n                    v-bind:class=\"{'fa fa-check success-icon icon-right input-icon' : Interpretacija(test.opis, test.rezultat, test.jedinica, test.refd, test.refg, $store.state.site, test.interp, test.extend, spec)[5] === 'Green' && !test.rezultat_multiple.length}\"\r\n                  ></i>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </vuestic-modal-multi>\r\n\r\n      <!--  -->\r\n      <!--  -->\r\n      <!--  -->\r\n      <!--  -->\r\n      <!--  -->\r\n      <!-- \r\n\r\n\r\n\r\n\r\n\r\n| Microbiology Modal\r\n\r\n\r\n\r\n\r\n\r\n      -->\r\n      <!--  -->\r\n      <!--  -->\r\n      <!--  -->\r\n      <!--  -->\r\n      <!--  -->\r\n\r\n      <vuestic-modal-micro-reset\r\n        :show.sync=\"show\"\r\n        ref=\"staticModalResetSample\"\r\n        cancelText=\"ODUSTANI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\">\r\n          <span style=\"color: #acb5be;\">{{'Brisanje rezultata: '}}</span>\r\n          <span style=\"color: #e34a4a;\">{{CurrentTest}}</span>\r\n        </div>\r\n        <div>\r\n          <h5>{{ 'Jeste li sigurni da želite obrisati rezultat?'}}</h5>\r\n        </div>\r\n      </vuestic-modal-micro-reset>\r\n\r\n      <vuestic-modal-micro-bactery\r\n        :show.sync=\"show\"\r\n        :large=\"true\"\r\n        :sample=\"sample\"\r\n        :select=\"true\"\r\n        :update=\"!ShowAntibiotics && !ShowBacteries && MicrobiologyScenario === 'MAIBPoR'\"\r\n        :povratak=\"ShowAntibiotics || ShowBacteries\"\r\n        :empty=\"TemporaryAntibiotics.length > 0 || TemporaryBacteriesAdd.length > 0\"\r\n        ref=\"staticModalMicroBacterySelect\"\r\n        cancelText=\"ODUSTANI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\" v-if=\"!ShowAntibiotics && !ShowBacteries\">\r\n          <span style=\"color: #acb5be;\">{{'Rezultat analize: '}}</span>\r\n          <span style=\"color: #e34a4a;\">{{CurrentTest}}</span>\r\n        </div>\r\n        <div slot=\"title\" v-if=\"ShowAntibiotics && !ShowBacteries\">\r\n          <span style=\"color: #acb5be;\">{{'Antibiotici | '}}</span>\r\n          <span style=\"color: #e34a4a;\">{{\"Izbornik\"}}</span>\r\n        </div>\r\n        <div slot=\"title\" v-if=\"!ShowAntibiotics && ShowBacteries\">\r\n          <span style=\"color: #acb5be;\">{{'Bakterije | '}}</span>\r\n          <span style=\"color: #e34a4a;\">{{\"Izbornik\"}}</span>\r\n        </div>\r\n        <div>\r\n\r\n          <!--  -->\r\n\r\n          <div class=\"row\" v-if=\"show_table\">\r\n            <div\r\n              class=\"col-md-1\"\r\n              v-if=\"MicrobiologyScenario === 'MAIBPoR' && ShowBacteries && !ShowAntibiotics\"\r\n            ></div>\r\n            <div\r\n              class=\"col-md-10\"\r\n              v-if=\"MicrobiologyScenario === 'MAIBPoR' && ShowBacteries && !ShowAntibiotics\"\r\n            >\r\n              <div class=\"col-md-12\" v-if=\"TemporaryBacteries.length\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-4\">\r\n                    <div\r\n                      class=\"form-check abc-checkbox abc-checkbox-primary\"\r\n                      v-for=\"bactery in filteredBacteries(1, 3)\"\r\n                      :key=\"bactery._id\"\r\n                    >\r\n                      <input\r\n                        class=\"form-check-input\"\r\n                        :id=\"bactery._id\"\r\n                        type=\"checkbox\"\r\n                        v-model=\"bactery.chosen\"\r\n                        @click=\"AddBacteries(bactery)\"\r\n                        :disabled=\"bactery.disabled\"\r\n                      />\r\n                      <label class=\"form-check-label\" :for=\"bactery._id\">\r\n                        <span\r\n                          v-if=\"!bactery.chosen\"\r\n                          style=\"color: #e34a4a;\"\r\n                          class=\"abc-label-text\"\r\n                        >{{bactery.opis}}</span>\r\n                        <span\r\n                          v-if=\"bactery.chosen\"\r\n                          style=\"color: #4ae387;\"\r\n                          class=\"abc-label-text\"\r\n                        >{{bactery.opis}}</span>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-4\">\r\n                    <div\r\n                      class=\"form-check abc-checkbox abc-checkbox-primary\"\r\n                      v-for=\"bactery in filteredBacteries(2, 3)\"\r\n                      :key=\"bactery._id\"\r\n                    >\r\n                      <input\r\n                        class=\"form-check-input\"\r\n                        :id=\"bactery._id\"\r\n                        type=\"checkbox\"\r\n                        v-model=\"bactery.chosen\"\r\n                        @click=\"AddBacteries(bactery)\"\r\n                        :disabled=\"bactery.disabled\"\r\n                      />\r\n                      <label class=\"form-check-label\" :for=\"bactery._id\">\r\n                        <span\r\n                          v-if=\"!bactery.chosen\"\r\n                          style=\"color: #e34a4a;\"\r\n                          class=\"abc-label-text\"\r\n                        >{{bactery.opis}}</span>\r\n                        <span\r\n                          v-if=\"bactery.chosen\"\r\n                          style=\"color: #4ae387;\"\r\n                          class=\"abc-label-text\"\r\n                        >{{bactery.opis}}</span>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-4\">\r\n                    <div\r\n                      class=\"form-check abc-checkbox abc-checkbox-primary\"\r\n                      v-for=\"bactery in filteredBacteries(3, 3)\"\r\n                      :key=\"bactery._id\"\r\n                    >\r\n                      <input\r\n                        class=\"form-check-input\"\r\n                        :id=\"bactery._id\"\r\n                        type=\"checkbox\"\r\n                        v-model=\"bactery.chosen\"\r\n                        @click=\"AddBacteries(bactery)\"\r\n                        :disabled=\"bactery.disabled\"\r\n                      />\r\n                      <label class=\"form-check-label\" :for=\"bactery._id\">\r\n                        <span\r\n                          v-if=\"!bactery.chosen\"\r\n                          style=\"color: #e34a4a;\"\r\n                          class=\"abc-label-text\"\r\n                        >{{bactery.opis}}</span>\r\n                        <span\r\n                          v-if=\"bactery.chosen\"\r\n                          style=\"color: #4ae387;\"\r\n                          class=\"abc-label-text\"\r\n                        >{{bactery.opis}}</span>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div\r\n              class=\"col-md-1\"\r\n              v-if=\"MicrobiologyScenario === 'MAIBPoR' && ShowAntibiotics && !ShowBacteries\"\r\n            ></div>\r\n            <div\r\n              class=\"col-md-10\"\r\n              v-if=\"MicrobiologyScenario === 'MAIBPoR' && ShowAntibiotics && !ShowBacteries\"\r\n            >\r\n              <div class=\"col-md-12\" v-if=\"Antibiotics.length\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-4\">\r\n                    <div\r\n                      class=\"form-check abc-checkbox abc-checkbox-primary\"\r\n                      v-for=\"antibiotik in filteredAntibiotics(1, 3)\"\r\n                      :key=\"antibiotik._id\"\r\n                    >\r\n                      <input\r\n                        class=\"form-check-input\"\r\n                        :id=\"antibiotik._id\"\r\n                        type=\"checkbox\"\r\n                        v-model=\"antibiotik.chosen\"\r\n                        @click=\"AddAntibiotics(antibiotik)\"\r\n                        :disabled=\"antibiotik.disabled\"\r\n                      />\r\n                      <label class=\"form-check-label\" :for=\"antibiotik._id\">\r\n                        <span\r\n                          v-if=\"!antibiotik.chosen\"\r\n                          style=\"color: #e34a4a;\"\r\n                          class=\"abc-label-text\"\r\n                        >{{antibiotik.opis}}</span>\r\n                        <span\r\n                          v-if=\"antibiotik.chosen\"\r\n                          style=\"color: #4ae387;\"\r\n                          class=\"abc-label-text\"\r\n                        >{{antibiotik.opis}}</span>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-4\">\r\n                    <div\r\n                      class=\"form-check abc-checkbox abc-checkbox-primary\"\r\n                      v-for=\"antibiotik in filteredAntibiotics(2, 3)\"\r\n                      :key=\"antibiotik._id\"\r\n                    >\r\n                      <input\r\n                        class=\"form-check-input\"\r\n                        :id=\"antibiotik._id\"\r\n                        type=\"checkbox\"\r\n                        v-model=\"antibiotik.chosen\"\r\n                        @click=\"AddAntibiotics(antibiotik)\"\r\n                        :disabled=\"antibiotik.disabled\"\r\n                      />\r\n                      <label class=\"form-check-label\" :for=\"antibiotik._id\">\r\n                        <span\r\n                          v-if=\"!antibiotik.chosen\"\r\n                          style=\"color: #e34a4a;\"\r\n                          class=\"abc-label-text\"\r\n                        >{{antibiotik.opis}}</span>\r\n                        <span\r\n                          v-if=\"antibiotik.chosen\"\r\n                          style=\"color: #4ae387;\"\r\n                          class=\"abc-label-text\"\r\n                        >{{antibiotik.opis}}</span>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-4\">\r\n                    <div\r\n                      class=\"form-check abc-checkbox abc-checkbox-primary\"\r\n                      v-for=\"antibiotik in filteredAntibiotics(3, 3)\"\r\n                      :key=\"antibiotik._id\"\r\n                    >\r\n                      <input\r\n                        class=\"form-check-input\"\r\n                        :id=\"antibiotik._id\"\r\n                        type=\"checkbox\"\r\n                        v-model=\"antibiotik.chosen\"\r\n                        @click=\"AddAntibiotics(antibiotik)\"\r\n                        :disabled=\"antibiotik.disabled\"\r\n                      />\r\n                      <label class=\"form-check-label\" :for=\"antibiotik._id\">\r\n                        <span\r\n                          v-if=\"!antibiotik.chosen\"\r\n                          style=\"color: #e34a4a;\"\r\n                          class=\"abc-label-text\"\r\n                        >{{antibiotik.opis}}</span>\r\n                        <span\r\n                          v-if=\"antibiotik.chosen\"\r\n                          style=\"color: #4ae387;\"\r\n                          class=\"abc-label-text\"\r\n                        >{{antibiotik.opis}}</span>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              class=\"col-md-1\"\r\n              v-if=\"MicrobiologyScenario === 'MAIBPoR' && !ShowAntibiotics && !ShowBacteries\"\r\n            ></div>\r\n            <div\r\n              class=\"col-md-10\"\r\n              v-if=\"MicrobiologyScenario === 'MAIBPoR' && !ShowAntibiotics && !ShowBacteries\"\r\n            >\r\n              <vuestic-tabs-bactery\r\n                v-if=\"SelectedBacteries.length\"\r\n                :names=\"BacteryTabs\"\r\n                :tab=\"CurrentTab\"\r\n                :id=\"CurrentTab\"\r\n                :prikazi=\"sample.status != 'VERIFICIRAN' && sample.status != 'ODOBREN'\"\r\n                ref=\"tabs\"\r\n              >\r\n                <div :slot=\"CurrentTab\" v-for=\"test in SelectedBacteries\" :key=\"test._id\">\r\n                  <div class=\"row\" v-show=\"test.opis === CurrentTab\">\r\n\r\n                    <!-- Antibiogram -->\r\n\r\n                    <div class=\"table-responsive\">\r\n                      <table class=\"table table-striped first-td-padding\">\r\n                        <thead>\r\n                          <tr align=\"left\">\r\n                            <td style=\"text-transform: none;\" width=\"30%\">{{test.antibiogram.opis}}</td>\r\n                            <td width=\"10%\">{{''}}</td>\r\n                            <td width=\"20%\">{{''}}</td>\r\n                            <td width=\"20%\">{{''}}</td>\r\n                            <td width=\"20%\">{{''}}</td>\r\n                          </tr>\r\n                        </thead>\r\n\r\n                        <!-- Table Body -->\r\n\r\n                        <tbody>\r\n                          <tr\r\n                            align=\"left\"\r\n                            v-for=\"abtk in test.antibiogram.antibiotici\"\r\n                            :key=\"abtk._id\"\r\n                            v-bind:class=\"{'table-danger': false, 'table-success': false,'table-warning': false}\"\r\n                          >\r\n                            <!-- ANALIZA -->\r\n\r\n                            <td :title=\"abtk.opis\">{{abtk.opis}}</td>\r\n                            <td>\r\n                              <bactery-radio-button\r\n                                :disabled=\"sample.status === 'ODOBREN' || sample.status === 'VERIFICIRAN'\"\r\n                                :label=\"''\"\r\n                                :value=\"''\"\r\n                                :id=\"'' + test._id + abtk._id\"\r\n                                :name=\"test._id + abtk._id\"\r\n                                v-model=\"abtk.rezultat\"\r\n                              />\r\n                            </td>\r\n                            <td>\r\n                              <postavke-radio-button\r\n                                :disabled=\"sample.status === 'ODOBREN' || sample.status === 'VERIFICIRAN'\"\r\n                                :label=\"'Senzitivan'\"\r\n                                :value=\"'S'\"\r\n                                :id=\"'S' + test._id + abtk._id\"\r\n                                :name=\"test._id + abtk._id\"\r\n                                v-model=\"abtk.rezultat\"\r\n                              />\r\n                            </td>\r\n                            <td>\r\n                              <postavke-radio-button\r\n                                :disabled=\"sample.status === 'ODOBREN' || sample.status === 'VERIFICIRAN'\"\r\n                                :label=\"'Intermedijaran'\"\r\n                                :value=\"'I'\"\r\n                                :id=\"'I' + test._id + abtk._id\"\r\n                                :name=\"test._id + abtk._id\"\r\n                                v-model=\"abtk.rezultat\"\r\n                              />\r\n                            </td>\r\n                            <td>\r\n                              <postavke-radio-button\r\n                                :disabled=\"sample.status === 'ODOBREN' || sample.status === 'VERIFICIRAN'\"\r\n                                :label=\"'Rezistentan'\"\r\n                                :value=\"'R'\"\r\n                                :id=\"'R' + test._id + abtk._id\"\r\n                                :name=\"test._id + abtk._id\"\r\n                                v-model=\"abtk.rezultat\"\r\n                              />\r\n                            </td>\r\n                          </tr>\r\n                        </tbody>\r\n                      </table>\r\n                    </div>\r\n\r\n                    <!-- END of Antibiogram -->\r\n\r\n                  </div>\r\n                </div>\r\n              </vuestic-tabs-bactery>\r\n            </div>\r\n\r\n            <div\r\n              class=\"col-md-12\"\r\n              v-if=\"MicrobiologyScenario === 'MANBNeR' || MicrobiologyScenario === 'MANBPoR' || MicrobiologyScenario === 'MAIBNeR'\"\r\n            >\r\n              <div v-show=\"show_table\" class=\"table-responsive\">\r\n                <table class=\"table table-striped first-td-padding\">\r\n                  <thead>\r\n                    <tr align=\"left\">\r\n                      <td>{{'REZULTAT'}}</td>\r\n                    </tr>\r\n                  </thead>\r\n\r\n                  <!-- Table Body -->\r\n\r\n                  <tbody>\r\n                    <tr\r\n                      align=\"left\"\r\n                      v-for=\"(test, index) in rezultati\"\r\n                      v-show=\"index < 1\"\r\n                      :key=\"test.labassay_id\"\r\n                      v-bind:class=\"{\r\n                          'table-danger':  (test.rezultat_m.length && test.rezultat_m[0].pozitivan), \r\n                          'table-success':  (test.rezultat_m.length && test.rezultat_m[0].negativan),\r\n                          'table-warning': false\r\n                        }\"\r\n                    >\r\n                      <td v-if=\"sample.status != 'ODOBREN' &&  sample.status != 'VERIFICIRAN'\">\r\n                        <div class=\"form-group\">\r\n                          <div class=\"input-group\">\r\n                            <textarea\r\n                              type=\"text\"\r\n                              id=\"simple-textarea\"\r\n                              v-model=\"test.rezultat\"\r\n                              required\r\n                            ></textarea>\r\n                            <label class=\"control-label\" for=\"simple-textarea\">{{ '' }}</label>\r\n                            <i class=\"bar\"></i>\r\n                          </div>\r\n                        </div>\r\n                      </td>\r\n                      <td v-if=\"sample.status === 'ODOBREN' ||  sample.status === 'VERIFICIRAN'\">\r\n                        <div class=\"form-group\">\r\n                          <div class=\"input-group\">\r\n                            <input id=\"input-icon-left\" title=\" \" name=\"input-icon-left\" disabled />\r\n                            <label\r\n                              v-if=\"test.rezultat.length\"\r\n                              class=\"control-label\"\r\n                              for=\"input-icon-left\"\r\n                            >{{test.rezultat}}</label>\r\n                            <label\r\n                              v-if=\"!test.rezultat.length\"\r\n                              class=\"control-label\"\r\n                              for=\"input-icon-left\"\r\n                            >{{\"Nema podataka.\"}}</label>\r\n                            <i class=\"bar\"></i>\r\n                          </div>\r\n                        </div>\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </vuestic-modal-micro-bactery>\r\n\r\n      <vuestic-modal-micro-bactery\r\n        :show.sync=\"show\"\r\n        :large=\"true\"\r\n        :sample=\"sample\"\r\n        ref=\"staticModalMicroBactery\"\r\n        cancelText=\"ODUSTANI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\">\r\n          <span style=\"color: #acb5be;\">{{'Rezultat analize: '}}</span>\r\n          <span style=\"color: #e34a4a;\">{{CurrentTest}}</span>\r\n        </div>\r\n\r\n        <div>\r\n\r\n          <!--  -->\r\n\r\n          <div class=\"row\" v-if=\"show_table\">\r\n            <div class=\"col-md-12\" v-if=\"true\">\r\n              <div v-show=\"show_table\" class=\"table-responsive\">\r\n                <table class=\"table table-striped first-td-padding\">\r\n                  <thead>\r\n                    <tr align=\"left\">\r\n                      <td>{{'REZULTAT'}}</td>\r\n                    </tr>\r\n                  </thead>\r\n\r\n                  <!-- Table Body -->\r\n\r\n                  <tbody>\r\n                    <tr\r\n                      align=\"left\"\r\n                      v-for=\"(test, index) in rezultati\"\r\n                      v-show=\"index < 1\"\r\n                      :key=\"test.labassay_id\"\r\n                      v-bind:class=\"{\r\n                          'table-danger':  (test.rezultat_m.length && test.rezultat_m[0].pozitivan), \r\n                          'table-success':  (test.rezultat_m.length && test.rezultat_m[0].negativan),\r\n                          'table-warning': false\r\n                        }\"\r\n                    >\r\n                      <td v-if=\"sample.status != 'ODOBREN' &&  sample.status != 'VERIFICIRAN'\">\r\n                        <div class=\"form-group\">\r\n                          <div class=\"input-group\">\r\n                            <textarea\r\n                              type=\"text\"\r\n                              id=\"simple-textarea\"\r\n                              v-model=\"test.rezultat\"\r\n                              required\r\n                            ></textarea>\r\n                            <label class=\"control-label\" for=\"simple-textarea\">{{ '' }}</label>\r\n                            <i class=\"bar\"></i>\r\n                          </div>\r\n                        </div>\r\n                      </td>\r\n                      <td v-if=\"sample.status === 'ODOBREN' ||  sample.status === 'VERIFICIRAN'\">\r\n                        <div class=\"form-group\">\r\n                          <div class=\"input-group\">\r\n                            <input id=\"input-icon-left\" title=\" \" name=\"input-icon-left\" disabled />\r\n                            <label\r\n                              v-if=\"test.rezultat.length\"\r\n                              class=\"control-label\"\r\n                              for=\"input-icon-left\"\r\n                            >{{test.rezultat}}</label>\r\n                            <label\r\n                              v-if=\"!test.rezultat.length\"\r\n                              class=\"control-label\"\r\n                              for=\"input-icon-left\"\r\n                            >{{\"Nema podataka.\"}}</label>\r\n                            <i class=\"bar\"></i>\r\n                          </div>\r\n                        </div>\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </vuestic-modal-micro-bactery>\r\n\r\n      <vuestic-modal-micro-result\r\n        :show.sync=\"show\"\r\n        :sample=\"sample\"\r\n        :large=\"ShowAllBacteries\"\r\n        :neg=\"ModalNegative\"\r\n        :pos=\"ModalPositive\"\r\n        :selected=\"ModalPositiveCondition\"\r\n        ref=\"staticModalSelectResult\"\r\n        cancelText=\"ODUSTANI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\">\r\n          <span style=\"color: #acb5be;\">{{MicrobiologyModalHeader}} |</span>\r\n          <span style=\"color: #e34a4a;\">{{\"Izbornik\"}}</span>\r\n        </div>\r\n\r\n        <div class=\"row\" v-if=\"!ModalNegative && !ModalPositive\">\r\n          <div class=\"col-md-6\">\r\n            <div class=\"row\">\r\n              <div class=\"col-md-3\"></div>\r\n              <div class=\"col-md-6\">\r\n                <button\r\n                  style=\"text-transform: none; border: 0px;\"\r\n                  class=\"btn btn-secondary btn-sm wizard-back pull-left\"\r\n                  @click=\"ModalNegative = true; ModalPositive = false;\"\r\n                >{{'Negativan'}}</button>\r\n              </div>\r\n              <div class=\"col-md-3\"></div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-6\">\r\n            <div class=\"row\">\r\n              <div class=\"col-md-2\"></div>\r\n              <div class=\"col-md-6\">\r\n                <button\r\n                  style=\"text-transform: none; border: 0px;\"\r\n                  class=\"btn btn-secondary-danger btn-sm wizard-next pull-right\"\r\n                  @click=\"ModalPositive = true; ModalNegative = false;\"\r\n                >{{'Pozitivan'}}</button>\r\n              </div>\r\n              <div class=\"col-md-4\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row\" v-if=\"ModalNegative && !ModalPositive\">\r\n          <div class=\"col-md-1\"></div>\r\n          <div class=\"col-md-11\">\r\n            <vuestic-radio-button\r\n              v-for=\"(desc, index) in MicrobiologyResult.NegativeDescriptions\"\r\n              :key=\"index\"\r\n              :label=\"MicrobiologyResult.NegativeDescriptions[index]\"\r\n              :id=\"MicrobiologyResult.NegativeDescriptions[index]\"\r\n              :value=\"MicrobiologyResult.NegativeDescriptions[index]\"\r\n              :name=\"MicrobiologyResult.NegativeDescriptions[index]\"\r\n              :disabled=\"false\"\r\n              v-model=\"NegativeResultSelection\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          class=\"row\"\r\n          v-if=\"!ModalNegative && ModalPositive && !MicrobiologyResult.DefaultBacteries.length\"\r\n        >\r\n          <div class=\"col-md-1\"></div>\r\n          <div class=\"col-md-11\">\r\n            <vuestic-radio-button\r\n              v-for=\"(desc, index) in MicrobiologyResult.PositiveDescriptions\"\r\n              :key=\"index\"\r\n              :label=\"MicrobiologyResult.PositiveDescriptions[index]\"\r\n              :id=\"MicrobiologyResult.PositiveDescriptions[index]\"\r\n              :value=\"MicrobiologyResult.PositiveDescriptions[index]\"\r\n              :name=\"MicrobiologyResult.PositiveDescriptions[index]\"\r\n              :disabled=\"false\"\r\n              v-model=\"PositiveResultSelection\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          class=\"row\"\r\n          v-if=\"!ModalNegative && ModalPositive && MicrobiologyResult.DefaultBacteries.length\"\r\n        >\r\n          <div class=\"col-md-6\">\r\n            <div class=\"row\">\r\n              <div class=\"col-md-2\"></div>\r\n              <div class=\"col-md-10\">\r\n                <div\r\n                  class=\"form-check abc-checkbox abc-checkbox-primary\"\r\n                  v-for=\"(bakt, index) in MicrobiologyResult.DefaultBacteries\"\r\n                  :key=\"index\"\r\n                >\r\n                  <input\r\n                    class=\"form-check-input\"\r\n                    :id=\"bakt._id\"\r\n                    type=\"checkbox\"\r\n                    v-model=\"bakt.chosen\"\r\n                    @click=\"SelectBactery(bakt, index)\"\r\n                  />\r\n                  <label class=\"form-check-label\" :for=\"bakt._id\">\r\n                    <span style=\"color: #e34a4a;\" class=\"abc-label-text\">{{bakt.opis}}</span>\r\n                  </label>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"col-md-6\">\r\n            <div class=\"row\">\r\n              <div class=\"col-md-1\"></div>\r\n              <div class=\"col-md-6\">\r\n                <a\r\n                  v-if=\"!ShowAllBacteries\"\r\n                  href=\"#\"\r\n                  @click.prevent=\"ShowAllBacteries = true\"\r\n                  style=\"font-size: 16px; color: #4ae387;\"\r\n                >Prikaži više</a>\r\n              </div>\r\n              <div class=\"col-md-5\"></div>\r\n            </div>\r\n\r\n            <div class=\"row\" v-if=\"ShowAllBacteries\">\r\n              <div class=\"col-md-1\"></div>\r\n              <div class=\"col-md-10\">\r\n                <div\r\n                  class=\"form-check abc-checkbox abc-checkbox-primary\"\r\n                  v-for=\"(bakt, index) in MicrobiologyResult.RemainingBacteries\"\r\n                  :key=\"index\"\r\n                >\r\n                  <input\r\n                    class=\"form-check-input\"\r\n                    :id=\"bakt._id\"\r\n                    type=\"checkbox\"\r\n                    v-model=\"bakt.chosen\"\r\n                    @click=\"SelectBactery(bakt, index)\"\r\n                  />\r\n                  <label class=\"form-check-label\" :for=\"bakt._id\">\r\n                    <span style=\"color: #e34a4a;\" class=\"abc-label-text\">{{bakt.opis}}</span>\r\n                  </label>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </vuestic-modal-micro-result>\r\n\r\n      <!--  -->\r\n      <!--  -->\r\n      <!--  -->\r\n      <!--  -->\r\n      <!--  -->\r\n      <!-- \r\n\r\n\r\n\r\n\r\n\r\nEnd of Microbiology Modal |\r\n\r\n\r\n\r\n\r\n\r\n      -->\r\n      <!--  -->\r\n      <!--  -->\r\n      <!--  -->\r\n      <!--  -->\r\n      <!--  -->\r\n\r\n      <!-- Brisanje uzorka -->\r\n\r\n      <vuestic-modal-delete\r\n        :show.sync=\"show\"\r\n        ref=\"staticModalDeleteSample\"\r\n        cancelText=\"ODUSTANI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\">\r\n          <span style=\"color: #acb5be;\">{{'Brisanje uzorka: '}}</span>\r\n          <span style=\"color: #e34a4a;\">{{sid}}</span>\r\n        </div>\r\n        <div>\r\n          <h5>{{ 'Jeste li sigurni da želite obrisati uzorak?'}}</h5>\r\n        </div>\r\n      </vuestic-modal-delete>\r\n\r\n      <!-- Unos komentara -->\r\n\r\n      <vuestic-modal-comment\r\n        :show.sync=\"show\"\r\n        ref=\"staticModalComment\"\r\n        cancelText=\"ODUSTANI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\">{{ 'Unos komentara za uzorak: ' + sid }}</div>\r\n        <div>\r\n          <h5></h5>\r\n        </div>\r\n      </vuestic-modal-comment>\r\n\r\n      <!-- Uređivanje uzorka -->\r\n\r\n      <vuestic-modal-edit\r\n        :show.sync=\"show\"\r\n        :sample=\"sid\"\r\n        action=\"Edit\"\r\n        ref=\"staticModalEditSample\"\r\n        cancelText=\"ODUSTANI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\">{{ 'Uređivanje uzorka: ' + sid }}</div>\r\n        <div>\r\n          <h5></h5>\r\n        </div>\r\n      </vuestic-modal-edit>\r\n\r\n      <!-- Email Send -->\r\n\r\n      <vuestic-modal-mail\r\n        :show.sync=\"show\"\r\n        ref=\"staticModalSendMail\"\r\n        cancelText=\"ODUSTANI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\">\r\n          {{'Slanje nalaza na adresu: '}}\r\n          <span style=\"color: #4ae387;\">{{email}}</span>\r\n        </div>\r\n        <div>\r\n          <h5>{{'Jeste li sigurni da želite poslati nalaz?'}}</h5>\r\n        </div>\r\n      </vuestic-modal-mail>\r\n\r\n      <!--  -->\r\n\r\n      <vuestic-modal-all-results\r\n        :show.sync=\"show\"\r\n        ref=\"staticModalAllResults\"\r\n        cancelText=\"ODUSTANI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\">\r\n          {{'Izbor rezultata: '}}\r\n          <span style=\"color: #e34a4a;\">{{labassay}}</span>\r\n        </div>\r\n        <div>\r\n          <div class=\"table-responsive\">\r\n            <table class=\"table table-striped first-td-padding\">\r\n              <thead>\r\n                <tr>\r\n\r\n                  <!-- <td width=\"20%\"></td> -->\r\n\r\n                  <td>analizator</td>\r\n                  <td>vrijeme</td>\r\n                  <td>rezultat</td>\r\n                  <td>jedinica</td>\r\n                  <td>reference</td>\r\n                  <td v-if=\"sample_status != 'ODOBREN' &&  sample_status != 'VERIFICIRAN'\">izbor</td>\r\n                  <td align=\"middle\"></td>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr\r\n                  v-for=\"test in vise.rezultat\"\r\n                  v-show=\"test.rezultat_f != ''\"\r\n                  :key=\"test._id\"\r\n                  v-bind:class=\"{\r\n                    'table-danger': Interpretacija(vise.labassay.analit, test.rezultat_f, test.jedinice_f, vise.refd, vise.refg, $store.state.site, vise.interp, vise.extend, spec)[5] === 'Red' && !test.multidata, \r\n                    'table-success': Interpretacija(vise.labassay.analit, test.rezultat_f, test.jedinice_f, vise.refd, vise.refg, $store.state.site, vise.interp, vise.extend, spec)[5] === 'Green' && !test.multidata,\r\n                    'table-warning': Interpretacija(vise.labassay.analit, test.rezultat_f, test.jedinice_f, vise.refd, vise.refg, $store.state.site, vise.interp, vise.extend, spec)[5] === 'Yellow' && !test.multidata\r\n                  }\"\r\n                >\r\n                  <td>{{ test.anaassay.aparat.ime }}</td>\r\n\r\n                  <td>\r\n                    {{ JSON.stringify(\r\n                    test.updated_at\r\n                    ).slice(9, 11) +\r\n                    \".\" +\r\n                    JSON.stringify(\r\n                    test.updated_at\r\n                    ).slice(6, 8) +\r\n                    \".\" +\r\n                    JSON.stringify(\r\n                    test.updated_at\r\n                    ).slice(1, 5) + ' | '}}\r\n                    <sub>\r\n                      {{JSON.stringify(\r\n                      test.updated_at\r\n                      ).slice(12, 20)}}\r\n                    </sub>\r\n                  </td>\r\n                  <td>{{ test.rezultat_f }}</td>\r\n                  <td>{{ test.jedinice_f }}</td>\r\n                  <td>{{Interpretacija(vise.labassay.analit, test.rezultat_f, test.jedinice_f, vise.refd, vise.refg, $store.state.site, vise.interp, vise.extend, spec)[4]}}</td>\r\n                  <td v-if=\"sample_status != 'ODOBREN' &&  sample_status != 'VERIFICIRAN'\">\r\n                    <i\r\n                      v-if=\"!test.izabran\"\r\n                      @click.prevent=\"IzborTesta(vise, test)\"\r\n                      style=\"font-size: 18px; color:#e34a4a;\"\r\n                      class=\"glyphicon glyphicon-unchecked\"\r\n                    ></i>\r\n\r\n                    <i\r\n                      v-if=\"test.izabran\"\r\n                      style=\"font-size: 18px; color:#4ae387;\"\r\n                      class=\"glyphicon glyphicon-check\"\r\n                    ></i>\r\n                  </td>\r\n                  <td>\r\n                    <i\r\n                      v-bind:class=\"{'fa fa-exclamation-triangle icon-right input-icon error-icon' : Interpretacija(vise.labassay.analit, test.rezultat_f, test.jedinice_f, vise.refd, vise.refg, $store.state.site, vise.interp, vise.extend, spec)[5] === 'Red'}\"\r\n                    ></i>\r\n                    <i\r\n                      v-bind:class=\"{'fa fa-check success-icon icon-right input-icon' : Interpretacija(vise.labassay.analit, test.rezultat_f, test.jedinice_f, vise.refd, vise.refg, $store.state.site, vise.interp, vise.extend, spec)[5] === 'Green'}\"\r\n                    ></i>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n\r\n            <!-- END OF DRUGA TABELA -->\r\n\r\n          </div>\r\n        </div>\r\n      </vuestic-modal-all-results>\r\n\r\n      <vuestic-modal-error\r\n        :show.sync=\"show\"\r\n        ref=\"staticModalError\"\r\n        cancelText=\"ZATVORI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\">\r\n          {{''}}\r\n          <span style=\"color: #e34a4a;\">{{'404: Not Found'}}</span>\r\n        </div>\r\n        <div>\r\n          <h5>{{'Greška prilikom čitanja nalaza.'}}</h5>\r\n        </div>\r\n      </vuestic-modal-error>\r\n\r\n      <vuestic-modal-error\r\n        :show.sync=\"show\"\r\n        ref=\"staticModalVerifyPrivilege\"\r\n        cancelText=\"ZATVORI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\">\r\n          {{''}}\r\n          <span style=\"color: #e34a4a;\">{{'401: Not Authorized'}}</span>\r\n        </div>\r\n        <div>\r\n          <h5>{{'Nemate odgovarajuće privilegije.'}}</h5>\r\n        </div>\r\n      </vuestic-modal-error>\r\n\r\n      <vuestic-modal-exclamation\r\n        :show.sync=\"show\"\r\n        ref=\"staticModalExclamation\"\r\n        cancelText=\"ZATVORI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\">\r\n          {{''}}\r\n          <span style=\"color: #e34a4a;\">{{warning.analiza}}</span>\r\n        </div>\r\n        <div>\r\n          <h5>{{warning.control}}</h5>\r\n          <p>{{warning.text}}</p>\r\n        </div>\r\n\r\n        <!-- <div v-if=\"warning.napomena !=''\">\r\n          <h5>{{\"Napomena\"}}</h5>\r\n          <p>{{warning.napomena}}</p>\r\n        </div>-->\r\n\r\n      </vuestic-modal-exclamation>\r\n\r\n      <vuestic-modal-reference\r\n        :show.sync=\"show\"\r\n        ref=\"staticModalReference\"\r\n        cancelText=\"ODUSTANI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\">\r\n          {{'Referentne vrijednosti: '}}\r\n          <span\r\n            style=\"color: #e34a4a;\"\r\n          >{{reference.naziv}} ({{reference.opis}})</span>\r\n        </div>\r\n        <div>\r\n          <div class=\"row\">\r\n            <div class=\"col-md-1\"></div>\r\n            <div class=\"col-md-2\">\r\n              <div class=\"form-group\">\r\n                <div class=\"input-group\">\r\n                  <input\r\n                    style=\"color: #e34a4a;\"\r\n                    id=\"input-icon-left\"\r\n                    title=\" \"\r\n                    v-model=\"reference.dref\"\r\n                    name=\"input-icon-left\"\r\n                    required\r\n                  />\r\n\r\n                  <!-- <i class=\"glyphicon glyphicon-pencil icon-left input-icon\"></i> -->\r\n\r\n                  <label class=\"control-label\" for=\"input-icon-left\">{{'Donja'}}</label>\r\n                  <i class=\"bar\"></i>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-md-1\"></div>\r\n            <div class=\"col-md-2\">\r\n              <div class=\"form-group\">\r\n                <div class=\"input-group\">\r\n                  <input\r\n                    style=\"color: #e34a4a;\"\r\n                    id=\"input-icon-left\"\r\n                    title=\" \"\r\n                    v-model=\"reference.gref\"\r\n                    name=\"input-icon-left\"\r\n                    required\r\n                  />\r\n\r\n                  <!-- <i class=\"glyphicon glyphicon-pencil icon-left input-icon\"></i> -->\r\n\r\n                  <label class=\"control-label\" for=\"input-icon-left\">{{'Gornja'}}</label>\r\n                  <i class=\"bar\"></i>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-md-1\"></div>\r\n            <div class=\"col-md-4\">\r\n              <vuestic-simple-select\r\n                v-if=\"$store.state.access.level < 1\"\r\n                style=\"font-size: 14px;\"\r\n                label=\"Interpretacija\"\r\n                v-model=\"reference.interp\"\r\n                title=\" \"\r\n                v-bind:options=\"interpretacije\"\r\n              ></vuestic-simple-select>\r\n\r\n              <div v-if=\"$store.state.access.level > 0\" class=\"form-group\">\r\n                <div class=\"input-group\">\r\n                  <input\r\n                    id=\"input-icon-left\"\r\n                    title=\" \"\r\n                    v-model=\"reference.interp\"\r\n                    name=\"input-icon-left\"\r\n                    required\r\n                    :disabled=\"true\"\r\n                  />\r\n\r\n                  <!-- <i class=\"glyphicon glyphicon-pencil icon-left input-icon\"></i> -->\r\n\r\n                  <label class=\"control-label\" for=\"input-icon-left\">{{reference.interp}}</label>\r\n                  <i class=\"bar\"></i>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-md-1\"></div>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <div class=\"col-md-1\"></div>\r\n            <div class=\"col-md-2\">\r\n              <vuestic-simple-select\r\n                style=\"font-size: 14px;\"\r\n                label=\"Jedinica\"\r\n                v-model=\"reference.jedinica\"\r\n                title=\" \"\r\n                v-bind:options=\"jedinice\"\r\n              ></vuestic-simple-select>\r\n            </div>\r\n            <div class=\"col-md-1\"></div>\r\n\r\n            <div class=\"col-md-7\">\r\n              <div class=\"form-group\" v-show=\"reference.interp != 'spec'\">\r\n                <div class=\"input-group\">\r\n                  <input\r\n                    style=\"color: #e34a4a;\"\r\n                    id=\"input-icon-left\"\r\n                    title=\" \"\r\n                    v-model=\"reference.extend\"\r\n                    name=\"input-icon-left\"\r\n                    required\r\n                  />\r\n\r\n                  <label\r\n                    class=\"control-label\"\r\n                    for=\"input-icon-left\"\r\n                  >{{'Proširena referentna vrijednost'}}</label>\r\n                  <i class=\"bar\"></i>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"form-group\" v-show=\"reference.interp === 'spec'\">\r\n                <div class=\"input-group\">\r\n                  <textarea\r\n                    v-model=\"reference.extend\"\r\n                    type=\"text\"\r\n                    style=\"color: #e34a4a;\"\r\n                    id=\"simple-textarea\"\r\n                    required\r\n                  ></textarea>\r\n\r\n                  <label\r\n                    class=\"control-label\"\r\n                    for=\"simple-textarea\"\r\n                  >{{'Specifična interpretacija rezultata'}}</label>\r\n                  <i class=\"bar\"></i>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-md-1\"></div>\r\n          </div>\r\n        </div>\r\n      </vuestic-modal-reference>\r\n\r\n      <vuestic-modal-find\r\n        :show.sync=\"show\"\r\n        :data_pid=\"Number(data_pid)\"\r\n        :data_length=\"Number(data_length)\"\r\n        ref=\"staticModalFind\"\r\n        cancelText=\"ODUSTANI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\">\r\n          {{''}}\r\n          <span style=\"color: #e34a4a;\">{{'Redni broj pacijenta'}}</span>\r\n        </div>\r\n        <div>\r\n          <h5></h5>\r\n        </div>\r\n      </vuestic-modal-find>\r\n\r\n      <vuestic-modal-aparati\r\n        :show.sync=\"show\"\r\n        ref=\"staticModalAparati\"\r\n        cancelText=\"ODUSTANI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\">\r\n          {{'Izbor analizatora: '}}\r\n          <span\r\n            style=\"color: #e34a4a;\"\r\n          >{{this.analiza.ime + ' (' + this.analiza.analit + ')'}}</span>\r\n        </div>\r\n        <div>\r\n          <vuestic-accordion-obrada>\r\n            <vuestic-collapse-aparati\r\n              v-for=\"element in analysers\"\r\n              :key=\"element._id\"\r\n              :analyser=\"element\"\r\n            >\r\n              <span slot=\"header\">{{element.ime + ', ' + element.site.naziv}}</span>\r\n              <div slot=\"body\">\r\n                <div class=\"va-row\"></div>\r\n              </div>\r\n            </vuestic-collapse-aparati>\r\n          </vuestic-accordion-obrada>\r\n        </div>\r\n      </vuestic-modal-aparati>\r\n\r\n      <!--  -->\r\n\r\n      <vuestic-modal-results-multi\r\n        :show.sync=\"show\"\r\n        ref=\"staticModalResultsMulti\"\r\n        cancelText=\"ODUSTANI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\">\r\n          {{'Izbor rezultata: '}}\r\n          <span style=\"color: #e34a4a;\">{{multi_test}}</span>\r\n        </div>\r\n        <div></div>\r\n      </vuestic-modal-results-multi>\r\n\r\n      <!-- Patient evaluation, Single -->\r\n\r\n      <patient-evaluation-single\r\n        :show.sync=\"show\"\r\n        ref=\"staticModalEvaluationSingle\"\r\n        cancelText=\"ZATVORI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\">\r\n          <span>{{ime + ' ' + prezime}}</span>\r\n        </div>\r\n\r\n        <div class=\"row\" v-if=\"Procjena.length && !graph\">\r\n          <div class=\"col-md-12\">\r\n            <div class=\"table-responsive\">\r\n              <table class=\"table table-striped table-sm color-icon-label-table\">\r\n                <thead>\r\n                  <tr align=\"middle\">\r\n                    <td width=\"20%\">{{'REZULTAT'}}</td>\r\n                    <td width=\"20%\">{{'JEDINICA'}}</td>\r\n                    <td width=\"20%\">{{'REFERENCE'}}</td>\r\n                    <td width=\"20%\">{{'DATUM'}}</td>\r\n                    <td width=\"15%\">{{'VRIJEME'}}</td>\r\n                    <td width=\"5%\" align=\"middle\"></td>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n\r\n                  <!--  -->\r\n\r\n                  <tr\r\n                    align=\"middle\"\r\n                    v-for=\"(element, index) in Procjena\"\r\n                    :key=\"index\"\r\n                    v-bind:class=\"{\r\n                          'table-danger': Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, $store.state.site, element.interp, element.extend, spec)[5] === 'Red', \r\n                          'table-success': Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, $store.state.site, element.interp, element.extend, spec)[5] === 'Green',\r\n                          'table-warning': Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, $store.state.site, element.interp, element.extend, spec)[5] === 'Yellow'\r\n                        }\"\r\n                  >\r\n                    <td width=\"19%\">{{element.rezultat}}</td>\r\n                    <td width=\"19%\">{{element.jedinica}}</td>\r\n                    <td\r\n                      width=\"19%\"\r\n                    >{{Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, $store.state.site, element.interp, element.extend, spec)[4]}}</td>\r\n                    <td width=\"19%\">{{element.datum}}</td>\r\n                    <td width=\"15%\">{{element.vrijeme}}</td>\r\n                    <td width=\"9%\" align=\"middle\">\r\n                      <i\r\n                        v-bind:class=\"{'fa fa-exclamation-triangle icon-right input-icon error-icon' : Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, $store.state.site, element.interp, element.extend, spec)[5] === 'Red'}\"\r\n                      ></i>\r\n                      <i\r\n                        v-bind:class=\"{'fa fa-check success-icon icon-right input-icon' : Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, $store.state.site, element.interp, element.extend, spec)[5] === 'Green'}\"\r\n                      ></i>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n              <div style=\"text-align:center;\">\r\n                <span class=\"circle badge-info\"></span>\r\n                {{table_header}}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!--  <div class=\"row\" v-if=\"showLineChart\">\r\n          <div class=\"col-md-12\">\r\n            <hr>\r\n          </div>\r\n        </div>-->\r\n\r\n        <div class=\"row\" v-if=\"showLineChart && graph\">\r\n          <div class=\"col-md-12\">\r\n            <line-chart :options=\"optionsLineChart\" :data=\"dataLineChart\" type=\"line\"></line-chart>\r\n          </div>\r\n        </div>\r\n        <div class=\"row\" v-if=\"!showLineChart && graph\">\r\n          <div class=\"col-md-12\">\r\n\r\n            <!-- <div style=\"text-align:center;\"> -->\r\n\r\n            <div>\r\n              <span style=\"color: #e34a4a;\">{{\"Nema podataka.\"}}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </patient-evaluation-single>\r\n\r\n      <!-- LabAssay evaluation, Single -->\r\n\r\n      <patient-evaluation-single\r\n        :show.sync=\"show\"\r\n        ref=\"staticModalLabAssayEvalSingle\"\r\n        cancelText=\"ZATVORI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\">\r\n          <span style=\"color: #4ae387;\">{{analiza_eval.ime + ' (' + analiza_eval.analit + ')'}}</span>\r\n          <span>{{\" - Rezultati analize u zadnjih 14 dana\"}}</span>\r\n        </div>\r\n\r\n        <div class=\"row\" v-if=\"Procjena.length && !graph\">\r\n          <div class=\"col-md-12\">\r\n            <div class=\"table-responsive\">\r\n              <table class=\"table table-striped table-sm color-icon-label-table\">\r\n                <thead>\r\n                  <tr align=\"middle\">\r\n                    <td width=\"20%\">{{'REZULTAT'}}</td>\r\n                    <td width=\"20%\">{{'JEDINICA'}}</td>\r\n                    <td width=\"20%\">{{'REFERENCE'}}</td>\r\n                    <td width=\"20%\">{{'DATUM'}}</td>\r\n                    <td width=\"15%\">{{'VRIJEME'}}</td>\r\n                    <td width=\"5%\" align=\"middle\"></td>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n\r\n                  <!--  -->\r\n\r\n                  <tr\r\n                    align=\"middle\"\r\n                    v-for=\"(element, index) in Procjena\"\r\n                    :key=\"index\"\r\n                    v-bind:class=\"{\r\n                      'table-danger': Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, $store.state.site, element.interp, element.extend, spec)[5] === 'Red', \r\n                      'table-success': Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, $store.state.site, element.interp, element.extend, spec)[5] === 'Green',\r\n                      'table-warning': Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, $store.state.site, element.interp, element.extend, spec)[5] === 'Yellow'\r\n                    }\"\r\n                  >\r\n                    <td width=\"19%\">{{element.rezultat}}</td>\r\n                    <td width=\"19%\">{{element.jedinica}}</td>\r\n                    <td\r\n                      width=\"19%\"\r\n                    >{{Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, $store.state.site, element.interp, element.extend, spec)[4]}}</td>\r\n                    <td width=\"19%\">{{element.datum}}</td>\r\n                    <td width=\"15%\">{{element.vrijeme}}</td>\r\n                    <td width=\"9%\" align=\"middle\">\r\n                      <i\r\n                        v-bind:class=\"{'fa fa-exclamation-triangle icon-right input-icon error-icon' : Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, $store.state.site, element.interp, element.extend, spec)[5] === 'Red'}\"\r\n                      ></i>\r\n                      <i\r\n                        v-bind:class=\"{'fa fa-check success-icon icon-right input-icon' : Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, $store.state.site, element.interp, element.extend, spec)[5] === 'Green'}\"\r\n                      ></i>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n              <div style=\"text-align:center;\">\r\n                <span class=\"circle badge-info\"></span>\r\n                {{table_header}}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!--  <div class=\"row\" v-if=\"showLineChart\">\r\n          <div class=\"col-md-12\">\r\n            <hr>\r\n          </div>\r\n        </div>-->\r\n\r\n        <div class=\"row\" v-if=\"showLineChart && graph\">\r\n          <div class=\"col-md-12\">\r\n            <line-chart :options=\"optionsLineChart\" :data=\"dataLineChart\" type=\"line\"></line-chart>\r\n          </div>\r\n        </div>\r\n        <div class=\"row\" v-if=\"!showLineChart && graph\">\r\n          <div class=\"col-md-12\">\r\n            <!-- <div style=\"text-align:center;\"> -->\r\n            <div>\r\n              <span style=\"color: #e34a4a;\">{{\"Nema podataka.\"}}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </patient-evaluation-single>\r\n\r\n      <!-- Patient evaluation, Multi -->\r\n\r\n      <patient-evaluation-multi\r\n        :show.sync=\"show\"\r\n        :multiparam_izbor=\"multiparam_izbor\"\r\n        :multiparam_izbornik=\"multiparam_izbornik\"\r\n        ref=\"staticModalEvaluationMulti\"\r\n        cancelText=\"ZATVORI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\">\r\n          <span>{{ime + ' ' + prezime}}</span>\r\n        </div>\r\n\r\n        <!--  -->\r\n\r\n        <div class=\"row\" v-if=\"Procjena.length && !graph\">\r\n          <div class=\"col-md-12\">\r\n            <div class=\"table-responsive\">\r\n              <table class=\"table table-striped table-sm color-icon-label-table\">\r\n                <thead>\r\n                  <tr align=\"middle\">\r\n                    <td width=\"20%\">{{'REZULTAT'}}</td>\r\n                    <td width=\"20%\">{{'JEDINICA'}}</td>\r\n                    <td width=\"20%\">{{'REFERENCE'}}</td>\r\n                    <td width=\"20%\">{{'DATUM'}}</td>\r\n                    <td width=\"15%\">{{'VRIJEME'}}</td>\r\n                    <td width=\"5%\" align=\"middle\"></td>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr\r\n                    align=\"middle\"\r\n                    v-for=\"(element, index) in Procjena\"\r\n                    :key=\"index\"\r\n                    v-bind:class=\"{\r\n                      'table-danger': Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, $store.state.site, element.interp, element.extend, spec)[5] === 'Red', \r\n                      'table-success': Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, $store.state.site, element.interp, element.extend, spec)[5] === 'Green',\r\n                      'table-warning': Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, $store.state.site, element.interp, element.extend, spec)[5] === 'Yellow'\r\n                    }\"\r\n                  >\r\n                    <td width=\"19%\">{{element.rezultat}}</td>\r\n                    <td width=\"19%\">{{element.jedinica}}</td>\r\n                    <td\r\n                      width=\"19%\"\r\n                    >{{Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, $store.state.site, element.interp, element.extend, spec)[4]}}</td>\r\n                    <td width=\"19%\">{{element.datum}}</td>\r\n                    <td width=\"15%\">{{element.vrijeme}}</td>\r\n                    <td width=\"9%\" align=\"middle\">\r\n                      <i\r\n                        v-bind:class=\"{'fa fa-exclamation-triangle icon-right input-icon error-icon' : Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, $store.state.site, element.interp, element.extend, spec)[5] === 'Red'}\"\r\n                      ></i>\r\n                      <i\r\n                        v-bind:class=\"{'fa fa-check success-icon icon-right input-icon' : Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, $store.state.site, element.interp, element.extend, spec)[5] === 'Green'}\"\r\n                      ></i>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n              <div style=\"text-align:center;\">\r\n                <span class=\"circle badge-info\"></span>\r\n                {{table_header}}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row\" v-if=\"!Procjena.length && !graph\">\r\n          <div class=\"col-md-12\">\r\n            <div>\r\n              <span style=\"color: #e34a4a;\">{{\"Nema podataka.\"}}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row\" v-if=\"showLineChart && graph\">\r\n          <div class=\"col-md-12\">\r\n            <line-chart :options=\"optionsLineChart\" :data=\"dataLineChart\" type=\"line\"></line-chart>\r\n          </div>\r\n        </div>\r\n        <div class=\"row\" v-if=\"!showLineChart && graph\">\r\n          <div v-if=\"!showLineChart && !spinner\" class=\"col-md-12\">\r\n            <div>\r\n              <span style=\"color: #e34a4a;\">{{\"Nema podataka.\"}}</span>\r\n            </div>\r\n          </div>\r\n          <div style=\"min-height: 400px;\" v-if=\"!showLineChart && spinner\" class=\"col-md-12\">\r\n            <div\r\n              style=\"display:flex; flex-direction: row; justify-content: center; align-items: center\"\r\n            >\r\n              <div style=\"float:left;\"></div>\r\n              <span style=\"vertical-align:middle; \">\r\n                <atom-spinner\r\n                  style=\"opacity: 0.25;\"\r\n                  :animation-duration=\"1000\"\r\n                  :size=\"300\"\r\n                  :color=\"'#4ae387'\"\r\n                />\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </patient-evaluation-multi>\r\n\r\n      <!-- LabAssay evaluation, Multi -->\r\n\r\n      <patient-evaluation-multi\r\n        :show.sync=\"show\"\r\n        :multiparam_izbor=\"multiparam_izbor\"\r\n        :multiparam_izbornik=\"multiparam_izbornik\"\r\n        ref=\"staticModalLabAssayEvalMulti\"\r\n        cancelText=\"ZATVORI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\">\r\n          <span style=\"color: #4ae387;\">{{analiza_eval.ime + ' (' + analiza_eval.analit + ')'}}</span>\r\n          <span>{{\" - Rezultati analize u zadnjih 14 dana\"}}</span>\r\n        </div>\r\n\r\n        <!--  -->\r\n\r\n        <div class=\"row\" v-if=\"Procjena.length && !graph\">\r\n          <div class=\"col-md-12\">\r\n            <div class=\"table-responsive\">\r\n              <table class=\"table table-striped table-sm color-icon-label-table\">\r\n                <thead>\r\n                  <tr align=\"middle\">\r\n                    <td width=\"20%\">{{'REZULTAT'}}</td>\r\n                    <td width=\"20%\">{{'JEDINICA'}}</td>\r\n                    <td width=\"20%\">{{'REFERENCE'}}</td>\r\n                    <td width=\"20%\">{{'DATUM'}}</td>\r\n                    <td width=\"15%\">{{'VRIJEME'}}</td>\r\n                    <td width=\"5%\" align=\"middle\"></td>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr\r\n                    align=\"middle\"\r\n                    v-for=\"(element, index) in Procjena\"\r\n                    :key=\"index\"\r\n                    v-bind:class=\"{\r\n                      'table-danger': Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, $store.state.site, element.interp, element.extend, spec)[5] === 'Red', \r\n                      'table-success': Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, $store.state.site, element.interp, element.extend, spec)[5] === 'Green',\r\n                      'table-warning': Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, $store.state.site, element.interp, element.extend, spec)[5] === 'Yellow'\r\n                    }\"\r\n                  >\r\n                    <td width=\"19%\">{{element.rezultat}}</td>\r\n                    <td width=\"19%\">{{element.jedinica}}</td>\r\n                    <td\r\n                      width=\"19%\"\r\n                    >{{Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, $store.state.site, element.interp, element.extend, spec)[4]}}</td>\r\n                    <td width=\"19%\">{{element.datum}}</td>\r\n                    <td width=\"15%\">{{element.vrijeme}}</td>\r\n                    <td width=\"9%\" align=\"middle\">\r\n                      <i\r\n                        v-bind:class=\"{'fa fa-exclamation-triangle icon-right input-icon error-icon' : Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, $store.state.site, element.interp, element.extend, spec)[5] === 'Red'}\"\r\n                      ></i>\r\n                      <i\r\n                        v-bind:class=\"{'fa fa-check success-icon icon-right input-icon' : Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, $store.state.site, element.interp, element.extend, spec)[5] === 'Green'}\"\r\n                      ></i>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n              <div style=\"text-align:center;\">\r\n                <span class=\"circle badge-info\"></span>\r\n                {{table_header}}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row\" v-if=\"!Procjena.length && !graph\">\r\n          <div class=\"col-md-12\">\r\n            <div>\r\n              <span style=\"color: #e34a4a;\">{{\"Nema podataka.\"}}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row\" v-if=\"showLineChart && graph\">\r\n          <div class=\"col-md-12\">\r\n            <line-chart :options=\"optionsLineChart\" :data=\"dataLineChart\" type=\"line\"></line-chart>\r\n          </div>\r\n        </div>\r\n        <div class=\"row\" v-if=\"!showLineChart && graph\">\r\n          <div v-if=\"!showLineChart && !spinner\" class=\"col-md-12\">\r\n            <div>\r\n              <span style=\"color: #e34a4a;\">{{\"Nema podataka.\"}}</span>\r\n            </div>\r\n          </div>\r\n          <div style=\"min-height: 400px;\" v-if=\"!showLineChart && spinner\" class=\"col-md-12\">\r\n            <div\r\n              style=\"display:flex; flex-direction: row; justify-content: center; align-items: center\"\r\n            >\r\n              <div style=\"float:left;\"></div>\r\n              <span style=\"vertical-align:middle; \">\r\n                <atom-spinner\r\n                  style=\"opacity: 0.25;\"\r\n                  :animation-duration=\"1000\"\r\n                  :size=\"300\"\r\n                  :color=\"'#4ae387'\"\r\n                />\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </patient-evaluation-multi>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12\">\r\n        <div class=\"col-md-6\">\r\n          <loading\r\n            :active.sync=\"isLoading\"\r\n            :can-cancel=\"false\"\r\n            :on-cancel=\"onCancel\"\r\n            color=\"#4ae387\"\r\n            :is-full-page=\"fullPage\"\r\n          ></loading>\r\n        </div>\r\n        <div class=\"col-md-6\">\r\n          <button v-if=\"false\" @click.prevent=\"Test\">{{'Loading...'}}</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport Vue from \"vue\";\r\nimport router from \"../../router\";\r\nimport store from \"vuex-store\";\r\nimport utils from \"services/utils\";\r\nimport { http } from \"../../../config/config.js\";\r\nimport { barcode } from \"../../../config/config.js\";\r\nimport BadgeColumn from \"./BadgeColumn.vue\";\r\nimport { bus } from \"../../main\";\r\nimport { server } from \"../../../config/config.js\";\r\nimport { Interpretation } from \"./functions/reference.js\";\r\nimport izbornik from \"./data-izbornik/izbornik\";\r\n\r\nimport Loading from \"vue-loading-overlay\";\r\nimport \"vue-loading-overlay/dist/vue-loading.css\";\r\n\r\nimport LineChart from \"../vuestic-components/vuestic-chart/chart-types/LineChart\";\r\nimport { AtomSpinner } from \"epic-spinners\";\r\nimport PDFObject from \"pdfobject\";\r\n\r\nVue.component(\"line-chart\", LineChart);\r\nVue.component(\"badge-column\", BadgeColumn);\r\n\r\nexport default {\r\n  \r\n  name: \"collapse-obrada\",\r\n\r\n  data() {\r\n    return {\r\n\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* \r\n\r\n\r\n\r\n\r\n\r\n| Microbiology Data\r\n\r\n\r\n\r\n\r\n\r\n*/\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n\r\n      AllowGetSample: true,\r\n      MicrobiologyOrder: false,\r\n      MicrobiologySample: false,\r\n      ModalNegative: false,\r\n      ModalPositive: false,\r\n      ModalPositiveCondition: false,\r\n      ShowAllBacteries: false,\r\n      ShowAntibiotics: false,\r\n      ShowBacteries: false,\r\n      BacteryTabs: [\"\"],\r\n      CurrentTab: \"\",\r\n      CurrentTest: \"\",\r\n      MicrobiologyModalHeader: \"Predefinisani rezultati\",\r\n      SelectedBacteries: [],\r\n      NegativeResultSelection: \"\",\r\n      PositiveResultSelection: \"\",\r\n      MicrobiologyScenario: \"Unknown\",\r\n      Antibiotics: [],\r\n      TemporaryAntibiotics: [],\r\n      TemporaryBacteries: [],\r\n      TemporaryBacteriesAdd: [],\r\n      Antibiograms: [],\r\n      Bacteries: [],\r\n\r\n      MicrobiologyResult: {\r\n        negative: null,\r\n        positive: null,\r\n        BUG: null,\r\n        F_RESULT: \"\",\r\n        M_RESULT: [],\r\n        DefaultBacteries: [],\r\n        RemainingBacteries: [],\r\n        NegativeDescriptions: [],\r\n        PositiveDescriptions: []\r\n      },\r\n\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* \r\n\r\n\r\n\r\n\r\n\r\nEnd of Microbiology Data |\r\n\r\n\r\n\r\n\r\n\r\n*/\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n\r\n      // Patient evaluation, Multi\r\n\r\n      multiparam_izbor: \"\",\r\n      multiparam_id: \"\",\r\n      analit: {},\r\n      multiparams: [],\r\n      Response: {},\r\n      spinner: false,\r\n      multiparam_izbornik: [],\r\n      warning: { analiza: \"\", text: \"\", control: \"\" },\r\n      main: false,\r\n      show: true,\r\n      pdf: false,\r\n      header: \"\",\r\n      lokacija: {},\r\n      timestamp: \"\",\r\n      pacijent: \"\",\r\n      ime: \"\",\r\n      prezime: \"\",\r\n      jmbg: \"\",\r\n      pid: \"\",\r\n      sid: \"\",\r\n      email: \"\",\r\n      email_tmp: \"\",\r\n      verificiran: false,\r\n      email_button: false,\r\n      final_pdf: false,\r\n      odobren: false,\r\n      approved: 0,\r\n      verified: 0,\r\n      partials: [],\r\n      partials_condition: false,\r\n      count: 0,\r\n      nalaz: {},\r\n      report: {},\r\n      path: \"\",\r\n      url: \"\",\r\n      uzorci: [],\r\n      vise: [],\r\n      samples: [],\r\n      sample_status: \"\",\r\n      labassay: \"\",\r\n      multi_test: \"\",\r\n      multi_rezultati: [],\r\n      check: \"\",\r\n      link: \"\",\r\n      spec: \"*\",\r\n      testovi: [],\r\n      rezultati: [],\r\n      analysers: [],\r\n      analyser: {},\r\n      analiza: {},\r\n      analyser_selected: {},\r\n      analyser_patient: {},\r\n      analitiprikaz: [],\r\n      analiti: [],\r\n      naslov: \"\",\r\n      calculated: false,\r\n      show_table: false,\r\n      sample: {},\r\n      resdata: {},\r\n      email_changed: false,\r\n      Previous: { pid: null },\r\n      Next: { pid: null },\r\n      Results: [],\r\n      Datum: { today: null, query: null, next: null, previous: null },\r\n      pagination: false,\r\n      forward_disabled: false,\r\n      backward_disabled: false,\r\n      data_length: 0,\r\n      data_min: 1,\r\n      data_pid: 0,\r\n      data_spol: \"\",\r\n      query_date: \"\",\r\n      today_date: \"\",\r\n      reference: {},\r\n      interpretacije: [\r\n        \"none\",\r\n        \"A\",\r\n        \"ogtt\",\r\n        \"insul\",\r\n        \"less\",\r\n        \"infekc\",\r\n        \"grt\",\r\n        \"grte\",\r\n        \"neg\",\r\n        \"urbl\",\r\n        \"reakt\",\r\n        \"norm\",\r\n        \"norma\",\r\n        \"ured\",\r\n        \"plus\",\r\n        \"morf\",\r\n        \"titar\",\r\n        \"tsh\",\r\n        \"trg\",\r\n        \"hol\",\r\n        \"hdl\",\r\n        \"ldl\",\r\n        \"fpsa\",\r\n        \"sediment\",\r\n        \"bistar\",\r\n        \"boja\",\r\n        \"nesto\",\r\n        \"exists\",\r\n        \"blst\",\r\n        \"leu\",\r\n        \"spec\"\r\n      ],\r\n\r\n      // Toasts\r\n\r\n      toastText: \"\",\r\n      toastIcon: \"\",\r\n      toastPosition: \"\",\r\n      toastDuration: 2500,\r\n      isToastFullWidth: false,\r\n      className: \"\",\r\n\r\n      isLoading: false,\r\n      fullPage: true,\r\n\r\n      // Evaluation\r\n\r\n      analiza_eval: {},\r\n      showLineChart: false,\r\n      optionsLineChart: {},\r\n      dataLineChart: {},\r\n      Procjena: [],\r\n\r\n      // Settings\r\n\r\n      jedinica: \"\",\r\n      jedinice: [],\r\n      graph: false,\r\n      table_header: \"\"\r\n    };\r\n  },\r\n  components: {\r\n    Loading,\r\n    AtomSpinner\r\n  },\r\n\r\n  watch: {\r\n    email: function() {\r\n      if (this.email.trim() != this.email_tmp.trim()) {\r\n        this.email_changed = true;\r\n      }\r\n    },\r\n    \r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* \r\n\r\n\r\n\r\n\r\n\r\n| Microbiology Watch\r\n\r\n\r\n\r\n\r\n\r\n*/\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n\r\n    ModalNegative: function() {\r\n      if (this.ModalNegative) {\r\n\r\n        console.log(\"Izbor: negativan\");\r\n\r\n        this.MicrobiologyModalHeader = \"Predefinisani rezultati\";\r\n        if (this.MicrobiologyScenario.includes(\"MANB\")) {\r\n          this.ModalPositiveCondition = true;\r\n        } else {\r\n          this.ModalPositiveCondition = false;\r\n        }\r\n      }\r\n    },\r\n\r\n    ModalPositive: function() {\r\n      if (this.ModalPositive) {\r\n\r\n        console.log(\"Izbor: pozitivan\");\r\n\r\n        if (this.MicrobiologyScenario === \"MAIBNoR\") {\r\n          this.MicrobiologyModalHeader = \"Bakterije\";\r\n        } else {\r\n          this.MicrobiologyModalHeader = \"Predefinisani rezultati\";\r\n        }\r\n\r\n        if (this.MicrobiologyScenario.includes(\"MANB\")) {\r\n          this.ModalPositiveCondition = true;\r\n        } else {\r\n          this.ModalPositiveCondition = false;\r\n        }\r\n      }\r\n    },\r\n\r\n    MicrobiologyScenario: function() {\r\n      switch (this.MicrobiologyScenario) {\r\n        case \"MAIBNoR\":\r\n          // Ima definisan skup bakterija - Nema Rezultat\r\n          this.ModalNegative = false;\r\n          this.ModalPositive = false;\r\n          this.ModalPositiveCondition = false;\r\n          this.MicrobiologyModalHeader = \"Predefinisani rezultati\";\r\n          this.NegativeResultSelection = \"\";\r\n          this.PositiveResultSelection = \"\";\r\n          this.SelectedBacteries = [];\r\n          this.ShowAllBacteries = false;\r\n\r\n          break;\r\n\r\n        case \"MAIBNeR\":\r\n          // Ima definisan skup bakterija - Negativan Rezultat\r\n          this.SelectedBacteries = [];\r\n\r\n          break;\r\n\r\n        case \"MAIBPoR\":\r\n          // Ima definisan skup bakterija - Pozitivan Rezultat\r\n          break;\r\n\r\n        case \"MANBNoR\":\r\n          // Nema definisan skup bakterija - Nema Rezultat\r\n          this.ModalNegative = false;\r\n          this.ModalPositive = false;\r\n          this.ModalPositiveCondition = false;\r\n          this.MicrobiologyModalHeader = \"Predefinisani rezultati\";\r\n          this.NegativeResultSelection = \"\";\r\n          this.PositiveResultSelection = \"\";\r\n          this.SelectedBacteries = [];\r\n          this.ShowAllBacteries = false;\r\n\r\n          break;\r\n\r\n        case \"MANBNeR\":\r\n          // Nema definisan skup bakterija - Negativan Rezultat\r\n          this.SelectedBacteries = [];\r\n\r\n          break;\r\n\r\n        case \"MANBPoR\":\r\n          // Nema definisan skup bakterija - Pozitivan Rezultat\r\n          this.SelectedBacteries = [];\r\n\r\n          break;\r\n\r\n        default:\r\n          // console.warn(\"Nije Mikrobiološka analiza.\");\r\n          break;\r\n      }\r\n    }\r\n\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* \r\n\r\n\r\n\r\n\r\n\r\nEnd of Microbiology Watch |\r\n\r\n\r\n\r\n\r\n\r\n*/\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n\r\n  },\r\n  beforeCreate() {\r\n    http\r\n      .get(\r\n        \"postavke/jedinice/mount/list?token=\" +\r\n          this.$store.state.token +\r\n          \"&site=\" +\r\n          this.$store.state.site,\r\n        {}\r\n      )\r\n      .then(res => {\r\n        this.jedinice = res.data.jedinica;\r\n      });\r\n  },\r\n  mounted() {\r\n    bus.$on(\"Parametar\", data => {\r\n\r\n      // bus.$emit(\"Switch\");\r\n\r\n      this.spinner = true;\r\n\r\n      this.analit = {};\r\n\r\n      this.multiparams.forEach(element => {\r\n        if (element.opis === data) {\r\n          this.analit = element;\r\n          this.multiparam_id = element._id;\r\n          this.multiparam_izbor = data;\r\n        }\r\n      });\r\n\r\n      if (_.isEmpty(this.analit)) {\r\n\r\n        // console.warn(\"Empty object.\");\r\n\r\n      } else {\r\n        if (!_.isEmpty(this.Response)) {\r\n          this.showLineChart = false;\r\n          let palette = store.getters.palette;\r\n\r\n          this.Procjena = [];\r\n\r\n          var obj = {};\r\n          var count = 0;\r\n\r\n          this.Response.Multi.forEach(element => {\r\n            count++;\r\n            element.multi.forEach(param => {\r\n              if (\r\n                this.multiparam_id == param.labassay &&\r\n                param.rezultat[0].rezultat_f.trim() != \"\"\r\n              ) {\r\n                obj.rezultat = param.rezultat[0].rezultat_f;\r\n                obj.jedinica = param.rezultat[0].jedinice_f;\r\n                obj.analit = \"Nema podataka\";\r\n                obj.interp = param.interp;\r\n                obj.extend = param.extend;\r\n                obj.refd = param.refd;\r\n                obj.refg = param.refg;\r\n                obj.sid = \"Nema podataka\";\r\n                obj.updated_at = new Date(param.rezultat[0].updated_at);\r\n\r\n                var datum =\r\n                  JSON.stringify(new Date(param.rezultat[0].updated_at)).slice(\r\n                    9,\r\n                    11\r\n                  ) +\r\n                  \".\" +\r\n                  JSON.stringify(new Date(param.rezultat[0].updated_at)).slice(\r\n                    6,\r\n                    8\r\n                  ) +\r\n                  \".\" +\r\n                  JSON.stringify(new Date(param.rezultat[0].updated_at)).slice(\r\n                    1,\r\n                    5\r\n                  );\r\n                var time = JSON.stringify(\r\n                  new Date(\r\n                    new Date(param.rezultat[0].updated_at).getTime() -\r\n                      new Date(\r\n                        param.rezultat[0].updated_at\r\n                      ).getTimezoneOffset() *\r\n                        60000\r\n                  ).toISOString()\r\n                ).substring(12, 17);\r\n                obj.datum = datum;\r\n                obj.vrijeme = time;\r\n                obj.kontrola = this.Interpretacija(\r\n                  \"\",\r\n                  obj.rezultat,\r\n                  obj.jedinica,\r\n                  obj.refd,\r\n                  obj.refg,\r\n                  this.$store.state.site,\r\n                  obj.interp,\r\n                  obj.extend,\r\n                  this.spec\r\n                )[5];\r\n\r\n                this.Procjena.push(obj);\r\n                obj = {};\r\n              }\r\n            });\r\n\r\n            if (count == this.Response.Multi.length) {\r\n              this.Procjena.sort(function(a, b) {\r\n                return Date.parse(a.updated_at) == Date.parse(b.updated_at)\r\n                  ? 0\r\n                  : +(Date.parse(a.updated_at) < Date.parse(b.updated_at)) ||\r\n                      -1;\r\n              });\r\n\r\n              // Line Chart\r\n\r\n              var data = [];\r\n\r\n              if (this.Procjena.length) {\r\n                this.optionsLineChart = {\r\n                  responsive: true,\r\n                  maintainAspectRatio: false,\r\n                  title: {\r\n                    display: true,\r\n                    text: \"\"\r\n                  },\r\n                  scales: {\r\n                    xAxes: [\r\n                      {\r\n                        display: true,\r\n                        gridLines: {\r\n                          display: true,\r\n                          color: \"#eee\"\r\n                        }\r\n                      }\r\n                    ],\r\n                    yAxes: [\r\n                      {\r\n                        display: true,\r\n                        gridLines: {\r\n                          display: true,\r\n                          color: \"#eee\"\r\n                        }\r\n                      }\r\n                    ]\r\n                  }\r\n                };\r\n\r\n                var labels = [];\r\n                var kontrola = [];\r\n                var temp = \"\";\r\n\r\n                this.Procjena.forEach(element => {\r\n                  if (!isNaN(element.rezultat.trim())) {\r\n                    switch (element.kontrola) {\r\n                      case \"Red\":\r\n                        kontrola.push(palette.danger);\r\n                        break;\r\n                      case \"Green\":\r\n                        kontrola.push(palette.primary);\r\n                        break;\r\n                      case \"Yellow\":\r\n                        kontrola.push(palette.warning);\r\n                        break;\r\n\r\n                      default:\r\n                        kontrola.push(palette.info);\r\n                        break;\r\n                    }\r\n\r\n                    labels.push(element.datum);\r\n                    data.push(element.rezultat);\r\n                  }\r\n                });\r\n\r\n                this.dataLineChart = {\r\n                  labels: labels,\r\n                  datasets: [\r\n                    {\r\n                      label: this.table_header,\r\n                      backgroundColor: utils.hex2rgb(palette.info, 0.5).css,\r\n                      pointBorderColor: kontrola,\r\n                      pointBackgroundColor: kontrola,\r\n                      borderColor: palette.transparent,\r\n                      data: data\r\n                    }\r\n                  ]\r\n                };\r\n\r\n                if (data.length) {\r\n                  setTimeout(() => {\r\n                    this.showLineChart = true;\r\n                  }, 500);\r\n                }\r\n              } else {\r\n\r\n                // console.warn(\"No data.\");\r\n\r\n                this.spinner = false;\r\n              }\r\n            }\r\n          });\r\n        } else {\r\n\r\n          // console.warn(\"Response not loaded.\");\r\n\r\n        }\r\n      }\r\n    });\r\n\r\n    bus.$on(\"graph\", () => {\r\n      this.Procjena.sort(function(a, b) {\r\n        return Date.parse(a.updated_at) == Date.parse(b.updated_at)\r\n          ? 0\r\n          : +(Date.parse(a.updated_at) < Date.parse(b.updated_at)) || -1;\r\n      });\r\n\r\n      var data = [];\r\n\r\n      if (this.Procjena.length) {\r\n        let palette = store.getters.palette;\r\n        this.optionsLineChart = {\r\n          responsive: true,\r\n          maintainAspectRatio: false,\r\n          title: {\r\n            display: true,\r\n            text: \"\"\r\n          },\r\n          scales: {\r\n            xAxes: [\r\n              {\r\n                display: true,\r\n                gridLines: {\r\n                  display: true,\r\n                  color: \"#eee\"\r\n                }\r\n              }\r\n            ],\r\n            yAxes: [\r\n              {\r\n                display: true,\r\n                gridLines: {\r\n                  display: true,\r\n                  color: \"#eee\"\r\n                }\r\n              }\r\n            ]\r\n          }\r\n        };\r\n\r\n        var labels = [];\r\n        var kontrola = [];\r\n        var temp = \"\";\r\n\r\n        this.Procjena.forEach(element => {\r\n          if (!isNaN(element.rezultat.trim())) {\r\n            switch (element.kontrola) {\r\n              case \"Red\":\r\n                kontrola.push(palette.danger);\r\n                break;\r\n              case \"Green\":\r\n                kontrola.push(palette.primary);\r\n                break;\r\n              case \"Yellow\":\r\n                kontrola.push(palette.warning);\r\n                break;\r\n\r\n              default:\r\n                kontrola.push(palette.info);\r\n                break;\r\n            }\r\n\r\n            labels.push(element.datum);\r\n            data.push(element.rezultat);\r\n          }\r\n        });\r\n\r\n        this.dataLineChart = {\r\n          labels: labels,\r\n          datasets: [\r\n            {\r\n              label: this.analiza_eval.ime + \" | \" + this.analiza_eval.analit,\r\n              backgroundColor: utils.hex2rgb(palette.info, 0.5).css,\r\n              pointBorderColor: kontrola,\r\n              pointBackgroundColor: kontrola,\r\n              borderColor: palette.transparent,\r\n              data: data\r\n            }\r\n          ]\r\n        };\r\n\r\n        if (data.length) {\r\n          this.showLineChart = true;\r\n        }\r\n      } else {\r\n\r\n        // console.warn(\"No data.\");\r\n\r\n      }\r\n      this.graph = false;\r\n    });\r\n\r\n    bus.$on(\"table\", () => {\r\n      this.Procjena.sort(function(a, b) {\r\n        return Date.parse(a.updated_at) == Date.parse(b.updated_at)\r\n          ? 0\r\n          : +(Date.parse(a.updated_at) > Date.parse(b.updated_at)) || -1;\r\n      });\r\n\r\n      var data = [];\r\n\r\n      if (this.Procjena.length) {\r\n        let palette = store.getters.palette;\r\n        this.optionsLineChart = {\r\n          responsive: true,\r\n          maintainAspectRatio: false,\r\n          title: {\r\n            display: true,\r\n            text: \"\"\r\n          },\r\n          scales: {\r\n            xAxes: [\r\n              {\r\n                display: true,\r\n                gridLines: {\r\n                  display: true,\r\n                  color: \"#eee\"\r\n                }\r\n              }\r\n            ],\r\n            yAxes: [\r\n              {\r\n                display: true,\r\n                gridLines: {\r\n                  display: true,\r\n                  color: \"#eee\"\r\n                }\r\n              }\r\n            ]\r\n          }\r\n        };\r\n\r\n        var labels = [];\r\n        var kontrola = [];\r\n        var temp = \"\";\r\n\r\n        this.Procjena.forEach(element => {\r\n          if (!isNaN(element.rezultat.trim())) {\r\n            switch (element.kontrola) {\r\n              case \"Red\":\r\n                kontrola.push(palette.danger);\r\n                break;\r\n              case \"Green\":\r\n                kontrola.push(palette.primary);\r\n                break;\r\n              case \"Yellow\":\r\n                kontrola.push(palette.warning);\r\n                break;\r\n\r\n              default:\r\n                kontrola.push(palette.info);\r\n                break;\r\n            }\r\n\r\n            labels.push(element.datum);\r\n            data.push(element.rezultat);\r\n          }\r\n        });\r\n\r\n        this.dataLineChart = {\r\n          labels: labels,\r\n          datasets: [\r\n            {\r\n              label: this.analiza_eval.ime + \" | \" + this.analiza_eval.analit,\r\n              backgroundColor: utils.hex2rgb(palette.info, 0.5).css,\r\n              pointBorderColor: kontrola,\r\n              pointBackgroundColor: kontrola,\r\n              borderColor: palette.transparent,\r\n              data: data\r\n            }\r\n          ]\r\n        };\r\n\r\n        if (data.length) {\r\n          this.showLineChart = true;\r\n        }\r\n      } else {\r\n\r\n        // console.warn(\"No data.\");\r\n\r\n      }\r\n      this.graph = true;\r\n    });\r\n\r\n    bus.$on(\"trash\", data => {\r\n      this.sid = data.sid;\r\n      this.$refs.staticModalDeleteSample.open();\r\n    });\r\n\r\n    bus.$on(\"edit\", data => {\r\n      this.sid = data.sid;\r\n      this.$refs.staticModalEditSample.open();\r\n    });\r\n\r\n    bus.$on(\"comment\", data => {\r\n      this.sid = data.sid;\r\n      this.$refs.staticModalComment.open();\r\n    });\r\n\r\n    bus.$on(\"barcode\", data => {\r\n      this.BarcodePrint(data);\r\n    });\r\n\r\n    bus.$on(\"save\", data => {\r\n      this.SaveResults(this.rezultati, \"save\");\r\n    });\r\n\r\n    bus.$on(\"check\", data => {\r\n      this.Approve(this.rezultati);\r\n    });\r\n\r\n    bus.$on(\"verify\", data => {\r\n      this.Verify(data, \"verify\");\r\n    });\r\n\r\n    bus.$on(\"undo\", data => {\r\n      this.Disapprove(this.rezultati, \"undo\");\r\n    });\r\n\r\n    bus.$on(\"unlock\", data => {\r\n      this.UnVerify(data, \"unlock\");\r\n    });\r\n\r\n    bus.$on(\"Nalaz\", data => {\r\n      if (!data.final_pdf) {\r\n        this.$refs.staticModalError.open();\r\n      } else {\r\n        this.path = this.timestamp + \".pdf\";\r\n\r\n        this.url = server + \"nalazi/\" + this.path;\r\n\r\n        var options = {\r\n          width: \"100%\",\r\n          height: \"800px\"\r\n        };\r\n        PDFObject.embed(this.url, \"#pdf-container\", options);\r\n\r\n        this.email_button = true;\r\n        this.main = false;\r\n        this.pdf = true;\r\n      }\r\n    });\r\n\r\n    bus.$on(\"pdf\", data => {\r\n      if (!data.pdf_exists) {\r\n        this.$refs.staticModalError.open();\r\n      } else {\r\n        this.path = \"samples/\" + data.sid + \".pdf\";\r\n\r\n        this.url = server + \"nalazi/samples/\" + data.sid + \".pdf\";\r\n\r\n        var options = {\r\n          width: \"100%\",\r\n          height: \"800px\"\r\n        };\r\n        PDFObject.embed(this.url, \"#pdf-container\", options);\r\n\r\n        this.main = false;\r\n        this.pdf = true;\r\n      }\r\n    });\r\n\r\n    bus.$on(\"Sample\", data => {\r\n\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* \r\n\r\n\r\n\r\n\r\n\r\n| Microbiology Get Sample Check\r\n\r\n\r\n\r\n\r\n\r\n*/\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n\r\n      if (data.tip.includes(\"Mikrobiologija\")) {\r\n        this.MicrobiologySample = true;\r\n      } else {\r\n        this.MicrobiologySample = false;\r\n      }\r\n\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* \r\n\r\n\r\n\r\n\r\n\r\nEnd of Microbiology Get Sample Check |\r\n\r\n\r\n\r\n\r\n\r\n*/\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      this.$store.dispatch(\"SetSample\", data.sid);\r\n      this.GetSingleSample(data);\r\n    });\r\n\r\n    bus.$on(\"Deleted\", data => {\r\n      this.DeletedSample(data);\r\n    });\r\n\r\n    bus.$on(\"Edited\", data => {\r\n      this.EditSample(data);\r\n    });\r\n\r\n    bus.$on(\"SaveMulti\", data => {\r\n      this.SaveMultiResults(this.analiti, data);\r\n    });\r\n\r\n    bus.$on(\"Mail\", () => {\r\n      this.SendMail(this.email);\r\n    });\r\n\r\n    bus.$on(\"Error\", () => {\r\n\r\n      // Generate new Report\r\n      console.warn(\"Greška prilikom čitanja nalaza.\");      \r\n\r\n    });\r\n\r\n    bus.$on(\"Analyser\", data => {\r\n      this.AnalyserSelected(data);\r\n    });\r\n\r\n    bus.$on(\"Sljedeci\", () => {\r\n      this.Sljedeci();\r\n    });\r\n\r\n    bus.$on(\"Prethodni\", () => {\r\n      this.Prethodni();\r\n    });\r\n\r\n    bus.$on(\"Search\", () => {\r\n      this.$refs.staticModalFind.open();\r\n    });\r\n\r\n    bus.$on(\"Push\", data => {\r\n      if (this.$route.params.id != data) {\r\n        this.Results.forEach(element => {\r\n          if (element.pid == data) {\r\n            router.push(\r\n              \"/obrada/rezultati/\" +\r\n                element.patient +\r\n                \"/\" +\r\n                element.pid +\r\n                \"?date=\" +\r\n                element.date\r\n            );\r\n          }\r\n        });\r\n      } else {\r\n\r\n        // console.warn(\"No change required.\");\r\n      }\r\n    });\r\n\r\n    bus.$on(\"Reference\", () => {\r\n      this.reference.dref = Math.abs(\r\n        this.reference.dref.replace(/,/g, \".\").trim()\r\n      );\r\n      this.reference.gref = Math.abs(\r\n        this.reference.gref.replace(/,/g, \".\").trim()\r\n      );\r\n\r\n      if (this.reference.interp != \"spec\") {\r\n        this.reference.extend = this.reference.extend.replace(\r\n          /(\\r\\n|\\n|\\r)/gm,\r\n          \" \"\r\n        );\r\n      }\r\n\r\n      if (\r\n        isNaN(this.reference.dref) ||\r\n        isNaN(this.reference.gref) ||\r\n        this.reference.dref === \"\" ||\r\n        this.reference.gref === \"\" ||\r\n        this.reference.dref > this.reference.gref\r\n      ) {\r\n\r\n        // console.warn(\"Invalid value.\");\r\n\r\n      } else {\r\n        document.getElementById(this.$store.state.sid).click();\r\n\r\n        http\r\n          .post(\"/rezultati/odobravanje/reference/\", {\r\n            email: this.$store.state.userId,\r\n            token: this.$store.state.token,\r\n            site: this.$store.state.site,\r\n            reference: this.reference\r\n          })\r\n          .then(res => {\r\n            setTimeout(() => {\r\n              document.getElementById(this.$store.state.sid).click();\r\n            }, 500);\r\n          });\r\n      }\r\n    });\r\n\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* \r\n\r\n\r\n\r\n\r\n\r\n| Microbiology Bus from Modal\r\n\r\n\r\n\r\n\r\n\r\n*/\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n\r\n    bus.$on(\"Antibiotik\", data => {\r\n      // console.log(\"Prikaz izbornika antibiotika.\");\r\n      if (\r\n        this.sample.status != \"ODOBREN\" &&\r\n        this.sample.status != \"VERIFICIRAN\"\r\n      ) {\r\n        this.TemporaryAntibiotics = [];\r\n        this.TemporaryBacteries = [];\r\n        this.TemporaryBacteriesAdd = [];\r\n\r\n        this.Antibiotics.forEach(element => {\r\n          element.chosen = false;\r\n          element.disabled = false;\r\n        });\r\n\r\n        this.SelectedBacteries.forEach(selected => {\r\n          // Bacteria name must be Unique.\r\n          if (selected.opis == data) {\r\n            selected.antibiogram.antibiotici.forEach(ant => {\r\n              this.Antibiotics.forEach(antibiotik => {\r\n                if (antibiotik._id == ant._id) {\r\n                  antibiotik.disabled = true;\r\n                  antibiotik.chosen = true;\r\n                  antibiotik.rezultat = ant.rezultat;\r\n                }\r\n              });\r\n            });\r\n          }\r\n        });\r\n\r\n        this.ShowAntibiotics = true;\r\n      }\r\n    });\r\n\r\n    bus.$on(\"tabChanged\", data => {\r\n      // console.log(\"Tab changed.\");\r\n      this.CurrentTab = data;\r\n      // console.log(\"Active tab: \" + this.CurrentTab)\r\n    });\r\n\r\n    bus.$on(\"AllowClick\", data => {\r\n      if (this.MicrobiologySample) {\r\n        if (data) {\r\n          this.AllowGetSample = false;\r\n          // console.log(\"Close sample.\")\r\n        } else {\r\n          this.AllowGetSample = true;\r\n          // console.log(\"Open sample.\");\r\n        }\r\n      }\r\n    });\r\n\r\n    bus.$on(\"MicroReset\", () => {\r\n      \r\n      console.log(\"Reset: \" + this.$store.state.sid);\r\n      var Scenario = this.MicrobiologyScenario;\r\n      \r\n      this.rezultati[0].rezultat = \"\";\r\n      this.rezultati[0].rezultat_m = [];\r\n      this.rezultati[0].realizovan = false;\r\n\r\n      this.MicrobiologyResult.DefaultBacteries.forEach(element => {\r\n        element.chosen = false;\r\n      });\r\n\r\n      this.MicrobiologyResult.RemainingBacteries.forEach(element => {\r\n        element.chosen = false;\r\n      });\r\n\r\n      this.SelectedBacteries = [];\r\n      this.ShowAllBacteries = false;\r\n\r\n      if (this.MicrobiologyScenario.includes(\"MAIB\")) {\r\n        this.main = false;\r\n        // console.log(this.rezultati)\r\n\r\n        http\r\n          .post(\"/rezultati/odobravanje/sacuvaj/\" + this.$store.state.sid, {\r\n            email: this.$store.state.userId,\r\n            token: this.$store.state.token,\r\n            site: this.$store.state.site,\r\n            rezultati: this.rezultati\r\n          })\r\n          .then(res => {\r\n            http\r\n              .get(\r\n                \"rezultati/odobravanje/samples/\" +\r\n                  this.$route.params.patient +\r\n                  \"/\" +\r\n                  this.$route.params.id +\r\n                  \"?token=\" +\r\n                  this.$store.state.token +\r\n                  \"&site=\" +\r\n                  this.$store.state.site +\r\n                  \"&date=\" +\r\n                  this.$route.query.date,\r\n                {}\r\n              )\r\n              .then(res => {\r\n\r\n                // console.log(res.data)\r\n                this.uzorci = [];\r\n\r\n                res.data.results.forEach(element => {\r\n\r\n                  if(this.$store.state.sid === element.id){\r\n                    console.log(element.rezultati[0].rezultat[0])\r\n                  }\r\n\r\n                  var check = 0;\r\n                  var zaprimljen = 0;\r\n                  var realizovan = 0;\r\n\r\n                  if (element.verificiran) {\r\n                    var status_uzorka = \"VERIFICIRAN\";\r\n                  } else {\r\n                    var status_uzorka = element.status;\r\n                  }\r\n\r\n                  element.rezultati.forEach(test => {\r\n                    check++;\r\n\r\n                    if (\r\n                      test.rezultat[test.rezultat.length - 1].rezultat_f === \"\"\r\n                    ) {\r\n                      zaprimljen++;\r\n                    }\r\n\r\n                    if (\r\n                      test.rezultat[test.rezultat.length - 1].rezultat_f != \"\"\r\n                    ) {\r\n                      realizovan++;\r\n                    }\r\n\r\n                    if (check === element.rezultati.length) {\r\n\r\n                      // console.log(\"Provjera: Reset sample\")\r\n\r\n                      if (status_uzorka === \"VERIFICIRAN\") {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"VERIFICIRAN\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false\r\n                        });\r\n                      } else if (status_uzorka === \"ODOBREN\") {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"ODOBREN\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false\r\n                        });\r\n                      } else if (zaprimljen < 1) {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"REALIZOVAN\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false\r\n                        });\r\n                      } else if (realizovan < 1) {\r\n                        var stat = \"ZAPRIMLJEN\";\r\n                        if (element.sample.tip.includes(\"Mikrobiologija\")) {\r\n                          if (\r\n                            element.rezultati[0].rezultat[0].rezultat_m.length\r\n                          ) {\r\n                            stat = \"REALIZOVAN\";\r\n                          }\r\n                        }\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: stat,\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false\r\n                        });\r\n                      } else {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"U OBRADI\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false\r\n                        });\r\n                      }\r\n                    }\r\n                  });\r\n                });\r\n\r\n                this.uzorci = this.uzorci.sort(function(a, b) {\r\n                  return a.sid.localeCompare(b.sid, undefined, {\r\n                    numeric: true,\r\n                    sensitivity: \"base\"\r\n                  });\r\n                });\r\n              })\r\n              .then(res => {\r\n                this.MicrobiologyScenario = \"MAIBNoR\";\r\n                console.log(\"Scenario: \" + Scenario + \" - > \" + this.MicrobiologyScenario)\r\n                this.main = true;\r\n                bus.$emit(\"CloseMicroReset\");\r\n              });\r\n          });\r\n      } else if (this.MicrobiologyScenario.includes(\"MANB\")) {\r\n        this.main = false;\r\n\r\n        http\r\n          .post(\"/rezultati/odobravanje/sacuvaj/\" + this.$store.state.sid, {\r\n            email: this.$store.state.userId,\r\n            token: this.$store.state.token,\r\n            site: this.$store.state.site,\r\n            rezultati: this.rezultati\r\n          })\r\n          .then(res => {\r\n            http\r\n              .get(\r\n                \"rezultati/odobravanje/samples/\" +\r\n                  this.$route.params.patient +\r\n                  \"/\" +\r\n                  this.$route.params.id +\r\n                  \"?token=\" +\r\n                  this.$store.state.token +\r\n                  \"&site=\" +\r\n                  this.$store.state.site +\r\n                  \"&date=\" +\r\n                  this.$route.query.date,\r\n                {}\r\n              )\r\n              .then(res => {\r\n\r\n                // console.log(res.data)\r\n                this.uzorci = [];\r\n\r\n                res.data.results.forEach(element => {\r\n\r\n                  if(this.$store.state.sid === element.id){\r\n                    console.log(element.rezultati[0].rezultat[0])\r\n                  }\r\n\r\n                  var check = 0;\r\n                  var zaprimljen = 0;\r\n                  var realizovan = 0;\r\n\r\n                  if (element.verificiran) {\r\n                    var status_uzorka = \"VERIFICIRAN\";\r\n                  } else {\r\n                    var status_uzorka = element.status;\r\n                  }\r\n\r\n                  element.rezultati.forEach(test => {\r\n                    check++;\r\n\r\n                    if (\r\n                      test.rezultat[test.rezultat.length - 1].rezultat_f === \"\"\r\n                    ) {\r\n                      zaprimljen++;\r\n                    }\r\n\r\n                    if (\r\n                      test.rezultat[test.rezultat.length - 1].rezultat_f != \"\"\r\n                    ) {\r\n                      realizovan++;\r\n                    }\r\n\r\n                    if (check === element.rezultati.length) {\r\n                      if (status_uzorka === \"VERIFICIRAN\") {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"VERIFICIRAN\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false\r\n                        });\r\n                      } else if (status_uzorka === \"ODOBREN\") {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"ODOBREN\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false\r\n                        });\r\n                      } else if (zaprimljen < 1) {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"REALIZOVAN\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false\r\n                        });\r\n                      } else if (realizovan < 1) {\r\n                        var stat = \"ZAPRIMLJEN\";\r\n                        if (element.sample.tip.includes(\"Mikrobiologija\")) {\r\n                          if (\r\n                            element.rezultati[0].rezultat[0].rezultat_m.length\r\n                          ) {\r\n                            stat = \"REALIZOVAN\";\r\n                          }\r\n                        }\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: stat,\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false\r\n                        });\r\n                      } else {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"U OBRADI\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false\r\n                        });\r\n                      }\r\n                    }\r\n                  });\r\n                });\r\n\r\n                this.uzorci = this.uzorci.sort(function(a, b) {\r\n                  return a.sid.localeCompare(b.sid, undefined, {\r\n                    numeric: true,\r\n                    sensitivity: \"base\"\r\n                  });\r\n                });\r\n              })\r\n              .then(res => {\r\n                this.MicrobiologyScenario = \"MANBNoR\";\r\n                console.log(\"Scenario: \" + Scenario + \" - > \" + this.MicrobiologyScenario)\r\n                this.main = true;\r\n                bus.$emit(\"CloseMicroReset\");\r\n              });\r\n          });\r\n      } else {\r\n        // Error\r\n      }\r\n    });\r\n\r\n    bus.$on(\"MicroResult\", () => {\r\n      console.log(\"Defining result...\");\r\n\r\n      var Scenario = this.MicrobiologyScenario;\r\n      \r\n      switch (this.MicrobiologyScenario) {\r\n        case \"MAIBNoR\":\r\n          // Ima definisan skup bakterija\r\n          this.rezultati[0].rezultat_m = [];\r\n          this.rezultati[0].rezultat_m.push({\r\n            bakterija: false,\r\n            negativan: this.ModalNegative,\r\n            pozitivan: this.ModalPositive,\r\n            _id: null,\r\n            naziv: null,\r\n            opis: null,\r\n            antibiogram: {\r\n              _id: null,\r\n              naziv: null,\r\n              opis: null,\r\n              antibiotici: [\r\n                {\r\n                  _id: null,\r\n                  rbr_a: null,\r\n                  naziv: null,\r\n                  opis: null,\r\n                  rezultat: null\r\n                }\r\n              ]\r\n            }\r\n          });\r\n\r\n          if (this.ModalNegative) {\r\n            this.rezultati[0].rezultat = this.NegativeResultSelection;\r\n            this.isLoading = true;\r\n            this.main = false;\r\n\r\n            http\r\n              .post(\"/rezultati/odobravanje/sacuvaj/\" + this.$store.state.sid, {\r\n                email: this.$store.state.userId,\r\n                token: this.$store.state.token,\r\n                site: this.$store.state.site,\r\n                rezultati: this.rezultati\r\n              })\r\n              .then(res => {\r\n                http\r\n                  .get(\r\n                    \"rezultati/odobravanje/samples/\" +\r\n                      this.$route.params.patient +\r\n                      \"/\" +\r\n                      this.$route.params.id +\r\n                      \"?token=\" +\r\n                      this.$store.state.token +\r\n                      \"&site=\" +\r\n                      this.$store.state.site +\r\n                      \"&date=\" +\r\n                      this.$route.query.date,\r\n                    {}\r\n                  )\r\n                  .then(res => {\r\n                    this.uzorci = [];\r\n\r\n                    res.data.results.forEach(element => {\r\n\r\n                      if(this.$store.state.sid === element.id){\r\n                        console.log(element.rezultati[0].rezultat[0])\r\n                      }\r\n\r\n                      var check = 0;\r\n                      var zaprimljen = 0;\r\n                      var realizovan = 0;\r\n\r\n                      if (element.verificiran) {\r\n                        var status_uzorka = \"VERIFICIRAN\";\r\n                      } else {\r\n                        var status_uzorka = element.status;\r\n                      }\r\n\r\n                      element.rezultati.forEach(test => {\r\n                        check++;\r\n\r\n                        if (\r\n                          test.rezultat[test.rezultat.length - 1].rezultat_f ===\r\n                          \"\"\r\n                        ) {\r\n                          zaprimljen++;\r\n                        }\r\n\r\n                        if (\r\n                          test.rezultat[test.rezultat.length - 1].rezultat_f !=\r\n                          \"\"\r\n                        ) {\r\n                          realizovan++;\r\n                        }\r\n\r\n                        if (check === element.rezultati.length) {\r\n                          if (status_uzorka === \"VERIFICIRAN\") {\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: \"VERIFICIRAN\",\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false\r\n                            });\r\n                          } else if (status_uzorka === \"ODOBREN\") {\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: \"ODOBREN\",\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false\r\n                            });\r\n                          } else if (zaprimljen < 1) {\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: \"REALIZOVAN\",\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false\r\n                            });\r\n                          } else if (realizovan < 1) {\r\n                            var stat = \"ZAPRIMLJEN\";\r\n                            if (element.sample.tip.includes(\"Mikrobiologija\")) {\r\n                              if (\r\n                                element.rezultati[0].rezultat[0].rezultat_m\r\n                                  .length\r\n                              ) {\r\n                                stat = \"REALIZOVAN\";\r\n                              }\r\n                            }\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: stat,\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false\r\n                            });\r\n                          } else {\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: \"U OBRADI\",\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false\r\n                            });\r\n                          }\r\n                        }\r\n                      });\r\n                    });\r\n\r\n                    this.uzorci = this.uzorci.sort(function(a, b) {\r\n                      return a.sid.localeCompare(b.sid, undefined, {\r\n                        numeric: true,\r\n                        sensitivity: \"base\"\r\n                      });\r\n                    });\r\n                  })\r\n                  .then(res => {\r\n                    bus.$emit(\"CloseMicroResult\");\r\n                    this.rezultati[0].realizovan = true;\r\n                    this.MicrobiologyScenario = \"MAIBNeR\";\r\n                    console.log(\"Scenario: \" + Scenario + \" - > \" + this.MicrobiologyScenario)\r\n                    this.main = true;\r\n                    this.isLoading = false;\r\n                  });\r\n              });\r\n          } else {\r\n            this.PositiveResultSelection = \"\";\r\n            this.SelectedBacteries.forEach(element => {\r\n              this.PositiveResultSelection =\r\n                this.PositiveResultSelection + element.opis + \"\\n\";\r\n              var Antibiotici = [];\r\n              var antibiotik = {};\r\n\r\n              this.Antibiotics.forEach(antibiotik => {\r\n                element.antibiogram.antibiotici.forEach(ant => {\r\n                  if (antibiotik._id == ant) {\r\n                    antibiotik = {\r\n                      _id: antibiotik._id,\r\n                      rbr_a: antibiotik.rbr_a,\r\n                      naziv: antibiotik.naziv,\r\n                      opis: antibiotik.opis,\r\n                      disabled: false,\r\n                      rezultat: \"\"\r\n                    };\r\n                    Antibiotici.push(antibiotik);\r\n                    antibiotik = {};\r\n                  }\r\n                });\r\n              });\r\n\r\n              this.rezultati[0].rezultat_m.push({\r\n                bakterija: true,\r\n                negativan: this.largeModalneg,\r\n                pozitivan: this.largeModalpos,\r\n                _id: element._id,\r\n                naziv: element.naziv,\r\n                opis: element.opis,\r\n                antibiogram: {\r\n                  _id: element.antibiogram._id,\r\n                  naziv: element.antibiogram.naziv,\r\n                  opis: element.antibiogram.opis,\r\n                  antibiotici: [...Antibiotici]\r\n                }\r\n              });\r\n            });\r\n\r\n            this.rezultati[0].rezultat = this.PositiveResultSelection.trim();\r\n            this.isLoading = true;\r\n            this.main = false;\r\n\r\n            http\r\n              .post(\"/rezultati/odobravanje/sacuvaj/\" + this.$store.state.sid, {\r\n                email: this.$store.state.userId,\r\n                token: this.$store.state.token,\r\n                site: this.$store.state.site,\r\n                rezultati: this.rezultati\r\n              })\r\n              .then(res => {\r\n                http\r\n                  .get(\r\n                    \"rezultati/odobravanje/samples/\" +\r\n                      this.$route.params.patient +\r\n                      \"/\" +\r\n                      this.$route.params.id +\r\n                      \"?token=\" +\r\n                      this.$store.state.token +\r\n                      \"&site=\" +\r\n                      this.$store.state.site +\r\n                      \"&date=\" +\r\n                      this.$route.query.date,\r\n                    {}\r\n                  )\r\n                  .then(res => {\r\n                    this.uzorci = [];\r\n\r\n                    res.data.results.forEach(element => {\r\n\r\n                      if(this.$store.state.sid === element.id){\r\n                        console.log(element.rezultati[0].rezultat[0])\r\n                      }\r\n\r\n                      var check = 0;\r\n                      var zaprimljen = 0;\r\n                      var realizovan = 0;\r\n\r\n                      if (element.verificiran) {\r\n                        var status_uzorka = \"VERIFICIRAN\";\r\n                      } else {\r\n                        var status_uzorka = element.status;\r\n                      }\r\n\r\n                      element.rezultati.forEach(test => {\r\n                        check++;\r\n\r\n                        if (\r\n                          test.rezultat[test.rezultat.length - 1].rezultat_f ===\r\n                          \"\"\r\n                        ) {\r\n                          zaprimljen++;\r\n                        }\r\n\r\n                        if (\r\n                          test.rezultat[test.rezultat.length - 1].rezultat_f !=\r\n                          \"\"\r\n                        ) {\r\n                          realizovan++;\r\n                        }\r\n\r\n                        if (check === element.rezultati.length) {\r\n                          if (status_uzorka === \"VERIFICIRAN\") {\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: \"VERIFICIRAN\",\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false\r\n                            });\r\n                          } else if (status_uzorka === \"ODOBREN\") {\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: \"ODOBREN\",\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false\r\n                            });\r\n                          } else if (zaprimljen < 1) {\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: \"REALIZOVAN\",\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false\r\n                            });\r\n                          } else if (realizovan < 1) {\r\n                            var stat = \"ZAPRIMLJEN\";\r\n                            if (element.sample.tip.includes(\"Mikrobiologija\")) {\r\n                              if (\r\n                                element.rezultati[0].rezultat[0].rezultat_m\r\n                                  .length\r\n                              ) {\r\n                                stat = \"REALIZOVAN\";\r\n                              }\r\n                            }\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: stat,\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false\r\n                            });\r\n                          } else {\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: \"U OBRADI\",\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false\r\n                            });\r\n                          }\r\n                        }\r\n                      });\r\n                    });\r\n\r\n                    this.uzorci = this.uzorci.sort(function(a, b) {\r\n                      return a.sid.localeCompare(b.sid, undefined, {\r\n                        numeric: true,\r\n                        sensitivity: \"base\"\r\n                      });\r\n                    });\r\n                  })\r\n                  .then(res => {\r\n                    bus.$emit(\"CloseMicroResult\");\r\n                    this.rezultati[0].realizovan = true;\r\n                    this.MicrobiologyScenario = \"MAIBPoR\";\r\n                    console.log(\"Scenario: \" + Scenario + \" - > \" + this.MicrobiologyScenario)\r\n                    this.main = true;\r\n                    this.isLoading = false;\r\n                  });\r\n              });\r\n          }\r\n\r\n          break;\r\n\r\n        case \"MANBNoR\":\r\n          // Nema definisan skup bakterija\r\n          this.rezultati[0].rezultat_m = [\r\n            {\r\n              bakterija: false,\r\n              negativan: this.ModalNegative,\r\n              pozitivan: this.ModalPositive,\r\n              _id: null,\r\n              naziv: null,\r\n              opis: null,\r\n              antibiogram: {\r\n                _id: null,\r\n                naziv: null,\r\n                opis: null,\r\n                antibiotici: [\r\n                  {\r\n                    _id: null,\r\n                    rbr_a: null,\r\n                    naziv: null,\r\n                    opis: null,\r\n                    rezultat: null\r\n                  }\r\n                ]\r\n              }\r\n            }\r\n          ];\r\n\r\n          if (this.ModalNegative) {\r\n            this.rezultati[0].rezultat = this.NegativeResultSelection;\r\n            this.isLoading = true;\r\n            this.main = false;\r\n\r\n            http\r\n              .post(\"/rezultati/odobravanje/sacuvaj/\" + this.$store.state.sid, {\r\n                email: this.$store.state.userId,\r\n                token: this.$store.state.token,\r\n                site: this.$store.state.site,\r\n                rezultati: this.rezultati\r\n              })\r\n              .then(res => {\r\n                http\r\n                  .get(\r\n                    \"rezultati/odobravanje/samples/\" +\r\n                      this.$route.params.patient +\r\n                      \"/\" +\r\n                      this.$route.params.id +\r\n                      \"?token=\" +\r\n                      this.$store.state.token +\r\n                      \"&site=\" +\r\n                      this.$store.state.site +\r\n                      \"&date=\" +\r\n                      this.$route.query.date,\r\n                    {}\r\n                  )\r\n                  .then(res => {\r\n                    this.uzorci = [];\r\n\r\n                    res.data.results.forEach(element => {\r\n\r\n                      if(this.$store.state.sid === element.id){\r\n                        console.log(element.rezultati[0].rezultat[0])\r\n                      }\r\n\r\n                      var check = 0;\r\n                      var zaprimljen = 0;\r\n                      var realizovan = 0;\r\n\r\n                      if (element.verificiran) {\r\n                        var status_uzorka = \"VERIFICIRAN\";\r\n                      } else {\r\n                        var status_uzorka = element.status;\r\n                      }\r\n\r\n                      element.rezultati.forEach(test => {\r\n                        check++;\r\n\r\n                        if (\r\n                          test.rezultat[test.rezultat.length - 1].rezultat_f ===\r\n                          \"\"\r\n                        ) {\r\n                          zaprimljen++;\r\n                        }\r\n\r\n                        if (\r\n                          test.rezultat[test.rezultat.length - 1].rezultat_f !=\r\n                          \"\"\r\n                        ) {\r\n                          realizovan++;\r\n                        }\r\n\r\n                        if (check === element.rezultati.length) {\r\n                          if (status_uzorka === \"VERIFICIRAN\") {\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: \"VERIFICIRAN\",\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false\r\n                            });\r\n                          } else if (status_uzorka === \"ODOBREN\") {\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: \"ODOBREN\",\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false\r\n                            });\r\n                          } else if (zaprimljen < 1) {\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: \"REALIZOVAN\",\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false\r\n                            });\r\n                          } else if (realizovan < 1) {\r\n                            var stat = \"ZAPRIMLJEN\";\r\n                            if (element.sample.tip.includes(\"Mikrobiologija\")) {\r\n                              if (\r\n                                element.rezultati[0].rezultat[0].rezultat_m\r\n                                  .length\r\n                              ) {\r\n                                stat = \"REALIZOVAN\";\r\n                              }\r\n                            }\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: stat,\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false\r\n                            });\r\n                          } else {\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: \"U OBRADI\",\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false\r\n                            });\r\n                          }\r\n                        }\r\n                      });\r\n                    });\r\n\r\n                    this.uzorci = this.uzorci.sort(function(a, b) {\r\n                      return a.sid.localeCompare(b.sid, undefined, {\r\n                        numeric: true,\r\n                        sensitivity: \"base\"\r\n                      });\r\n                    });\r\n                  })\r\n                  .then(res => {\r\n                    bus.$emit(\"CloseMicroResult\");\r\n                    this.rezultati[0].realizovan = true;\r\n                    this.MicrobiologyScenario = \"MANBNeR\";\r\n                    console.log(\"Scenario: \" + Scenario + \" - > \" + this.MicrobiologyScenario)\r\n                    this.main = true;\r\n                    this.isLoading = false;\r\n                  });\r\n              });\r\n          } else {\r\n            this.rezultati[0].rezultat = this.PositiveResultSelection;\r\n            this.isLoading = true;\r\n            this.main = false;\r\n\r\n            http\r\n              .post(\"/rezultati/odobravanje/sacuvaj/\" + this.$store.state.sid, {\r\n                email: this.$store.state.userId,\r\n                token: this.$store.state.token,\r\n                site: this.$store.state.site,\r\n                rezultati: this.rezultati\r\n              })\r\n              .then(res => {\r\n                http\r\n                  .get(\r\n                    \"rezultati/odobravanje/samples/\" +\r\n                      this.$route.params.patient +\r\n                      \"/\" +\r\n                      this.$route.params.id +\r\n                      \"?token=\" +\r\n                      this.$store.state.token +\r\n                      \"&site=\" +\r\n                      this.$store.state.site +\r\n                      \"&date=\" +\r\n                      this.$route.query.date,\r\n                    {}\r\n                  )\r\n                  .then(res => {\r\n                    this.uzorci = [];\r\n\r\n                    res.data.results.forEach(element => {\r\n\r\n                      if(this.$store.state.sid === element.id){\r\n                        console.log(element.rezultati[0].rezultat[0])\r\n                      }\r\n\r\n                      var check = 0;\r\n                      var zaprimljen = 0;\r\n                      var realizovan = 0;\r\n\r\n                      if (element.verificiran) {\r\n                        var status_uzorka = \"VERIFICIRAN\";\r\n                      } else {\r\n                        var status_uzorka = element.status;\r\n                      }\r\n\r\n                      element.rezultati.forEach(test => {\r\n                        check++;\r\n\r\n                        if (\r\n                          test.rezultat[test.rezultat.length - 1].rezultat_f ===\r\n                          \"\"\r\n                        ) {\r\n                          zaprimljen++;\r\n                        }\r\n\r\n                        if (\r\n                          test.rezultat[test.rezultat.length - 1].rezultat_f !=\r\n                          \"\"\r\n                        ) {\r\n                          realizovan++;\r\n                        }\r\n\r\n                        if (check === element.rezultati.length) {\r\n                          if (status_uzorka === \"VERIFICIRAN\") {\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: \"VERIFICIRAN\",\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false\r\n                            });\r\n                          } else if (status_uzorka === \"ODOBREN\") {\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: \"ODOBREN\",\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false\r\n                            });\r\n                          } else if (zaprimljen < 1) {\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: \"REALIZOVAN\",\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false\r\n                            });\r\n                          } else if (realizovan < 1) {\r\n                            var stat = \"ZAPRIMLJEN\";\r\n                            if (element.sample.tip.includes(\"Mikrobiologija\")) {\r\n                              if (\r\n                                element.rezultati[0].rezultat[0].rezultat_m\r\n                                  .length\r\n                              ) {\r\n                                stat = \"REALIZOVAN\";\r\n                              }\r\n                            }\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: stat,\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false\r\n                            });\r\n                          } else {\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: \"U OBRADI\",\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false\r\n                            });\r\n                          }\r\n                        }\r\n                      });\r\n                    });\r\n\r\n                    this.uzorci = this.uzorci.sort(function(a, b) {\r\n                      return a.sid.localeCompare(b.sid, undefined, {\r\n                        numeric: true,\r\n                        sensitivity: \"base\"\r\n                      });\r\n                    });\r\n                  })\r\n                  .then(res => {\r\n                    bus.$emit(\"CloseMicroResult\");\r\n                    this.rezultati[0].realizovan = true;\r\n                    this.MicrobiologyScenario = \"MANBPoR\";\r\n                    console.log(\"Scenario: \" + Scenario + \" - > \" + this.MicrobiologyScenario)\r\n                    this.main = true;\r\n                    this.isLoading = false;\r\n                  });\r\n              });\r\n          }\r\n\r\n          break;\r\n\r\n        default:\r\n          break;\r\n      }      \r\n    });\r\n\r\n    bus.$on(\"ResetResultSelection\", () => {\r\n      // console.log('Clearing...');\r\n      switch (this.MicrobiologyScenario) {\r\n        case \"MAIBNoR\":\r\n          this.ModalNegative = false;\r\n          this.ModalPositive = false;\r\n          this.ModalPositiveCondition = false;\r\n          this.MicrobiologyModalHeader = \"Predefinisani rezultati\";\r\n          this.NegativeResultSelection = \"\";\r\n          this.PositiveResultSelection = \"\";\r\n          this.SelectedBacteries = [];\r\n          this.ShowAllBacteries = false;\r\n\r\n          break;\r\n\r\n        case \"MAIBNeR\":\r\n          this.SelectedBacteries = [];\r\n\r\n          break;\r\n\r\n        case \"MAIBPoR\":\r\n          break;\r\n\r\n        case \"MANBNoR\":\r\n          this.ModalNegative = false;\r\n          this.ModalPositive = false;\r\n          this.ModalPositiveCondition = false;\r\n          this.MicrobiologyModalHeader = \"Predefinisani rezultati\";\r\n          this.NegativeResultSelection = \"\";\r\n          this.PositiveResultSelection = \"\";\r\n          this.SelectedBacteries = [];\r\n          this.ShowAllBacteries = false;\r\n\r\n          break;\r\n\r\n        case \"MANBNeR\":\r\n          this.SelectedBacteries = [];\r\n\r\n          break;\r\n\r\n        case \"MANBPoR\":\r\n          this.SelectedBacteries = [];\r\n\r\n          break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n\r\n      this.MicrobiologyResult.DefaultBacteries.forEach(element => {\r\n        element.chosen = false;\r\n      });\r\n\r\n      this.MicrobiologyResult.RemainingBacteries.forEach(element => {\r\n        element.chosen = false;\r\n      });\r\n\r\n      this.SelectedBacteries = [];\r\n      this.ShowAllBacteries = false;\r\n    });\r\n\r\n    bus.$on(\"CancelMicroResult\", () => {\r\n\r\n      switch (this.MicrobiologyScenario) {\r\n        case \"MAIBNoR\":\r\n          this.ModalNegative = false;\r\n          this.ModalPositive = false;\r\n          this.ModalPositiveCondition = false;\r\n          this.MicrobiologyModalHeader = \"Predefinisani rezultati\";\r\n          this.NegativeResultSelection = \"\";\r\n          this.PositiveResultSelection = \"\";\r\n          this.SelectedBacteries = [];\r\n          this.ShowAllBacteries = false;\r\n\r\n          break;\r\n\r\n        case \"MAIBNeR\":\r\n          this.SelectedBacteries = [];\r\n\r\n          break;\r\n\r\n        case \"MAIBPoR\":\r\n          break;\r\n\r\n        case \"MANBNoR\":\r\n          this.ModalNegative = false;\r\n          this.ModalPositive = false;\r\n          this.ModalPositiveCondition = false;\r\n          this.MicrobiologyModalHeader = \"Predefinisani rezultati\";\r\n          this.NegativeResultSelection = \"\";\r\n          this.PositiveResultSelection = \"\";\r\n          this.SelectedBacteries = [];\r\n          this.ShowAllBacteries = false;\r\n\r\n          break;\r\n\r\n        case \"MANBNeR\":\r\n          this.SelectedBacteries = [];\r\n\r\n          break;\r\n\r\n        case \"MANBPoR\":\r\n          this.SelectedBacteries = [];\r\n\r\n          break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n\r\n      this.MicrobiologyResult.DefaultBacteries.forEach(element => {\r\n        element.chosen = false;\r\n      });\r\n\r\n      this.MicrobiologyResult.RemainingBacteries.forEach(element => {\r\n        element.chosen = false;\r\n      });\r\n\r\n      this.SelectedBacteries = [];\r\n      this.ShowAllBacteries = false;\r\n    });\r\n\r\n    bus.$on(\"MicroBactery\", () => {\r\n\r\n      console.log('Saving main result...');\r\n\r\n      this.isLoading = true;\r\n      this.main = false;\r\n\r\n      http\r\n        .post(\"/rezultati/odobravanje/sacuvaj/\" + this.$store.state.sid, {\r\n          email: this.$store.state.userId,\r\n          token: this.$store.state.token,\r\n          site: this.$store.state.site,\r\n          rezultati: this.rezultati\r\n        })\r\n        .then(res => {\r\n          http\r\n            .get(\r\n              \"rezultati/odobravanje/samples/\" +\r\n                this.$route.params.patient +\r\n                \"/\" +\r\n                this.$route.params.id +\r\n                \"?token=\" +\r\n                this.$store.state.token +\r\n                \"&site=\" +\r\n                this.$store.state.site +\r\n                \"&date=\" +\r\n                this.$route.query.date,\r\n              {}\r\n            )\r\n            .then(res => {\r\n              this.uzorci = [];\r\n\r\n              res.data.results.forEach(element => {\r\n\r\n                if(this.$store.state.sid === element.id){\r\n                  console.log(element.rezultati[0].rezultat[0])\r\n                }\r\n                \r\n                var check = 0;\r\n                var zaprimljen = 0;\r\n                var realizovan = 0;\r\n\r\n                if (element.verificiran) {\r\n                  var status_uzorka = \"VERIFICIRAN\";\r\n                } else {\r\n                  var status_uzorka = element.status;\r\n                }\r\n\r\n                element.rezultati.forEach(test => {\r\n                  check++;\r\n\r\n                  if (\r\n                    test.rezultat[test.rezultat.length - 1].rezultat_f === \"\"\r\n                  ) {\r\n                    zaprimljen++;\r\n                  }\r\n\r\n                  if (\r\n                    test.rezultat[test.rezultat.length - 1].rezultat_f != \"\"\r\n                  ) {\r\n                    realizovan++;\r\n                  }\r\n\r\n                  if (check === element.rezultati.length) {\r\n                    if (status_uzorka === \"VERIFICIRAN\") {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"VERIFICIRAN\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false\r\n                      });\r\n                    } else if (status_uzorka === \"ODOBREN\") {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"ODOBREN\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false\r\n                      });\r\n                    } else if (zaprimljen < 1) {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"REALIZOVAN\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false\r\n                      });\r\n                    } else if (realizovan < 1) {\r\n                      var stat = \"ZAPRIMLJEN\";\r\n                      if (element.sample.tip.includes(\"Mikrobiologija\")) {\r\n                        if (\r\n                          element.rezultati[0].rezultat[0].rezultat_m.length\r\n                        ) {\r\n                          stat = \"REALIZOVAN\";\r\n                        }\r\n                      }\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: stat,\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false\r\n                      });\r\n                    } else {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"U OBRADI\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false\r\n                      });\r\n                    }\r\n                  }\r\n                });\r\n              });\r\n\r\n              this.uzorci = this.uzorci.sort(function(a, b) {\r\n                return a.sid.localeCompare(b.sid, undefined, {\r\n                  numeric: true,\r\n                  sensitivity: \"base\"\r\n                });\r\n              });\r\n            })\r\n            .then(res => {\r\n              this.main = true;\r\n              this.isLoading = false;\r\n              bus.$emit(\"CloseMicroBactery\");\r\n            });\r\n        });\r\n    });\r\n\r\n    bus.$on(\"CancelMicroBactery\", () => {\r\n\r\n    });\r\n\r\n    bus.$on(\"PovratakMicroBactery\", () => {     \r\n      this.ShowAntibiotics = false;\r\n      this.ShowBacteries = false;\r\n    });\r\n\r\n    bus.$on(\"SpasiMicroBactery\", () => {\r\n      \r\n      if (this.TemporaryBacteriesAdd.length) {\r\n        console.log('Dodavanje bakterija...');\r\n        var bakterija = {};\r\n        var antibiogram = {};\r\n        var antibiotik = {};\r\n\r\n        this.TemporaryBacteriesAdd.forEach(element => {\r\n          this.Antibiograms.forEach(antibgr => {\r\n            if (\r\n              JSON.stringify(element.antibiogram._id) ===\r\n              JSON.stringify(antibgr._id)\r\n            ) {\r\n              antibiogram = antibgr;\r\n            }\r\n          });\r\n\r\n          antibiogram.antibiotici.forEach(antbtk => {\r\n            antbtk.disabled = false;\r\n            antbtk.rezultat = \"\";\r\n          });\r\n\r\n          bakterija.bakterija = true;\r\n          bakterija._id = element._id;\r\n          bakterija.naziv = element.naziv;\r\n          bakterija.opis = element.opis;\r\n          bakterija.antibiogram = antibiogram;\r\n\r\n          console.log(bakterija);\r\n\r\n          this.SelectedBacteries.push(bakterija);\r\n          this.BacteryTabs.push(bakterija.opis);\r\n          this.rezultati[0].rezultat_m.push(bakterija);\r\n          this.rezultati[0].rezultat =\r\n            this.rezultati[0].rezultat + \"\\n\" + bakterija.opis;\r\n          bakterija = {};\r\n          antibiogram = {};\r\n        });\r\n\r\n        /* var element = {\r\n          chosen: true,\r\n          disabled: false,\r\n          _id: \"5d95cfe793a77e0fec61aa6a\",\r\n          naziv: \"Bakterija 3\",\r\n          opis: \"Bakterija 3\",\r\n          antibiogram: {\r\n            antibiotici: [\r\n              \"5d90ae5e89d972109c76c1b1\",\r\n              \"5d90aed589d972109c76c1b3\",\r\n              \"5d90af2389d972109c76c1b4\",\r\n              \"5d90ae8289d972109c76c1b2\",\r\n              \"5d90afe089d972109c76c1b8\",\r\n              \"5d90b00f89d972109c76c1b9\",\r\n              \"5d90b02289d972109c76c1ba\"\r\n            ],\r\n            _id: \"5d94750593a77e0fec61a8e9\",\r\n            naziv: \"Antibiogram 2\",\r\n            opis: \"Antibiogram 2\",\r\n            __v: 0\r\n          },\r\n          __v: 0\r\n        }; */\r\n\r\n        /* var bakterija = {\r\n          bakterija: true,\r\n          _id: \"5d94751193a77e0fec61a8ea\",\r\n          naziv: \"Bakterija 1\",\r\n          opis: \"Bakterija 1\",\r\n          antibiogram: {\r\n            _id: \"5d9474f893a77e0fec61a8e8\",\r\n            naziv: \"Antibiogram 1\",\r\n            opis: \"Antibiogram 1\",\r\n            antibiotici: [\r\n              {\r\n                _id: \"5d90ae3489d972109c76c1b0\",\r\n                rbr_a: \"0\",\r\n                naziv: \"FOX\",\r\n                opis: \"Cefoxitin\",\r\n                disabled: false,\r\n                rezultat: \"S\"\r\n              },\r\n              {\r\n                _id: \"5d90ae8289d972109c76c1b2\",\r\n                rbr_a: \"0\",\r\n                naziv: \"Cd\",\r\n                opis: \"Clindamycin\",\r\n                disabled: false,\r\n                rezultat: \"\"\r\n              },\r\n              {\r\n                _id: \"5d90af2389d972109c76c1b4\",\r\n                rbr_a: \"0\",\r\n                naziv: \"C\",\r\n                opis: \"Chloramphenicol \",\r\n                disabled: false,\r\n                rezultat: \"\"\r\n              },\r\n              {\r\n                _id: \"5d90af6e89d972109c76c1b6\",\r\n                rbr_a: \"0\",\r\n                naziv: \"TE\",\r\n                opis: \"Tetracycline\",\r\n                disabled: false,\r\n                rezultat: \"\"\r\n              }\r\n            ]\r\n          }\r\n        }; */\r\n      }else{\r\n        console.log('Dodavanje antibiotika...');\r\n      }\r\n\r\n      if (\r\n        this.TemporaryAntibiotics.length ||\r\n        this.TemporaryBacteriesAdd.length\r\n      ) {\r\n        this.TemporaryAntibiotics.forEach(element => {\r\n          this.rezultati[0].rezultat_m.forEach(selected => {\r\n            if (selected.opis == this.CurrentTab) {\r\n              selected.antibiogram.antibiotici.push(element);\r\n            }\r\n          });\r\n        });\r\n\r\n        // this.show_table = false;\r\n        this.isLoading = true;\r\n        this.main = false;\r\n\r\n        http\r\n          .post(\"/rezultati/odobravanje/sacuvaj/\" + this.$store.state.sid, {\r\n            email: this.$store.state.userId,\r\n            token: this.$store.state.token,\r\n            site: this.$store.state.site,\r\n            rezultati: this.rezultati\r\n          })\r\n          .then(res => {\r\n            http\r\n              .get(\r\n                \"rezultati/odobravanje/samples/\" +\r\n                  this.$route.params.patient +\r\n                  \"/\" +\r\n                  this.$route.params.id +\r\n                  \"?token=\" +\r\n                  this.$store.state.token +\r\n                  \"&site=\" +\r\n                  this.$store.state.site +\r\n                  \"&date=\" +\r\n                  this.$route.query.date,\r\n                {}\r\n              )\r\n              .then(res => {\r\n                this.uzorci = [];\r\n\r\n                res.data.results.forEach(element => {\r\n\r\n                  if(this.$store.state.sid === element.id){\r\n                    console.log(element.rezultati[0].rezultat[0])\r\n                  }\r\n\r\n                  var check = 0;\r\n                  var zaprimljen = 0;\r\n                  var realizovan = 0;\r\n\r\n                  if (element.verificiran) {\r\n                    var status_uzorka = \"VERIFICIRAN\";\r\n                  } else {\r\n                    var status_uzorka = element.status;\r\n                  }\r\n\r\n                  element.rezultati.forEach(test => {\r\n                    check++;\r\n\r\n                    if (\r\n                      test.rezultat[test.rezultat.length - 1].rezultat_f === \"\"\r\n                    ) {\r\n                      zaprimljen++;\r\n                    }\r\n\r\n                    if (\r\n                      test.rezultat[test.rezultat.length - 1].rezultat_f != \"\"\r\n                    ) {\r\n                      realizovan++;\r\n                    }\r\n\r\n                    if (check === element.rezultati.length) {\r\n                      if (status_uzorka === \"VERIFICIRAN\") {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"VERIFICIRAN\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false\r\n                        });\r\n                      } else if (status_uzorka === \"ODOBREN\") {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"ODOBREN\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false\r\n                        });\r\n                      } else if (zaprimljen < 1) {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"REALIZOVAN\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false\r\n                        });\r\n                      } else if (realizovan < 1) {\r\n                        var stat = \"ZAPRIMLJEN\";\r\n                        if (element.sample.tip.includes(\"Mikrobiologija\")) {\r\n                          if (\r\n                            element.rezultati[0].rezultat[0].rezultat_m.length\r\n                          ) {\r\n                            stat = \"REALIZOVAN\";\r\n                          }\r\n                        }\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: stat,\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false\r\n                        });\r\n                      } else {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"U OBRADI\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false\r\n                        });\r\n                      }\r\n                    }\r\n                  });\r\n                });\r\n\r\n                this.uzorci = this.uzorci.sort(function(a, b) {\r\n                  return a.sid.localeCompare(b.sid, undefined, {\r\n                    numeric: true,\r\n                    sensitivity: \"base\"\r\n                  });\r\n                });\r\n              })\r\n              .then(res => {\r\n                this.MicrobiologyScenario = \"MAIBPoR\";\r\n                this.ShowAntibiotics = false;\r\n                this.ShowBacteries = false;\r\n                // this.show_table = true;\r\n                this.main = true;\r\n                this.isLoading = false\r\n\r\n                if (this.TemporaryBacteriesAdd.length) {\r\n                  this.CurrentTab = this.BacteryTabs[\r\n                    this.BacteryTabs.length - 1\r\n                  ];\r\n                }\r\n              });\r\n          });\r\n      } else {\r\n        this.MicrobiologyScenario = \"MAIBPoR\";\r\n        this.ShowAntibiotics = false;\r\n        this.ShowBacteries = false;\r\n      }\r\n    });\r\n\r\n    bus.$on(\"UpdateMicroBactery\", data => {\r\n     \r\n      if (\r\n        !this.ShowAntibiotics &&\r\n        !this.ShowBacteries &&\r\n        this.MicrobiologyScenario === \"MAIBPoR\"\r\n      ) {\r\n        if (\r\n          this.sample.status != \"ODOBREN\" &&\r\n          this.sample.status != \"VERIFICIRAN\"\r\n        ) {\r\n          this.TemporaryAntibiotics = [];\r\n          this.TemporaryBacteries = [];\r\n          this.TemporaryBacteriesAdd = [];\r\n          var obj = {};\r\n\r\n          this.Bacteries.forEach(element => {\r\n            obj.chosen = false;\r\n            obj.disabled = false;\r\n            obj._id = element._id;\r\n            obj.naziv = element.naziv;\r\n            obj.opis = element.opis;\r\n            obj.antibiogram = element.antibiogram;\r\n            obj.__v = element.__v;\r\n            obj.chosen = element.chosen;\r\n            this.TemporaryBacteries.push(obj);\r\n            obj = {};\r\n          });\r\n\r\n          this.TemporaryBacteries.forEach(element => {\r\n            this.SelectedBacteries.forEach(selected => {\r\n              if (selected._id == element._id) {\r\n                element.chosen = true;\r\n                element.disabled = true;\r\n              }\r\n            });\r\n          });\r\n\r\n          this.ShowBacteries = true;\r\n        }\r\n      }\r\n    });\r\n\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* \r\n\r\n\r\n\r\n\r\n\r\nEnd of | Microbiology Bus from Modal\r\n\r\n\r\n\r\n\r\n\r\n*/\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n\r\n  },\r\n\r\n  beforeDestroy() {\r\n    bus.$off(\"Parametar\");\r\n    bus.$off(\"trash\");\r\n    bus.$off(\"edit\");\r\n    bus.$off(\"comment\");\r\n    bus.$off(\"barcode\");\r\n    bus.$off(\"save\");\r\n    bus.$off(\"check\");\r\n    bus.$off(\"verify\");\r\n    bus.$off(\"undo\");\r\n    bus.$off(\"unlock\");\r\n    bus.$off(\"Nalaz\");\r\n    bus.$off(\"pdf\");\r\n    bus.$off(\"Sample\");\r\n    bus.$off(\"Deleted\");\r\n    bus.$off(\"Edited\");\r\n    bus.$off(\"SaveMulti\");\r\n    bus.$off(\"Mail\");\r\n    bus.$off(\"Error\");\r\n    bus.$off(\"Analyser\");\r\n    bus.$off(\"Sljedeci\");\r\n    bus.$off(\"Prethodni\");\r\n    bus.$off(\"Search\");\r\n    bus.$off(\"Push\");\r\n    bus.$off(\"Reference\");\r\n    bus.$off(\"graph\");\r\n    bus.$off(\"table\");\r\n\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* \r\n\r\n\r\n\r\n\r\n\r\n| Microbiology Bus Off\r\n\r\n\r\n\r\n\r\n\r\n*/\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n\r\n    // VuesticTabsBactery\r\n    bus.$off(\"tabChanged\");\r\n    bus.$off(\"Antibiotik\");\r\n\r\n    // VuesticModalMicroResult, bus.$emit(\"CloseMicroResult\")\r\n    bus.$off(\"MicroResult\");\r\n    bus.$off(\"ResetResultSelection\");\r\n    bus.$off(\"CancelMicroResult\");\r\n\r\n    // VuesticModalMicroReset\r\n    bus.$off(\"MicroReset\");\r\n\r\n    // VuesticCollapseObrada\r\n    bus.$off(\"AllowClick\");\r\n\r\n    // VuesticModalMicroBactery, bus.$emit(\"CloseMicroBactery\")\r\n    bus.$off(\"MicroBactery\");\r\n    bus.$off(\"CancelMicroBactery\");\r\n    bus.$off(\"PovratakMicroBactery\");\r\n    bus.$off(\"SpasiMicroBactery\");\r\n    bus.$off(\"UpdateMicroBactery\");\r\n\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* \r\n\r\n\r\n\r\n\r\n\r\nEnd of Microbiology Bus Off |\r\n\r\n\r\n\r\n\r\n\r\n*/\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n\r\n  },\r\n  \r\n  destroyed() {\r\n    console.log(\"Component is being destroyed...\");\r\n    // this.$destroy();\r\n  },\r\n\r\n  created() {\r\n    this.Created();\r\n\r\n    this.Previous.pid = Number(this.$route.params.id) - 1;\r\n    this.Next.pid = Number(this.$route.params.id) + 1;\r\n    this.query_date =\r\n      this.$route.query.date.substring(8, 10) +\r\n      \".\" +\r\n      this.$route.query.date.substring(5, 7) +\r\n      \".\" +\r\n      this.$route.query.date.substring(0, 4);\r\n\r\n    this.Datum.today = new Date(\r\n      JSON.stringify(\r\n        new Date(new Date().setDate(new Date().getDate()))\r\n      ).substring(1, 11) + \"T00:00:00\"\r\n    );\r\n\r\n    this.today_date =\r\n      JSON.stringify(new Date(new Date().setDate(new Date().getDate())))\r\n        .substring(1, 11)\r\n        .substring(8, 10) +\r\n      \".\" +\r\n      JSON.stringify(new Date(new Date().setDate(new Date().getDate())))\r\n        .substring(1, 11)\r\n        .substring(5, 7) +\r\n      \".\" +\r\n      JSON.stringify(new Date(new Date().setDate(new Date().getDate())))\r\n        .substring(1, 11)\r\n        .substring(0, 4);\r\n\r\n    this.Datum.query = new Date(\r\n      this.$route.query.date.substring(0, 10) + \"T00:00:00\"\r\n    );\r\n\r\n    this.Datum.next = new Date(\r\n      new Date(this.$route.query.date.substring(0, 10) + \"T00:00:00\").setDate(\r\n        this.Datum.query.getDate() + 1\r\n      )\r\n    );\r\n\r\n    this.Datum.previous = new Date(\r\n      new Date(this.$route.query.date.substring(0, 10) + \"T00:00:00\").setDate(\r\n        this.Datum.query.getDate() - 1\r\n      )\r\n    );\r\n\r\n    if (new Date(this.Datum.today) > new Date(this.Datum.query)) {\r\n      this.pagination = false;\r\n    } else if (new Date(this.Datum.today) < new Date(this.Datum.query)) {\r\n      this.pagination = false;\r\n    } else {\r\n      this.pagination = true;\r\n    }\r\n\r\n    this.interpretacije = this.interpretacije.sort(function(a, b) {\r\n      return a.localeCompare(b, undefined, {\r\n        numeric: true,\r\n        sensitivity: \"base\"\r\n      });\r\n    });\r\n  },\r\n\r\n  methods: {\r\n    ExclamationMulti(test) {\r\n      this.warning = { analiza: \"\", text: \"\", napomena: \"\", control: \"\" };\r\n      var rezultat = test.rezultat\r\n        .replace(/,/g, \".\")\r\n        .replace(/</g, \"\")\r\n        .replace(/>/g, \"\");\r\n\r\n      var m_interp = {};\r\n      var m_opis = \"\";\r\n\r\n      // console.log(test.analit)\r\n\r\n      this.analitiprikaz.forEach(element => {\r\n        element.labassay.multiparam.forEach(param => {\r\n          if (JSON.stringify(param._id) == JSON.stringify(test.analit)) {\r\n\r\n            // console.log(element)\r\n            // console.log(param)\r\n\r\n            m_interp = param.interpretacija;\r\n            m_opis = param.opis;\r\n          }\r\n        });\r\n      });\r\n\r\n      switch (\r\n        this.Interpretacija(\r\n          test.opis,\r\n          rezultat,\r\n          test.jedinica,\r\n          test.refd,\r\n          test.refg,\r\n          this.$store.state.site,\r\n          test.interp,\r\n          \"\",\r\n          this.spec\r\n        )[2]\r\n      ) {\r\n        case \"L\":\r\n          this.warning = {\r\n            analiza: m_opis,\r\n            text: m_interp.snizeno.text.trim(),\r\n            napomena: m_interp.napomena.trim(),\r\n            control: \"Sniženo\"\r\n          };\r\n          break;\r\n\r\n        case \"H\":\r\n          switch (test.interp) {\r\n            case \"neg\":\r\n              this.warning = {\r\n                analiza: m_opis,\r\n                text: m_interp.poviseno.text.trim(),\r\n                napomena: m_interp.napomena.trim(),\r\n                control: \"Pozitivan\"\r\n              };\r\n              break;\r\n\r\n            default:\r\n              this.warning = {\r\n                analiza: m_opis,\r\n                text: m_interp.poviseno.text.trim(),\r\n                napomena: m_interp.napomena.trim(),\r\n                control: \"Povišeno\"\r\n              };\r\n              break;\r\n          }\r\n\r\n          break;\r\n\r\n        default:\r\n          this.warning = { analiza: \"\", text: \"\", napomena: \"\", control: \"\" };\r\n          break;\r\n      }\r\n\r\n      if (this.warning.text && this.warning.text != \"\") {\r\n\r\n        // console.log(this.warning.analiza + \" | \" + this.warning.control + \" - \" + this.warning.text);\r\n        // this.$refs.staticModalExclamation.open();\r\n\r\n      }\r\n    },\r\n\r\n    Exclamation(test) {\r\n      this.warning = { analiza: \"\", text: \"\", napomena: \"\", control: \"\" };\r\n      var rezultat = test.rezultat\r\n        .replace(/,/g, \".\")\r\n        .replace(/</g, \"\")\r\n        .replace(/>/g, \"\");\r\n\r\n      switch (\r\n        this.Interpretacija(\r\n          test.opis,\r\n          rezultat,\r\n          test.jedinica,\r\n          test.dRef,\r\n          test.gRef,\r\n          this.$store.state.site,\r\n          test.interp,\r\n          test.extend,\r\n          this.spec\r\n        )[2]\r\n      ) {\r\n        case \"L\":\r\n          this.warning = {\r\n            analiza: test.analit,\r\n            text: test.interpretacija.snizeno.text.trim(),\r\n            napomena: test.interpretacija.napomena.trim(),\r\n            control: \"Sniženo\"\r\n          };\r\n          break;\r\n\r\n        case \"H\":\r\n          switch (test.interp) {\r\n            case \"neg\":\r\n              this.warning = {\r\n                analiza: test.analit,\r\n                text: test.interpretacija.poviseno.text.trim(),\r\n                napomena: test.interpretacija.napomena.trim(),\r\n                control: \"Pozitivan\"\r\n              };\r\n              break;\r\n\r\n            default:\r\n              this.warning = {\r\n                analiza: test.analit,\r\n                text: test.interpretacija.poviseno.text.trim(),\r\n                napomena: test.interpretacija.napomena.trim(),\r\n                control: \"Povišeno\"\r\n              };\r\n              break;\r\n          }\r\n\r\n          break;\r\n\r\n        default:\r\n          this.warning = { analiza: \"\", text: \"\", napomena: \"\", control: \"\" };\r\n          break;\r\n      }\r\n\r\n      if (this.warning.text && this.warning.text != \"\") {\r\n        this.$refs.staticModalExclamation.open();\r\n      }\r\n    },\r\n\r\n    LabAssayEval(e, test) {\r\n      this.analiza_eval = test;\r\n      e.preventDefault();\r\n      this.spinner = false;\r\n      this.showLineChart = false;\r\n      let palette = store.getters.palette;\r\n      this.table_header = test.ime + \" | \" + test.analit;\r\n      if (!test.multidata) {\r\n        this.isLoading = true;\r\n        this.Procjena = [];\r\n\r\n        http\r\n          .get(\r\n            \"/labassay/evaluation/single\" +\r\n              \"?token=\" +\r\n              this.$store.state.token +\r\n              \"&site=\" +\r\n              this.$store.state.site +\r\n              \"&range=\" +\r\n              \"14\",\r\n            {}\r\n          )\r\n          .then(response => {\r\n            if (response.data.Results.length) {\r\n              var obj = {};\r\n              var count = 0;\r\n\r\n              response.data.Results.forEach(element => {\r\n                count++;\r\n                element.rezultati.forEach(rez => {\r\n                  if (\r\n                    rez.labassay === test.labassay_id &&\r\n                    element.verificiran &&\r\n                    rez.rezultat[rez.rezultat.length - 1].rezultat_f.trim() !=\r\n                      \"\"\r\n                  ) {\r\n                    obj.rezultat =\r\n                      rez.rezultat[rez.rezultat.length - 1].rezultat_f;\r\n                    obj.jedinica =\r\n                      rez.rezultat[rez.rezultat.length - 1].jedinice_f;\r\n                    obj.analit = \"\";\r\n                    obj.interp = rez.interp;\r\n                    obj.extend = rez.extend;\r\n                    obj.refd = rez.refd;\r\n                    obj.refg = rez.refg;\r\n                    obj.sid = element.id;\r\n                    obj.updated_at =\r\n                      rez.rezultat[rez.rezultat.length - 1].updated_at;\r\n\r\n                    var datum =\r\n                      JSON.stringify(\r\n                        rez.rezultat[rez.rezultat.length - 1].updated_at\r\n                      ).slice(9, 11) +\r\n                      \".\" +\r\n                      JSON.stringify(\r\n                        rez.rezultat[rez.rezultat.length - 1].updated_at\r\n                      ).slice(6, 8) +\r\n                      \".\" +\r\n                      JSON.stringify(\r\n                        rez.rezultat[rez.rezultat.length - 1].updated_at\r\n                      ).slice(1, 5);\r\n                    var time = JSON.stringify(\r\n                      new Date(\r\n                        new Date(\r\n                          rez.rezultat[rez.rezultat.length - 1].updated_at\r\n                        ).getTime() -\r\n                          new Date(\r\n                            rez.rezultat[rez.rezultat.length - 1].updated_at\r\n                          ).getTimezoneOffset() *\r\n                            60000\r\n                      ).toISOString()\r\n                    ).substring(12, 17);\r\n\r\n                    obj.datum = datum;\r\n                    obj.vrijeme = time;\r\n                    obj.kontrola = this.Interpretacija(\r\n                      \"\",\r\n                      obj.rezultat,\r\n                      obj.jedinica,\r\n                      obj.refd,\r\n                      obj.refg,\r\n                      this.$store.state.site,\r\n                      obj.interp,\r\n                      obj.extend,\r\n                      this.spec\r\n                    )[5];\r\n\r\n                    this.Procjena.push(obj);\r\n                    obj = {};\r\n                  }\r\n                });\r\n\r\n                if (count == response.data.Results.length) {\r\n                  this.Procjena.sort(function(a, b) {\r\n                    return Date.parse(a.updated_at) == Date.parse(b.updated_at)\r\n                      ? 0\r\n                      : +(\r\n                          Date.parse(a.updated_at) < Date.parse(b.updated_at)\r\n                        ) || -1;\r\n                  });\r\n\r\n                  // Line Chart\r\n\r\n                  var data = [];\r\n\r\n                  if (this.Procjena.length) {\r\n                    this.optionsLineChart = {\r\n                      responsive: true,\r\n                      maintainAspectRatio: false,\r\n                      title: {\r\n                        display: true,\r\n                        text: \"\"\r\n                      },\r\n                      scales: {\r\n                        xAxes: [\r\n                          {\r\n                            display: true,\r\n                            gridLines: {\r\n                              display: true,\r\n                              color: \"#eee\"\r\n                            }\r\n                          }\r\n                        ],\r\n                        yAxes: [\r\n                          {\r\n                            display: true,\r\n                            gridLines: {\r\n                              display: true,\r\n                              color: \"#eee\"\r\n                            }\r\n                          }\r\n                        ]\r\n                      }\r\n                    };\r\n\r\n                    var labels = [];\r\n                    var kontrola = [];\r\n                    var temp = \"\";\r\n\r\n                    this.Procjena.forEach(element => {\r\n                      if (!isNaN(element.rezultat.trim())) {\r\n                        switch (element.kontrola) {\r\n                          case \"Red\":\r\n                            kontrola.push(palette.danger);\r\n                            break;\r\n                          case \"Green\":\r\n                            kontrola.push(palette.primary);\r\n                            break;\r\n                          case \"Yellow\":\r\n                            kontrola.push(palette.warning);\r\n                            break;\r\n\r\n                          default:\r\n                            kontrola.push(palette.info);\r\n                            break;\r\n                        }\r\n\r\n                        labels.push(element.datum);\r\n                        data.push(element.rezultat);\r\n                      }\r\n                    });\r\n\r\n                    this.dataLineChart = {\r\n                      labels: labels,\r\n                      datasets: [\r\n                        {\r\n                          label: test.ime + \" | \" + test.analit,\r\n                          backgroundColor: utils.hex2rgb(palette.info, 0.5).css,\r\n                          pointBorderColor: kontrola,\r\n                          pointBackgroundColor: kontrola,\r\n                          borderColor: palette.transparent,\r\n                          data: data\r\n                        }\r\n                      ]\r\n                    };\r\n\r\n                    if (data.length) {\r\n                      this.showLineChart = true;\r\n                    }\r\n\r\n                    // console.warn(\"Zadnjih 14 dana.\");\r\n\r\n                    this.$refs.staticModalLabAssayEvalSingle.open();\r\n                  } else {\r\n\r\n                    // console.warn(\"No data.\");\r\n\r\n                  }\r\n                }\r\n              });\r\n            } else {\r\n\r\n              // console.warn(\"No data.\");\r\n\r\n            }\r\n            this.isLoading = false;\r\n          });\r\n      } else {\r\n\r\n        // console.warn(test.ime + \" | \" + test.analit);\r\n\r\n        this.multiparam_izbor = test.multiparam[0].opis;\r\n        this.multiparam_id = test.multiparam[0]._id;\r\n\r\n        this.multiparams = [];\r\n\r\n        this.multiparam_izbornik = [];\r\n\r\n        test.multiparam.forEach(element => {\r\n          this.multiparam_izbornik.push(element.opis);\r\n          this.multiparams.push(element);\r\n        });\r\n\r\n        this.isLoading = true;\r\n        this.Procjena = [];\r\n\r\n        http\r\n          .get(\r\n            \"/labassay/evaluation/multi\" +\r\n              \"?token=\" +\r\n              this.$store.state.token +\r\n              \"&site=\" +\r\n              this.$store.state.site +\r\n              \"&labassay=\" +\r\n              test.labassay_id +\r\n              \"&range=\" +\r\n              \"14\",\r\n            {}\r\n          )\r\n          .then(response => {\r\n            if (response.data.Multi.length) {\r\n              this.Response = response.data;\r\n\r\n              var obj = {};\r\n              var count = 0;\r\n\r\n              response.data.Multi.forEach(element => {\r\n                count++;\r\n                element.multi.forEach(param => {\r\n                  if (\r\n                    this.multiparam_id == param.labassay &&\r\n                    param.rezultat[0].rezultat_f.trim() != \"\"\r\n                  ) {\r\n                    obj.rezultat = param.rezultat[0].rezultat_f;\r\n                    obj.jedinica = param.rezultat[0].jedinice_f;\r\n                    obj.analit = \"Nema podataka\";\r\n                    obj.interp = param.interp;\r\n                    obj.extend = param.extend;\r\n                    obj.refd = param.refd;\r\n                    obj.refg = param.refg;\r\n                    obj.sid = \"Nema podataka\";\r\n                    obj.updated_at = new Date(param.rezultat[0].updated_at);\r\n\r\n                    var datum =\r\n                      JSON.stringify(\r\n                        new Date(param.rezultat[0].updated_at)\r\n                      ).slice(9, 11) +\r\n                      \".\" +\r\n                      JSON.stringify(\r\n                        new Date(param.rezultat[0].updated_at)\r\n                      ).slice(6, 8) +\r\n                      \".\" +\r\n                      JSON.stringify(\r\n                        new Date(param.rezultat[0].updated_at)\r\n                      ).slice(1, 5);\r\n                    var time = JSON.stringify(\r\n                      new Date(\r\n                        new Date(param.rezultat[0].updated_at).getTime() -\r\n                          new Date(\r\n                            param.rezultat[0].updated_at\r\n                          ).getTimezoneOffset() *\r\n                            60000\r\n                      ).toISOString()\r\n                    ).substring(12, 17);\r\n                    obj.datum = datum;\r\n                    obj.vrijeme = time;\r\n                    obj.kontrola = this.Interpretacija(\r\n                      \"\",\r\n                      obj.rezultat,\r\n                      obj.jedinica,\r\n                      obj.refd,\r\n                      obj.refg,\r\n                      this.$store.state.site,\r\n                      obj.interp,\r\n                      obj.extend,\r\n                      this.spec\r\n                    )[5];\r\n\r\n                    this.Procjena.push(obj);\r\n                    obj = {};\r\n                  }\r\n                });\r\n\r\n                if (count == response.data.Multi.length) {\r\n                  this.Procjena.sort(function(a, b) {\r\n                    return Date.parse(a.updated_at) == Date.parse(b.updated_at)\r\n                      ? 0\r\n                      : +(\r\n                          Date.parse(a.updated_at) < Date.parse(b.updated_at)\r\n                        ) || -1;\r\n                  });\r\n\r\n                  // Line Chart\r\n\r\n                  var data = [];\r\n\r\n                  if (this.Procjena.length) {\r\n                    this.optionsLineChart = {\r\n                      responsive: true,\r\n                      maintainAspectRatio: false,\r\n                      title: {\r\n                        display: true,\r\n                        text: \"\"\r\n                      },\r\n                      scales: {\r\n                        xAxes: [\r\n                          {\r\n                            display: true,\r\n                            gridLines: {\r\n                              display: true,\r\n                              color: \"#eee\"\r\n                            }\r\n                          }\r\n                        ],\r\n                        yAxes: [\r\n                          {\r\n                            display: true,\r\n                            gridLines: {\r\n                              display: true,\r\n                              color: \"#eee\"\r\n                            }\r\n                          }\r\n                        ]\r\n                      }\r\n                    };\r\n\r\n                    var labels = [];\r\n                    var kontrola = [];\r\n                    var temp = \"\";\r\n\r\n                    this.Procjena.forEach(element => {\r\n                      if (!isNaN(element.rezultat.trim())) {\r\n                        switch (element.kontrola) {\r\n                          case \"Red\":\r\n                            kontrola.push(palette.danger);\r\n                            break;\r\n                          case \"Green\":\r\n                            kontrola.push(palette.primary);\r\n                            break;\r\n                          case \"Yellow\":\r\n                            kontrola.push(palette.warning);\r\n                            break;\r\n\r\n                          default:\r\n                            kontrola.push(palette.info);\r\n                            break;\r\n                        }\r\n\r\n                        labels.push(element.datum);\r\n                        data.push(element.rezultat);\r\n                      }\r\n                    });\r\n\r\n                    this.dataLineChart = {\r\n                      labels: labels,\r\n                      datasets: [\r\n                        {\r\n                          label: test.ime + \" | \" + test.analit,\r\n                          backgroundColor: utils.hex2rgb(palette.info, 0.5).css,\r\n                          pointBorderColor: kontrola,\r\n                          pointBackgroundColor: kontrola,\r\n                          borderColor: palette.transparent,\r\n                          data: data\r\n                        }\r\n                      ]\r\n                    };\r\n\r\n                    if (data.length) {\r\n                      this.showLineChart = true;\r\n                    }\r\n\r\n                    this.$refs.staticModalLabAssayEvalMulti.open();\r\n                  } else {\r\n\r\n                    // console.warn(\"No data.\");\r\n\r\n                  }\r\n                }\r\n              });\r\n            } else {\r\n\r\n              // console.warn(\"No data.\");\r\n\r\n            }\r\n            this.isLoading = false;\r\n          });\r\n      }\r\n    },\r\n\r\n    Evaluation(test) {\r\n      this.analiza_eval = test;\r\n      this.spinner = false;\r\n      if (true) {\r\n        this.showLineChart = false;\r\n        let palette = store.getters.palette;\r\n        this.table_header = test.ime + \" | \" + test.analit;\r\n\r\n        if (test.multidata) {\r\n          this.multiparam_izbor = test.multiparam[0].opis;\r\n          this.multiparam_id = test.multiparam[0]._id;\r\n\r\n          this.multiparams = [];\r\n\r\n          this.multiparam_izbornik = [];\r\n\r\n          test.multiparam.forEach(element => {\r\n            this.multiparam_izbornik.push(element.opis);\r\n            this.multiparams.push(element);\r\n          });\r\n\r\n          this.isLoading = true;\r\n          this.Procjena = [];\r\n\r\n          http\r\n            .get(\r\n              \"/patient/evaluation/multi\" +\r\n                \"?token=\" +\r\n                this.$store.state.token +\r\n                \"&site=\" +\r\n                this.$store.state.site +\r\n                \"&patient=\" +\r\n                this.pacijent +\r\n                \"&labassay=\" +\r\n                test.labassay_id,\r\n              {}\r\n            )\r\n            .then(response => {\r\n              if (response.data.Multi.length) {\r\n                this.Response = response.data;\r\n\r\n                var obj = {};\r\n                var count = 0;\r\n\r\n                response.data.Multi.forEach(element => {\r\n                  count++;\r\n                  element.multi.forEach(param => {\r\n                    if (\r\n                      this.multiparam_id == param.labassay &&\r\n                      param.rezultat[0].rezultat_f.trim() != \"\"\r\n                    ) {\r\n                      obj.rezultat = param.rezultat[0].rezultat_f;\r\n                      obj.jedinica = param.rezultat[0].jedinice_f;\r\n                      obj.analit = \"Nema podataka\";\r\n                      obj.interp = param.interp;\r\n                      obj.extend = param.extend;\r\n                      obj.refd = param.refd;\r\n                      obj.refg = param.refg;\r\n                      obj.sid = \"Nema podataka\";\r\n                      obj.updated_at = new Date(param.rezultat[0].updated_at);\r\n\r\n                      var datum =\r\n                        JSON.stringify(\r\n                          new Date(param.rezultat[0].updated_at)\r\n                        ).slice(9, 11) +\r\n                        \".\" +\r\n                        JSON.stringify(\r\n                          new Date(param.rezultat[0].updated_at)\r\n                        ).slice(6, 8) +\r\n                        \".\" +\r\n                        JSON.stringify(\r\n                          new Date(param.rezultat[0].updated_at)\r\n                        ).slice(1, 5);\r\n                      var time = JSON.stringify(\r\n                        new Date(\r\n                          new Date(param.rezultat[0].updated_at).getTime() -\r\n                            new Date(\r\n                              param.rezultat[0].updated_at\r\n                            ).getTimezoneOffset() *\r\n                              60000\r\n                        ).toISOString()\r\n                      ).substring(12, 17);\r\n                      obj.datum = datum;\r\n                      obj.vrijeme = time;\r\n                      obj.kontrola = this.Interpretacija(\r\n                        \"\",\r\n                        obj.rezultat,\r\n                        obj.jedinica,\r\n                        obj.refd,\r\n                        obj.refg,\r\n                        this.$store.state.site,\r\n                        obj.interp,\r\n                        obj.extend,\r\n                        this.spec\r\n                      )[5];\r\n\r\n                      this.Procjena.push(obj);\r\n                      obj = {};\r\n                    }\r\n                  });\r\n\r\n                  if (count == response.data.Multi.length) {\r\n                    this.Procjena.sort(function(a, b) {\r\n                      return Date.parse(a.updated_at) ==\r\n                        Date.parse(b.updated_at)\r\n                        ? 0\r\n                        : +(\r\n                            Date.parse(a.updated_at) < Date.parse(b.updated_at)\r\n                          ) || -1;\r\n                    });\r\n\r\n                    // Line Chart\r\n\r\n                    var data = [];\r\n\r\n                    if (this.Procjena.length) {\r\n                      this.optionsLineChart = {\r\n                        responsive: true,\r\n                        maintainAspectRatio: false,\r\n                        title: {\r\n                          display: true,\r\n                          text: \"\"\r\n                        },\r\n                        scales: {\r\n                          xAxes: [\r\n                            {\r\n                              display: true,\r\n                              gridLines: {\r\n                                display: true,\r\n                                color: \"#eee\"\r\n                              }\r\n                            }\r\n                          ],\r\n                          yAxes: [\r\n                            {\r\n                              display: true,\r\n                              gridLines: {\r\n                                display: true,\r\n                                color: \"#eee\"\r\n                              }\r\n                            }\r\n                          ]\r\n                        }\r\n                      };\r\n\r\n                      var labels = [];\r\n                      var kontrola = [];\r\n                      var temp = \"\";\r\n\r\n                      this.Procjena.forEach(element => {\r\n                        if (!isNaN(element.rezultat.trim())) {\r\n                          switch (element.kontrola) {\r\n                            case \"Red\":\r\n                              kontrola.push(palette.danger);\r\n                              break;\r\n                            case \"Green\":\r\n                              kontrola.push(palette.primary);\r\n                              break;\r\n                            case \"Yellow\":\r\n                              kontrola.push(palette.warning);\r\n                              break;\r\n\r\n                            default:\r\n                              kontrola.push(palette.info);\r\n                              break;\r\n                          }\r\n\r\n                          labels.push(element.datum);\r\n                          data.push(element.rezultat);\r\n                        }\r\n                      });\r\n\r\n                      this.dataLineChart = {\r\n                        labels: labels,\r\n                        datasets: [\r\n                          {\r\n                            label: test.ime + \" | \" + test.analit,\r\n                            backgroundColor: utils.hex2rgb(palette.info, 0.5)\r\n                              .css,\r\n                            pointBorderColor: kontrola,\r\n                            pointBackgroundColor: kontrola,\r\n                            borderColor: palette.transparent,\r\n                            data: data\r\n                          }\r\n                        ]\r\n                      };\r\n\r\n                      if (data.length) {\r\n                        this.showLineChart = true;\r\n                      }\r\n\r\n                      this.$refs.staticModalEvaluationMulti.open();\r\n                    } else {\r\n\r\n                      // console.warn(\"No data.\");\r\n\r\n                    }\r\n                  }\r\n                });\r\n              } else {\r\n\r\n                // console.warn(\"No data.\");\r\n\r\n              }\r\n              this.isLoading = false;\r\n            });\r\n        } else {\r\n          this.isLoading = true;\r\n          this.Procjena = [];\r\n\r\n          http\r\n            .get(\r\n              \"/patient/evaluation/single\" +\r\n                \"?token=\" +\r\n                this.$store.state.token +\r\n                \"&site=\" +\r\n                this.$store.state.site +\r\n                \"&patient=\" +\r\n                this.pacijent,\r\n              {}\r\n            )\r\n            .then(response => {\r\n              if (response.data.Results.length) {\r\n                var obj = {};\r\n                var count = 0;\r\n\r\n                response.data.Results.forEach(element => {\r\n                  count++;\r\n                  element.rezultati.forEach(rez => {\r\n                    if (\r\n                      rez.labassay === test.labassay_id &&\r\n                      element.verificiran &&\r\n                      rez.rezultat[rez.rezultat.length - 1].rezultat_f.trim() !=\r\n                        \"\"\r\n                    ) {\r\n                      obj.rezultat =\r\n                        rez.rezultat[rez.rezultat.length - 1].rezultat_f;\r\n                      obj.jedinica =\r\n                        rez.rezultat[rez.rezultat.length - 1].jedinice_f;\r\n                      obj.analit = \"\";\r\n                      obj.interp = rez.interp;\r\n                      obj.extend = rez.extend;\r\n                      obj.refd = rez.refd;\r\n                      obj.refg = rez.refg;\r\n                      obj.sid = element.id;\r\n                      obj.updated_at =\r\n                        rez.rezultat[rez.rezultat.length - 1].updated_at;\r\n\r\n                      var datum =\r\n                        JSON.stringify(\r\n                          rez.rezultat[rez.rezultat.length - 1].updated_at\r\n                        ).slice(9, 11) +\r\n                        \".\" +\r\n                        JSON.stringify(\r\n                          rez.rezultat[rez.rezultat.length - 1].updated_at\r\n                        ).slice(6, 8) +\r\n                        \".\" +\r\n                        JSON.stringify(\r\n                          rez.rezultat[rez.rezultat.length - 1].updated_at\r\n                        ).slice(1, 5);\r\n                      var time = JSON.stringify(\r\n                        new Date(\r\n                          new Date(\r\n                            rez.rezultat[rez.rezultat.length - 1].updated_at\r\n                          ).getTime() -\r\n                            new Date(\r\n                              rez.rezultat[rez.rezultat.length - 1].updated_at\r\n                            ).getTimezoneOffset() *\r\n                              60000\r\n                        ).toISOString()\r\n                      ).substring(12, 17);\r\n\r\n                      obj.datum = datum;\r\n                      obj.vrijeme = time;\r\n                      obj.kontrola = this.Interpretacija(\r\n                        \"\",\r\n                        obj.rezultat,\r\n                        obj.jedinica,\r\n                        obj.refd,\r\n                        obj.refg,\r\n                        this.$store.state.site,\r\n                        obj.interp,\r\n                        obj.extend,\r\n                        this.spec\r\n                      )[5];\r\n\r\n                      this.Procjena.push(obj);\r\n                      obj = {};\r\n                    }\r\n                  });\r\n\r\n                  if (count == response.data.Results.length) {\r\n                    this.Procjena.sort(function(a, b) {\r\n                      return Date.parse(a.updated_at) ==\r\n                        Date.parse(b.updated_at)\r\n                        ? 0\r\n                        : +(\r\n                            Date.parse(a.updated_at) < Date.parse(b.updated_at)\r\n                          ) || -1;\r\n                    });\r\n\r\n                    // Line Chart\r\n\r\n                    var data = [];\r\n\r\n                    if (this.Procjena.length) {\r\n                      this.optionsLineChart = {\r\n                        responsive: true,\r\n                        maintainAspectRatio: false,\r\n                        title: {\r\n                          display: true,\r\n                          text: \"\"\r\n                        },\r\n                        scales: {\r\n                          xAxes: [\r\n                            {\r\n                              display: true,\r\n                              gridLines: {\r\n                                display: true,\r\n                                color: \"#eee\"\r\n                              }\r\n                            }\r\n                          ],\r\n                          yAxes: [\r\n                            {\r\n                              display: true,\r\n                              gridLines: {\r\n                                display: true,\r\n                                color: \"#eee\"\r\n                              }\r\n                            }\r\n                          ]\r\n                        }\r\n                      };\r\n\r\n                      var labels = [];\r\n                      var kontrola = [];\r\n                      var temp = \"\";\r\n\r\n                      this.Procjena.forEach(element => {\r\n                        if (!isNaN(element.rezultat.trim())) {\r\n                          switch (element.kontrola) {\r\n                            case \"Red\":\r\n                              kontrola.push(palette.danger);\r\n                              break;\r\n                            case \"Green\":\r\n                              kontrola.push(palette.primary);\r\n                              break;\r\n                            case \"Yellow\":\r\n                              kontrola.push(palette.warning);\r\n                              break;\r\n\r\n                            default:\r\n                              kontrola.push(palette.info);\r\n                              break;\r\n                          }\r\n\r\n                          labels.push(element.datum);\r\n                          data.push(element.rezultat);\r\n                        }\r\n                      });\r\n\r\n                      this.dataLineChart = {\r\n                        labels: labels,\r\n                        datasets: [\r\n                          {\r\n                            label: test.ime + \" | \" + test.analit,\r\n                            backgroundColor: utils.hex2rgb(palette.info, 0.5)\r\n                              .css,\r\n                            pointBorderColor: kontrola,\r\n                            pointBackgroundColor: kontrola,\r\n                            borderColor: palette.transparent,\r\n                            data: data\r\n                          }\r\n                        ]\r\n                      };\r\n\r\n                      if (data.length) {\r\n                        this.showLineChart = true;\r\n                      }\r\n\r\n                      this.$refs.staticModalEvaluationSingle.open();\r\n                    } else {\r\n\r\n                      // console.warn(\"No data.\");\r\n\r\n                    }\r\n                  }\r\n                });\r\n              } else {\r\n\r\n                // console.warn(\"No data.\");\r\n\r\n              }\r\n              this.isLoading = false;\r\n            });\r\n        }\r\n      }\r\n    },\r\n\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* \r\n\r\n\r\n\r\n\r\n\r\n| Microbiology Methods\r\n\r\n\r\n\r\n\r\n\r\n*/\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n\r\n    filteredAntibiotics(column, columns) {\r\n      return this.Antibiotics.filter(\r\n        item => this.Antibiotics.indexOf(item) % columns === column - 1\r\n      );\r\n    },\r\n\r\n    filteredBacteries(column, columns) {\r\n      return this.TemporaryBacteries.filter(\r\n        item => this.TemporaryBacteries.indexOf(item) % columns === column - 1\r\n      );\r\n    },\r\n\r\n    AddAntibiotics(data) {\r\n      var obj = {};\r\n\r\n      if (!data.chosen) {\r\n        (obj._id = data._id),\r\n          (obj.rbr_a = data.rbr_a),\r\n          (obj.naziv = data.naziv),\r\n          (obj.opis = data.opis),\r\n          (obj.rezultat = \"\");\r\n        this.TemporaryAntibiotics.push(obj);\r\n      } else {\r\n        for (var i = 0; i < this.TemporaryAntibiotics.length; i++) {\r\n          if (this.TemporaryAntibiotics[i]._id === data._id) {\r\n            this.TemporaryAntibiotics.splice(i, 1);\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    },\r\n\r\n    AddBacteries(data) {\r\n      if (!data.chosen) {\r\n        this.TemporaryBacteriesAdd.push(data);\r\n      } else {\r\n        for (var i = 0; i < this.TemporaryBacteriesAdd.length; i++) {\r\n          if (this.TemporaryBacteriesAdd[i]._id === data._id) {\r\n            this.TemporaryBacteriesAdd.splice(i, 1);\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    },\r\n\r\n    OpenMicroSelect($event, test) {\r\n\r\n      console.log(\"Select Modal opening...\");\r\n\r\n      this.CurrentTab = \"\";\r\n      this.testovi = [];\r\n      this.rezultati = [];\r\n      this.analitiprikaz = [];\r\n      this.calculated = false;\r\n      this.show_table = false;\r\n      this.main = false;\r\n\r\n      var topcije = null;\r\n      topcije = izbornik.rez;\r\n\r\n      http\r\n        .get(\r\n          \"rezultati/showsingle/\" +\r\n            this.$store.state.sid +\r\n            \"?token=\" +\r\n            this.$store.state.token +\r\n            \"&site=\" +\r\n            this.$store.state.site,\r\n          {}\r\n        )\r\n        .then(res => {\r\n          console.log(res.data);\r\n          var test = {};\r\n\r\n          if (res.data.data.length) {\r\n            res.data.data.sort(function(a, b) {\r\n              return a.testovi.labassay.grupa + a.testovi.labassay.grouporder ==\r\n                b.testovi.labassay.grupa + b.testovi.labassay.grouporder\r\n                ? 0\r\n                : +(\r\n                    a.testovi.labassay.grupa + a.testovi.labassay.grouporder >\r\n                    b.testovi.labassay.grupa + b.testovi.labassay.grouporder\r\n                  ) || -1;\r\n            });\r\n\r\n            this.testovi = res.data.data;\r\n            this.analitiprikaz = res.data.multidata;\r\n\r\n            res.data.data.forEach(element => {\r\n              test = {};\r\n              test.realizovan = false;\r\n\r\n              test.ime = element.testovi.labassay.naziv;\r\n              test.test = element.testovi.labassay.sifra;\r\n              test.analit = element.testovi.labassay.analit;\r\n              test.IDE = element.testovi._id;\r\n              test.labassay_id = element.testovi.labassay._id;\r\n\r\n              test.multi_count = 0;\r\n              test.multi_rezultati = [];\r\n\r\n              res.data.multidata.forEach(multi => {\r\n                if (multi.labassay._id === element.testovi.labassay._id) {\r\n                  test.multi_rezultati = multi.rezultat;\r\n                  test.multi_count = multi.rezultat[0].rezultat.length;\r\n                }\r\n              });\r\n\r\n              test.kategorija = element.testovi.labassay.kategorija;\r\n              test.analyser = element.testovi.labassay.analyser;\r\n              test.multiparam = element.testovi.labassay.multiparam;\r\n              test.vise = element.testovi.rezultat.length;\r\n              test.calculated = element.testovi.labassay.calculated;\r\n              test.manual = element.testovi.labassay.manual;\r\n\r\n              test.select_options = eval(\r\n                \"topcije.\" +\r\n                  element.testovi.interp\r\n                    .replace(\"%\", \"_\")\r\n                    .replace(\"/\", \"_\")\r\n                    .replace(\" \", \"_\")\r\n                    .replace(/-/g, \"_\")\r\n                    .replace(\"#\", \"_\")\r\n                    .replace(/^\\d+/, \"\")\r\n              );\r\n\r\n              element.testovi.rezultat.forEach(rezultat => {\r\n                test.sekcija = rezultat.anaassay.sekcija;\r\n                test.rezultat = rezultat.rezultat_f;\r\n                test.result = rezultat;\r\n                test.anaassay = rezultat.anaassay;\r\n\r\n                if (rezultat.rezultat_f != \"\") {\r\n                  test.realizovan = true;\r\n                }\r\n\r\n                test.unit = rezultat.jedinice_f;\r\n\r\n                if (res.data.verificiran || res.data.status === \"ODOBREN\") {\r\n                  test.odobren = \"ODOBREN\";\r\n                  test.edit = false;\r\n                } else {\r\n                  test.odobren != \"ODOBREN\";\r\n                  test.edit = true;\r\n                }\r\n\r\n                test.jedinica = rezultat.jedinice_f;\r\n                test.id = rezultat._id;\r\n                test.multidata = element.testovi.labassay.multi;\r\n                test.rezultat_m = rezultat.rezultat_m;\r\n                test.bakterije = element.testovi.labassay.bakterije;\r\n                test.neg_description = element.testovi.labassay.neg_description;\r\n                test.pos_description = element.testovi.labassay.pos_description;\r\n                test.refSet = element.testovi.grupa;\r\n                test.dRef = element.testovi.refd;\r\n                test.gRef = element.testovi.refg;\r\n                test.interp = element.testovi.interp;\r\n                test.extend = element.testovi.extend;\r\n                test.retest = element.testovi.retest;\r\n                test.interpretacija = element.testovi.labassay.interpretacija;\r\n              });\r\n\r\n              if (\r\n                test.select_options != undefined &&\r\n                !test.select_options.includes(test.rezultat)\r\n              ) {\r\n                test.select_options.unshift(test.rezultat);\r\n              }\r\n              this.rezultati.push(test);\r\n            });\r\n\r\n            if (this.MicrobiologySample && this.AllowGetSample) {\r\n              // On open Modal\r\n              // console.log(\"Microbiology sample check.\");\r\n              var bakterioloski = false;\r\n              var negativan = false;\r\n              var pozitivan = false;\r\n              var bakterijed = [];\r\n              var bakterijei = [];\r\n              var neg_rezultati = [];\r\n              var poz_rezultati = [];\r\n\r\n              this.CurrentTest = this.rezultati[0].analit;\r\n\r\n              neg_rezultati = [...this.rezultati[0].neg_description];\r\n              poz_rezultati = [...this.rezultati[0].pos_description];\r\n\r\n              if (this.rezultati[0].bakterije.length) {\r\n                bakterioloski = true;\r\n\r\n                var counter = 0;\r\n                var ima = false;\r\n\r\n                this.Bacteries.forEach(element => {\r\n                  element.chosen = false;\r\n                  counter = 0;\r\n                  ima = false;\r\n                  this.rezultati[0].bakterije.forEach(bakt => {\r\n                    counter++;\r\n                    if (element._id == bakt) {\r\n                      ima = true;\r\n                    }\r\n\r\n                    if (\r\n                      counter === this.rezultati[0].bakterije.length &&\r\n                      !ima\r\n                    ) {\r\n                      bakterijed.push(element);\r\n                    }\r\n\r\n                    if (counter === this.rezultati[0].bakterije.length && ima) {\r\n                      bakterijei.push(element);\r\n                    }\r\n                  });\r\n                });\r\n\r\n                switch (this.rezultati[0].rezultat_m.length) {\r\n                  case 0:\r\n                    this.MicrobiologyScenario = \"MAIBNoR\";\r\n                    this.SelectedBacteries = [];\r\n                    break;\r\n                  case 1:\r\n                    this.MicrobiologyScenario = \"MAIBNeR\";\r\n                    this.SelectedBacteries = [];\r\n\r\n                    negativan = true;\r\n\r\n                    if (\r\n                      !neg_rezultati.includes(this.rezultati[0].rezultat.trim())\r\n                    ) {\r\n                      neg_rezultati.unshift(this.rezultati[0].rezultat.trim());\r\n                    }\r\n\r\n                    break;\r\n\r\n                  default:\r\n                    this.MicrobiologyScenario = \"MAIBPoR\";\r\n                    this.SelectedBacteries = [];\r\n                    this.BacteryTabs = [];\r\n\r\n                    this.rezultati[0].rezultat_m.forEach(element => {\r\n                      // console.log(element)\r\n                      if (element.bakterija) {\r\n                        this.SelectedBacteries.push(element);\r\n                        this.BacteryTabs.push(element.opis);\r\n                      }\r\n                    });\r\n\r\n                    console.log(\"Izabrane bakterije:\")\r\n                    console.log(this.SelectedBacteries)\r\n\r\n                    let maxVal = this.SelectedBacteries.reduce((max, val) =>\r\n                      max.antibiogram.antibiotici.length >\r\n                      val.antibiogram.antibiotici.length\r\n                        ? max\r\n                        : val\r\n                    );\r\n\r\n                    if (this.CurrentTab == \"\") {\r\n                      // this.CurrentTab = maxVal.opis;\r\n                    }\r\n                    this.CurrentTab = this.SelectedBacteries[0].opis;\r\n\r\n                    bakterijed.forEach(element => {\r\n                      this.SelectedBacteries.forEach(bact => {\r\n                        if (element._id == bact._id) {\r\n                          element.chosen = true;\r\n                        }\r\n                      });\r\n                    });\r\n\r\n                    bakterijei.forEach(element => {\r\n                      this.SelectedBacteries.forEach(bact => {\r\n                        if (element._id == bact._id) {\r\n                          element.chosen = true;\r\n                        }\r\n                      });\r\n                    });\r\n\r\n                    pozitivan = true;\r\n                    if (\r\n                      !poz_rezultati.includes(this.rezultati[0].rezultat.trim())\r\n                    ) {\r\n                      poz_rezultati.unshift(this.rezultati[0].rezultat.trim());\r\n                    }\r\n\r\n                    break;\r\n                }\r\n              } else {\r\n                bakterioloski = false;\r\n                this.SelectedBacteries = [];\r\n\r\n                switch (this.rezultati[0].rezultat_m.length) {\r\n                  case 0:\r\n                    this.MicrobiologyScenario = \"MANBNoR\";\r\n                    neg_rezultati = this.rezultati[0].neg_description;\r\n                    poz_rezultati = this.rezultati[0].pos_description;\r\n\r\n                    break;\r\n\r\n                  case 1:\r\n                    if (this.rezultati[0].rezultat_m[0].negativan === true) {\r\n                      this.MicrobiologyScenario = \"MANBNeR\";\r\n\r\n                      negativan = true;\r\n\r\n                      if (\r\n                        !neg_rezultati.includes(\r\n                          this.rezultati[0].rezultat.trim()\r\n                        )\r\n                      ) {\r\n                        neg_rezultati.unshift(\r\n                          this.rezultati[0].rezultat.trim()\r\n                        );\r\n                      }\r\n                    } else {\r\n                      this.MicrobiologyScenario = \"MANBPoR\";\r\n\r\n                      pozitivan = true;\r\n\r\n                      if (\r\n                        !poz_rezultati.includes(\r\n                          this.rezultati[0].rezultat.trim()\r\n                        )\r\n                      ) {\r\n                        poz_rezultati.unshift(\r\n                          this.rezultati[0].rezultat.trim()\r\n                        );\r\n                      }\r\n                    }\r\n\r\n                    break;\r\n\r\n                  default:\r\n                    this.MicrobiologyScenario = \"Unknown\";\r\n\r\n                    break;\r\n                }\r\n              }\r\n\r\n              this.MicrobiologyResult = {\r\n                negative: negativan,\r\n                positive: pozitivan,\r\n                BUG: bakterioloski,\r\n                F_RESULT: this.rezultati[0].rezultat,\r\n                M_RESULT: [...this.rezultati[0].rezultat_m],\r\n                DefaultBacteries: [...bakterijei],\r\n                RemainingBacteries: [...bakterijed],\r\n                NegativeDescriptions: [...neg_rezultati],\r\n                PositiveDescriptions: [...poz_rezultati]\r\n              };\r\n            } else {\r\n              this.MicrobiologyScenario = \"Unknown\";\r\n\r\n              this.MicrobiologyResult = {\r\n                negative: null,\r\n                positive: null,\r\n                BUG: null,\r\n                F_RESULT: \"\",\r\n                M_RESULT: [],\r\n                DefaultBacteries: [],\r\n                RemainingBacteries: [],\r\n                NegativeDescriptions: [],\r\n                PositiveDescriptions: []\r\n              };\r\n            }\r\n\r\n            this.rezultati.forEach(element => {\r\n              if (element.calculated) {\r\n                this.calculated = true;\r\n              }\r\n            });\r\n          }\r\n        })\r\n        .then(() => {\r\n          this.ShowAntibiotics = false;\r\n          this.ShowBacteries = false;\r\n          this.show_table = true;\r\n          this.main = true;\r\n          this.$refs.staticModalMicroBacterySelect.open();\r\n        });\r\n    },\r\n\r\n    OpenMicro($event, test) {\r\n      console.log(\"Result Modal opening...\");\r\n      this.CurrentTab = \"\";\r\n      this.testovi = [];\r\n      this.rezultati = [];\r\n      this.analitiprikaz = [];\r\n      this.calculated = false;\r\n      this.show_table = false;\r\n      this.main = false;\r\n\r\n      var topcije = null;\r\n      topcije = izbornik.rez;\r\n\r\n      http\r\n        .get(\r\n          \"rezultati/showsingle/\" +\r\n            this.$store.state.sid +\r\n            \"?token=\" +\r\n            this.$store.state.token +\r\n            \"&site=\" +\r\n            this.$store.state.site,\r\n          {}\r\n        )\r\n        .then(res => {\r\n          console.log(res.data);\r\n          var test = {};\r\n\r\n          if (res.data.data.length) {\r\n            res.data.data.sort(function(a, b) {\r\n              return a.testovi.labassay.grupa + a.testovi.labassay.grouporder ==\r\n                b.testovi.labassay.grupa + b.testovi.labassay.grouporder\r\n                ? 0\r\n                : +(\r\n                    a.testovi.labassay.grupa + a.testovi.labassay.grouporder >\r\n                    b.testovi.labassay.grupa + b.testovi.labassay.grouporder\r\n                  ) || -1;\r\n            });\r\n\r\n            this.testovi = res.data.data;\r\n            this.analitiprikaz = res.data.multidata;\r\n\r\n            res.data.data.forEach(element => {\r\n              test = {};\r\n              test.realizovan = false;\r\n\r\n              test.ime = element.testovi.labassay.naziv;\r\n              test.test = element.testovi.labassay.sifra;\r\n              test.analit = element.testovi.labassay.analit;\r\n              test.IDE = element.testovi._id;\r\n              test.labassay_id = element.testovi.labassay._id;\r\n\r\n              test.multi_count = 0;\r\n              test.multi_rezultati = [];\r\n\r\n              res.data.multidata.forEach(multi => {\r\n                if (multi.labassay._id === element.testovi.labassay._id) {\r\n                  test.multi_rezultati = multi.rezultat;\r\n                  test.multi_count = multi.rezultat[0].rezultat.length;\r\n                }\r\n              });\r\n\r\n              test.kategorija = element.testovi.labassay.kategorija;\r\n              test.analyser = element.testovi.labassay.analyser;\r\n              test.multiparam = element.testovi.labassay.multiparam;\r\n              test.vise = element.testovi.rezultat.length;\r\n              test.calculated = element.testovi.labassay.calculated;\r\n              test.manual = element.testovi.labassay.manual;\r\n\r\n              test.select_options = eval(\r\n                \"topcije.\" +\r\n                  element.testovi.interp\r\n                    .replace(\"%\", \"_\")\r\n                    .replace(\"/\", \"_\")\r\n                    .replace(\" \", \"_\")\r\n                    .replace(/-/g, \"_\")\r\n                    .replace(\"#\", \"_\")\r\n                    .replace(/^\\d+/, \"\")\r\n              );\r\n\r\n              element.testovi.rezultat.forEach(rezultat => {\r\n                test.sekcija = rezultat.anaassay.sekcija;\r\n                test.rezultat = rezultat.rezultat_f;\r\n                test.result = rezultat;\r\n                test.anaassay = rezultat.anaassay;\r\n\r\n                if (rezultat.rezultat_f != \"\") {\r\n                  test.realizovan = true;\r\n                }\r\n\r\n                test.unit = rezultat.jedinice_f;\r\n\r\n                if (res.data.verificiran || res.data.status === \"ODOBREN\") {\r\n                  test.odobren = \"ODOBREN\";\r\n                  test.edit = false;\r\n                } else {\r\n                  test.odobren != \"ODOBREN\";\r\n                  test.edit = true;\r\n                }\r\n\r\n                test.jedinica = rezultat.jedinice_f;\r\n                test.id = rezultat._id;\r\n                test.multidata = element.testovi.labassay.multi;\r\n                test.rezultat_m = rezultat.rezultat_m;\r\n                test.bakterije = element.testovi.labassay.bakterije;\r\n                test.neg_description = element.testovi.labassay.neg_description;\r\n                test.pos_description = element.testovi.labassay.pos_description;\r\n                test.refSet = element.testovi.grupa;\r\n                test.dRef = element.testovi.refd;\r\n                test.gRef = element.testovi.refg;\r\n                test.interp = element.testovi.interp;\r\n                test.extend = element.testovi.extend;\r\n                test.retest = element.testovi.retest;\r\n                test.interpretacija = element.testovi.labassay.interpretacija;\r\n              });\r\n\r\n              if (\r\n                test.select_options != undefined &&\r\n                !test.select_options.includes(test.rezultat)\r\n              ) {\r\n                test.select_options.unshift(test.rezultat);\r\n              }\r\n              this.rezultati.push(test);\r\n            });\r\n\r\n            if (this.MicrobiologySample && this.AllowGetSample) {\r\n              // On open Modal\r\n              // console.log(\"Microbiology sample check.\");\r\n              var bakterioloski = false;\r\n              var negativan = false;\r\n              var pozitivan = false;\r\n              var bakterijed = [];\r\n              var bakterijei = [];\r\n              var neg_rezultati = [];\r\n              var poz_rezultati = [];\r\n\r\n              this.CurrentTest = this.rezultati[0].analit;\r\n\r\n              neg_rezultati = [...this.rezultati[0].neg_description];\r\n              poz_rezultati = [...this.rezultati[0].pos_description];\r\n\r\n              if (this.rezultati[0].bakterije.length) {\r\n                bakterioloski = true;\r\n\r\n                var counter = 0;\r\n                var ima = false;\r\n\r\n                this.Bacteries.forEach(element => {\r\n                  element.chosen = false;\r\n                  counter = 0;\r\n                  ima = false;\r\n                  this.rezultati[0].bakterije.forEach(bakt => {\r\n                    counter++;\r\n                    if (element._id == bakt) {\r\n                      ima = true;\r\n                    }\r\n\r\n                    if (\r\n                      counter === this.rezultati[0].bakterije.length &&\r\n                      !ima\r\n                    ) {\r\n                      bakterijed.push(element);\r\n                    }\r\n\r\n                    if (counter === this.rezultati[0].bakterije.length && ima) {\r\n                      bakterijei.push(element);\r\n                    }\r\n                  });\r\n                });\r\n\r\n                switch (this.rezultati[0].rezultat_m.length) {\r\n                  case 0:\r\n                    this.MicrobiologyScenario = \"MAIBNoR\";\r\n                    this.SelectedBacteries = [];\r\n                    break;\r\n                  case 1:\r\n                    this.MicrobiologyScenario = \"MAIBNeR\";\r\n                    this.SelectedBacteries = [];\r\n\r\n                    negativan = true;\r\n\r\n                    if (\r\n                      !neg_rezultati.includes(this.rezultati[0].rezultat.trim())\r\n                    ) {\r\n                      neg_rezultati.unshift(this.rezultati[0].rezultat.trim());\r\n                    }\r\n\r\n                    break;\r\n\r\n                  default:\r\n                    this.MicrobiologyScenario = \"MAIBPoR\";\r\n                    this.SelectedBacteries = [];\r\n                    this.BacteryTabs = [];\r\n\r\n                    this.rezultati[0].rezultat_m.forEach(element => {\r\n                      // console.log(element)\r\n                      if (element.bakterija) {\r\n                        this.SelectedBacteries.push(element);\r\n                        this.BacteryTabs.push(element.opis);\r\n                      }\r\n                    });\r\n\r\n                    console.log(\"Izabrane bakterije:\")\r\n                    console.log(this.SelectedBacteries)\r\n\r\n                    let maxVal = this.SelectedBacteries.reduce((max, val) =>\r\n                      max.antibiogram.antibiotici.length >\r\n                      val.antibiogram.antibiotici.length\r\n                        ? max\r\n                        : val\r\n                    );\r\n\r\n                    if (this.CurrentTab == \"\") {\r\n                      // this.CurrentTab = maxVal.opis;\r\n                    }\r\n                    this.CurrentTab = this.SelectedBacteries[0].opis;\r\n\r\n                    bakterijed.forEach(element => {\r\n                      this.SelectedBacteries.forEach(bact => {\r\n                        if (element._id == bact._id) {\r\n                          element.chosen = true;\r\n                        }\r\n                      });\r\n                    });\r\n\r\n                    bakterijei.forEach(element => {\r\n                      this.SelectedBacteries.forEach(bact => {\r\n                        if (element._id == bact._id) {\r\n                          element.chosen = true;\r\n                        }\r\n                      });\r\n                    });\r\n\r\n                    pozitivan = true;\r\n                    if (\r\n                      !poz_rezultati.includes(this.rezultati[0].rezultat.trim())\r\n                    ) {\r\n                      poz_rezultati.unshift(this.rezultati[0].rezultat.trim());\r\n                    }\r\n\r\n                    break;\r\n                }\r\n              } else {\r\n                bakterioloski = false;\r\n                this.SelectedBacteries = [];\r\n\r\n                switch (this.rezultati[0].rezultat_m.length) {\r\n                  case 0:\r\n                    this.MicrobiologyScenario = \"MANBNoR\";\r\n                    neg_rezultati = this.rezultati[0].neg_description;\r\n                    poz_rezultati = this.rezultati[0].pos_description;\r\n\r\n                    break;\r\n\r\n                  case 1:\r\n                    if (this.rezultati[0].rezultat_m[0].negativan === true) {\r\n                      this.MicrobiologyScenario = \"MANBNeR\";\r\n\r\n                      negativan = true;\r\n\r\n                      if (\r\n                        !neg_rezultati.includes(\r\n                          this.rezultati[0].rezultat.trim()\r\n                        )\r\n                      ) {\r\n                        neg_rezultati.unshift(\r\n                          this.rezultati[0].rezultat.trim()\r\n                        );\r\n                      }\r\n                    } else {\r\n                      this.MicrobiologyScenario = \"MANBPoR\";\r\n\r\n                      pozitivan = true;\r\n\r\n                      if (\r\n                        !poz_rezultati.includes(\r\n                          this.rezultati[0].rezultat.trim()\r\n                        )\r\n                      ) {\r\n                        poz_rezultati.unshift(\r\n                          this.rezultati[0].rezultat.trim()\r\n                        );\r\n                      }\r\n                    }\r\n\r\n                    break;\r\n\r\n                  default:\r\n                    this.MicrobiologyScenario = \"Unknown\";\r\n\r\n                    break;\r\n                }\r\n              }\r\n\r\n              this.MicrobiologyResult = {\r\n                negative: negativan,\r\n                positive: pozitivan,\r\n                BUG: bakterioloski,\r\n                F_RESULT: this.rezultati[0].rezultat,\r\n                M_RESULT: [...this.rezultati[0].rezultat_m],\r\n                DefaultBacteries: [...bakterijei],\r\n                RemainingBacteries: [...bakterijed],\r\n                NegativeDescriptions: [...neg_rezultati],\r\n                PositiveDescriptions: [...poz_rezultati]\r\n              };\r\n            } else {\r\n              this.MicrobiologyScenario = \"Unknown\";\r\n\r\n              this.MicrobiologyResult = {\r\n                negative: null,\r\n                positive: null,\r\n                BUG: null,\r\n                F_RESULT: \"\",\r\n                M_RESULT: [],\r\n                DefaultBacteries: [],\r\n                RemainingBacteries: [],\r\n                NegativeDescriptions: [],\r\n                PositiveDescriptions: []\r\n              };\r\n            }\r\n\r\n            this.rezultati.forEach(element => {\r\n              if (element.calculated) {\r\n                this.calculated = true;\r\n              }\r\n            });\r\n          }\r\n        })\r\n        .then(() => {\r\n          this.ShowAntibiotics = false;\r\n          this.ShowBacteries = false;\r\n          this.show_table = true;\r\n          this.main = true;\r\n          this.$refs.staticModalMicroBactery.open();\r\n        });\r\n    },\r\n\r\n    SelectBactery(data) {\r\n      if (!data.chosen) {\r\n        this.SelectedBacteries.push(data);\r\n      } else {\r\n        for (var i = this.SelectedBacteries.length - 1; i >= 0; i--) {\r\n          if (this.SelectedBacteries[i]._id === data._id) {\r\n            this.SelectedBacteries.splice(i, 1);\r\n          }\r\n        }\r\n      }\r\n\r\n      if (this.SelectedBacteries.length > 0) {\r\n        this.ModalPositiveCondition = true;\r\n      } else {\r\n        this.ModalPositiveCondition = false;\r\n      }\r\n    },\r\n\r\n    MicroResultSelect(event) {\r\n      this.uzorci.forEach(element => {\r\n        if (element.sid === this.$store.state.sid) {\r\n          this.sample.status = \"ZAPRIMLJEN\";\r\n        }\r\n      });\r\n      this.$refs.staticModalSelectResult.open();\r\n    },\r\n\r\n    ResetSample(event) {\r\n      this.$refs.staticModalResetSample.open();\r\n    },\r\n\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* \r\n\r\n\r\n\r\n\r\n\r\nEnd of Microbiology Methods |\r\n\r\n\r\n\r\n\r\n\r\n*/\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n    /* -- */\r\n\r\n    onCancel() {},\r\n\r\n    Prethodni() {\r\n      this.pagination = false;\r\n\r\n      var check = 0;\r\n      var found = false;\r\n      this.Results.forEach(element => {\r\n        check++;\r\n        if (element.pid == this.Previous.pid) {\r\n          found = true;\r\n          router.push(\r\n            \"/obrada/rezultati/\" +\r\n              element.patient +\r\n              \"/\" +\r\n              element.pid +\r\n              \"?date=\" +\r\n              element.date\r\n          );\r\n        }\r\n      });\r\n\r\n      if (check === this.Results.length) {\r\n        if (found) {\r\n          http\r\n            .get(\r\n              \"/rezultati/pagination\" +\r\n                \"?token=\" +\r\n                this.$store.state.token +\r\n                \"&site=\" +\r\n                this.$store.state.site +\r\n                \"&pid=\" +\r\n                this.Previous.pid.toString() +\r\n                \"&date=\" +\r\n                this.$route.query.date,\r\n              {}\r\n            )\r\n            .then(res => {\r\n              res.data.rezultati = res.data.rezultati.sort(function(a, b) {\r\n                return a.pid.localeCompare(b.pid, undefined, {\r\n                  numeric: true,\r\n                  sensitivity: \"base\"\r\n                });\r\n              });\r\n\r\n              this.data_length =\r\n                res.data.rezultati[res.data.rezultati.length - 1].pid;\r\n              this.data_min = res.data.rezultati[0].pid;\r\n              if (Object.getOwnPropertyNames(res.data).length === 0) {\r\n\r\n                // console.warn(\"No data.\");\r\n\r\n                this.pagination = true;\r\n                this.backward_disabled = true;\r\n              } else {\r\n                this.data_pid = res.data.data.pid;\r\n                this.Results = res.data.rezultati;\r\n\r\n                router.push(\r\n                  \"/obrada/rezultati/\" +\r\n                    res.data.data.patient +\r\n                    \"/\" +\r\n                    res.data.data.pid +\r\n                    \"?date=\" +\r\n                    res.data.data.date\r\n                );\r\n              }\r\n            });\r\n        } else {\r\n          this.Previous.pid = this.Previous.pid - 1;\r\n          if (this.Previous.pid > 0) {\r\n            this.Prethodni();\r\n          } else {\r\n          }\r\n        }\r\n      } else {\r\n      }\r\n    },\r\n\r\n    Sljedeci() {\r\n      this.pagination = false;\r\n\r\n      var check = 0;\r\n      var found = false;\r\n      this.Results.forEach(element => {\r\n        check++;\r\n        if (element.pid == this.Next.pid) {\r\n          found = true;\r\n          router.push(\r\n            \"/obrada/rezultati/\" +\r\n              element.patient +\r\n              \"/\" +\r\n              element.pid +\r\n              \"?date=\" +\r\n              element.date\r\n          );\r\n        }\r\n      });\r\n\r\n      if (check === this.Results.length) {\r\n        if (found) {\r\n          http\r\n            .get(\r\n              \"/rezultati/pagination\" +\r\n                \"?token=\" +\r\n                this.$store.state.token +\r\n                \"&site=\" +\r\n                this.$store.state.site +\r\n                \"&pid=\" +\r\n                this.Next.pid.toString() +\r\n                \"&date=\" +\r\n                this.$route.query.date,\r\n              {}\r\n            )\r\n            .then(res => {\r\n              res.data.rezultati = res.data.rezultati.sort(function(a, b) {\r\n                return a.pid.localeCompare(b.pid, undefined, {\r\n                  numeric: true,\r\n                  sensitivity: \"base\"\r\n                });\r\n              });\r\n\r\n              this.data_length =\r\n                res.data.rezultati[res.data.rezultati.length - 1].pid;\r\n              this.data_min = res.data.rezultati[0].pid;\r\n              if (Object.getOwnPropertyNames(res.data).length === 0) {\r\n\r\n                // console.warn(\"No data.\");\r\n\r\n                this.pagination = true;\r\n                this.forward_disabled = true;\r\n              } else {\r\n                this.data_pid = res.data.data.pid;\r\n                this.Results = res.data.rezultati;\r\n\r\n                router.push(\r\n                  \"/obrada/rezultati/\" +\r\n                    res.data.data.patient +\r\n                    \"/\" +\r\n                    res.data.data.pid +\r\n                    \"?date=\" +\r\n                    res.data.data.date\r\n                );\r\n              }\r\n            });\r\n        } else {\r\n          this.Next.pid = this.Next.pid + 1;\r\n          this.Sljedeci();\r\n        }\r\n      } else {\r\n      }\r\n    },\r\n\r\n    Created() {\r\n\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* \r\n\r\n\r\n\r\n\r\n\r\n| Microbiology Provjera\r\n\r\n\r\n\r\n\r\n\r\n*/\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n\r\n      this.MicrobiologyOrder = false;\r\n\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* \r\n\r\n\r\n\r\n\r\n\r\nEnd of Microbiology Provjera |\r\n\r\n\r\n\r\n\r\n\r\n*/\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      /* -- */\r\n      \r\n      http\r\n        .get(\r\n          \"rezultati/odobravanje/samples/\" +\r\n            this.$route.params.patient +\r\n            \"/\" +\r\n            this.$route.params.id +\r\n            \"?token=\" +\r\n            this.$store.state.token +\r\n            \"&site=\" +\r\n            this.$store.state.site +\r\n            \"&date=\" +\r\n            this.$route.query.date,\r\n          {}\r\n        )\r\n        .then(res => {\r\n          this.header =\r\n\r\n            // \"Obrada rezultata za pacijenta: \" +\r\n            res.data.results[0].patient.ime +\r\n            \" \" +\r\n            res.data.results[0].patient.prezime;\r\n          this.lokacija = res.data.lokacija;\r\n          this.final_pdf = res.data.final_pdf;\r\n\r\n          this.analyser_patient = res.data.results[0].patient;\r\n\r\n          this.timestamp = res.data.results[0].timestamp;\r\n\r\n          this.pacijent = res.data.results[0].patient._id;\r\n          this.ime = res.data.results[0].patient.ime;\r\n          this.prezime = res.data.results[0].patient.prezime;\r\n          this.data_spol = res.data.results[0].patient.spol;\r\n          this.jmbg = res.data.results[0].patient.jmbg;\r\n          this.pid = res.data.results[0].sample.pid;\r\n\r\n          this.email = res.data.results[0].patient.email.trim();\r\n          this.email_tmp = res.data.results[0].patient.email.trim();\r\n\r\n          if (!this.Email(this.email)) {\r\n            this.email = \"\";\r\n            this.email_tmp = \"\";\r\n          }\r\n\r\n          this.count = res.data.results.length;\r\n          this.approved = 0;\r\n          this.verified = 0;\r\n\r\n          this.odobren = true;\r\n          this.verificiran = true;\r\n          this.partials = [];\r\n          this.partials_condition = false;\r\n\r\n          res.data.results.forEach(element => {\r\n            if (element.verificiran) {\r\n              this.verified++;\r\n              this.partials.push(element._id);\r\n            }\r\n            if (\r\n              element.status === \"ODOBREN\" ||\r\n              element.status === \"VERIFICIRAN\"\r\n            ) {\r\n              this.approved++;\r\n            }\r\n            if (\r\n              element.status != \"ODOBREN\" &&\r\n              element.status != \"VERIFICIRAN\"\r\n            ) {\r\n              this.odobren = false;\r\n            }\r\n            if (!element.verificiran) {\r\n              this.verificiran = false;\r\n            }\r\n          });\r\n\r\n          if (this.count > this.verified && this.verified > 1) {\r\n            this.partials_condition = true;\r\n          }\r\n\r\n          this.uzorci = [];\r\n\r\n          this.nalaz.patient = res.data.results[0].patient._id;\r\n          this.nalaz.samples = [];\r\n\r\n          res.data.results.forEach(element => {\r\n            var check = 0;\r\n            var zaprimljen = 0;\r\n            var realizovan = 0;\r\n\r\n            if (element.verificiran) {\r\n              var status_uzorka = \"VERIFICIRAN\";\r\n            } else {\r\n              var status_uzorka = element.status;\r\n            }\r\n\r\n            this.nalaz.samples.push(element._id);\r\n\r\n            element.rezultati.forEach(test => {\r\n              check++;\r\n\r\n              if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\r\n                zaprimljen++;\r\n              }\r\n\r\n              if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\r\n                realizovan++;\r\n              }\r\n\r\n              if (check === element.rezultati.length) {\r\n\r\n                /* -- */\r\n                /* -- */\r\n                /* -- */\r\n                /* -- */\r\n                /* -- */\r\n                /* \r\n\r\n\r\n\r\n\r\n\r\n| Microbiology Provjera\r\n\r\n\r\n\r\n\r\n\r\n*/\r\n                /* -- */\r\n                /* -- */\r\n                /* -- */\r\n                /* -- */\r\n                /* -- */\r\n\r\n                if (element.sample.tip.includes(\"Mikrobiologija\")) {\r\n                  this.MicrobiologyOrder = true;\r\n                }\r\n\r\n                /* -- */\r\n                /* -- */\r\n                /* -- */\r\n                /* -- */\r\n                /* -- */\r\n                /* \r\n\r\n\r\n\r\n\r\n\r\nEnd of Microbiology Provjera |\r\n\r\n\r\n\r\n\r\n\r\n*/\r\n                /* -- */\r\n                /* -- */\r\n                /* -- */\r\n                /* -- */\r\n                /* -- */\r\n\r\n                // console.log(\"Provjera: Created\")\r\n\r\n                if (status_uzorka === \"VERIFICIRAN\") {\r\n                  this.uzorci.push({\r\n                    sid: element.id,\r\n                    status: \"VERIFICIRAN\",\r\n                    pdf_exists: element.pdf_exists,\r\n                    tip: element.sample.tip,\r\n                    _id: element._id,\r\n                    removed: false\r\n                  });\r\n                } else if (status_uzorka === \"ODOBREN\") {\r\n                  this.uzorci.push({\r\n                    sid: element.id,\r\n                    status: \"ODOBREN\",\r\n                    pdf_exists: element.pdf_exists,\r\n                    tip: element.sample.tip,\r\n                    _id: element._id,\r\n                    removed: false\r\n                  });\r\n                } else if (zaprimljen < 1) {\r\n                  this.uzorci.push({\r\n                    sid: element.id,\r\n                    status: \"REALIZOVAN\",\r\n                    pdf_exists: element.pdf_exists,\r\n                    tip: element.sample.tip,\r\n                    _id: element._id,\r\n                    removed: false\r\n                  });\r\n                } else if (realizovan < 1) {\r\n                  var stat = \"ZAPRIMLJEN\";\r\n                  if (element.sample.tip.includes(\"Mikrobiologija\")) {\r\n                    if (element.rezultati[0].rezultat[0].rezultat_m.length) {\r\n                      stat = \"REALIZOVAN\";\r\n                    }\r\n                  }\r\n                  this.uzorci.push({\r\n                    sid: element.id,\r\n                    status: stat,\r\n                    pdf_exists: element.pdf_exists,\r\n                    tip: element.sample.tip,\r\n                    _id: element._id,\r\n                    removed: false\r\n                  });\r\n                } else {\r\n                  this.uzorci.push({\r\n                    sid: element.id,\r\n                    status: \"U OBRADI\",\r\n                    pdf_exists: element.pdf_exists,\r\n                    tip: element.sample.tip,\r\n                    _id: element._id,\r\n                    removed: false\r\n                  });\r\n                }\r\n              }\r\n            });\r\n          });\r\n\r\n          this.uzorci = this.uzorci.sort(function(a, b) {\r\n            return a.sid.localeCompare(b.sid, undefined, {\r\n              numeric: true,\r\n              sensitivity: \"base\"\r\n            });\r\n          });\r\n          this.main = true;\r\n\r\n          this.pagination = true;\r\n\r\n          http\r\n            .get(\r\n              \"/rezultati/pagination\" +\r\n                \"?token=\" +\r\n                this.$store.state.token +\r\n                \"&site=\" +\r\n                this.$store.state.site +\r\n                \"&pid=\" +\r\n                this.$route.params.id +\r\n                \"&date=\" +\r\n                this.$route.query.date,\r\n              {}\r\n            )\r\n            .then(res => {\r\n              res.data.rezultati = res.data.rezultati.sort(function(a, b) {\r\n                return a.pid.localeCompare(b.pid, undefined, {\r\n                  numeric: true,\r\n                  sensitivity: \"base\"\r\n                });\r\n              });\r\n\r\n              this.data_length =\r\n                res.data.rezultati[res.data.rezultati.length - 1].pid;\r\n              this.data_min = res.data.rezultati[0].pid;\r\n              if (Object.getOwnPropertyNames(res.data).length === 0) {\r\n\r\n                // console.warn(\"No data.\");\r\n\r\n                this.pagination = true;\r\n              } else {\r\n                this.data_pid = res.data.data.pid;\r\n                this.Results = res.data.rezultati;\r\n              }\r\n\r\n              /* -- */\r\n              /* -- */\r\n              /* -- */\r\n              /* -- */\r\n              /* -- */\r\n              /* \r\n\r\n\r\n\r\n\r\n\r\n| Microbiology Get Bakterije, Antibiograme i Antibiotike\r\n\r\n\r\n\r\n\r\n\r\n*/\r\n              /* -- */\r\n              /* -- */\r\n              /* -- */\r\n              /* -- */\r\n              /* -- */\r\n\r\n              if (this.MicrobiologyOrder) {\r\n                http\r\n                  .get(\r\n                    \"mikrobiologija/bakterije/get?token=\" +\r\n                      this.$store.state.token +\r\n                      \"&site=\" +\r\n                      this.$store.state.site,\r\n                    {}\r\n                  )\r\n                  .then(res => {\r\n                    this.Bacteries = res.data.bakterije;\r\n                    http\r\n                      .get(\r\n                        \"mikrobiologija/antibiogrami/get?token=\" +\r\n                          this.$store.state.token +\r\n                          \"&site=\" +\r\n                          this.$store.state.site,\r\n                        {}\r\n                      )\r\n                      .then(res => {\r\n                        this.Antibiograms = res.data.antibiogrami;\r\n\r\n                        this.Antibiograms.sort(function(a, b) {\r\n                          return a.naziv.localeCompare(b.naziv, undefined, {\r\n                            numeric: true,\r\n                            sensitivity: \"base\"\r\n                          });\r\n                        });\r\n\r\n                        http\r\n                          .get(\r\n                            \"mikrobiologija/antibiotici/get?token=\" +\r\n                              this.$store.state.token +\r\n                              \"&site=\" +\r\n                              this.$store.state.site,\r\n                            {}\r\n                          )\r\n                          .then(res => {\r\n                            res.data.antibiotici.sort(function(a, b) {\r\n                              return a.rbr_a.localeCompare(b.rbr_a, undefined, {\r\n                                numeric: true,\r\n                                sensitivity: \"base\"\r\n                              });\r\n                            });\r\n\r\n                            this.Antibiotics = [];\r\n\r\n                            res.data.antibiotici.forEach(element => {\r\n                              element.chosen = false;\r\n                              element.disabled = false;\r\n                              this.Antibiotics.push(element);\r\n                            });\r\n                          });\r\n                      });\r\n                  });\r\n              }\r\n\r\n              /* -- */\r\n              /* -- */\r\n              /* -- */\r\n              /* -- */\r\n              /* -- */\r\n              /* \r\n\r\n\r\n\r\n\r\n\r\nEnd of Microbiology Get Bakterije, Antibiograme i Antibiotike |\r\n\r\n\r\n\r\n\r\n\r\n*/\r\n              /* -- */\r\n              /* -- */\r\n              /* -- */\r\n              /* -- */\r\n              /* -- */\r\n\r\n            });\r\n        });\r\n    },\r\n\r\n    Povratak() {\r\n      router.push(\"/obrada/pregled/\" + \"?sekcija=\" + \"SVE\");\r\n    },\r\n\r\n    Nazad() {\r\n      this.email_button = false;\r\n      this.main = true;\r\n      this.pdf = false;\r\n    },\r\n\r\n    Email: function(email) {\r\n      if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email)) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    },\r\n\r\n    GetSingleSample(data) {\r\n      this.testovi = [];\r\n      this.rezultati = [];\r\n      this.analitiprikaz = [];\r\n      this.calculated = false;\r\n\r\n      var topcije = null;\r\n      topcije = izbornik.rez;\r\n\r\n      this.show_table = false;\r\n\r\n      http\r\n        .get(\r\n          \"rezultati/showsingle/\" +\r\n            data.sid +\r\n            \"?token=\" +\r\n            this.$store.state.token +\r\n            \"&site=\" +\r\n            this.$store.state.site,\r\n          {}\r\n        )\r\n        .then(res => {\r\n          var test = {};\r\n\r\n          if (res.data.data.length) {\r\n            res.data.data.sort(function(a, b) {\r\n              return a.testovi.labassay.grupa + a.testovi.labassay.grouporder ==\r\n                b.testovi.labassay.grupa + b.testovi.labassay.grouporder\r\n                ? 0\r\n                : +(\r\n                    a.testovi.labassay.grupa + a.testovi.labassay.grouporder >\r\n                    b.testovi.labassay.grupa + b.testovi.labassay.grouporder\r\n                  ) || -1;\r\n            });\r\n\r\n            this.testovi = res.data.data;\r\n            this.analitiprikaz = res.data.multidata;\r\n\r\n            // console.log(this.analitiprikaz);\r\n\r\n            res.data.data.forEach(element => {\r\n              test = {};\r\n              test.realizovan = false;\r\n\r\n              test.ime = element.testovi.labassay.naziv;\r\n              test.test = element.testovi.labassay.sifra;\r\n              test.analit = element.testovi.labassay.analit;\r\n              test.IDE = element.testovi._id;\r\n              test.labassay_id = element.testovi.labassay._id;\r\n\r\n              test.multi_count = 0;\r\n              test.multi_rezultati = [];\r\n\r\n              res.data.multidata.forEach(multi => {\r\n                if (multi.labassay._id === element.testovi.labassay._id) {\r\n                  test.multi_rezultati = multi.rezultat;\r\n                  test.multi_count = multi.rezultat[0].rezultat.length;\r\n                }\r\n              });\r\n\r\n              test.kategorija = element.testovi.labassay.kategorija;\r\n              test.analyser = element.testovi.labassay.analyser;\r\n              test.multiparam = element.testovi.labassay.multiparam;\r\n              test.vise = element.testovi.rezultat.length;\r\n              test.calculated = element.testovi.labassay.calculated;\r\n              test.manual = element.testovi.labassay.manual;\r\n\r\n              test.select_options = eval(\r\n                \"topcije.\" +\r\n                  element.testovi.interp\r\n                    .replace(\"%\", \"_\")\r\n                    .replace(\"/\", \"_\")\r\n                    .replace(\" \", \"_\")\r\n                    .replace(/-/g, \"_\")\r\n                    .replace(\"#\", \"_\")\r\n                    // .replace(/[0-9]/g, \"_\")\r\n                    .replace(/^\\d+/, \"\")\r\n              );\r\n\r\n              element.testovi.rezultat.forEach(rezultat => {\r\n                test.sekcija = rezultat.anaassay.sekcija;\r\n                test.rezultat = rezultat.rezultat_f;\r\n                test.result = rezultat;\r\n                test.anaassay = rezultat.anaassay;\r\n\r\n                if (rezultat.rezultat_f != \"\") {\r\n                  test.realizovan = true;\r\n                }\r\n\r\n                test.unit = rezultat.jedinice_f;\r\n\r\n                if (res.data.verificiran || res.data.status === \"ODOBREN\") {\r\n                  test.odobren = \"ODOBREN\";\r\n                  test.edit = false;\r\n                } else {\r\n                  test.odobren != \"ODOBREN\";\r\n                  test.edit = true;\r\n                }\r\n\r\n                test.jedinica = rezultat.jedinice_f;\r\n                test.id = rezultat._id;\r\n                test.multidata = element.testovi.labassay.multi;\r\n                test.rezultat_m = rezultat.rezultat_m;\r\n                test.bakterije = element.testovi.labassay.bakterije;\r\n                test.neg_description = element.testovi.labassay.neg_description;\r\n                test.pos_description = element.testovi.labassay.pos_description;\r\n                test.refSet = element.testovi.grupa;\r\n                test.dRef = element.testovi.refd;\r\n                test.gRef = element.testovi.refg;\r\n                test.interp = element.testovi.interp;\r\n                test.extend = element.testovi.extend;\r\n                test.retest = element.testovi.retest;\r\n                test.interpretacija = element.testovi.labassay.interpretacija;\r\n              });\r\n\r\n              if (\r\n                test.select_options != undefined &&\r\n                !test.select_options.includes(test.rezultat)\r\n              ) {\r\n                test.select_options.unshift(test.rezultat);\r\n              }\r\n              this.rezultati.push(test);\r\n            });\r\n\r\n            /* -- */\r\n            /* -- */\r\n            /* -- */\r\n            /* -- */\r\n            /* -- */\r\n            /* \r\n\r\n\r\n\r\n\r\n\r\n| Microbiology Sample Check\r\n\r\n\r\n\r\n\r\n\r\n*/\r\n            /* -- */\r\n            /* -- */\r\n            /* -- */\r\n            /* -- */\r\n            /* -- */\r\n\r\n            // if (this.MicrobiologySample && this.AllowGetSample) {\r\n            if (this.MicrobiologySample) {\r\n\r\n              // On first Click\r\n              // console.warn(\"Microbiology sample check.\");\r\n\r\n              var bakterioloski = false;\r\n              var negativan = false;\r\n              var pozitivan = false;\r\n              var bakterijed = [];\r\n              var bakterijei = [];\r\n              var neg_rezultati = [];\r\n              var poz_rezultati = [];\r\n\r\n              this.CurrentTest = this.rezultati[0].analit;\r\n\r\n              neg_rezultati = [...this.rezultati[0].neg_description];\r\n              poz_rezultati = [...this.rezultati[0].pos_description];\r\n\r\n              if (this.rezultati[0].bakterije.length) {\r\n\r\n                console.log(\"Ima bakterije.\");\r\n\r\n                bakterioloski = true;\r\n\r\n                var counter = 0;\r\n                var ima = false;\r\n\r\n                this.Bacteries.forEach(element => {\r\n                  element.chosen = false;\r\n                  counter = 0;\r\n                  ima = false;\r\n                  this.rezultati[0].bakterije.forEach(bakt => {\r\n                    counter++;\r\n                    if (element._id == bakt) {\r\n                      ima = true;\r\n                    }\r\n\r\n                    if (\r\n                      counter === this.rezultati[0].bakterije.length &&\r\n                      !ima\r\n                    ) {\r\n                      bakterijed.push(element);\r\n                    }\r\n\r\n                    if (counter === this.rezultati[0].bakterije.length && ima) {\r\n                      bakterijei.push(element);\r\n                    }\r\n                  });\r\n                });\r\n\r\n                switch (this.rezultati[0].rezultat_m.length) {\r\n                  case 0:\r\n                    // Ima definisan skup bakterija - Nema Rezultat\r\n                    this.MicrobiologyScenario = \"MAIBNoR\";\r\n                    this.SelectedBacteries = [];\r\n                    break;\r\n                  case 1:\r\n                    // Ima definisan skup bakterija - Negativan Rezultat\r\n                    this.MicrobiologyScenario = \"MAIBNeR\";\r\n                    this.SelectedBacteries = [];\r\n\r\n                    negativan = true;\r\n\r\n                    if (\r\n                      !neg_rezultati.includes(this.rezultati[0].rezultat.trim())\r\n                    ) {\r\n                      neg_rezultati.unshift(this.rezultati[0].rezultat.trim());\r\n                    }\r\n\r\n                    break;\r\n\r\n                  default:\r\n                    // Ima definisan skup bakterija - Pozitivan Rezultat\r\n                    this.MicrobiologyScenario = \"MAIBPoR\";\r\n                    this.SelectedBacteries = [];\r\n                    this.BacteryTabs = [];\r\n\r\n                    this.rezultati[0].rezultat_m.forEach(element => {\r\n                      // console.log(element)\r\n                      if (element.bakterija) {\r\n                        this.SelectedBacteries.push(element);\r\n                        this.BacteryTabs.push(element.opis);\r\n                      }\r\n                    });\r\n\r\n                    console.log(\"Izabrane bakterije:\")\r\n                    console.log(this.SelectedBacteries)\r\n\r\n                    let maxVal = this.SelectedBacteries.reduce((max, val) =>\r\n                      max.antibiogram.antibiotici.length >\r\n                      val.antibiogram.antibiotici.length\r\n                        ? max\r\n                        : val\r\n                    );\r\n\r\n                    if (this.CurrentTab == \"\") {\r\n                      // this.CurrentTab = maxVal.opis;\r\n                    }\r\n                    this.CurrentTab = this.SelectedBacteries[0].opis;\r\n\r\n                    bakterijed.forEach(element => {\r\n                      this.SelectedBacteries.forEach(bact => {\r\n                        if (element._id == bact._id) {\r\n                          element.chosen = true;\r\n                        }\r\n                      });\r\n                    });\r\n\r\n                    bakterijei.forEach(element => {\r\n                      this.SelectedBacteries.forEach(bact => {\r\n                        if (element._id == bact._id) {\r\n                          element.chosen = true;\r\n                        }\r\n                      });\r\n                    });\r\n\r\n                    pozitivan = true;\r\n                    if (\r\n                      !poz_rezultati.includes(this.rezultati[0].rezultat.trim())\r\n                    ) {\r\n                      poz_rezultati.unshift(this.rezultati[0].rezultat.trim());\r\n                    }\r\n\r\n                    break;\r\n                }\r\n              } else {\r\n                bakterioloski = false;\r\n\r\n                console.log(\"Nema bakterije.\");\r\n\r\n                this.SelectedBacteries = [];\r\n\r\n                switch (this.rezultati[0].rezultat_m.length) {\r\n                  case 0:\r\n                    // Nema definisan skup bakterija - Nema Rezultat\r\n                    this.MicrobiologyScenario = \"MANBNoR\";\r\n                    neg_rezultati = this.rezultati[0].neg_description;\r\n                    poz_rezultati = this.rezultati[0].pos_description;\r\n\r\n                    break;\r\n\r\n                  case 1:\r\n                    if (this.rezultati[0].rezultat_m[0].negativan === true) {\r\n                      // Nema definisan skup bakterija - Negativan Rezultat\r\n                      this.MicrobiologyScenario = \"MANBNeR\";\r\n\r\n                      negativan = true;\r\n\r\n                      if (\r\n                        !neg_rezultati.includes(\r\n                          this.rezultati[0].rezultat.trim()\r\n                        )\r\n                      ) {\r\n                        neg_rezultati.unshift(\r\n                          this.rezultati[0].rezultat.trim()\r\n                        );\r\n                      }\r\n                    } else {\r\n                      // Nema definisan skup bakterija - Pozitivan Rezultat\r\n                      this.MicrobiologyScenario = \"MANBPoR\";\r\n\r\n                      pozitivan = true;\r\n\r\n                      if (\r\n                        !poz_rezultati.includes(\r\n                          this.rezultati[0].rezultat.trim()\r\n                        )\r\n                      ) {\r\n                        poz_rezultati.unshift(\r\n                          this.rezultati[0].rezultat.trim()\r\n                        );\r\n                      }\r\n                    }\r\n\r\n                    break;\r\n\r\n                  default:\r\n                    // Error\r\n                    this.MicrobiologyScenario = \"Unknown\";\r\n\r\n                    break;\r\n                }\r\n              }\r\n\r\n              this.MicrobiologyResult = {\r\n                negative: negativan,\r\n                positive: pozitivan,\r\n                BUG: bakterioloski,\r\n                F_RESULT: this.rezultati[0].rezultat,\r\n                M_RESULT: [...this.rezultati[0].rezultat_m],\r\n                DefaultBacteries: [...bakterijei],\r\n                RemainingBacteries: [...bakterijed],\r\n                NegativeDescriptions: [...neg_rezultati],\r\n                PositiveDescriptions: [...poz_rezultati]\r\n              };\r\n              // console.log(this.MicrobiologyResult)\r\n            } else {\r\n\r\n              // console.log(\"Uzorak nije mikrobiološki || Sample closed\");\r\n\r\n              this.MicrobiologyScenario = \"Unknown\";\r\n\r\n              this.MicrobiologyResult = {\r\n                negative: null,\r\n                positive: null,\r\n                BUG: null,\r\n                F_RESULT: \"\",\r\n                M_RESULT: [],\r\n                DefaultBacteries: [],\r\n                RemainingBacteries: [],\r\n                NegativeDescriptions: [],\r\n                PositiveDescriptions: []\r\n              };\r\n            }\r\n\r\n            /* -- */\r\n            /* -- */\r\n            /* -- */\r\n            /* -- */\r\n            /* -- */\r\n            /* \r\n\r\n\r\n\r\n\r\n\r\nEnd of Microbiology Sample Check |\r\n\r\n\r\n\r\n\r\n\r\n*/\r\n            /* -- */\r\n            /* -- */\r\n            /* -- */\r\n            /* -- */\r\n            /* -- */\r\n\r\n            this.rezultati.forEach(element => {\r\n              if (element.calculated) {\r\n                this.calculated = true;\r\n              }\r\n            });\r\n\r\n            this.sample = data;\r\n            this.show_table = true;\r\n          }\r\n        })\r\n        .then(() => {\r\n          bus.$emit(\"SetClientHeight\", data.sid);\r\n        });\r\n    },\r\n\r\n    /* GetAnalysers() {\r\n      http\r\n        .get(\r\n          \"postavke/aparat/listall?token=\" +\r\n            this.$store.state.token +\r\n            \"&site=\" +\r\n            this.$store.state.site,\r\n          {}\r\n        )\r\n        .then(res => {\r\n          if (res.data.success === false) {\r\n          } else {\r\n            res.data.aparati.forEach(element => {\r\n              if (element.tip === \"IMUNOHEMIJSKI\") {\r\n                element.selected = false;\r\n                this.analysers.push(element);\r\n              }\r\n            });\r\n          }\r\n        });\r\n    }, */\r\n\r\n    SelectAnalyser(test) {\r\n      http\r\n        .get(\r\n          \"rezultati/odobravanje/analysers\" +\r\n            \"?token=\" +\r\n            this.$store.state.token +\r\n            \"&site=\" +\r\n            this.$store.state.site +\r\n            \"&test=\" +\r\n            test.labassay_id,\r\n          {}\r\n        )\r\n        .then(res => {\r\n          this.analysers = [];\r\n\r\n          res.data.anaassays.forEach(element => {\r\n            element.aparat.site = element.site;\r\n            this.analysers.push(element.aparat);\r\n          });\r\n\r\n          this.analysers.forEach(analyser => {\r\n            analyser.selected = false;\r\n          });\r\n\r\n          this.analiza = test;\r\n\r\n          this.rezultati.forEach(element => {\r\n            this.analysers.forEach(analyser => {\r\n              if (\r\n                element.ime === this.analiza.ime &&\r\n                element.anaassay.aparat === analyser._id\r\n              ) {\r\n                analyser.selected = true;\r\n                this.analyser_selected = analyser;\r\n              }\r\n            });\r\n          });\r\n          this.$refs.staticModalAparati.open();\r\n        });\r\n    },\r\n\r\n    AnalyserSelected(analyser) {\r\n      this.analyser = analyser;\r\n\r\n      if (this.analyser_selected._id === analyser._id) {\r\n        this.$refs.staticModalAparati.close();\r\n\r\n        // console.warn(\"No change required.\");\r\n\r\n      } else {\r\n        http\r\n          .post(\"rezultati/odobravanje/references\", {\r\n            token: this.$store.state.token,\r\n            site: this.$store.state.site,\r\n            id: this.sample.sid,\r\n            pacijent: this.analyser_patient,\r\n            analiza: this.analiza,\r\n            analyser: this.analyser\r\n          })\r\n          .then(res => {\r\n            if (res.data.success) {\r\n              var data = {};\r\n\r\n              this.uzorci.forEach(element => {\r\n                if (element.sid === this.$store.state.sid) {\r\n                  data = element;\r\n                }\r\n              });\r\n\r\n              this.testovi = [];\r\n              this.rezultati = [];\r\n              this.analitiprikaz = [];\r\n              this.calculated = false;\r\n\r\n              var topcije = null;\r\n              topcije = izbornik.rez;\r\n\r\n              this.show_table = false;\r\n\r\n              http\r\n                .get(\r\n                  \"rezultati/showsingle/\" +\r\n                    data.sid +\r\n                    \"?token=\" +\r\n                    this.$store.state.token +\r\n                    \"&site=\" +\r\n                    this.$store.state.site,\r\n                  {}\r\n                )\r\n                .then(res => {\r\n                  var test = {};\r\n\r\n                  if (res.data.data.length) {\r\n                    res.data.data.sort(function(a, b) {\r\n                      return a.testovi.labassay.grupa +\r\n                        a.testovi.labassay.grouporder ==\r\n                        b.testovi.labassay.grupa + b.testovi.labassay.grouporder\r\n                        ? 0\r\n                        : +(\r\n                            a.testovi.labassay.grupa +\r\n                              a.testovi.labassay.grouporder >\r\n                            b.testovi.labassay.grupa +\r\n                              b.testovi.labassay.grouporder\r\n                          ) || -1;\r\n                    });\r\n\r\n                    this.testovi = res.data.data;\r\n                    this.analitiprikaz = res.data.multidata;\r\n\r\n                    res.data.data.forEach(element => {\r\n                      test = {};\r\n                      test.realizovan = false;\r\n\r\n                      test.ime = element.testovi.labassay.naziv;\r\n                      test.test = element.testovi.labassay.sifra;\r\n                      test.analit = element.testovi.labassay.analit;\r\n                      test.IDE = element.testovi._id;\r\n                      test.labassay_id = element.testovi.labassay._id;\r\n\r\n                      test.multi_count = 0;\r\n                      test.multi_rezultati = [];\r\n\r\n                      res.data.multidata.forEach(multi => {\r\n                        if (\r\n                          multi.labassay._id === element.testovi.labassay._id\r\n                        ) {\r\n                          test.multi_rezultati = multi.rezultat;\r\n                          test.multi_count = multi.rezultat[0].rezultat.length;\r\n                        }\r\n                      });\r\n\r\n                      test.kategorija = element.testovi.labassay.kategorija;\r\n                      test.analyser = element.testovi.labassay.analyser;\r\n                      test.multiparam = element.testovi.labassay.multiparam;\r\n                      test.vise = element.testovi.rezultat.length;\r\n                      test.calculated = element.testovi.labassay.calculated;\r\n                      test.manual = element.testovi.labassay.manual;\r\n\r\n                      test.select_options = eval(\r\n                        \"topcije.\" +\r\n                          element.testovi.interp\r\n                            .replace(\"%\", \"_\")\r\n                            .replace(\"/\", \"_\")\r\n                            .replace(\" \", \"_\")\r\n                            .replace(/-/g, \"_\")\r\n                            .replace(\"#\", \"_\")\r\n                            // .replace(/[0-9]/g, \"_\")\r\n                            .replace(/^\\d+/, \"\")\r\n                      );\r\n\r\n                      element.testovi.rezultat.forEach(rezultat => {\r\n                        test.sekcija = rezultat.anaassay.sekcija;\r\n                        test.rezultat = rezultat.rezultat_f;\r\n                        test.result = rezultat;\r\n                        test.anaassay = rezultat.anaassay;\r\n\r\n                        if (rezultat.rezultat_f != \"\") {\r\n                          test.realizovan = true;\r\n                        }\r\n\r\n                        test.unit = rezultat.jedinice_f;\r\n\r\n                        if (\r\n                          res.data.verificiran ||\r\n                          res.data.status === \"ODOBREN\"\r\n                        ) {\r\n                          test.odobren = \"ODOBREN\";\r\n                          test.edit = false;\r\n                        } else {\r\n                          test.odobren != \"ODOBREN\";\r\n                          test.edit = true;\r\n                        }\r\n\r\n                        test.jedinica = rezultat.jedinice_f;\r\n                        test.id = rezultat._id;\r\n                        test.multidata = element.testovi.labassay.multi;\r\n                        test.rezultat_m = rezultat.rezultat_m;\r\n                        test.bakterije = element.testovi.labassay.bakterije;\r\n                        test.neg_description =\r\n                          element.testovi.labassay.neg_description;\r\n                        test.pos_description =\r\n                          element.testovi.labassay.pos_description;\r\n                        test.refSet = element.testovi.grupa;\r\n                        test.dRef = element.testovi.refd;\r\n                        test.gRef = element.testovi.refg;\r\n                        test.interp = element.testovi.interp;\r\n                        test.extend = element.testovi.extend;\r\n                        test.retest = element.testovi.retest;\r\n                        test.interpretacija =\r\n                          element.testovi.labassay.interpretacija;\r\n                      });\r\n\r\n                      if (\r\n                        test.select_options != undefined &&\r\n                        !test.select_options.includes(test.rezultat)\r\n                      ) {\r\n                        test.select_options.unshift(test.rezultat);\r\n                      }\r\n                      this.rezultati.push(test);\r\n                    });\r\n\r\n                    this.rezultati.forEach(element => {\r\n                      if (element.calculated) {\r\n                        this.calculated = true;\r\n                      }\r\n                    });\r\n\r\n                    this.sample = data;\r\n                    this.show_table = true;\r\n                  }\r\n                });\r\n              this.$refs.staticModalAparati.close();\r\n            } else {\r\n\r\n              // console.warn(res.data.message);\r\n              // this.$refs.staticModalAparati.close();\r\n\r\n            }\r\n          });\r\n      }\r\n    },\r\n\r\n    Reference(event, test) {\r\n      this.reference = {\r\n        sample: this.$store.state.sid,\r\n        labassay: test.labassay_id,\r\n        naziv: test.ime,\r\n        opis: test.analit,\r\n        dref: test.dRef,\r\n        gref: test.gRef,\r\n        interp: test.interp,\r\n        extend: test.extend,\r\n        jedinica: test.jedinica\r\n      };\r\n      this.$refs.staticModalReference.open();\r\n    },\r\n\r\n    BarcodePrint(data) {\r\n      var link = barcode + data.sid + \".png\";\r\n\r\n      http\r\n        .get(\r\n          \"uzorci/barcode/\" +\r\n            data.sid +\r\n            \"?token=\" +\r\n            this.$store.state.token +\r\n            \"&site=\" +\r\n            this.$store.state.site,\r\n          {}\r\n        )\r\n        .then(res => {\r\n          printEPL(\r\n            res.data.name + \" \" + res.data.surname,\r\n            this.sid,\r\n            res.data.pacijentRBr,\r\n            res.data.godiste,\r\n            res.data.datum,\r\n            link,\r\n            res.data.code,\r\n            this.$store.state.site,\r\n            undefined,\r\n            undefined\r\n          );\r\n        });\r\n    },\r\n\r\n    SaveResults(rezultati, from) {\r\n\r\n      // Vue Loading Overlay Component\r\n      this.isLoading = true;\r\n\r\n      if (!this.MicrobiologySample) {\r\n        rezultati.forEach(element => {\r\n          element.rezultat = element.rezultat.replace(/,/g, \".\");\r\n        });\r\n\r\n        rezultati[0].rezultat_m = [];\r\n      }\r\n\r\n      http\r\n        .post(\"/rezultati/odobravanje/sacuvaj/\" + this.$store.state.sid, {\r\n          email: this.$store.state.userId,\r\n          token: this.$store.state.token,\r\n          site: this.$store.state.site,\r\n          rezultati: rezultati\r\n        })\r\n        .then(res => {\r\n          http\r\n            .get(\r\n              \"rezultati/odobravanje/samples/\" +\r\n                this.$route.params.patient +\r\n                \"/\" +\r\n                this.$route.params.id +\r\n                \"?token=\" +\r\n                this.$store.state.token +\r\n                \"&site=\" +\r\n                this.$store.state.site +\r\n                \"&date=\" +\r\n                this.$route.query.date,\r\n              {}\r\n            )\r\n            .then(res => {\r\n              this.uzorci = [];\r\n\r\n              res.data.results.forEach(element => {\r\n                var check = 0;\r\n                var zaprimljen = 0;\r\n                var realizovan = 0;\r\n\r\n                if (element.verificiran) {\r\n                  var status_uzorka = \"VERIFICIRAN\";\r\n                } else {\r\n                  var status_uzorka = element.status;\r\n                }\r\n\r\n                element.rezultati.forEach(test => {\r\n                  check++;\r\n\r\n                  if (\r\n                    test.rezultat[test.rezultat.length - 1].rezultat_f === \"\"\r\n                  ) {\r\n                    zaprimljen++;\r\n                  }\r\n\r\n                  if (\r\n                    test.rezultat[test.rezultat.length - 1].rezultat_f != \"\"\r\n                  ) {\r\n                    realizovan++;\r\n                  }\r\n\r\n                  if (check === element.rezultati.length) {\r\n\r\n                    // console.log(\"Provjera: Save (single)\")\r\n\r\n                    if (status_uzorka === \"VERIFICIRAN\") {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"VERIFICIRAN\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false\r\n                      });\r\n                    } else if (status_uzorka === \"ODOBREN\") {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"ODOBREN\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false\r\n                      });\r\n                    } else if (zaprimljen < 1) {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"REALIZOVAN\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false\r\n                      });\r\n                    } else if (realizovan < 1) {\r\n                      var stat = \"ZAPRIMLJEN\";\r\n                      if (element.sample.tip.includes(\"Mikrobiologija\")) {\r\n                        if (\r\n                          element.rezultati[0].rezultat[0].rezultat_m.length\r\n                        ) {\r\n                          stat = \"REALIZOVAN\";\r\n                        }\r\n                      }\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: stat,\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false\r\n                      });\r\n                    } else {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"U OBRADI\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false\r\n                      });\r\n                    }\r\n                  }\r\n                });\r\n              });\r\n\r\n              this.uzorci = this.uzorci.sort(function(a, b) {\r\n                return a.sid.localeCompare(b.sid, undefined, {\r\n                  numeric: true,\r\n                  sensitivity: \"base\"\r\n                });\r\n              });\r\n\r\n              // Vue Loading Overlay Component\r\n              this.isLoading = false;\r\n            });\r\n        });\r\n    },\r\n\r\n    DeletedSample(data) {\r\n      this.uzorci.forEach(element => {\r\n        if (element.sid === data) {\r\n          element.removed = false;\r\n        }\r\n      });\r\n\r\n      for (var i = 0; i < this.uzorci.length; i++) {\r\n        if (this.uzorci[i].sid === data) {\r\n          this.uzorci.splice(i, 1);\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (this.uzorci.length) {\r\n        this.show = false;\r\n        this.main = false;\r\n        http\r\n          .get(\r\n            \"rezultati/odobravanje/samples/\" +\r\n              this.$route.params.patient +\r\n              \"/\" +\r\n              this.$route.params.id +\r\n              \"?token=\" +\r\n              this.$store.state.token +\r\n              \"&site=\" +\r\n              this.$store.state.site +\r\n              \"&date=\" +\r\n              this.$route.query.date,\r\n            {}\r\n          )\r\n          .then(res => {\r\n            this.count = res.data.results.length;\r\n            this.approved = 0;\r\n\r\n            this.odobren = true;\r\n            this.verificiran = true;\r\n\r\n            this.resdata = {};\r\n\r\n            this.resdata = res.data.results;\r\n\r\n            res.data.results.forEach(element => {\r\n              if (\r\n                element.status === \"ODOBREN\" ||\r\n                element.status === \"VERIFICIRAN\"\r\n              ) {\r\n                this.approved++;\r\n              }\r\n              if (\r\n                element.status != \"ODOBREN\" &&\r\n                element.status != \"VERIFICIRAN\"\r\n              ) {\r\n                this.odobren = false;\r\n              }\r\n              if (!element.verificiran) {\r\n                this.verificiran = false;\r\n              }\r\n            });\r\n\r\n            if (this.count == this.approved) {\r\n              var report = [];\r\n\r\n              this.uzorci.forEach(element => {\r\n                report.push(element._id);\r\n              });\r\n\r\n              http\r\n                .post(\"nalazi/create\", {\r\n                  token: this.$store.state.token,\r\n                  site: this.$store.state.site,\r\n                  type: \"multi\",\r\n                  uzorci: this.uzorci,\r\n                  samples: report,\r\n                  timestamp: this.timestamp,\r\n                  napomena: \"\",\r\n                  status: false,\r\n                  idNalaza: \"\",\r\n                  location: \"/\",\r\n                  naziv: this.timestamp\r\n                })\r\n                .then(res => {\r\n                  if (res.data.success) {\r\n                    http\r\n                      .post(\"nalazi/memo\", {\r\n                        token: this.$store.state.token,\r\n                        site: this.$store.state.site,\r\n                        timestamp: this.timestamp,\r\n                        height: res.data.memo,\r\n                        location: \"/\",\r\n                        naziv: this.timestamp\r\n                      })\r\n                      .then(res => {\r\n                        this.final_pdf = true;\r\n\r\n                        this.uzorci = [];\r\n\r\n                        this.resdata.forEach(element => {\r\n                          var check = 0;\r\n                          var zaprimljen = 0;\r\n                          var realizovan = 0;\r\n\r\n                          if (element.verificiran) {\r\n                            var status_uzorka = \"VERIFICIRAN\";\r\n                          } else {\r\n                            var status_uzorka = element.status;\r\n                          }\r\n\r\n                          element.rezultati.forEach(test => {\r\n                            check++;\r\n\r\n                            if (\r\n                              test.rezultat[test.rezultat.length - 1]\r\n                                .rezultat_f === \"\"\r\n                            ) {\r\n                              zaprimljen++;\r\n                            }\r\n\r\n                            if (\r\n                              test.rezultat[test.rezultat.length - 1]\r\n                                .rezultat_f != \"\"\r\n                            ) {\r\n                              realizovan++;\r\n                            }\r\n\r\n                            if (check === element.rezultati.length) {\r\n\r\n                              // console.log(\"Provjera: Sample Delete\")\r\n\r\n                              if (status_uzorka === \"VERIFICIRAN\") {\r\n                                this.uzorci.push({\r\n                                  sid: element.id,\r\n                                  status: \"VERIFICIRAN\",\r\n                                  pdf_exists: element.pdf_exists,\r\n                                  tip: element.sample.tip,\r\n                                  _id: element._id,\r\n                                  removed: false\r\n                                });\r\n                              } else if (status_uzorka === \"ODOBREN\") {\r\n                                this.uzorci.push({\r\n                                  sid: element.id,\r\n                                  status: \"ODOBREN\",\r\n                                  pdf_exists: element.pdf_exists,\r\n                                  tip: element.sample.tip,\r\n                                  _id: element._id,\r\n                                  removed: false\r\n                                });\r\n                              } else if (zaprimljen < 1) {\r\n                                this.uzorci.push({\r\n                                  sid: element.id,\r\n                                  status: \"REALIZOVAN\",\r\n                                  pdf_exists: element.pdf_exists,\r\n                                  tip: element.sample.tip,\r\n                                  _id: element._id,\r\n                                  removed: false\r\n                                });\r\n                              } else if (realizovan < 1) {\r\n                                var stat = \"ZAPRIMLJEN\";\r\n                                if (\r\n                                  element.sample.tip.includes(\"Mikrobiologija\")\r\n                                ) {\r\n                                  if (\r\n                                    element.rezultati[0].rezultat[0].rezultat_m\r\n                                      .length\r\n                                  ) {\r\n                                    stat = \"REALIZOVAN\";\r\n                                  }\r\n                                }\r\n                                this.uzorci.push({\r\n                                  sid: element.id,\r\n                                  status: stat,\r\n                                  pdf_exists: element.pdf_exists,\r\n                                  tip: element.sample.tip,\r\n                                  _id: element._id,\r\n                                  removed: false\r\n                                });\r\n                              } else {\r\n                                this.uzorci.push({\r\n                                  sid: element.id,\r\n                                  status: \"U OBRADI\",\r\n                                  pdf_exists: element.pdf_exists,\r\n                                  tip: element.sample.tip,\r\n                                  _id: element._id,\r\n                                  removed: false\r\n                                });\r\n                              }\r\n                            }\r\n                          });\r\n                        });\r\n\r\n                        this.uzorci = this.uzorci.sort(function(a, b) {\r\n                          return a.sid.localeCompare(b.sid, undefined, {\r\n                            numeric: true,\r\n                            sensitivity: \"base\"\r\n                          });\r\n                        });\r\n\r\n                        this.main = true;\r\n                        this.show = true;\r\n                      });\r\n                  }\r\n                });\r\n            } else {\r\n              this.uzorci = [];\r\n\r\n              res.data.results.forEach(element => {\r\n                var check = 0;\r\n                var zaprimljen = 0;\r\n                var realizovan = 0;\r\n\r\n                if (element.verificiran) {\r\n                  var status_uzorka = \"VERIFICIRAN\";\r\n                } else {\r\n                  var status_uzorka = element.status;\r\n                }\r\n\r\n                element.rezultati.forEach(test => {\r\n                  check++;\r\n\r\n                  if (\r\n                    test.rezultat[test.rezultat.length - 1].rezultat_f === \"\"\r\n                  ) {\r\n                    zaprimljen++;\r\n                  }\r\n\r\n                  if (\r\n                    test.rezultat[test.rezultat.length - 1].rezultat_f != \"\"\r\n                  ) {\r\n                    realizovan++;\r\n                  }\r\n\r\n                  if (check === element.rezultati.length) {\r\n\r\n                    // console.log(\"Provjera: Sample Delete\")\r\n\r\n                    if (status_uzorka === \"VERIFICIRAN\") {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"VERIFICIRAN\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false\r\n                      });\r\n                    } else if (status_uzorka === \"ODOBREN\") {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"ODOBREN\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false\r\n                      });\r\n                    } else if (zaprimljen < 1) {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"REALIZOVAN\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false\r\n                      });\r\n                    } else if (realizovan < 1) {\r\n                      var stat = \"ZAPRIMLJEN\";\r\n                      if (element.sample.tip.includes(\"Mikrobiologija\")) {\r\n                        if (\r\n                          element.rezultati[0].rezultat[0].rezultat_m.length\r\n                        ) {\r\n                          stat = \"REALIZOVAN\";\r\n                        }\r\n                      }\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: stat,\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false\r\n                      });\r\n                    } else {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"U OBRADI\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false\r\n                      });\r\n                    }\r\n                  }\r\n                });\r\n              });\r\n\r\n              this.uzorci = this.uzorci.sort(function(a, b) {\r\n                return a.sid.localeCompare(b.sid, undefined, {\r\n                  numeric: true,\r\n                  sensitivity: \"base\"\r\n                });\r\n              });\r\n\r\n              this.main = true;\r\n              this.show = true;\r\n            }\r\n          });\r\n      } else {\r\n        router.push(\"/obrada/pregled\");\r\n      }\r\n    },\r\n\r\n    EditSample(data) {\r\n      document.getElementById(data).click();\r\n\r\n      http\r\n        .get(\r\n          \"rezultati/odobravanje/samples/\" +\r\n            this.$route.params.patient +\r\n            \"/\" +\r\n            this.$route.params.id +\r\n            \"?token=\" +\r\n            this.$store.state.token +\r\n            \"&site=\" +\r\n            this.$store.state.site +\r\n            \"&date=\" +\r\n            this.$route.query.date,\r\n          {}\r\n        )\r\n        .then(res => {\r\n          this.uzorci = [];\r\n\r\n          res.data.results.forEach(element => {\r\n            var check = 0;\r\n            var zaprimljen = 0;\r\n            var realizovan = 0;\r\n\r\n            if (element.verificiran) {\r\n              var status_uzorka = \"VERIFICIRAN\";\r\n            } else {\r\n              var status_uzorka = element.status;\r\n            }\r\n\r\n            element.rezultati.forEach(test => {\r\n              check++;\r\n\r\n              if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\r\n                zaprimljen++;\r\n              }\r\n\r\n              if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\r\n                realizovan++;\r\n              }\r\n\r\n              if (check === element.rezultati.length) {\r\n\r\n                // console.log(\"Provjera: Edit\")\r\n\r\n                if (status_uzorka === \"VERIFICIRAN\") {\r\n                  this.uzorci.push({\r\n                    sid: element.id,\r\n                    status: \"VERIFICIRAN\",\r\n                    pdf_exists: element.pdf_exists,\r\n                    tip: element.sample.tip,\r\n                    _id: element._id,\r\n                    removed: false\r\n                  });\r\n                } else if (status_uzorka === \"ODOBREN\") {\r\n                  this.uzorci.push({\r\n                    sid: element.id,\r\n                    status: \"ODOBREN\",\r\n                    pdf_exists: element.pdf_exists,\r\n                    tip: element.sample.tip,\r\n                    _id: element._id,\r\n                    removed: false\r\n                  });\r\n                } else if (zaprimljen < 1) {\r\n                  this.uzorci.push({\r\n                    sid: element.id,\r\n                    status: \"REALIZOVAN\",\r\n                    pdf_exists: element.pdf_exists,\r\n                    tip: element.sample.tip,\r\n                    _id: element._id,\r\n                    removed: false\r\n                  });\r\n                } else if (realizovan < 1) {\r\n                  var stat = \"ZAPRIMLJEN\";\r\n                  if (element.sample.tip.includes(\"Mikrobiologija\")) {\r\n                    if (element.rezultati[0].rezultat[0].rezultat_m.length) {\r\n                      stat = \"REALIZOVAN\";\r\n                    }\r\n                  }\r\n                  this.uzorci.push({\r\n                    sid: element.id,\r\n                    status: stat,\r\n                    pdf_exists: element.pdf_exists,\r\n                    tip: element.sample.tip,\r\n                    _id: element._id,\r\n                    removed: false\r\n                  });\r\n                } else {\r\n                  this.uzorci.push({\r\n                    sid: element.id,\r\n                    status: \"U OBRADI\",\r\n                    pdf_exists: element.pdf_exists,\r\n                    tip: element.sample.tip,\r\n                    _id: element._id,\r\n                    removed: false\r\n                  });\r\n                }\r\n              }\r\n            });\r\n          });\r\n\r\n          this.uzorci = this.uzorci.sort(function(a, b) {\r\n            return a.sid.localeCompare(b.sid, undefined, {\r\n              numeric: true,\r\n              sensitivity: \"base\"\r\n            });\r\n          });\r\n        })\r\n        .then(() => {\r\n          setTimeout(() => {\r\n            document.getElementById(this.$store.state.sid).click();\r\n          }, 500);\r\n        });\r\n    },\r\n\r\n    RetestEnable: function(event) {\r\n      http\r\n        .post(\"rezultati/odobravanje/retest/da/\", {\r\n          id_u: this.$store.state.sid,\r\n          id_t: event.target.id,\r\n          site: this.$store.state.site,\r\n          token: this.$store.state.token\r\n        })\r\n        .then(res => {\r\n          if (res.data.success) {\r\n            this.rezultati.forEach(element => {\r\n              if (element.test === event.target.id) {\r\n                element.retest = true;\r\n              }\r\n            });\r\n          }\r\n        });\r\n    },\r\n\r\n    RetestDisable: function(event) {\r\n      http\r\n        .post(\"rezultati/odobravanje/retest/ne/\", {\r\n          id_u: this.$store.state.sid,\r\n          id_t: event.target.id,\r\n          site: this.$store.state.site,\r\n          token: this.$store.state.token\r\n        })\r\n        .then(res => {\r\n          if (res.data.success) {\r\n            this.rezultati.forEach(element => {\r\n              if (element.test === event.target.id) {\r\n                element.retest = false;\r\n              }\r\n            });\r\n          }\r\n        });\r\n    },\r\n\r\n    MultiGet: function(event, naziv, ana, rezultat, odobren) {\r\n\r\n      // Sediment urina\r\n      // console.log(event.target.id)\r\n\r\n      this.naslov = \"Rezultati testa: \" + naziv + \" (\" + ana + \")\";\r\n      this.analiti = [];\r\n      var single = {};\r\n      var i = 0;\r\n      var kontrola = false;\r\n\r\n      this.uzorci.forEach(element => {\r\n        if (element.sid === this.$store.state.sid) {\r\n          this.check = element.status;\r\n        }\r\n      });\r\n\r\n      this.analitiprikaz.forEach(element => {\r\n        i++;\r\n        single = {};\r\n\r\n        var opcije = null;\r\n        opcije = izbornik.data;\r\n\r\n        if (event.target.id === element.labassay._id) {\r\n          element.rezultat.forEach(analit => {\r\n            single.kod = analit.rezultat[0].module_sn;\r\n            single.select_options = eval(\r\n              \"opcije.\" +\r\n                analit.rezultat[0].module_sn\r\n                  .replace(\"%\", \"_\")\r\n                  .replace(\"/\", \"_\")\r\n                  .replace(\" \", \"_\")\r\n                  .replace(/-/g, \"_\")\r\n                  .replace(\"#\", \"_\")\r\n                  // .replace(/[0-9]/g, \"_\")\r\n                  .replace(/^\\d+/, \"\")\r\n            );\r\n\r\n            var tmpOptionsAna = [];\r\n            if (single.select_options != undefined) {\r\n              tmpOptionsAna = single.select_options.slice();\r\n              single.select_options = tmpOptionsAna.slice();\r\n            }\r\n\r\n            if (\r\n              analit.rezultat[0].rezultat_f.trim() != \"\" &&\r\n              single.select_options != undefined &&\r\n              !single.select_options.includes(analit.rezultat[0].rezultat_f)\r\n            ) {\r\n\r\n              // Sediment urina (Epitelne ćelije, Kristali i Soli)\r\n              if (\r\n                single.kod != \"s03\" &&\r\n                single.kod != \"s04\" &&\r\n                single.kod != \"s08\" &&\r\n                single.kod != \"s09\"\r\n              ) {\r\n                single.select_options.unshift(analit.rezultat[0].rezultat_f);\r\n              }\r\n            }\r\n\r\n            single.refd = analit.refd;\r\n            single.labID = event.target.id;\r\n            single.refg = analit.refg;\r\n            single.interp = analit.interp;\r\n            single.interpretacija = null;\r\n            single.nazivTesta = naziv;\r\n            single.grupa = analit.grupa;\r\n            single.naziv = analit.rezultat[0].sn;\r\n            single.opis = analit.rezultat[0].dilucija;\r\n            single.jedinica = analit.rezultat[0].jedinice_f;\r\n            single.rezultat = analit.rezultat[0].rezultat_f;\r\n            single.flag = analit.rezultat[0].rezultat_i;\r\n            single.manual = element.labassay.manual;\r\n            single.odobren = odobren;\r\n\r\n            if (\r\n              single.select_options != undefined &&\r\n              (single.kod === \"s03\" ||\r\n                single.kod === \"s04\" ||\r\n                single.kod === \"s08\" ||\r\n                single.kod === \"s09\")\r\n            ) {\r\n\r\n              // Sediment urina (Epitelne ćelije, Kristali i Soli)\r\n              single.rezultat_multiple = single.rezultat.split(\";\");\r\n              for (var i = single.rezultat_multiple.length - 1; i >= 0; i--) {\r\n                single.rezultat_multiple[i] = single.rezultat_multiple[\r\n                  i\r\n                ].trim();\r\n                if (single.rezultat_multiple[i] === \"\") {\r\n                  single.rezultat_multiple.splice(i, 1);\r\n                }\r\n              }\r\n            } else {\r\n              single.rezultat_multiple = [];\r\n            }\r\n\r\n            if (this.check === \"ODOBREN\" || this.check === \"VERIFICIRAN\") {\r\n              single.edit = false;\r\n            } else {\r\n              single.edit = true;\r\n            }\r\n\r\n            if (\r\n              ana === \"Opšti pregled urina\" &&\r\n              this.check != \"ODOBREN\" &&\r\n              this.check != \"VERIFICIRAN\"\r\n            ) {\r\n              if (\r\n                analit.rezultat[0].rezultat_f === \"\" &&\r\n                single.select_options != undefined\r\n              ) {\r\n                single.rezultat = single.select_options[1];\r\n              }\r\n            }\r\n\r\n            single.analit = analit.rezultat[0].anaassay;\r\n            single.izbor = ana;\r\n\r\n            this.analiti.push(single);\r\n\r\n            single = {};\r\n          });\r\n        }\r\n\r\n        if (i === this.analitiprikaz.length) {\r\n          kontrola = true;\r\n        }\r\n      });\r\n\r\n      if (kontrola) {\r\n        this.$refs.largeModalMulti.open();\r\n      }\r\n    },\r\n\r\n    Interpretacija: function(\r\n      test,\r\n      rezultat,\r\n      jedinica,\r\n      refd,\r\n      refg,\r\n      site,\r\n      interp,\r\n      extend,\r\n      spec\r\n    ) {\r\n      return Interpretation(\r\n        test,\r\n        rezultat,\r\n        jedinica,\r\n        refd,\r\n        refg,\r\n        site,\r\n        interp,\r\n        extend,\r\n        spec\r\n      );\r\n    },\r\n\r\n    MailDialog() {\r\n      this.$refs.staticModalSendMail.open();\r\n    },\r\n\r\n    SendMail(email) {\r\n\r\n      // Vue Loading Overlay Component\r\n      this.isLoading = true;\r\n\r\n      http\r\n        .post(\"nalazi/mail\", {\r\n          token: this.$store.state.token,\r\n          site: this.$store.state.site,\r\n          email: email,\r\n          timestamp: this.timestamp,\r\n          location: \"/\",\r\n          naziv: this.timestamp\r\n        })\r\n        .then(res => {\r\n\r\n          // Vue Loading Overlay Component\r\n          this.isLoading = false;\r\n\r\n          if (res.data.success) {\r\n            this.toastText = \"Nalaz uspješno poslan.\";\r\n            this.toastIcon = \"fa-check\";\r\n            this.toastPosition = \"top-right\";\r\n            this.className = \"vuestic-toast-primary\";\r\n\r\n            this.showToast(this.toastText, {\r\n              icon: this.toastIcon,\r\n              position: this.toastPosition,\r\n              duration: 2500,\r\n              fullWidth: this.false,\r\n              className: this.className\r\n            });\r\n\r\n            if (this.email_changed) {\r\n              http\r\n                .post(\"pacijenti/detalji/update/\" + this.pacijent, {\r\n                  email: email.trim(),\r\n                  token: this.$store.state.token,\r\n                  site: this.$store.state.site\r\n                })\r\n                .then(res => {});\r\n            }\r\n          } else {\r\n            this.toastText = \"Greška prilikom slanja nalaza!\";\r\n            this.toastIcon = \"fa-remove\";\r\n            this.toastPosition = \"top-right\";\r\n            this.className = \"vuestic-toast-danger\";\r\n\r\n            this.showToast(this.toastText, {\r\n              icon: this.toastIcon,\r\n              position: this.toastPosition,\r\n              duration: 2500,\r\n              fullWidth: this.false,\r\n              className: this.className\r\n            });\r\n          }\r\n        });\r\n    },\r\n\r\n    SaveMultiResults(analiti, data) {\r\n      analiti.forEach(analit => {\r\n        analit.rezultat = analit.rezultat.replace(/,/g, \".\");\r\n\r\n        if (analit.rezultat_multiple.length) {\r\n          analit.rezultat = \"\";\r\n\r\n          analit.rezultat_multiple.forEach(element => {\r\n            if (element === \"\") {\r\n            } else {\r\n              analit.rezultat = analit.rezultat + element + \";\";\r\n            }\r\n          });\r\n\r\n          analit.rezultat = analit.rezultat\r\n            .trim()\r\n            .slice(0, analit.rezultat.length - 1);\r\n        }\r\n      });\r\n\r\n      // Vue Loading Overlay Component\r\n      this.isLoading = true;\r\n\r\n      http\r\n        .post(\"/rezultati/odobravanje/analiti/\" + this.$store.state.sid, {\r\n          analiti: analiti,\r\n          site: this.$store.state.site,\r\n          token: this.$store.state.token\r\n        })\r\n        .then(res => {\r\n          http\r\n            .get(\r\n              \"rezultati/odobravanje/samples/\" +\r\n                this.$route.params.patient +\r\n                \"/\" +\r\n                this.$route.params.id +\r\n                \"?token=\" +\r\n                this.$store.state.token +\r\n                \"&site=\" +\r\n                this.$store.state.site +\r\n                \"&date=\" +\r\n                this.$route.query.date,\r\n              {}\r\n            )\r\n            .then(res => {\r\n              this.uzorci = [];\r\n\r\n              res.data.results.forEach(element => {\r\n                var check = 0;\r\n                var zaprimljen = 0;\r\n                var realizovan = 0;\r\n\r\n                if (element.verificiran) {\r\n                  var status_uzorka = \"VERIFICIRAN\";\r\n                } else {\r\n                  var status_uzorka = element.status;\r\n                }\r\n\r\n                element.rezultati.forEach(test => {\r\n                  check++;\r\n\r\n                  if (\r\n                    test.rezultat[test.rezultat.length - 1].rezultat_f === \"\"\r\n                  ) {\r\n                    zaprimljen++;\r\n                  }\r\n\r\n                  if (\r\n                    test.rezultat[test.rezultat.length - 1].rezultat_f != \"\"\r\n                  ) {\r\n                    realizovan++;\r\n                  }\r\n\r\n                  if (check === element.rezultati.length) {\r\n\r\n                    // console.log(\"Provjera: Save (multi)\")\r\n\r\n                    if (status_uzorka === \"VERIFICIRAN\") {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"VERIFICIRAN\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false\r\n                      });\r\n                    } else if (status_uzorka === \"ODOBREN\") {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"ODOBREN\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false\r\n                      });\r\n                    } else if (zaprimljen < 1) {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"REALIZOVAN\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false\r\n                      });\r\n                    } else if (realizovan < 1) {\r\n                      var stat = \"ZAPRIMLJEN\";\r\n                      if (element.sample.tip.includes(\"Mikrobiologija\")) {\r\n                        if (\r\n                          element.rezultati[0].rezultat[0].rezultat_m.length\r\n                        ) {\r\n                          stat = \"REALIZOVAN\";\r\n                        }\r\n                      }\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: stat,\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false\r\n                      });\r\n                    } else {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"U OBRADI\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false\r\n                      });\r\n                    }\r\n                  }\r\n                });\r\n              });\r\n\r\n              this.uzorci = this.uzorci.sort(function(a, b) {\r\n                return a.sid.localeCompare(b.sid, undefined, {\r\n                  numeric: true,\r\n                  sensitivity: \"base\"\r\n                });\r\n              });\r\n\r\n              // Vue Loading Overlay Component\r\n              this.isLoading = false;\r\n            });\r\n        })\r\n        .then(res => {\r\n          var data = {};\r\n\r\n          this.uzorci.forEach(element => {\r\n            if (element.sid === this.$store.state.sid) {\r\n              data = element;\r\n            }\r\n          });\r\n\r\n          this.testovi = [];\r\n          this.rezultati = [];\r\n          this.analitiprikaz = [];\r\n          this.calculated = false;\r\n\r\n          var topcije = null;\r\n          topcije = izbornik.rez;\r\n\r\n          this.show_table = false;\r\n\r\n          http\r\n            .get(\r\n              \"rezultati/showsingle/\" +\r\n                data.sid +\r\n                \"?token=\" +\r\n                this.$store.state.token +\r\n                \"&site=\" +\r\n                this.$store.state.site,\r\n              {}\r\n            )\r\n            .then(res => {\r\n              var test = {};\r\n\r\n              if (res.data.data.length) {\r\n                res.data.data.sort(function(a, b) {\r\n                  return a.testovi.labassay.grupa +\r\n                    a.testovi.labassay.grouporder ==\r\n                    b.testovi.labassay.grupa + b.testovi.labassay.grouporder\r\n                    ? 0\r\n                    : +(\r\n                        a.testovi.labassay.grupa +\r\n                          a.testovi.labassay.grouporder >\r\n                        b.testovi.labassay.grupa + b.testovi.labassay.grouporder\r\n                      ) || -1;\r\n                });\r\n\r\n                this.testovi = res.data.data;\r\n                this.analitiprikaz = res.data.multidata;\r\n\r\n                res.data.data.forEach(element => {\r\n                  test = {};\r\n                  test.realizovan = false;\r\n\r\n                  test.ime = element.testovi.labassay.naziv;\r\n                  test.test = element.testovi.labassay.sifra;\r\n                  test.analit = element.testovi.labassay.analit;\r\n                  test.IDE = element.testovi._id;\r\n                  test.labassay_id = element.testovi.labassay._id;\r\n\r\n                  test.multi_count = 0;\r\n                  test.multi_rezultati = [];\r\n\r\n                  res.data.multidata.forEach(multi => {\r\n                    if (multi.labassay._id === element.testovi.labassay._id) {\r\n                      test.multi_rezultati = multi.rezultat;\r\n                      test.multi_count = multi.rezultat[0].rezultat.length;\r\n                    }\r\n                  });\r\n\r\n                  test.kategorija = element.testovi.labassay.kategorija;\r\n                  test.analyser = element.testovi.labassay.analyser;\r\n                  test.multiparam = element.testovi.labassay.multiparam;\r\n                  test.vise = element.testovi.rezultat.length;\r\n                  test.calculated = element.testovi.labassay.calculated;\r\n                  test.manual = element.testovi.labassay.manual;\r\n\r\n                  test.select_options = eval(\r\n                    \"topcije.\" +\r\n                      element.testovi.interp\r\n                        .replace(\"%\", \"_\")\r\n                        .replace(\"/\", \"_\")\r\n                        .replace(\" \", \"_\")\r\n                        .replace(/-/g, \"_\")\r\n                        .replace(\"#\", \"_\")\r\n                        // .replace(/[0-9]/g, \"_\")\r\n                        .replace(/^\\d+/, \"\")\r\n                  );\r\n\r\n                  element.testovi.rezultat.forEach(rezultat => {\r\n                    test.sekcija = rezultat.anaassay.sekcija;\r\n                    test.rezultat = rezultat.rezultat_f;\r\n                    test.result = rezultat;\r\n                    test.anaassay = rezultat.anaassay;\r\n\r\n                    if (rezultat.rezultat_f != \"\") {\r\n                      test.realizovan = true;\r\n                    }\r\n\r\n                    test.unit = rezultat.jedinice_f;\r\n\r\n                    if (res.data.verificiran || res.data.status === \"ODOBREN\") {\r\n                      test.odobren = \"ODOBREN\";\r\n                      test.edit = false;\r\n                    } else {\r\n                      test.odobren != \"ODOBREN\";\r\n                      test.edit = true;\r\n                    }\r\n\r\n                    test.jedinica = rezultat.jedinice_f;\r\n                    test.id = rezultat._id;\r\n                    test.multidata = element.testovi.labassay.multi;\r\n                    test.rezultat_m = rezultat.rezultat_m;\r\n                    test.bakterije = element.testovi.labassay.bakterije;\r\n                    test.neg_description =\r\n                      element.testovi.labassay.neg_description;\r\n                    test.pos_description =\r\n                      element.testovi.labassay.pos_description;\r\n                    test.refSet = element.testovi.grupa;\r\n                    test.dRef = element.testovi.refd;\r\n                    test.gRef = element.testovi.refg;\r\n                    test.interp = element.testovi.interp;\r\n                    test.extend = element.testovi.extend;\r\n                    test.retest = element.testovi.retest;\r\n                    test.interpretacija =\r\n                      element.testovi.labassay.interpretacija;\r\n                  });\r\n\r\n                  if (\r\n                    test.select_options != undefined &&\r\n                    !test.select_options.includes(test.rezultat)\r\n                  ) {\r\n                    test.select_options.unshift(test.rezultat);\r\n                  }\r\n                  this.rezultati.push(test);\r\n                });\r\n\r\n                this.rezultati.forEach(element => {\r\n                  if (element.calculated) {\r\n                    this.calculated = true;\r\n                  }\r\n                });\r\n\r\n                this.sample = data;\r\n                this.show_table = true;\r\n              }\r\n            });\r\n        });\r\n    },\r\n\r\n    Calculate: function(event, id, ime, edited) {\r\n      http\r\n        .post(\"/rezultati/odobravanje/calculate/\" + this.$store.state.sid, {\r\n          _id: id,\r\n          token: this.$store.state.token,\r\n          site: this.$store.state.site,\r\n          ime: ime,\r\n          pid: this.pid\r\n        })\r\n        .then(res => {\r\n          http\r\n            .get(\r\n              \"rezultati/odobravanje/samples/\" +\r\n                this.$route.params.patient +\r\n                \"/\" +\r\n                this.$route.params.id +\r\n                \"?token=\" +\r\n                this.$store.state.token +\r\n                \"&site=\" +\r\n                this.$store.state.site +\r\n                \"&date=\" +\r\n                this.$route.query.date,\r\n              {}\r\n            )\r\n            .then(res => {\r\n              this.uzorci = [];\r\n\r\n              res.data.results.forEach(element => {\r\n                var check = 0;\r\n                var zaprimljen = 0;\r\n                var realizovan = 0;\r\n\r\n                if (element.verificiran) {\r\n                  var status_uzorka = \"VERIFICIRAN\";\r\n                } else {\r\n                  var status_uzorka = element.status;\r\n                }\r\n\r\n                element.rezultati.forEach(test => {\r\n                  check++;\r\n\r\n                  if (\r\n                    test.rezultat[test.rezultat.length - 1].rezultat_f === \"\"\r\n                  ) {\r\n                    zaprimljen++;\r\n                  }\r\n\r\n                  if (\r\n                    test.rezultat[test.rezultat.length - 1].rezultat_f != \"\"\r\n                  ) {\r\n                    realizovan++;\r\n                  }\r\n\r\n                  if (check === element.rezultati.length) {\r\n\r\n                    // console.log(\"Provjera: Calculate\")\r\n\r\n                    if (status_uzorka === \"VERIFICIRAN\") {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"VERIFICIRAN\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false\r\n                      });\r\n                    } else if (status_uzorka === \"ODOBREN\") {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"ODOBREN\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false\r\n                      });\r\n                    } else if (zaprimljen < 1) {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"REALIZOVAN\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false\r\n                      });\r\n                    } else if (realizovan < 1) {\r\n                      var stat = \"ZAPRIMLJEN\";\r\n                      if (element.sample.tip.includes(\"Mikrobiologija\")) {\r\n                        if (\r\n                          element.rezultati[0].rezultat[0].rezultat_m.length\r\n                        ) {\r\n                          stat = \"REALIZOVAN\";\r\n                        }\r\n                      }\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: stat,\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false\r\n                      });\r\n                    } else {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"U OBRADI\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false\r\n                      });\r\n                    }\r\n                  }\r\n                });\r\n              });\r\n\r\n              this.uzorci = this.uzorci.sort(function(a, b) {\r\n                return a.sid.localeCompare(b.sid, undefined, {\r\n                  numeric: true,\r\n                  sensitivity: \"base\"\r\n                });\r\n              });\r\n            });\r\n        })\r\n        .then(res => {\r\n          var data = {};\r\n\r\n          this.uzorci.forEach(element => {\r\n            if (element.sid === this.$store.state.sid) {\r\n              data = element;\r\n            }\r\n          });\r\n\r\n          this.testovi = [];\r\n          this.rezultati = [];\r\n          this.analitiprikaz = [];\r\n          this.calculated = false;\r\n\r\n          var topcije = null;\r\n          topcije = izbornik.rez;\r\n\r\n          http\r\n            .get(\r\n              \"rezultati/showsingle/\" +\r\n                data.sid +\r\n                \"?token=\" +\r\n                this.$store.state.token +\r\n                \"&site=\" +\r\n                this.$store.state.site,\r\n              {}\r\n            )\r\n            .then(res => {\r\n              var test = {};\r\n\r\n              if (res.data.data.length) {\r\n                res.data.data.sort(function(a, b) {\r\n                  return a.testovi.labassay.grupa +\r\n                    a.testovi.labassay.grouporder ==\r\n                    b.testovi.labassay.grupa + b.testovi.labassay.grouporder\r\n                    ? 0\r\n                    : +(\r\n                        a.testovi.labassay.grupa +\r\n                          a.testovi.labassay.grouporder >\r\n                        b.testovi.labassay.grupa + b.testovi.labassay.grouporder\r\n                      ) || -1;\r\n                });\r\n\r\n                this.testovi = res.data.data;\r\n                this.analitiprikaz = res.data.multidata;\r\n\r\n                res.data.data.forEach(element => {\r\n                  test = {};\r\n                  test.realizovan = false;\r\n\r\n                  test.ime = element.testovi.labassay.naziv;\r\n                  test.test = element.testovi.labassay.sifra;\r\n                  test.analit = element.testovi.labassay.analit;\r\n                  test.IDE = element.testovi._id;\r\n                  test.labassay_id = element.testovi.labassay._id;\r\n\r\n                  test.multi_count = 0;\r\n                  test.multi_rezultati = [];\r\n\r\n                  res.data.multidata.forEach(multi => {\r\n                    if (multi.labassay._id === element.testovi.labassay._id) {\r\n                      test.multi_rezultati = multi.rezultat;\r\n                      test.multi_count = multi.rezultat[0].rezultat.length;\r\n                    }\r\n                  });\r\n\r\n                  test.kategorija = element.testovi.labassay.kategorija;\r\n                  test.analyser = element.testovi.labassay.analyser;\r\n                  test.multiparam = element.testovi.labassay.multiparam;\r\n                  test.vise = element.testovi.rezultat.length;\r\n                  test.calculated = element.testovi.labassay.calculated;\r\n                  test.manual = element.testovi.labassay.manual;\r\n\r\n                  test.select_options = eval(\r\n                    \"topcije.\" +\r\n                      element.testovi.interp\r\n                        .replace(\"%\", \"_\")\r\n                        .replace(\"/\", \"_\")\r\n                        .replace(\" \", \"_\")\r\n                        .replace(/-/g, \"_\")\r\n                        .replace(\"#\", \"_\")\r\n                        // .replace(/[0-9]/g, \"_\")\r\n                        .replace(/^\\d+/, \"\")\r\n                  );\r\n\r\n                  element.testovi.rezultat.forEach(rezultat => {\r\n                    test.sekcija = rezultat.anaassay.sekcija;\r\n                    test.rezultat = rezultat.rezultat_f;\r\n                    test.result = rezultat;\r\n                    test.anaassay = rezultat.anaassay;\r\n\r\n                    if (rezultat.rezultat_f != \"\") {\r\n                      test.realizovan = true;\r\n                    }\r\n\r\n                    test.unit = rezultat.jedinice_f;\r\n\r\n                    if (res.data.verificiran || res.data.status === \"ODOBREN\") {\r\n                      test.odobren = \"ODOBREN\";\r\n                      test.edit = false;\r\n                    } else {\r\n                      test.odobren != \"ODOBREN\";\r\n                      test.edit = true;\r\n                    }\r\n\r\n                    test.jedinica = rezultat.jedinice_f;\r\n                    test.id = rezultat._id;\r\n                    test.multidata = element.testovi.labassay.multi;\r\n                    test.rezultat_m = rezultat.rezultat_m;\r\n                    test.bakterije = element.testovi.labassay.bakterije;\r\n                    test.neg_description =\r\n                      element.testovi.labassay.neg_description;\r\n                    test.pos_description =\r\n                      element.testovi.labassay.pos_description;\r\n                    test.refSet = element.testovi.grupa;\r\n                    test.dRef = element.testovi.refd;\r\n                    test.gRef = element.testovi.refg;\r\n                    test.interp = element.testovi.interp;\r\n                    test.extend = element.testovi.extend;\r\n                    test.retest = element.testovi.retest;\r\n                    test.interpretacija =\r\n                      element.testovi.labassay.interpretacija;\r\n                  });\r\n\r\n                  if (\r\n                    test.select_options != undefined &&\r\n                    !test.select_options.includes(test.rezultat)\r\n                  ) {\r\n                    test.select_options.unshift(test.rezultat);\r\n                  }\r\n                  this.rezultati.push(test);\r\n                });\r\n\r\n                this.rezultati.forEach(element => {\r\n                  if (element.calculated) {\r\n                    this.calculated = true;\r\n                  }\r\n                });\r\n\r\n                this.sample = data;\r\n              }\r\n            });\r\n        });\r\n    },\r\n\r\n    Approve(rezultati) {\r\n      this.rezultati.forEach(element => {\r\n        element.edit = false;\r\n      });\r\n\r\n      this.calculated = false;\r\n\r\n      if (!this.MicrobiologySample) {\r\n        rezultati.forEach(element => {\r\n          element.rezultat = element.rezultat.replace(/,/g, \".\");\r\n        });\r\n\r\n        rezultati[0].rezultat_m = [];\r\n      }\r\n\r\n      http\r\n        .post(\"/rezultati/odobravanje/sacuvaj/\" + this.$store.state.sid, {\r\n          email: this.$store.state.userId,\r\n          token: this.$store.state.token,\r\n          site: this.$store.state.site,\r\n          rezultati: rezultati\r\n        })\r\n        .then(res => {\r\n\r\n          // Vue Loading Overlay Component\r\n          this.isLoading = true;\r\n\r\n          http\r\n            .post(\"/rezultati/odobravanje/odobri/\" + this.$store.state.sid, {\r\n              testovi: rezultati,\r\n              site: this.$store.state.site,\r\n              token: this.$store.state.token\r\n            })\r\n            .then(res => {\r\n              this.sample.status = \"ODOBREN\";\r\n\r\n              this.report = {};\r\n\r\n              this.uzorci.forEach(element => {\r\n                if (element.sid === this.$store.state.sid) {\r\n                  this.report = element;\r\n                }\r\n              });\r\n\r\n              var sample = [];\r\n              sample.push(this.report._id);\r\n\r\n              http\r\n                .post(\"nalazi/create\", {\r\n                  token: this.$store.state.token,\r\n                  site: this.$store.state.site,\r\n                  type: \"single\",\r\n                  uzorci: this.uzorci,\r\n                  samples: sample,\r\n                  timestamp: this.timestamp,\r\n                  napomena: \"\",\r\n                  status: false,\r\n                  idNalaza: \"\",\r\n                  location: \"/samples\",\r\n                  naziv: this.report.sid\r\n                })\r\n                .then(res => {\r\n                  http\r\n                    .get(\r\n                      \"rezultati/odobravanje/samples/\" +\r\n                        this.$route.params.patient +\r\n                        \"/\" +\r\n                        this.$route.params.id +\r\n                        \"?token=\" +\r\n                        this.$store.state.token +\r\n                        \"&site=\" +\r\n                        this.$store.state.site +\r\n                        \"&date=\" +\r\n                        this.$route.query.date,\r\n                      {}\r\n                    )\r\n                    .then(res => {\r\n                      this.final_pdf = res.data.final_pdf;\r\n\r\n                      this.count = res.data.results.length;\r\n                      this.approved = 0;\r\n\r\n                      this.odobren = true;\r\n                      this.verificiran = true;\r\n\r\n                      res.data.results.forEach(element => {\r\n                        if (\r\n                          element.status === \"ODOBREN\" ||\r\n                          element.status === \"VERIFICIRAN\"\r\n                        ) {\r\n                          this.approved++;\r\n                        }\r\n                        if (\r\n                          element.status != \"ODOBREN\" &&\r\n                          element.status != \"VERIFICIRAN\"\r\n                        ) {\r\n                          this.odobren = false;\r\n                        }\r\n                        if (!element.verificiran) {\r\n                          this.verificiran = false;\r\n                        }\r\n                      });\r\n\r\n                      var response = res.data.results;\r\n\r\n                      if (this.count == this.approved) {\r\n\r\n                        // console.warn(\"Generate new Report.\");\r\n\r\n                        var report = [];\r\n\r\n                        this.uzorci.forEach(element => {\r\n                          report.push(element._id);\r\n                        });\r\n\r\n                        http\r\n                          .post(\"nalazi/create\", {\r\n                            token: this.$store.state.token,\r\n                            site: this.$store.state.site,\r\n                            type: \"multi\",\r\n                            uzorci: this.uzorci,\r\n                            samples: report,\r\n                            timestamp: this.timestamp,\r\n                            napomena: \"\",\r\n                            status: false,\r\n                            idNalaza: \"\",\r\n                            location: \"/\",\r\n                            naziv: this.timestamp\r\n                          })\r\n                          .then(res => {\r\n                            if (res.data.success) {\r\n                              http\r\n                                .post(\"nalazi/memo\", {\r\n                                  token: this.$store.state.token,\r\n                                  site: this.$store.state.site,\r\n                                  timestamp: this.timestamp,\r\n                                  height: res.data.memo,\r\n                                  location: \"/\",\r\n                                  naziv: this.timestamp\r\n                                })\r\n                                .then(res => {\r\n                                  this.uzorci = [];\r\n\r\n                                  response.forEach(element => {\r\n                                    var check = 0;\r\n                                    var zaprimljen = 0;\r\n                                    var realizovan = 0;\r\n\r\n                                    if (element.verificiran) {\r\n                                      var status_uzorka = \"VERIFICIRAN\";\r\n                                    } else {\r\n                                      var status_uzorka = element.status;\r\n                                    }\r\n\r\n                                    element.rezultati.forEach(test => {\r\n                                      check++;\r\n\r\n                                      if (\r\n                                        test.rezultat[test.rezultat.length - 1]\r\n                                          .rezultat_f === \"\"\r\n                                      ) {\r\n                                        zaprimljen++;\r\n                                      }\r\n\r\n                                      if (\r\n                                        test.rezultat[test.rezultat.length - 1]\r\n                                          .rezultat_f != \"\"\r\n                                      ) {\r\n                                        realizovan++;\r\n                                      }\r\n\r\n                                      if (check === element.rezultati.length) {\r\n\r\n                                        // console.log(\"Provjera: Approve\")\r\n\r\n                                        if (status_uzorka === \"VERIFICIRAN\") {\r\n                                          this.uzorci.push({\r\n                                            sid: element.id,\r\n                                            status: \"VERIFICIRAN\",\r\n                                            pdf_exists: element.pdf_exists,\r\n                                            tip: element.sample.tip,\r\n                                            _id: element._id,\r\n                                            removed: false\r\n                                          });\r\n                                        } else if (\r\n                                          status_uzorka === \"ODOBREN\"\r\n                                        ) {\r\n                                          this.uzorci.push({\r\n                                            sid: element.id,\r\n                                            status: \"ODOBREN\",\r\n                                            pdf_exists: element.pdf_exists,\r\n                                            tip: element.sample.tip,\r\n                                            _id: element._id,\r\n                                            removed: false\r\n                                          });\r\n                                        } else if (zaprimljen < 1) {\r\n                                          this.uzorci.push({\r\n                                            sid: element.id,\r\n                                            status: \"REALIZOVAN\",\r\n                                            pdf_exists: element.pdf_exists,\r\n                                            tip: element.sample.tip,\r\n                                            _id: element._id,\r\n                                            removed: false\r\n                                          });\r\n                                        } else if (realizovan < 1) {\r\n                                          var stat = \"ZAPRIMLJEN\";\r\n                                          if (\r\n                                            element.sample.tip.includes(\r\n                                              \"Mikrobiologija\"\r\n                                            )\r\n                                          ) {\r\n                                            if (\r\n                                              element.rezultati[0].rezultat[0]\r\n                                                .rezultat_m.length\r\n                                            ) {\r\n                                              stat = \"REALIZOVAN\";\r\n                                            }\r\n                                          }\r\n                                          this.uzorci.push({\r\n                                            sid: element.id,\r\n                                            status: stat,\r\n                                            pdf_exists: element.pdf_exists,\r\n                                            tip: element.sample.tip,\r\n                                            _id: element._id,\r\n                                            removed: false\r\n                                          });\r\n                                        } else {\r\n                                          this.uzorci.push({\r\n                                            sid: element.id,\r\n                                            status: \"U OBRADI\",\r\n                                            pdf_exists: element.pdf_exists,\r\n                                            tip: element.sample.tip,\r\n                                            _id: element._id,\r\n                                            removed: false\r\n                                          });\r\n                                        }\r\n                                      }\r\n                                    });\r\n                                  });\r\n\r\n                                  this.uzorci = this.uzorci.sort(function(\r\n                                    a,\r\n                                    b\r\n                                  ) {\r\n                                    return a.sid.localeCompare(\r\n                                      b.sid,\r\n                                      undefined,\r\n                                      {\r\n                                        numeric: true,\r\n                                        sensitivity: \"base\"\r\n                                      }\r\n                                    );\r\n                                  });\r\n\r\n                                  this.main = true;\r\n\r\n                                  // Vue Loading Overlay Component\r\n                                  this.isLoading = false;\r\n                                });\r\n                            }\r\n                          });\r\n                      } else {\r\n                        this.uzorci = [];\r\n\r\n                        res.data.results.forEach(element => {\r\n                          var check = 0;\r\n                          var zaprimljen = 0;\r\n                          var realizovan = 0;\r\n\r\n                          if (element.verificiran) {\r\n                            var status_uzorka = \"VERIFICIRAN\";\r\n                          } else {\r\n                            var status_uzorka = element.status;\r\n                          }\r\n\r\n                          element.rezultati.forEach(test => {\r\n                            check++;\r\n\r\n                            if (\r\n                              test.rezultat[test.rezultat.length - 1]\r\n                                .rezultat_f === \"\"\r\n                            ) {\r\n                              zaprimljen++;\r\n                            }\r\n\r\n                            if (\r\n                              test.rezultat[test.rezultat.length - 1]\r\n                                .rezultat_f != \"\"\r\n                            ) {\r\n                              realizovan++;\r\n                            }\r\n\r\n                            if (check === element.rezultati.length) {\r\n\r\n                              // console.log(\"Provjera: Approve\")\r\n\r\n                              if (status_uzorka === \"VERIFICIRAN\") {\r\n                                this.uzorci.push({\r\n                                  sid: element.id,\r\n                                  status: \"VERIFICIRAN\",\r\n                                  pdf_exists: element.pdf_exists,\r\n                                  tip: element.sample.tip,\r\n                                  _id: element._id,\r\n                                  removed: false\r\n                                });\r\n                              } else if (status_uzorka === \"ODOBREN\") {\r\n                                this.uzorci.push({\r\n                                  sid: element.id,\r\n                                  status: \"ODOBREN\",\r\n                                  pdf_exists: element.pdf_exists,\r\n                                  tip: element.sample.tip,\r\n                                  _id: element._id,\r\n                                  removed: false\r\n                                });\r\n                              } else if (zaprimljen < 1) {\r\n                                this.uzorci.push({\r\n                                  sid: element.id,\r\n                                  status: \"REALIZOVAN\",\r\n                                  pdf_exists: element.pdf_exists,\r\n                                  tip: element.sample.tip,\r\n                                  _id: element._id,\r\n                                  removed: false\r\n                                });\r\n                              } else if (realizovan < 1) {\r\n                                var stat = \"ZAPRIMLJEN\";\r\n                                if (\r\n                                  element.sample.tip.includes(\"Mikrobiologija\")\r\n                                ) {\r\n                                  if (\r\n                                    element.rezultati[0].rezultat[0].rezultat_m\r\n                                      .length\r\n                                  ) {\r\n                                    stat = \"REALIZOVAN\";\r\n                                  }\r\n                                }\r\n                                this.uzorci.push({\r\n                                  sid: element.id,\r\n                                  status: stat,\r\n                                  pdf_exists: element.pdf_exists,\r\n                                  tip: element.sample.tip,\r\n                                  _id: element._id,\r\n                                  removed: false\r\n                                });\r\n                              } else {\r\n                                this.uzorci.push({\r\n                                  sid: element.id,\r\n                                  status: \"U OBRADI\",\r\n                                  pdf_exists: element.pdf_exists,\r\n                                  tip: element.sample.tip,\r\n                                  _id: element._id,\r\n                                  removed: false\r\n                                });\r\n                              }\r\n                            }\r\n                          });\r\n                        });\r\n\r\n                        this.uzorci = this.uzorci.sort(function(a, b) {\r\n                          return a.sid.localeCompare(b.sid, undefined, {\r\n                            numeric: true,\r\n                            sensitivity: \"base\"\r\n                          });\r\n                        });\r\n\r\n                        this.main = true;\r\n\r\n                        // Vue Loading Overlay Component\r\n                        this.isLoading = false;\r\n                      }\r\n                    })\r\n                    .then(res => {});\r\n                });\r\n            });\r\n        });\r\n    },\r\n\r\n    Disapprove(rezultati, from) {\r\n      this.rezultati.forEach(element => {\r\n        if (element.calculated) {\r\n          this.calculated = true;\r\n        }\r\n      });\r\n\r\n      http\r\n        .post(\"/rezultati/odobravanje/ukloni/\" + this.$store.state.sid, {\r\n          testovi: rezultati,\r\n          site: this.$store.state.site,\r\n          token: this.$store.state.token\r\n        })\r\n        .then(res => {\r\n\r\n          // Vue Loading Overlay Component\r\n          this.isLoading = true;\r\n\r\n          http\r\n            .get(\r\n              \"rezultati/odobravanje/samples/\" +\r\n                this.$route.params.patient +\r\n                \"/\" +\r\n                this.$route.params.id +\r\n                \"?token=\" +\r\n                this.$store.state.token +\r\n                \"&site=\" +\r\n                this.$store.state.site +\r\n                \"&date=\" +\r\n                this.$route.query.date,\r\n              {}\r\n            )\r\n            .then(res => {\r\n              this.sample.status = \"REALIZOVAN\";\r\n\r\n              this.final_pdf = res.data.final_pdf;\r\n\r\n              this.count = res.data.results.length;\r\n              this.approved = 0;\r\n\r\n              this.odobren = true;\r\n              this.verificiran = true;\r\n\r\n              res.data.results.forEach(element => {\r\n                if (\r\n                  element.status === \"ODOBREN\" ||\r\n                  element.status === \"VERIFICIRAN\"\r\n                ) {\r\n                  this.approved++;\r\n                }\r\n                if (\r\n                  element.status != \"ODOBREN\" &&\r\n                  element.status != \"VERIFICIRAN\"\r\n                ) {\r\n                  this.odobren = false;\r\n                }\r\n                if (!element.verificiran) {\r\n                  this.verificiran = false;\r\n                }\r\n              });\r\n\r\n              this.uzorci = [];\r\n\r\n              res.data.results.forEach(element => {\r\n                var check = 0;\r\n                var zaprimljen = 0;\r\n                var realizovan = 0;\r\n\r\n                if (element.verificiran) {\r\n                  var status_uzorka = \"VERIFICIRAN\";\r\n                } else {\r\n                  var status_uzorka = element.status;\r\n                }\r\n\r\n                element.rezultati.forEach(test => {\r\n                  check++;\r\n\r\n                  if (\r\n                    test.rezultat[test.rezultat.length - 1].rezultat_f === \"\"\r\n                  ) {\r\n                    zaprimljen++;\r\n                  }\r\n\r\n                  if (\r\n                    test.rezultat[test.rezultat.length - 1].rezultat_f != \"\"\r\n                  ) {\r\n                    realizovan++;\r\n                  }\r\n\r\n                  if (check === element.rezultati.length) {\r\n\r\n                    // console.log(\"Provjera: Disapprove\")\r\n\r\n                    if (status_uzorka === \"VERIFICIRAN\") {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"VERIFICIRAN\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false\r\n                      });\r\n                    } else if (status_uzorka === \"ODOBREN\") {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"ODOBREN\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false\r\n                      });\r\n                    } else if (zaprimljen < 1) {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"REALIZOVAN\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false\r\n                      });\r\n                    } else if (realizovan < 1) {\r\n                      var stat = \"ZAPRIMLJEN\";\r\n                      if (element.sample.tip.includes(\"Mikrobiologija\")) {\r\n                        if (\r\n                          element.rezultati[0].rezultat[0].rezultat_m.length\r\n                        ) {\r\n                          stat = \"REALIZOVAN\";\r\n                        }\r\n                      }\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: stat,\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false\r\n                      });\r\n                    } else {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"U OBRADI\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false\r\n                      });\r\n                    }\r\n                  }\r\n                });\r\n              });\r\n\r\n              this.uzorci = this.uzorci.sort(function(a, b) {\r\n                return a.sid.localeCompare(b.sid, undefined, {\r\n                  numeric: true,\r\n                  sensitivity: \"base\"\r\n                });\r\n              });\r\n\r\n              this.main = true;\r\n            });\r\n\r\n          this.rezultati.forEach(element => {\r\n            element.edit = true;\r\n          });\r\n\r\n          // Vue Loading Overlay Component\r\n          this.isLoading = false;\r\n        });\r\n    },\r\n\r\n    Verify(data) {\r\n      if (!this.$store.state.access.verify) {\r\n        this.$refs.staticModalVerifyPrivilege.open();\r\n      } else {\r\n        http\r\n          .post(\"/rezultati/obrada/verifikacija/\" + this.$store.state.sid, {\r\n            site: this.$store.state.site,\r\n            token: this.$store.state.token,\r\n            verify: true\r\n          })\r\n          .then(res => {\r\n            http\r\n              .get(\r\n                \"rezultati/odobravanje/samples/\" +\r\n                  this.$route.params.patient +\r\n                  \"/\" +\r\n                  this.$route.params.id +\r\n                  \"?token=\" +\r\n                  this.$store.state.token +\r\n                  \"&site=\" +\r\n                  this.$store.state.site +\r\n                  \"&date=\" +\r\n                  this.$route.query.date,\r\n                {}\r\n              )\r\n              .then(res => {\r\n                this.sample.status = \"VERIFICIRAN\";\r\n\r\n                this.final_pdf = res.data.final_pdf;\r\n\r\n                this.count = res.data.results.length;\r\n                this.approved = 0;\r\n                this.verified = 0;\r\n\r\n                this.odobren = true;\r\n                this.verificiran = true;\r\n                this.partials = [];\r\n                this.partials_condition = false;\r\n\r\n                res.data.results.forEach(element => {\r\n                  if (element.verificiran) {\r\n                    this.partials.push(element._id);\r\n                    this.verified++;\r\n                  }\r\n                  if (\r\n                    element.status === \"ODOBREN\" ||\r\n                    element.status === \"VERIFICIRAN\"\r\n                  ) {\r\n                    this.approved++;\r\n                  }\r\n                  if (\r\n                    element.status != \"ODOBREN\" &&\r\n                    element.status != \"VERIFICIRAN\"\r\n                  ) {\r\n                    this.odobren = false;\r\n                  }\r\n                  if (!element.verificiran) {\r\n                    this.verificiran = false;\r\n                  }\r\n                });\r\n\r\n                if (this.count > this.verified && this.verified > 1) {\r\n                  this.partials_condition = true;\r\n                }\r\n\r\n                this.uzorci = [];\r\n\r\n                res.data.results.forEach(element => {\r\n                  var check = 0;\r\n                  var zaprimljen = 0;\r\n                  var realizovan = 0;\r\n\r\n                  if (element.verificiran) {\r\n                    var status_uzorka = \"VERIFICIRAN\";\r\n                  } else {\r\n                    var status_uzorka = element.status;\r\n                  }\r\n\r\n                  element.rezultati.forEach(test => {\r\n                    check++;\r\n\r\n                    if (\r\n                      test.rezultat[test.rezultat.length - 1].rezultat_f === \"\"\r\n                    ) {\r\n                      zaprimljen++;\r\n                    }\r\n\r\n                    if (\r\n                      test.rezultat[test.rezultat.length - 1].rezultat_f != \"\"\r\n                    ) {\r\n                      realizovan++;\r\n                    }\r\n\r\n                    if (check === element.rezultati.length) {\r\n\r\n                      // console.log(\"Provjera: Verify\")\r\n\r\n                      if (status_uzorka === \"VERIFICIRAN\") {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"VERIFICIRAN\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false\r\n                        });\r\n                      } else if (status_uzorka === \"ODOBREN\") {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"ODOBREN\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false\r\n                        });\r\n                      } else if (zaprimljen < 1) {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"REALIZOVAN\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false\r\n                        });\r\n                      } else if (realizovan < 1) {\r\n                        var stat = \"ZAPRIMLJEN\";\r\n                        if (element.sample.tip.includes(\"Mikrobiologija\")) {\r\n                          if (\r\n                            element.rezultati[0].rezultat[0].rezultat_m.length\r\n                          ) {\r\n                            stat = \"REALIZOVAN\";\r\n                          }\r\n                        }\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: stat,\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false\r\n                        });\r\n                      } else {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"U OBRADI\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false\r\n                        });\r\n                      }\r\n                    }\r\n                  });\r\n                });\r\n\r\n                this.uzorci = this.uzorci.sort(function(a, b) {\r\n                  return a.sid.localeCompare(b.sid, undefined, {\r\n                    numeric: true,\r\n                    sensitivity: \"base\"\r\n                  });\r\n                });\r\n\r\n                if (this.verificiran) {\r\n                  http\r\n                    .post(\"rezultati/nalazi/status\", {\r\n                      token: this.$store.state.token,\r\n                      site: this.$store.state.site,\r\n                      timestamp: this.timestamp,\r\n                      location: \"/\",\r\n                      naziv: this.timestamp,\r\n                      status: true\r\n                    })\r\n                    .then(res => {\r\n                      this.main = true;\r\n\r\n                      if (this.lokacija.sendEmail) {\r\n                        http\r\n                          .post(\"nalazi/mail\", {\r\n                            token: this.$store.state.token,\r\n                            site: this.$store.state.site,\r\n                            email: this.lokacija.email,\r\n                            timestamp: this.timestamp,\r\n                            location: \"/\",\r\n                            naziv: this.timestamp\r\n                          })\r\n                          .then(res => {\r\n                            if (res.data.success) {\r\n                            } else {\r\n                              this.toastText = \"Greška prilikom slanja nalaza!\";\r\n                              this.toastIcon = \"fa-remove\";\r\n                              this.toastPosition = \"top-right\";\r\n                              this.className = \"vuestic-toast-danger\";\r\n\r\n                              this.showToast(this.toastText, {\r\n                                icon: this.toastIcon,\r\n                                position: this.toastPosition,\r\n                                duration: 2500,\r\n                                fullWidth: this.false,\r\n                                className: this.className\r\n                              });\r\n                            }\r\n                          });\r\n                      } else {\r\n                      }\r\n                    });\r\n                } else {\r\n                  this.main = true;\r\n                }\r\n              });\r\n          });\r\n      }\r\n    },\r\n\r\n    UnVerify(data) {\r\n      if (!this.$store.state.access.verify) {\r\n        this.$refs.staticModalVerifyPrivilege.open();\r\n      } else {\r\n        this.verificiran = false;\r\n        this.sid = data.sid;\r\n\r\n        http\r\n          .post(\"/rezultati/obrada/verifikacija/\" + data.sid, {\r\n            site: this.$store.state.site,\r\n            token: this.$store.state.token,\r\n            verify: false\r\n          })\r\n          .then(res => {\r\n            http\r\n              .get(\r\n                \"rezultati/odobravanje/samples/\" +\r\n                  this.$route.params.patient +\r\n                  \"/\" +\r\n                  this.$route.params.id +\r\n                  \"?token=\" +\r\n                  this.$store.state.token +\r\n                  \"&site=\" +\r\n                  this.$store.state.site +\r\n                  \"&date=\" +\r\n                  this.$route.query.date,\r\n                {}\r\n              )\r\n              .then(res => {\r\n                this.sample.status = \"ODOBREN\";\r\n\r\n                this.final_pdf = res.data.final_pdf;\r\n\r\n                this.count = res.data.results.length;\r\n                this.approved = 0;\r\n\r\n                this.odobren = true;\r\n                this.verificiran = true;\r\n                this.verified = 0;\r\n                this.partials = [];\r\n                this.partials_condition = false;\r\n\r\n                res.data.results.forEach(element => {\r\n                  if (element.verificiran) {\r\n                    this.verified++;\r\n                    this.partials.push(element._id);\r\n                  }\r\n                  if (\r\n                    element.status === \"ODOBREN\" ||\r\n                    element.status === \"VERIFICIRAN\"\r\n                  ) {\r\n                    this.approved++;\r\n                  }\r\n                  if (\r\n                    element.status != \"ODOBREN\" &&\r\n                    element.status != \"VERIFICIRAN\"\r\n                  ) {\r\n                    this.odobren = false;\r\n                  }\r\n                  if (!element.verificiran) {\r\n                    this.verificiran = false;\r\n                  }\r\n                });\r\n\r\n                if (this.count > this.verified && this.verified > 1) {\r\n                  this.partials_condition = true;\r\n                }\r\n\r\n                this.uzorci = [];\r\n\r\n                res.data.results.forEach(element => {\r\n                  var check = 0;\r\n                  var zaprimljen = 0;\r\n                  var realizovan = 0;\r\n\r\n                  if (element.verificiran) {\r\n                    var status_uzorka = \"VERIFICIRAN\";\r\n                  } else {\r\n                    var status_uzorka = element.status;\r\n                  }\r\n\r\n                  element.rezultati.forEach(test => {\r\n                    check++;\r\n\r\n                    if (\r\n                      test.rezultat[test.rezultat.length - 1].rezultat_f === \"\"\r\n                    ) {\r\n                      zaprimljen++;\r\n                    }\r\n\r\n                    if (\r\n                      test.rezultat[test.rezultat.length - 1].rezultat_f != \"\"\r\n                    ) {\r\n                      realizovan++;\r\n                    }\r\n\r\n                    if (check === element.rezultati.length) {\r\n\r\n                      // console.log(\"Provjera: Unverify\")\r\n                      \r\n                      if (status_uzorka === \"VERIFICIRAN\") {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"VERIFICIRAN\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false\r\n                        });\r\n                      } else if (status_uzorka === \"ODOBREN\") {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"ODOBREN\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false\r\n                        });\r\n                      } else if (zaprimljen < 1) {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"REALIZOVAN\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false\r\n                        });\r\n                      } else if (realizovan < 1) {\r\n                        var stat = \"ZAPRIMLJEN\";\r\n                        if (element.sample.tip.includes(\"Mikrobiologija\")) {\r\n                          if (\r\n                            element.rezultati[0].rezultat[0].rezultat_m.length\r\n                          ) {\r\n                            stat = \"REALIZOVAN\";\r\n                          }\r\n                        }\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: stat,\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false\r\n                        });\r\n                      } else {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"U OBRADI\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false\r\n                        });\r\n                      }\r\n                    }\r\n                  });\r\n                });\r\n\r\n                this.uzorci = this.uzorci.sort(function(a, b) {\r\n                  return a.sid.localeCompare(b.sid, undefined, {\r\n                    numeric: true,\r\n                    sensitivity: \"base\"\r\n                  });\r\n                });\r\n\r\n                if (!this.verificiran) {\r\n                  http\r\n                    .post(\"rezultati/nalazi/status\", {\r\n                      token: this.$store.state.token,\r\n                      site: this.$store.state.site,\r\n                      timestamp: this.timestamp,\r\n                      location: \"/\",\r\n                      naziv: this.timestamp,\r\n                      status: false\r\n                    })\r\n                    .then(res => {\r\n                      this.main = true;\r\n                    });\r\n                } else {\r\n                  this.main = true;\r\n                }\r\n              });\r\n          });\r\n      }\r\n    },\r\n\r\n    GetResults(data, status) {\r\n      this.sample_status = status;\r\n      this.vise = [];\r\n      this.labassay = \"\";\r\n      http\r\n        .post(\r\n          \"/rezultati/odobravanje/results\" +\r\n            \"?token=\" +\r\n            this.$store.state.token +\r\n            \"&site=\" +\r\n            this.$store.state.site,\r\n          {\r\n            id: this.sample.sid,\r\n            labassay: data.labassay_id\r\n          }\r\n        )\r\n        .then(res => {\r\n          if (res.data.success) {\r\n            this.vise = res.data.element;\r\n            this.labassay =\r\n              this.vise.labassay.naziv + \" (\" + this.vise.labassay.analit + \")\";\r\n\r\n            var i = 0;\r\n            res.data.element.rezultat.forEach(element => {\r\n              i++;\r\n              if (res.data.element.rezultat.length == i) {\r\n                element.izabran = true;\r\n              } else {\r\n                element.izabran = false;\r\n              }\r\n            });\r\n\r\n            this.vise.rezultat.sort(function(a, b) {\r\n              return Date.parse(a.created_at) == Date.parse(b.created_at)\r\n                ? 0\r\n                : +(Date.parse(a.created_at) < Date.parse(b.created_at)) || -1;\r\n            });\r\n\r\n            this.$refs.staticModalAllResults.open();\r\n          }\r\n        });\r\n    },\r\n\r\n    GetResultsMulti(data, status) {\r\n      this.sample_status = status;\r\n\r\n      this.multi_rezultati = [];\r\n      this.multi_test = data.ime + \" (\" + data.analit + \")\";\r\n\r\n      // this.$refs.staticModalResultsMulti.open();\r\n\r\n      // this.multi_rezultati = data.multi_rezultati\r\n\r\n      data.multi_rezultati.forEach(element => {\r\n        element.rezultat.forEach(rez => {});\r\n      });\r\n    },\r\n\r\n    IzborTesta(vise, test) {\r\n      document.getElementById(this.sample.sid).click();\r\n\r\n      http\r\n        .post(\r\n          \"/rezultati/odobravanje/choose\" +\r\n            \"?token=\" +\r\n            this.$store.state.token +\r\n            \"&site=\" +\r\n            this.$store.state.site,\r\n          {\r\n            id: this.sample.sid,\r\n            labassay: vise.labassay._id,\r\n            picked: test._id\r\n          }\r\n        )\r\n        .then(res => {\r\n          document.getElementById(this.sample.sid).click();\r\n          this.$refs.staticModalAllResults.close();\r\n        });\r\n    },\r\n\r\n    Partials() {\r\n      http\r\n        .post(\"nalazi/create\", {\r\n          token: this.$store.state.token,\r\n          site: this.$store.state.site,\r\n          type: \"partial\",\r\n          uzorci: this.uzorci,\r\n          samples: this.partials,\r\n          timestamp: this.timestamp,\r\n          napomena: \"\",\r\n          status: false,\r\n          idNalaza: \"\",\r\n          location: \"/partials\",\r\n          naziv: this.timestamp\r\n        })\r\n        .then(res => {\r\n          if (res.data.success) {\r\n            if (!res.data.success) {\r\n              this.$refs.staticModalError.open();\r\n            } else {\r\n              this.path = this.timestamp + \".pdf\";\r\n\r\n              this.url = server + \"nalazi/partials/\" + this.path;\r\n\r\n              var options = {\r\n                width: \"100%\",\r\n                height: \"800px\"\r\n              };\r\n              PDFObject.embed(this.url, \"#pdf-container\", options);\r\n\r\n              this.email_button = true;\r\n              this.main = false;\r\n              this.pdf = true;\r\n            }\r\n          }\r\n        });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.collapse-page {\r\n  &__content {\r\n    padding: 2rem;\r\n    &__title {\r\n      font-size: 1.375rem;\r\n      font-weight: bold;\r\n    }\r\n  }\r\n}\r\n\r\n.icon-bar a {\r\n  color: #fff;\r\n  text-decoration: none;\r\n}\r\n\r\n.icon-bar a:hover {\r\n  color: #4ae387;\r\n}\r\n\r\ni:hover {\r\n  color: #4ae387 !important;\r\n}\r\n\r\n.circle {\r\n  width: 1rem;\r\n  opacity: 0.5;\r\n  height: 1rem;\r\n  border-radius: 50%;\r\n  display: inline-block;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/obrada/Obrada.vue","exports = module.exports = require(\"../../css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \".vld-overlay{bottom:0;left:0;position:absolute;right:0;top:0;align-items:center;display:none;justify-content:center;overflow:hidden;z-index:1}.vld-overlay.is-active{display:flex}.vld-overlay.is-full-page{z-index:999;position:fixed}.vld-overlay .vld-background{bottom:0;left:0;position:absolute;right:0;top:0;background:#fff;opacity:.5}.vld-overlay .vld-icon,.vld-parent{position:relative}\", \"\", {\"version\":3,\"sources\":[\"C:/Users/atom/Desktop/ATOM Sync/extralab_75000/extralab_cl25092019/node_modules/vue-loading-overlay/dist/vue-loading.css\"],\"names\":[],\"mappings\":\"AAAA,aACE,SAAU,AACV,OAAQ,AACR,kBAAmB,AACnB,QAAS,AACT,MAAO,AACP,mBAAoB,AACpB,aAAc,AACd,uBAAwB,AACxB,gBAAiB,AACjB,SAAU,CACX,AAED,uBACE,YAAa,CACd,AAED,0BACE,YAAa,AACb,cAAe,CAChB,AAED,6BACE,SAAU,AACV,OAAQ,AACR,kBAAmB,AACnB,QAAS,AACT,MAAO,AACP,gBAAiB,AACjB,UAAY,CACb,AAED,mCACE,iBAAkB,CACnB\",\"file\":\"vue-loading.css\",\"sourcesContent\":[\".vld-overlay {\\n  bottom: 0;\\n  left: 0;\\n  position: absolute;\\n  right: 0;\\n  top: 0;\\n  align-items: center;\\n  display: none;\\n  justify-content: center;\\n  overflow: hidden;\\n  z-index: 1\\n}\\n\\n.vld-overlay.is-active {\\n  display: flex\\n}\\n\\n.vld-overlay.is-full-page {\\n  z-index: 999;\\n  position: fixed\\n}\\n\\n.vld-overlay .vld-background {\\n  bottom: 0;\\n  left: 0;\\n  position: absolute;\\n  right: 0;\\n  top: 0;\\n  background: #fff;\\n  opacity: 0.5\\n}\\n\\n.vld-overlay .vld-icon, .vld-parent {\\n  position: relative\\n}\\n\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader?{\"minimize\":true,\"sourceMap\":true}!./node_modules/vue-loading-overlay/dist/vue-loading.css\n// module id = MbHo\n// module chunks = 0 1 2 3 5 6 7 8 9 10 11 12 13 14 23 26 27 28 29 30 31 32 33 34 35 36 37 38","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-29844c72\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/sass-loader/lib/loader.js?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./BadgeColumn.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"56a5fb2f\", content, true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/extract-text-webpack-plugin/dist/loader.js?{\"omit\":1,\"remove\":true}!./node_modules/vue-style-loader!./node_modules/css-loader?{\"minimize\":true,\"sourceMap\":true}!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-29844c72\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/sass-loader/lib/loader.js?{\"sourceMap\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/components/obrada/BadgeColumn.vue\n// module id = OsVY\n// module chunks = 6 15 24 44","<template>\r\n  <span class=\"circle\" :class=\"classObject\"></span>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"badgeColumn\",\r\n  props: {\r\n    rowData: {\r\n      type: Object,\r\n      required: true\r\n    },\r\n    rowIndex: {\r\n      type: Number\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      classObject: {\r\n        \"badge-warning\": this.rowIndex % 6 === 0,\r\n        \"badge-primary\": this.rowIndex % 6 === 1,\r\n        \"badge-danger\": this.rowIndex % 6 === 2,\r\n        \"badge-info\": this.rowIndex % 6 === 3,\r\n        \"badge-violet\": this.rowIndex % 6 === 4,\r\n        \"badge-dark-blue\": this.rowIndex % 6 === 5\r\n      }\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.circle {\r\n  width: 0.4rem;\r\n  height: 0.4rem;\r\n  border-radius: 50%;\r\n  display: inline-block;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/obrada/BadgeColumn.vue","// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window\nvar toIObject = require('./_to-iobject');\nvar gOPN = require('./_object-gopn').f;\nvar toString = {}.toString;\n\nvar windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames\n  ? Object.getOwnPropertyNames(window) : [];\n\nvar getWindowNames = function (it) {\n  try {\n    return gOPN(it);\n  } catch (e) {\n    return windowNames.slice();\n  }\n};\n\nmodule.exports.f = function getOwnPropertyNames(it) {\n  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_object-gopn-ext.js\n// module id = Rrel\n// module chunks = 6","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../css-loader/index.js??ref--7-2!./vue-loading.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../vue-style-loader/lib/addStylesClient.js\")(\"745170b4\", content, true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loading-overlay/dist/vue-loading.css\n// module id = SYh3\n// module chunks = 0 1 2 3 5 6 7 8 9 10 11 12 13 14 23 26 27 28 29 30 31 32 33 34 35 36 37 38","/*global ActiveXObject, window, console, define, module, jQuery */\n//jshint unused:false, strict: false\n\n/*\n    PDFObject v2.1.1\n    https://github.com/pipwerks/PDFObject\n    Copyright (c) 2008-2018 Philip Hutchison\n    MIT-style license: http://pipwerks.mit-license.org/\n    UMD module pattern from https://github.com/umdjs/umd/blob/master/templates/returnExports.js\n*/\n\n(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define([], factory);\n    } else if (typeof module === 'object' && module.exports) {\n        // Node. Does not work with strict CommonJS, but\n        // only CommonJS-like environments that support module.exports,\n        // like Node.\n        module.exports = factory();\n    } else {\n        // Browser globals (root is window)\n        root.PDFObject = factory();\n  }\n}(this, function () {\n\n    \"use strict\";\n    //jshint unused:true\n\n    //PDFObject is designed for client-side (browsers), not server-side (node)\n    //Will choke on undefined navigator and window vars when run on server\n    //Return boolean false and exit function when running server-side\n\n    if(typeof window === \"undefined\" || typeof navigator === \"undefined\"){ return false; }\n\n    var pdfobjectversion = \"2.1.1\",\n        ua = window.navigator.userAgent,\n\n        //declare booleans\n        supportsPDFs,\n        isIE,\n        supportsPdfMimeType = (typeof navigator.mimeTypes['application/pdf'] !== \"undefined\"),\n        supportsPdfActiveX,\n        isModernBrowser = (function (){ return (typeof window.Promise !== \"undefined\"); })(),\n        isFirefox = (function (){ return (ua.indexOf(\"irefox\") !== -1); } )(),\n        isFirefoxWithPDFJS = (function (){\n            //Firefox started shipping PDF.js in Firefox 19.\n            //If this is Firefox 19 or greater, assume PDF.js is available\n            if(!isFirefox){ return false; }\n            //parse userAgent string to get release version (\"rv\")\n            //ex: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.12; rv:57.0) Gecko/20100101 Firefox/57.0\n            return (parseInt(ua.split(\"rv:\")[1].split(\".\")[0], 10) > 18);\n        })(),\n        isIOS = (function (){ return (/iphone|ipad|ipod/i.test(ua.toLowerCase())); })(),\n\n        //declare functions\n        createAXO,\n        buildFragmentString,\n        log,\n        embedError,\n        embed,\n        getTargetElement,\n        generatePDFJSiframe,\n        generateEmbedElement;\n\n\n    /* ----------------------------------------------------\n       Supporting functions\n       ---------------------------------------------------- */\n\n    createAXO = function (type){\n        var ax;\n        try {\n            ax = new ActiveXObject(type);\n        } catch (e) {\n            ax = null; //ensure ax remains null\n        }\n        return ax;\n    };\n\n    //IE11 still uses ActiveX for Adobe Reader, but IE 11 doesn't expose\n    //window.ActiveXObject the same way previous versions of IE did\n    //window.ActiveXObject will evaluate to false in IE 11, but \"ActiveXObject\" in window evaluates to true\n    //so check the first one for older IE, and the second for IE11\n    //FWIW, MS Edge (replacing IE11) does not support ActiveX at all, both will evaluate false\n    //Constructed as a method (not a prop) to avoid unneccesarry overhead -- will only be evaluated if needed\n    isIE = function (){ return !!(window.ActiveXObject || \"ActiveXObject\" in window); };\n\n    //If either ActiveX support for \"AcroPDF.PDF\" or \"PDF.PdfCtrl\" are found, return true\n    //Constructed as a method (not a prop) to avoid unneccesarry overhead -- will only be evaluated if needed\n    supportsPdfActiveX = function (){ return !!(createAXO(\"AcroPDF.PDF\") || createAXO(\"PDF.PdfCtrl\")); };\n\n    //Determines whether PDF support is available\n    supportsPDFs = (\n        //as of iOS 12, inline PDF rendering is still not supported in Safari or native webview\n        //3rd-party browsers (eg Chrome, Firefox) use Apple's webview for rendering, and thus the same result as Safari\n        //Therefore if iOS, we shall assume that PDF support is not available\n        !isIOS && (\n            //Modern versions of Firefox come bundled with PDFJS\n            isFirefoxWithPDFJS || \n            //Browsers that still support the original MIME type check\n            supportsPdfMimeType || (\n                //Pity the poor souls still using IE\n                isIE() && supportsPdfActiveX()\n            )\n        )\n    );\n\n    //Create a fragment identifier for using PDF Open parameters when embedding PDF\n    buildFragmentString = function(pdfParams){\n\n        var string = \"\",\n            prop;\n\n        if(pdfParams){\n\n            for (prop in pdfParams) {\n                if (pdfParams.hasOwnProperty(prop)) {\n                    string += encodeURIComponent(prop) + \"=\" + encodeURIComponent(pdfParams[prop]) + \"&\";\n                }\n            }\n\n            //The string will be empty if no PDF Params found\n            if(string){\n\n                string = \"#\" + string;\n\n                //Remove last ampersand\n                string = string.slice(0, string.length - 1);\n\n            }\n\n        }\n\n        return string;\n\n    };\n\n    log = function (msg){\n        if(typeof console !== \"undefined\" && console.log){\n            console.log(\"[PDFObject] \" + msg);\n        }\n    };\n\n    embedError = function (msg){\n        log(msg);\n        return false;\n    };\n\n    getTargetElement = function (targetSelector){\n\n        //Default to body for full-browser PDF\n        var targetNode = document.body;\n\n        //If a targetSelector is specified, check to see whether\n        //it's passing a selector, jQuery object, or an HTML element\n\n        if(typeof targetSelector === \"string\"){\n\n            //Is CSS selector\n            targetNode = document.querySelector(targetSelector);\n\n        } else if (typeof jQuery !== \"undefined\" && targetSelector instanceof jQuery && targetSelector.length) {\n\n            //Is jQuery element. Extract HTML node\n            targetNode = targetSelector.get(0);\n\n        } else if (typeof targetSelector.nodeType !== \"undefined\" && targetSelector.nodeType === 1){\n\n            //Is HTML element\n            targetNode = targetSelector;\n\n        }\n\n        return targetNode;\n\n    };\n\n    generatePDFJSiframe = function (targetNode, url, pdfOpenFragment, PDFJS_URL, id){\n\n        var fullURL = PDFJS_URL + \"?file=\" + encodeURIComponent(url) + pdfOpenFragment;\n        var scrollfix = (isIOS) ? \"-webkit-overflow-scrolling: touch; overflow-y: scroll; \" : \"overflow: hidden; \";\n        var iframe = \"<div style='\" + scrollfix + \"position: absolute; top: 0; right: 0; bottom: 0; left: 0;'><iframe  \" + id + \" src='\" + fullURL + \"' style='border: none; width: 100%; height: 100%;' frameborder='0'></iframe></div>\";\n        targetNode.className += \" pdfobject-container\";\n        targetNode.style.position = \"relative\";\n        targetNode.style.overflow = \"auto\";\n        targetNode.innerHTML = iframe;\n        return targetNode.getElementsByTagName(\"iframe\")[0];\n\n    };\n\n    generateEmbedElement = function (targetNode, targetSelector, url, pdfOpenFragment, width, height, id){\n\n        var style = \"\";\n\n        if(targetSelector && targetSelector !== document.body){\n            style = \"width: \" + width + \"; height: \" + height + \";\";\n        } else {\n            style = \"position: absolute; top: 0; right: 0; bottom: 0; left: 0; width: 100%; height: 100%;\";\n        }\n\n        targetNode.className += \" pdfobject-container\";\n        targetNode.innerHTML = \"<embed \" + id + \" class='pdfobject' src='\" + url + pdfOpenFragment + \"' type='application/pdf' style='overflow: auto; \" + style + \"'/>\";\n\n        return targetNode.getElementsByTagName(\"embed\")[0];\n\n    };\n\n    embed = function(url, targetSelector, options){\n\n        //Ensure URL is available. If not, exit now.\n        if(typeof url !== \"string\"){ return embedError(\"URL is not valid\"); }\n\n        //If targetSelector is not defined, convert to boolean\n        targetSelector = (typeof targetSelector !== \"undefined\") ? targetSelector : false;\n\n        //Ensure options object is not undefined -- enables easier error checking below\n        options = (typeof options !== \"undefined\") ? options : {};\n\n        //Get passed options, or set reasonable defaults\n        var id = (options.id && typeof options.id === \"string\") ? \"id='\" + options.id + \"'\" : \"\",\n            page = (options.page) ? options.page : false,\n            pdfOpenParams = (options.pdfOpenParams) ? options.pdfOpenParams : {},\n            fallbackLink = (typeof options.fallbackLink !== \"undefined\") ? options.fallbackLink : true,\n            width = (options.width) ? options.width : \"100%\",\n            height = (options.height) ? options.height : \"100%\",\n            assumptionMode = (typeof options.assumptionMode === \"boolean\") ? options.assumptionMode : true,\n            forcePDFJS = (typeof options.forcePDFJS === \"boolean\") ? options.forcePDFJS : false,\n            PDFJS_URL = (options.PDFJS_URL) ? options.PDFJS_URL : false,\n            targetNode = getTargetElement(targetSelector),\n            fallbackHTML = \"\",\n            pdfOpenFragment = \"\",\n            fallbackHTML_default = \"<p>This browser does not support inline PDFs. Please download the PDF to view it: <a href='[url]'>Download PDF</a></p>\";\n\n        //If target element is specified but is not valid, exit without doing anything\n        if(!targetNode){ return embedError(\"Target element cannot be determined\"); }\n\n\n        //page option overrides pdfOpenParams, if found\n        if(page){\n            pdfOpenParams.page = page;\n        }\n\n        //Stringify optional Adobe params for opening document (as fragment identifier)\n        pdfOpenFragment = buildFragmentString(pdfOpenParams);\n\n        //Do the dance\n\n        //If the forcePDFJS option is invoked, skip everything else and embed as directed\n        if(forcePDFJS && PDFJS_URL){\n\n            return generatePDFJSiframe(targetNode, url, pdfOpenFragment, PDFJS_URL, id);\n\n        //If traditional support is provided, or if this is a modern browser and not iOS (see comment for supportsPDFs declaration)\n        } else if(supportsPDFs || (assumptionMode && isModernBrowser && !isIOS)){\n\n            return generateEmbedElement(targetNode, targetSelector, url, pdfOpenFragment, width, height, id);\n\n        //If everything else has failed and a PDFJS fallback is provided, try to use it\n        } else if(PDFJS_URL){\n\n            return generatePDFJSiframe(targetNode, url, pdfOpenFragment, PDFJS_URL, id);\n\n        } else {\n\n            //Display the fallback link if available\n            if(fallbackLink){\n\n                fallbackHTML = (typeof fallbackLink === \"string\") ? fallbackLink : fallbackHTML_default;\n                targetNode.innerHTML = fallbackHTML.replace(/\\[url\\]/g, url);\n\n            }\n\n            return embedError(\"This browser does not support embedded PDFs\");\n\n        }\n\n    };\n\n    return {\n        embed: function (a,b,c){ return embed(a,b,c); },\n        pdfobjectversion: (function () { return pdfobjectversion; })(),\n        supportsPDFs: (function (){ return supportsPDFs; })()\n    };\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pdfobject/pdfobject.js\n// module id = UqI+\n// module chunks = 6 23 25","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-29844c72\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./BadgeColumn.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./BadgeColumn.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-29844c72\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":\\\"src\\\",\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./BadgeColumn.vue\"\n/* template functional */\n  var __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-29844c72\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/obrada/BadgeColumn.vue\n// module id = XMpX\n// module chunks = 6 15 24 44","!function(t,e){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(\"VueLoading\",[],e):\"object\"==typeof exports?exports.VueLoading=e():t.VueLoading=e()}(\"undefined\"!=typeof self?self:this,function(){return function(t){var e={};function i(n){if(e[n])return e[n].exports;var r=e[n]={i:n,l:!1,exports:{}};return t[n].call(r.exports,r,r.exports,i),r.l=!0,r.exports}return i.m=t,i.c=e,i.d=function(t,e,n){i.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},i.r=function(t){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})},i.t=function(t,e){if(1&e&&(t=i(t)),8&e)return t;if(4&e&&\"object\"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(i.r(n),Object.defineProperty(n,\"default\",{enumerable:!0,value:t}),2&e&&\"string\"!=typeof t)for(var r in t)i.d(n,r,function(e){return t[e]}.bind(null,r));return n},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,\"a\",e),e},i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},i.p=\"\",i(i.s=1)}([function(t,e,i){},function(t,e,i){\"use strict\";i.r(e);var n=\"undefined\"!=typeof window?window.HTMLElement:Object,r={mounted:function(){document.addEventListener(\"focusin\",this.focusIn)},methods:{focusIn:function(t){if(this.isActive&&t.target!==this.$el&&!this.$el.contains(t.target)){var e=this.container?this.container:this.isFullPage?null:this.$el.parentElement;(this.isFullPage||e&&e.contains(t.target))&&(t.preventDefault(),this.$el.focus())}}},beforeDestroy:function(){document.removeEventListener(\"focusin\",this.focusIn)}};function a(t,e,i,n,r,a,o,s){var u,l=\"function\"==typeof t?t.options:t;if(e&&(l.render=e,l.staticRenderFns=i,l._compiled=!0),n&&(l.functional=!0),a&&(l._scopeId=\"data-v-\"+a),o?(u=function(t){(t=t||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||\"undefined\"==typeof __VUE_SSR_CONTEXT__||(t=__VUE_SSR_CONTEXT__),r&&r.call(this,t),t&&t._registeredComponents&&t._registeredComponents.add(o)},l._ssrRegister=u):r&&(u=s?function(){r.call(this,this.$root.$options.shadowRoot)}:r),u)if(l.functional){l._injectStyles=u;var c=l.render;l.render=function(t,e){return u.call(e),c(t,e)}}else{var d=l.beforeCreate;l.beforeCreate=d?[].concat(d,u):[u]}return{exports:t,options:l}}var o=a({name:\"spinner\",props:{color:{type:String,default:\"#000\"},height:{type:Number,default:64},width:{type:Number,default:64}}},function(){var t=this.$createElement,e=this._self._c||t;return e(\"svg\",{attrs:{viewBox:\"0 0 38 38\",xmlns:\"http://www.w3.org/2000/svg\",width:this.width,height:this.height,stroke:this.color}},[e(\"g\",{attrs:{fill:\"none\",\"fill-rule\":\"evenodd\"}},[e(\"g\",{attrs:{transform:\"translate(1 1)\",\"stroke-width\":\"2\"}},[e(\"circle\",{attrs:{\"stroke-opacity\":\".25\",cx:\"18\",cy:\"18\",r:\"18\"}}),e(\"path\",{attrs:{d:\"M36 18c0-9.94-8.06-18-18-18\"}},[e(\"animateTransform\",{attrs:{attributeName:\"transform\",type:\"rotate\",from:\"0 18 18\",to:\"360 18 18\",dur:\"0.8s\",repeatCount:\"indefinite\"}})],1)])])])},[],!1,null,null,null).exports,s=a({name:\"dots\",props:{color:{type:String,default:\"#000\"},height:{type:Number,default:240},width:{type:Number,default:60}}},function(){var t=this.$createElement,e=this._self._c||t;return e(\"svg\",{attrs:{viewBox:\"0 0 120 30\",xmlns:\"http://www.w3.org/2000/svg\",fill:this.color,width:this.width,height:this.height}},[e(\"circle\",{attrs:{cx:\"15\",cy:\"15\",r:\"15\"}},[e(\"animate\",{attrs:{attributeName:\"r\",from:\"15\",to:\"15\",begin:\"0s\",dur:\"0.8s\",values:\"15;9;15\",calcMode:\"linear\",repeatCount:\"indefinite\"}}),e(\"animate\",{attrs:{attributeName:\"fill-opacity\",from:\"1\",to:\"1\",begin:\"0s\",dur:\"0.8s\",values:\"1;.5;1\",calcMode:\"linear\",repeatCount:\"indefinite\"}})]),e(\"circle\",{attrs:{cx:\"60\",cy:\"15\",r:\"9\",\"fill-opacity\":\"0.3\"}},[e(\"animate\",{attrs:{attributeName:\"r\",from:\"9\",to:\"9\",begin:\"0s\",dur:\"0.8s\",values:\"9;15;9\",calcMode:\"linear\",repeatCount:\"indefinite\"}}),e(\"animate\",{attrs:{attributeName:\"fill-opacity\",from:\"0.5\",to:\"0.5\",begin:\"0s\",dur:\"0.8s\",values:\".5;1;.5\",calcMode:\"linear\",repeatCount:\"indefinite\"}})]),e(\"circle\",{attrs:{cx:\"105\",cy:\"15\",r:\"15\"}},[e(\"animate\",{attrs:{attributeName:\"r\",from:\"15\",to:\"15\",begin:\"0s\",dur:\"0.8s\",values:\"15;9;15\",calcMode:\"linear\",repeatCount:\"indefinite\"}}),e(\"animate\",{attrs:{attributeName:\"fill-opacity\",from:\"1\",to:\"1\",begin:\"0s\",dur:\"0.8s\",values:\"1;.5;1\",calcMode:\"linear\",repeatCount:\"indefinite\"}})])])},[],!1,null,null,null).exports,u=a({name:\"bars\",props:{color:{type:String,default:\"#000\"},height:{type:Number,default:40},width:{type:Number,default:40}}},function(){var t=this.$createElement,e=this._self._c||t;return e(\"svg\",{attrs:{xmlns:\"http://www.w3.org/2000/svg\",viewBox:\"0 0 30 30\",height:this.height,width:this.width,fill:this.color}},[e(\"rect\",{attrs:{x:\"0\",y:\"13\",width:\"4\",height:\"5\"}},[e(\"animate\",{attrs:{attributeName:\"height\",attributeType:\"XML\",values:\"5;21;5\",begin:\"0s\",dur:\"0.6s\",repeatCount:\"indefinite\"}}),e(\"animate\",{attrs:{attributeName:\"y\",attributeType:\"XML\",values:\"13; 5; 13\",begin:\"0s\",dur:\"0.6s\",repeatCount:\"indefinite\"}})]),e(\"rect\",{attrs:{x:\"10\",y:\"13\",width:\"4\",height:\"5\"}},[e(\"animate\",{attrs:{attributeName:\"height\",attributeType:\"XML\",values:\"5;21;5\",begin:\"0.15s\",dur:\"0.6s\",repeatCount:\"indefinite\"}}),e(\"animate\",{attrs:{attributeName:\"y\",attributeType:\"XML\",values:\"13; 5; 13\",begin:\"0.15s\",dur:\"0.6s\",repeatCount:\"indefinite\"}})]),e(\"rect\",{attrs:{x:\"20\",y:\"13\",width:\"4\",height:\"5\"}},[e(\"animate\",{attrs:{attributeName:\"height\",attributeType:\"XML\",values:\"5;21;5\",begin:\"0.3s\",dur:\"0.6s\",repeatCount:\"indefinite\"}}),e(\"animate\",{attrs:{attributeName:\"y\",attributeType:\"XML\",values:\"13; 5; 13\",begin:\"0.3s\",dur:\"0.6s\",repeatCount:\"indefinite\"}})])])},[],!1,null,null,null).exports,l=a({name:\"vue-loading\",mixins:[r],props:{active:Boolean,programmatic:Boolean,container:[Object,Function,n],isFullPage:{type:Boolean,default:!0},transition:{type:String,default:\"fade\"},canCancel:Boolean,onCancel:{type:Function,default:function(){}},color:String,backgroundColor:String,opacity:Number,width:Number,height:Number,zIndex:Number,loader:{type:String,default:\"spinner\"}},data:function(){return{isActive:this.active}},components:{Spinner:o,Dots:s,Bars:u},beforeMount:function(){this.programmatic&&(this.container?(this.isFullPage=!1,this.container.appendChild(this.$el)):document.body.appendChild(this.$el))},mounted:function(){this.programmatic&&(this.isActive=!0),document.addEventListener(\"keyup\",this.keyPress)},methods:{cancel:function(){this.canCancel&&this.isActive&&(this.hide(),this.onCancel.apply(null,arguments))},hide:function(){var t=this;this.$emit(\"hide\"),this.$emit(\"update:active\",!1),this.programmatic&&(this.isActive=!1,setTimeout(function(){var e;t.$destroy(),void 0!==(e=t.$el).remove?e.remove():e.parentNode.removeChild(e)},150))},keyPress:function(t){27===t.keyCode&&this.cancel()}},watch:{active:function(t){this.isActive=t}},beforeDestroy:function(){document.removeEventListener(\"keyup\",this.keyPress)}},function(){var t=this,e=t.$createElement,i=t._self._c||e;return i(\"transition\",{attrs:{name:t.transition}},[i(\"div\",{directives:[{name:\"show\",rawName:\"v-show\",value:t.isActive,expression:\"isActive\"}],staticClass:\"vld-overlay is-active\",class:{\"is-full-page\":t.isFullPage},style:{zIndex:this.zIndex},attrs:{tabindex:\"0\",\"aria-busy\":t.isActive,\"aria-label\":\"Loading\"}},[i(\"div\",{staticClass:\"vld-background\",style:{background:this.backgroundColor,opacity:this.opacity},on:{click:function(e){return e.preventDefault(),t.cancel(e)}}}),i(\"div\",{staticClass:\"vld-icon\"},[t._t(\"before\"),t._t(\"default\",[i(t.loader,{tag:\"component\",attrs:{color:t.color,width:t.width,height:t.height}})]),t._t(\"after\")],2)])])},[],!1,null,null,null).exports,c=function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return{show:function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:e,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:i,a=Object.assign({},e,n,{programmatic:!0}),o=new(t.extend(l))({el:document.createElement(\"div\"),propsData:a}),s=Object.assign({},i,r);return Object.keys(s).map(function(t){o.$slots[t]=s[t]}),o}}};i(0);l.install=function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},n=c(t,e,i);t.$loading=n,t.prototype.$loading=n};e.default=l}]).default});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loading-overlay/dist/vue-loading.min.js\n// module id = ZZvs\n// module chunks = 0 1 2 3 5 6 7 8 9 10 11 12 13 14 23 26 27 28 29 30 31 32 33 34 35 36 37 38","module.exports = { \"default\": require(\"core-js/library/fn/object/get-own-property-names\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/core-js/object/get-own-property-names.js\n// module id = aFK5\n// module chunks = 6","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \".circle[data-v-29844c72]{width:.4rem;height:.4rem;border-radius:50%;display:inline-block}\", \"\", {\"version\":3,\"sources\":[\"C:/Users/atom/Desktop/ATOM Sync/extralab_75000/extralab_cl25092019/src/components/obrada/BadgeColumn.vue\"],\"names\":[],\"mappings\":\"AACA,yBACE,YAAc,AACd,aAAe,AACf,kBAAmB,AACnB,oBAAsB,CACvB\",\"file\":\"BadgeColumn.vue\",\"sourcesContent\":[\"\\n.circle[data-v-29844c72] {\\n  width: 0.4rem;\\n  height: 0.4rem;\\n  border-radius: 50%;\\n  display: inline-block;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader?{\"minimize\":true,\"sourceMap\":true}!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-29844c72\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/sass-loader/lib/loader.js?{\"sourceMap\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/components/obrada/BadgeColumn.vue\n// module id = ctRa\n// module chunks = 6 15 24 44","var interpretacija = require(\"./interpretacija\");\r\n\r\nmodule.exports = {\r\n  Interpretation: function(test, result, jedinica, dref, gref, site, interp, extend, spec) {\r\n   \r\n    var rezultat = result.trim()\r\n\r\n    switch (interp) {\r\n     case \"none\":\r\n        return [test, rezultat, interpretacija.None(rezultat, dref, gref)[0], jedinica, \"/\", interpretacija.None(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"A\":\r\n        return [test, rezultat, interpretacija.Standard(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.Standard(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"ogtt\":        \r\n        if(dref == \"0\" && gref == \"0\"){\r\n          var reference = \"/\"\r\n        }else{\r\n          var reference = dref + \" - \" + gref\r\n        }\r\n        return [test, rezultat, interpretacija.Standard(rezultat, dref, gref)[0], jedinica, reference, interpretacija.Standard(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"insul\":\r\n        if(dref == \"0\" && gref == \"0\"){\r\n          var reference = \"/\"\r\n        }else{\r\n          var reference = dref + \" - \" + gref\r\n        }\r\n        return [test, rezultat, interpretacija.Standard(rezultat, dref, gref)[0], jedinica, reference, interpretacija.Standard(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"less\":\r\n        if(dref === gref){\r\n          return [test, rezultat, interpretacija.Less(rezultat, dref, gref)[0], jedinica, \" < \" + gref, interpretacija.Less(rezultat, dref, gref)[1], extend];  \r\n        }else{\r\n          return [test, rezultat, interpretacija.Less(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.Less(rezultat, dref, gref)[1], extend];\r\n        }                \r\n        break; \r\n      case \"infekc\":\r\n        return [test, rezultat, interpretacija.Infekcija(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.Infekcija(rezultat, dref, gref)[1], extend];             \r\n        break; \r\n      case \"grt\":\r\n        return [test, rezultat, interpretacija.Greater(rezultat, dref, gref)[0], jedinica, \" > \" + gref, interpretacija.Greater(rezultat, dref, gref)[1], extend];        \r\n        break; \r\n      case \"grte\":\r\n        return [test, rezultat, interpretacija.GreaterEqual(rezultat, dref, gref)[0], jedinica, \" ≥ \" + gref, interpretacija.GreaterEqual(rezultat, dref, gref)[1], extend];        \r\n        break;  \r\n      case \"neg\":\r\n        return [test, rezultat, interpretacija.Negativan(rezultat, dref, gref)[0], jedinica, \"negativan\", interpretacija.Negativan(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"reakt\":\r\n        return [test, rezultat, interpretacija.Reaktivan(rezultat, dref, gref)[0], jedinica, \"negativan\", interpretacija.Reaktivan(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"norm\":\r\n        return [test, rezultat, interpretacija.Normalan(rezultat, dref, gref)[0], jedinica, \"normalna\", interpretacija.Normalan(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"norma\":\r\n        return [test, rezultat, interpretacija.Normalan(rezultat, dref, gref)[0], jedinica, \"normalan\", interpretacija.Normalan(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"ured\":\r\n        return [test, rezultat, interpretacija.Uredan(rezultat, dref, gref)[0], jedinica, \"uredna\", interpretacija.Uredan(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"plus\":\r\n        return [test, rezultat, interpretacija.Plus(rezultat, dref, gref)[0], jedinica, \"+ + +\", interpretacija.Plus(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"morf\":\r\n        return [test, rezultat, interpretacija.Morf(rezultat, dref, gref)[0], jedinica, gref, interpretacija.Morf(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"titar\":\r\n          return [test, rezultat, interpretacija.Titar(rezultat, dref, gref)[0], jedinica, \"< \" + dref + \":\" + gref, interpretacija.Titar(rezultat, dref, gref)[1], extend];\r\n          break;\r\n      case \"tsh\":\r\n        return [test, rezultat, interpretacija.TSH(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.TSH(rezultat, dref, gref)[1], extend];\r\n        break; \r\n      case \"trg\":      \r\n        return [test, rezultat, interpretacija.TRG(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.TRG(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"hol\":      \r\n        return [test, rezultat, interpretacija.HOL(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.HOL(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"hdl\":      \r\n        return [test, rezultat, interpretacija.HDL(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.HDL(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"ldl\":      \r\n        return [test, rezultat, interpretacija.LDL(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.LDL(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"fpsa\":      \r\n        return [test, rezultat, interpretacija.fPSA(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.fPSA(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"sediment\":\r\n        return [test, rezultat, interpretacija.Sedimentacija(rezultat, dref, gref)[0], jedinica, \"< \" + gref, interpretacija.Sedimentacija(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"bistar\":\r\n        return [test, rezultat, interpretacija.Bistar(rezultat, dref, gref)[0], jedinica, \"bistar\", interpretacija.Bistar(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"boja\":\r\n        return [test, rezultat, interpretacija.Boja(rezultat, dref, gref)[0], jedinica, \"svjetlo žut\", interpretacija.Boja(rezultat, dref, gref)[1], extend];\r\n        break;      \r\n      case \"nesto\":\r\n        return [test, rezultat, interpretacija.Nesto(rezultat, dref, gref)[0], jedinica, \"nešto\", interpretacija.Nesto(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"exists\":\r\n        return [test, rezultat, interpretacija.Exists(rezultat, dref, gref)[0], jedinica, \" \", interpretacija.Exists(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"blst\":\r\n        return [test, rezultat, interpretacija.Blasti(rezultat, dref, gref)[0], jedinica, gref, interpretacija.Blasti(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"leu\":      \r\n        return [test, rezultat, interpretacija.LeuErc(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.LeuErc(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"spec\":      \r\n        return [test, rezultat, interpretacija.Specific(rezultat, dref, gref)[0], jedinica, spec, interpretacija.Specific(rezultat, dref, gref)[1], extend];\r\n        break;      \r\n      default:\r\n        return [test, rezultat, interpretacija.None(rezultat, dref, gref)[0], jedinica, \"/\", interpretacija.None(rezultat, dref, gref)[1], extend];\r\n        break;\r\n    }\r\n  }\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/obrada/functions/reference.js","require('../../modules/es6.object.get-own-property-names');\nvar $Object = require('../../modules/_core').Object;\nmodule.exports = function getOwnPropertyNames(it) {\n  return $Object.getOwnPropertyNames(it);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/fn/object/get-own-property-names.js\n// module id = gAsd\n// module chunks = 6","export default {\r\n  hex2rgb(hex, opacity) {\r\n    hex = (hex + \"\").trim();\r\n\r\n    let rgb = null;\r\n    let match = hex.match(/^#?(([0-9a-zA-Z]{3}){1,3})$/);\r\n\r\n    if (!match) {\r\n      return null;\r\n    }\r\n\r\n    rgb = {};\r\n\r\n    hex = match[1];\r\n\r\n    if (hex.length === 6) {\r\n      rgb.r = parseInt(hex.substring(0, 2), 16);\r\n      rgb.g = parseInt(hex.substring(2, 4), 16);\r\n      rgb.b = parseInt(hex.substring(4, 6), 16);\r\n    } else if (hex.length === 3) {\r\n      rgb.r = parseInt(hex.substring(0, 1) + hex.substring(0, 1), 16);\r\n      rgb.g = parseInt(hex.substring(1, 2) + hex.substring(1, 2), 16);\r\n      rgb.b = parseInt(hex.substring(2, 3) + hex.substring(2, 3), 16);\r\n    }\r\n\r\n    rgb.css = \"rgb\" + (opacity ? \"a\" : \"\") + \"(\";\r\n    rgb.css += rgb.r + \",\" + rgb.g + \",\" + rgb.b;\r\n    rgb.css += (opacity ? \",\" + opacity : \"\") + \")\";\r\n\r\n    return rgb;\r\n  }\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/utils.js","// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)\nvar $keys = require('./_object-keys-internal');\nvar hiddenKeys = require('./_enum-bug-keys').concat('length', 'prototype');\n\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return $keys(O, hiddenKeys);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_object-gopn.js\n// module id = n0T6\n// module chunks = 6","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"collapse-page\"},[(_vm.show)?_c('div',{staticClass:\"flex md12\"},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.main && _vm.pdf),expression:\"!main && pdf\"}]},[_c('div',{staticClass:\"btn-container\"},[_c('button',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.verificiran),expression:\"verificiran\"}],staticClass:\"btn btn-secondary btn-sm\",on:{\"click\":function($event){$event.preventDefault();_vm.Nazad()}}},[_c('span',{staticClass:\"fa fa-step-backward\"}),_vm._v(\"\\n            \"+_vm._s(' NAZAD')+\"\\n          \")]),_vm._v(\" \"),_c('button',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.verificiran),expression:\"!verificiran\"}],staticClass:\"btn btn-secondary-danger btn-sm\",on:{\"click\":function($event){$event.preventDefault();_vm.Nazad()}}},[_c('span',{staticClass:\"fa fa-step-backward\"}),_vm._v(\"\\n            \"+_vm._s(' NAZAD')+\"\\n          \")]),_vm._v(\" \"),_c('button',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.email_button && _vm.verificiran),expression:\"email_button && verificiran\"}],staticClass:\"btn btn-secondary btn-sm pull-right\",attrs:{\"disabled\":!_vm.Email(_vm.email)},on:{\"click\":function($event){$event.preventDefault();_vm.MailDialog()}}},[_c('span',{staticClass:\"glyphicon glyphicon-send\"}),_vm._v(\"\\n            \"+_vm._s(' Pošalji')+\"\\n          \")]),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.email_button && _vm.verificiran),expression:\"email_button && verificiran\"}],staticClass:\"form-group with-icon-left pull-right\"},[_c('div',{staticClass:\"input-group\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.email),expression:\"email\"}],attrs:{\"size\":\"40\",\"id\":\"input-icon-left\",\"name\":\"input-icon-left\",\"title\":\" \",\"required\":\"\"},domProps:{\"value\":(_vm.email)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.email=$event.target.value}}}),_vm._v(\" \"),_c('i',{staticClass:\"fa fa-envelope-o icon-left input-icon\"}),_vm._v(\" \"),_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"input-icon-left\"}},[_vm._v(_vm._s('Email adresa'))]),_vm._v(\" \"),_c('i',{staticClass:\"bar\"})])])]),_vm._v(\" \"),_c('hr'),_vm._v(\" \"),_c('div',{attrs:{\"id\":\"pdf-container\"}})]),_vm._v(\" \"),_c('vuestic-widget',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.main),expression:\"main\"}],attrs:{\"headerText\":_vm.header,\"pagination\":_vm.pagination,\"main\":_vm.main,\"data_pid\":Number(_vm.data_pid),\"data_length\":Number(_vm.data_length),\"rezultati_length\":_vm.Results.length,\"spol\":_vm.data_spol,\"data_min\":Number(_vm.data_min),\"datum\":_vm.query_date,\"today\":_vm.today_date,\"forward_disabled\":_vm.forward_disabled,\"backward_disabled\":_vm.backward_disabled}},[_c('vuestic-accordion-obrada',_vm._l((_vm.uzorci),function(uzorak){return _c('vuestic-collapse-obrada',{directives:[{name:\"show\",rawName:\"v-show\",value:(!uzorak.removed),expression:\"!uzorak.removed\"}],key:uzorak.sid,attrs:{\"id\":uzorak.sid,\"sample\":uzorak}},[_c('span',{attrs:{\"slot\":\"header\",\"id\":uzorak.sid},slot:\"header\"},[_vm._v(_vm._s(uzorak.sid))]),_vm._v(\" \"),_c('div',{attrs:{\"slot\":\"body\"},slot:\"body\"},[_c('div',{staticStyle:{\"line-height\":\"10px\"}},[_vm._v(\" \")]),_vm._v(\" \"),(uzorak.tip.includes('Mikrobiologija'))?_c('div',{staticClass:\"va-row\"},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.show_table),expression:\"show_table\"}],staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped first-td-padding\"},[_c('thead',[_c('tr',{attrs:{\"align\":\"middle\"}},[(uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN')?_c('td'):_vm._e(),_vm._v(\" \"),_c('td',[_vm._v(_vm._s('ANALIZA'))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s('REZULTAT'))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s('JEDINICA'))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s('REFERENCE'))]),_vm._v(\" \"),(uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN')?_c('td'):_vm._e(),_vm._v(\" \"),(uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN' && _vm.MicrobiologyScenario != 'MAIBPoR')?_c('td',[_vm._v(_vm._s('PONOVI'))]):_vm._e(),_vm._v(\" \"),(_vm.MicrobiologyScenario === 'MAIBPoR')?_c('td',{staticStyle:{\"text-transform\":\"none\"}},[_vm._v(_vm._s('Bakterije'))]):_vm._e(),_vm._v(\" \"),_c('td')])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.rezultati),function(test,index){return _c('tr',{directives:[{name:\"show\",rawName:\"v-show\",value:(index < 1),expression:\"index < 1\"}],key:test.labassay_id,class:{\n                          'table-danger': (test.rezultat_m.length && test.rezultat_m[0].pozitivan), \n                          'table-success': (test.rezultat_m.length && test.rezultat_m[0].negativan),\n                          'table-warning': false\n                        },attrs:{\"align\":\"middle\"}},[(uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN')?_c('td',[(uzorak.status === 'ZAPRIMLJEN')?_c('button',{staticClass:\"btn btn-secondary-danger btn-micro\",staticStyle:{\"padding\":\"0.4px\",\"padding-left\":\"2px\"},on:{\"click\":function($event){$event.preventDefault();_vm.MicroResultSelect($event)}}},[_c('i',{staticClass:\"fa fa-bug\",on:{\"click\":function($event){$event.preventDefault();_vm.MicroResultSelect($event)}}})]):_vm._e(),_vm._v(\" \"),(uzorak.status != 'ZAPRIMLJEN')?_c('button',{staticClass:\"btn btn-secondary-danger btn-micro\",staticStyle:{\"padding\":\"0.6px\",\"padding-right\":\"1px\",\"padding-left\":\"1.2px\"},on:{\"click\":function($event){$event.preventDefault();_vm.ResetSample($event)}}},[_c('i',{staticClass:\"fa fa-backward\",on:{\"click\":function($event){$event.preventDefault();_vm.ResetSample($event)}}})]):_vm._e()]):_vm._e(),_vm._v(\" \"),_c('td',{attrs:{\"title\":test.analit}},[_c('span',[_vm._v(_vm._s(test.ime))])]),_vm._v(\" \"),(test.rezultat_m.length > 0)?_c('td',[_c('button',{staticClass:\"btn btn-primary btn-micro\",attrs:{\"id\":test.labassay_id},on:{\"click\":function($event){$event.preventDefault();_vm.OpenMicro($event, test)}}},[_c('span',{staticClass:\"glyphicon glyphicon-search\",attrs:{\"id\":test.labassay_id}}),_vm._v(\"\\n                            \"+_vm._s('VIŠE')+\"\\n                          \")])]):_vm._e(),_vm._v(\" \"),(test.rezultat_m.length < 1)?_c('td',[_c('button',{staticClass:\"btn btn-pale btn-micro\",attrs:{\"id\":test.labassay_id}},[_c('span',{staticClass:\"glyphicon glyphicon-ban-circle\",attrs:{\"id\":test.labassay_id}}),_vm._v(\"\\n                            \"+_vm._s('VIŠE')+\"\\n                          \")])]):_vm._e(),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(test.unit))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s('/'))]),_vm._v(\" \"),(uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN')?_c('td',[_c('i',{staticClass:\"glyphicon glyphicon-stats\",staticStyle:{\"font-size\":\"15px\",\"color\":\"#f7cc36\",\"opacity\":\"0\"},attrs:{\"id\":\"reference\",\"title\":\" \"}})]):_vm._e(),_vm._v(\" \"),(uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN' && _vm.MicrobiologyScenario != 'MAIBPoR')?_c('td',[_c('button',{staticClass:\"btn btn-pale btn-micro\"},[_c('span',{staticClass:\"glyphicon glyphicon-ban-circle\"})])]):_vm._e(),_vm._v(\" \"),(_vm.MicrobiologyScenario === 'MAIBPoR')?_c('td',[_c('button',{staticClass:\"btn btn-primary btn-micro\",on:{\"click\":function($event){$event.preventDefault();_vm.OpenMicroSelect($event, test)}}},[_c('span',{staticClass:\"fa fa-bug\"})])]):_vm._e(),_vm._v(\" \"),_c('td',[_c('i',{class:{'fa fa-exclamation-triangle icon-right input-icon error-icon' : false},on:{\"click\":function($event){$event.preventDefault();_vm.Exclamation(test)}}}),_vm._v(\" \"),_c('i',{class:{'fa fa-check success-icon icon-right input-icon' : false}})])])}))])])]):_vm._e(),_vm._v(\" \"),(!uzorak.tip.includes('Mikrobiologija'))?_c('div',{staticClass:\"va-row\"},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.show_table),expression:\"show_table\"}],staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped first-td-padding\"},[_c('thead',[_c('tr',{attrs:{\"align\":\"middle\"}},[(uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN')?_c('td'):_vm._e(),_vm._v(\" \"),_c('td',[_vm._v(_vm._s('ANALIZA'))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s('REZULTAT'))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s('JEDINICA'))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s('REFERENCE'))]),_vm._v(\" \"),(uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN')?_c('td'):_vm._e(),_vm._v(\" \"),(uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN' && _vm.calculated)?_c('td',[_vm._v(_vm._s('AKCIJA'))]):_vm._e(),_vm._v(\" \"),(uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN')?_c('td',[_vm._v(_vm._s('PONOVI'))]):_vm._e(),_vm._v(\" \"),_c('td')])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.rezultati),function(test){return _c('tr',{key:test.labassay_id,class:{\n                          'table-danger': _vm.Interpretacija(test.analit, test.rezultat, test.unit, test.dRef, test.gRef, _vm.$store.state.site, test.interp, test.extend, _vm.spec)[5] === 'Red' && !test.multidata, \n                          'table-success': _vm.Interpretacija(test.analit, test.rezultat, test.unit, test.dRef, test.gRef, _vm.$store.state.site, test.interp, test.extend, _vm.spec)[5] === 'Green' && !test.multidata,\n                          'table-warning': _vm.Interpretacija(test.analit, test.rezultat, test.unit, test.dRef, test.gRef, _vm.$store.state.site, test.interp, test.extend, _vm.spec)[5] === 'Yellow' && !test.multidata\n                        },attrs:{\"align\":\"middle\"}},[(uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN')?_c('td',[(!test.multidata)?_c('i',{staticClass:\"glyphicon glyphicon-object-align-bottom\",staticStyle:{\"color\":\"#4ae387\"},on:{\"click\":function($event){$event.preventDefault();_vm.SelectAnalyser(test)}}}):_vm._e(),_vm._v(\" \"),(test.multidata)?_c('span',{staticClass:\"glyphicon glyphicon-object-align-bottom\",staticStyle:{\"color\":\"#d9d9d9\"}}):_vm._e()]):_vm._e(),_vm._v(\" \"),_c('td',{attrs:{\"title\":test.analit}},[_c('span',{on:{\"contextmenu\":function($event){_vm.LabAssayEval($event, test)},\"click\":function($event){$event.preventDefault();_vm.Evaluation(test)}}},[_vm._v(_vm._s(test.ime))])]),_vm._v(\" \"),(!test.multidata)?_c('td',[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.edit == false),expression:\"test.edit == false\"}],staticStyle:{\"display\":\"inline\",\"font-size\":\"14px\",\"line-height\":\"4.5px\"}},[_c('label',[_c('strong',[_vm._v(_vm._s(test.rezultat))])])]),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.edit == true),expression:\"test.edit == true\"}],staticStyle:{\"display\":\"inline\",\"line-height\":\"5px\"}},[(test.select_options != undefined)?_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(test.rezultat),expression:\"test.rezultat\"}],staticStyle:{\"width\":\"110px\"},on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.$set(test, \"rezultat\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},_vm._l((test.select_options),function(option){return _c('option',{key:option},[_vm._v(_vm._s(option))])})):_vm._e()]),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.edit == true),expression:\"test.edit == true\"}],staticStyle:{\"display\":\"inline\"}},[(test.select_options === undefined)?_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(test.rezultat),expression:\"test.rezultat\"}],staticStyle:{\"width\":\"110px\",\"font-size\":\"12px\",\"line-height\":\"7px\"},domProps:{\"value\":(test.rezultat)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(test, \"rezultat\", $event.target.value)}}}):_vm._e()]),_vm._v(\" \"),_c('sup',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.vise > 2),expression:\"test.vise > 2\"}],on:{\"click\":function($event){$event.preventDefault();_vm.GetResults(test, uzorak.status)}}},[_c('i',{staticClass:\"fa fa-star\",staticStyle:{\"font-size\":\"5px\",\"color\":\"#e34a4a\"},attrs:{\"id\":\"star\",\"title\":\" \"}})]),_vm._v(\" \"),_c('sup',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.vise < 3),expression:\"test.vise < 3\"}]},[_c('i',{staticClass:\"fa fa-star-o\",staticStyle:{\"font-size\":\"5px\",\"opacity\":\"0\"},attrs:{\"id\":\"star\",\"title\":\" \"}})])]):_vm._e(),_vm._v(\" \"),(test.multidata && test.realizovan)?_c('td',[_c('button',{staticClass:\"btn btn-primary btn-micro\",attrs:{\"id\":test.labassay_id},on:{\"click\":function($event){$event.preventDefault();_vm.MultiGet($event, test.ime, test.analit, test.rezultat, test.odobren)}}},[_c('span',{staticClass:\"glyphicon glyphicon-search\",attrs:{\"id\":test.labassay_id},on:{\"click\":function($event){$event.preventDefault();_vm.MultiGet($event, test.ime, test.analit, test.rezultat, test.odobren)}}}),_vm._v(\"\\n                            \"+_vm._s('VIŠE')+\"\\n                          \")]),_vm._v(\" \"),_c('sup',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.multi_count > 2),expression:\"test.multi_count > 2\"}],on:{\"click\":function($event){$event.preventDefault();_vm.GetResultsMulti(test, uzorak.status)}}},[_c('i',{staticClass:\"fa fa-star\",staticStyle:{\"font-size\":\"5px\",\"color\":\"#e34a4a\"},attrs:{\"id\":\"star\",\"title\":\" \"}})]),_vm._v(\" \"),_c('sup',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.multi_count < 3),expression:\"test.multi_count < 3\"}]},[_c('i',{staticClass:\"fa fa-star-o\",staticStyle:{\"font-size\":\"5px\",\"opacity\":\"0\"},attrs:{\"id\":\"star\",\"title\":\" \"}})])]):_vm._e(),_vm._v(\" \"),(test.multidata && !test.realizovan)?_c('td',[_c('button',{staticClass:\"btn btn-warning btn-micro\",attrs:{\"id\":test.labassay_id},on:{\"click\":function($event){$event.preventDefault();_vm.MultiGet($event, test.ime, test.analit, test.rezultat, test.odobren)}}},[_c('span',{staticClass:\"glyphicon glyphicon-search\",attrs:{\"id\":test.labassay_id},on:{\"click\":function($event){$event.preventDefault();_vm.MultiGet($event, test.ime, test.analit, test.rezultat, test.odobren)}}}),_vm._v(\"\\n                            \"+_vm._s('VIŠE')+\"\\n                          \")]),_vm._v(\" \"),_c('sup',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.multi_count > 2),expression:\"test.multi_count > 2\"}],on:{\"click\":function($event){$event.preventDefault();_vm.GetResultsMulti(test, uzorak.status)}}},[_c('i',{staticClass:\"fa fa-star\",staticStyle:{\"font-size\":\"5px\",\"color\":\"#e34a4a\"},attrs:{\"id\":\"star\",\"title\":\" \"}})]),_vm._v(\" \"),_c('sup',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.multi_count < 3),expression:\"test.multi_count < 3\"}]},[_c('i',{staticClass:\"fa fa-star-o\",staticStyle:{\"font-size\":\"5px\",\"opacity\":\"0\"},attrs:{\"id\":\"star\",\"title\":\" \"}})])]):_vm._e(),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(test.unit))]),_vm._v(\" \"),(!test.multidata)?_c('td',[_vm._v(_vm._s(_vm.Interpretacija(test.analit, test.rezultat, test.unit, test.dRef, test.gRef, _vm.$store.state.site, test.interp, test.extend, _vm.spec)[4]))]):_vm._e(),_vm._v(\" \"),(test.multidata)?_c('td',[_vm._v(_vm._s('/'))]):_vm._e(),_vm._v(\" \"),(uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN')?_c('td',[(!test.multidata)?_c('i',{staticClass:\"glyphicon glyphicon-stats\",staticStyle:{\"font-size\":\"15px\",\"color\":\"#f7cc36\"},attrs:{\"id\":\"reference\",\"title\":\" \"},on:{\"click\":function($event){$event.preventDefault();_vm.Reference($event, test)}}}):_vm._e(),_vm._v(\" \"),(test.multidata)?_c('i',{staticClass:\"glyphicon glyphicon-stats\",staticStyle:{\"font-size\":\"15px\",\"color\":\"#f7cc36\",\"opacity\":\"0\"},attrs:{\"id\":\"reference\",\"title\":\" \"}}):_vm._e()]):_vm._e(),_vm._v(\" \"),(uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN' && _vm.calculated && !test.calculated)?_c('td',[_c('button',{staticClass:\"btn btn-pale btn-micro\"},[_c('span',{staticClass:\"glyphicon glyphicon-ban-circle\"})])]):_vm._e(),_vm._v(\" \"),(uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN' && _vm.calculated && test.calculated)?_c('td',[_c('button',{staticClass:\"btn btn-primary btn-micro\",attrs:{\"id\":test.test},on:{\"click\":function($event){$event.preventDefault();_vm.Calculate($event, test.labassay_id, test.ime, test.id)}}},[_c('span',{staticClass:\"fa fa-calculator\",attrs:{\"id\":test.test}})])]):_vm._e(),_vm._v(\" \"),(uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN' \n                          && (test.rezultat === '' || test.manual || test.calculated))?_c('td',[_c('button',{staticClass:\"btn btn-pale btn-micro\"},[_c('span',{staticClass:\"glyphicon glyphicon-ban-circle\"})])]):_vm._e(),_vm._v(\" \"),(uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN' \n                          && test.rezultat != '' && !test.manual && !test.calculated)?_c('td',[(!test.retest)?_c('button',{staticClass:\"btn btn-primary btn-micro\",attrs:{\"id\":test.test},on:{\"click\":function($event){$event.preventDefault();_vm.RetestEnable($event)}}},[_c('span',{staticClass:\"fa fa-refresh\",attrs:{\"id\":test.test}})]):_vm._e(),_vm._v(\" \"),(test.retest)?_c('button',{staticClass:\"btn btn-info btn-micro\",attrs:{\"id\":test.test},on:{\"click\":function($event){$event.preventDefault();_vm.RetestDisable($event)}}},[_c('span',{staticClass:\"glyphicon glyphicon-duplicate\",attrs:{\"id\":test.test}})]):_vm._e()]):_vm._e(),_vm._v(\" \"),_c('td',[_c('i',{class:{'fa fa-exclamation-triangle icon-right input-icon error-icon' : _vm.Interpretacija(test.analit, test.rezultat, test.unit, test.dRef, test.gRef, _vm.$store.state.site, test.interp, test.extend, _vm.spec)[5] === 'Red' && !test.multidata},on:{\"click\":function($event){$event.preventDefault();_vm.Exclamation(test)}}}),_vm._v(\" \"),_c('i',{class:{'fa fa-check success-icon icon-right input-icon' : _vm.Interpretacija(test.analit, test.rezultat, test.unit, test.dRef, test.gRef, _vm.$store.state.site, test.interp, test.extend, _vm.spec)[5] === 'Green' && !test.multidata}})])])}))])])]):_vm._e()])])})),_vm._v(\" \"),_c('div',{staticStyle:{\"min-height\":\"10px\"}}),_vm._v(\" \"),(_vm.verificiran)?_c('div',{staticClass:\"va-row\"},[_c('div',{staticClass:\"flex md12\"},[_c('vuestic-collapse-nalaz',{attrs:{\"final\":_vm.verificiran,\"final_pdf\":_vm.final_pdf,\"samples\":_vm.samples,\"pdf\":_vm.link,\"pacijent\":_vm.ime + ' ' + _vm.prezime}},[_c('span',{attrs:{\"slot\":\"header\"},slot:\"header\"},[_vm._v(\"Nalaz\")]),_vm._v(\" \"),_c('div',{attrs:{\"slot\":\"body\"},slot:\"body\"},[_c('div',{staticClass:\"va-row\"})])])],1)]):_vm._e(),_vm._v(\" \"),_c('div',[_c('hr')]),_vm._v(\" \"),_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-3\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-6\"},[_c('div',{staticClass:\"btn-container\"},[_c('button',{staticClass:\"btn btn-secondary btn-sm wizard-back pull-left\",on:{\"click\":function($event){$event.preventDefault();_vm.Povratak()}}},[_c('span',{staticClass:\"fa fa-backward\"}),_vm._v(\"\\n                \"+_vm._s(' POVRATAK')+\"\\n              \")]),_vm._v(\" \"),(_vm.partials_condition && !_vm.verificiran)?_c('button',{staticClass:\"btn btn-secondary-warning btn-sm wizard-back pull-right\",staticStyle:{\"text-transform\":\"none\",\"color\":\"#e34a4a\"},on:{\"click\":function($event){$event.preventDefault();_vm.Partials()}}},[_c('span',{staticClass:\"fa fa-file-pdf-o\",staticStyle:{\"color\":\"#e34a4a\"}}),_vm._v(\"\\n                \"+_vm._s(' Djelimični nalaz')+\"\\n              \")]):_vm._e()])])])],1),_vm._v(\" \"),_c('vuestic-modal-multi',{ref:\"largeModalMulti\",attrs:{\"show\":_vm.show,\"sample\":_vm.sample,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(_vm._s(_vm.naslov))]),_vm._v(\" \"),_c('div',{staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped first-td-padding\"},[_c('thead',[_c('tr',{attrs:{\"align\":\"middle\"}},[_c('td',{attrs:{\"width\":\"10%\"}}),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('ANALIT'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"30%\"}},[_vm._v(_vm._s('REZULTAT'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"10%\"}},[_vm._v(_vm._s('JEDINICA'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('REFERENCE'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"10%\"}})])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.analiti),function(test){return _c('tr',{key:test.labID,class:{\n                    'table-danger': _vm.Interpretacija(test.opis, test.rezultat, test.jedinica, test.refd, test.refg, _vm.$store.state.site, test.interp, test.extend, _vm.spec)[5] === 'Red' && !test.rezultat_multiple.length, \n                    'table-success': _vm.Interpretacija(test.opis, test.rezultat, test.jedinica, test.refd, test.refg, _vm.$store.state.site, test.interp, test.extend, _vm.spec)[5] === 'Green' && !test.rezultat_multiple.length, \n                    'table-warning': _vm.Interpretacija(test.opis, test.rezultat, test.jedinica, test.refd, test.refg, _vm.$store.state.site, test.interp, test.extend, _vm.spec)[5] === 'Yellow' && !test.rezultat_multiple.length                                  \n                  },attrs:{\"align\":\"middle\"}},[(test.flag != '')?_c('td',[_vm._v(_vm._s(test.flag))]):_vm._e(),_vm._v(\" \"),(test.flag === '')?_c('td',[_vm._v(\" \")]):_vm._e(),_vm._v(\" \"),_c('td',{attrs:{\"title\":test.opis}},[_vm._v(_vm._s(test.naziv))]),_vm._v(\" \"),_c('td',{attrs:{\"id\":test.analit}},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.edit == false),expression:\"test.edit == false\"}]},[_c('label',[_c('strong',[_vm._v(_vm._s(test.rezultat))])])]),_vm._v(\" \"),(test.select_options != undefined && (test.kod === 's03' || test.kod === 's04' || test.kod === 's08' || test.kod === 's09'))?_c('select',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.edit == true),expression:\"test.edit == true\"},{name:\"model\",rawName:\"v-model\",value:(test.rezultat_multiple),expression:\"test.rezultat_multiple\"}],staticStyle:{\"min-width\":\"200px\"},attrs:{\"multiple\":\"\",\"size\":test.select_options.length},on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.$set(test, \"rezultat_multiple\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},_vm._l((test.select_options),function(option){return _c('option',{key:option},[_vm._v(_vm._s(option))])})):_vm._e(),_vm._v(\" \"),(test.select_options != undefined && (test.kod != 's03' && test.kod != 's04' && test.kod != 's08' && test.kod != 's09'))?_c('select',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.edit == true),expression:\"test.edit == true\"},{name:\"model\",rawName:\"v-model\",value:(test.rezultat),expression:\"test.rezultat\"}],staticStyle:{\"width\":\"200px\"},on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.$set(test, \"rezultat\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},_vm._l((test.select_options),function(option){return _c('option',{key:option},[_vm._v(_vm._s(option))])})):_vm._e(),_vm._v(\" \"),(test.select_options === undefined)?_c('input',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.edit == true),expression:\"test.edit == true\"},{name:\"model\",rawName:\"v-model\",value:(test.rezultat),expression:\"test.rezultat\"}],staticStyle:{\"width\":\"200px\"},domProps:{\"value\":(test.rezultat)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(test, \"rezultat\", $event.target.value)}}}):_vm._e()]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(_vm.Interpretacija(test.opis, test.rezultat, test.jedinica, test.refd, test.refg, _vm.$store.state.site, test.interp, test.extend, _vm.spec)[3]))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(_vm.Interpretacija(test.opis, test.rezultat, test.jedinica, test.refd, test.refg, _vm.$store.state.site, test.interp, test.extend, _vm.spec)[4]))]),_vm._v(\" \"),_c('td',[_c('i',{class:{'fa fa-exclamation-triangle icon-right input-icon error-icon' : _vm.Interpretacija(test.opis, test.rezultat, test.jedinica, test.refd, test.refg, _vm.$store.state.site, test.interp, test.extend, _vm.spec)[5] === 'Red' && !test.rezultat_multiple.length},on:{\"click\":function($event){$event.preventDefault();_vm.ExclamationMulti(test)}}}),_vm._v(\" \"),_c('i',{class:{'fa fa-check success-icon icon-right input-icon' : _vm.Interpretacija(test.opis, test.rezultat, test.jedinica, test.refd, test.refg, _vm.$store.state.site, test.interp, test.extend, _vm.spec)[5] === 'Green' && !test.rezultat_multiple.length}})])])}))])])]),_vm._v(\" \"),_c('vuestic-modal-micro-reset',{ref:\"staticModalResetSample\",attrs:{\"show\":_vm.show,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',{staticStyle:{\"color\":\"#acb5be\"}},[_vm._v(_vm._s('Brisanje rezultata: '))]),_vm._v(\" \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(_vm.CurrentTest))])]),_vm._v(\" \"),_c('div',[_c('h5',[_vm._v(_vm._s('Jeste li sigurni da želite obrisati rezultat?'))])])]),_vm._v(\" \"),_c('vuestic-modal-micro-bactery',{ref:\"staticModalMicroBacterySelect\",attrs:{\"show\":_vm.show,\"large\":true,\"sample\":_vm.sample,\"select\":true,\"update\":!_vm.ShowAntibiotics && !_vm.ShowBacteries && _vm.MicrobiologyScenario === 'MAIBPoR',\"povratak\":_vm.ShowAntibiotics || _vm.ShowBacteries,\"empty\":_vm.TemporaryAntibiotics.length > 0 || _vm.TemporaryBacteriesAdd.length > 0,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[(!_vm.ShowAntibiotics && !_vm.ShowBacteries)?_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',{staticStyle:{\"color\":\"#acb5be\"}},[_vm._v(_vm._s('Rezultat analize: '))]),_vm._v(\" \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(_vm.CurrentTest))])]):_vm._e(),_vm._v(\" \"),(_vm.ShowAntibiotics && !_vm.ShowBacteries)?_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',{staticStyle:{\"color\":\"#acb5be\"}},[_vm._v(_vm._s('Antibiotici | '))]),_vm._v(\" \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"Izbornik\"))])]):_vm._e(),_vm._v(\" \"),(!_vm.ShowAntibiotics && _vm.ShowBacteries)?_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',{staticStyle:{\"color\":\"#acb5be\"}},[_vm._v(_vm._s('Bakterije | '))]),_vm._v(\" \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"Izbornik\"))])]):_vm._e(),_vm._v(\" \"),_c('div',[(_vm.show_table)?_c('div',{staticClass:\"row\"},[(_vm.MicrobiologyScenario === 'MAIBPoR' && _vm.ShowBacteries && !_vm.ShowAntibiotics)?_c('div',{staticClass:\"col-md-1\"}):_vm._e(),_vm._v(\" \"),(_vm.MicrobiologyScenario === 'MAIBPoR' && _vm.ShowBacteries && !_vm.ShowAntibiotics)?_c('div',{staticClass:\"col-md-10\"},[(_vm.TemporaryBacteries.length)?_c('div',{staticClass:\"col-md-12\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-4\"},_vm._l((_vm.filteredBacteries(1, 3)),function(bactery){return _c('div',{key:bactery._id,staticClass:\"form-check abc-checkbox abc-checkbox-primary\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(bactery.chosen),expression:\"bactery.chosen\"}],staticClass:\"form-check-input\",attrs:{\"id\":bactery._id,\"type\":\"checkbox\",\"disabled\":bactery.disabled},domProps:{\"checked\":Array.isArray(bactery.chosen)?_vm._i(bactery.chosen,null)>-1:(bactery.chosen)},on:{\"click\":function($event){_vm.AddBacteries(bactery)},\"change\":function($event){var $$a=bactery.chosen,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(bactery.chosen=$$a.concat([$$v]))}else{$$i>-1&&(bactery.chosen=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.$set(bactery, \"chosen\", $$c)}}}}),_vm._v(\" \"),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":bactery._id}},[(!bactery.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(bactery.opis))]):_vm._e(),_vm._v(\" \"),(bactery.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#4ae387\"}},[_vm._v(_vm._s(bactery.opis))]):_vm._e()])])})),_vm._v(\" \"),_c('div',{staticClass:\"col-md-4\"},_vm._l((_vm.filteredBacteries(2, 3)),function(bactery){return _c('div',{key:bactery._id,staticClass:\"form-check abc-checkbox abc-checkbox-primary\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(bactery.chosen),expression:\"bactery.chosen\"}],staticClass:\"form-check-input\",attrs:{\"id\":bactery._id,\"type\":\"checkbox\",\"disabled\":bactery.disabled},domProps:{\"checked\":Array.isArray(bactery.chosen)?_vm._i(bactery.chosen,null)>-1:(bactery.chosen)},on:{\"click\":function($event){_vm.AddBacteries(bactery)},\"change\":function($event){var $$a=bactery.chosen,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(bactery.chosen=$$a.concat([$$v]))}else{$$i>-1&&(bactery.chosen=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.$set(bactery, \"chosen\", $$c)}}}}),_vm._v(\" \"),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":bactery._id}},[(!bactery.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(bactery.opis))]):_vm._e(),_vm._v(\" \"),(bactery.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#4ae387\"}},[_vm._v(_vm._s(bactery.opis))]):_vm._e()])])})),_vm._v(\" \"),_c('div',{staticClass:\"col-md-4\"},_vm._l((_vm.filteredBacteries(3, 3)),function(bactery){return _c('div',{key:bactery._id,staticClass:\"form-check abc-checkbox abc-checkbox-primary\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(bactery.chosen),expression:\"bactery.chosen\"}],staticClass:\"form-check-input\",attrs:{\"id\":bactery._id,\"type\":\"checkbox\",\"disabled\":bactery.disabled},domProps:{\"checked\":Array.isArray(bactery.chosen)?_vm._i(bactery.chosen,null)>-1:(bactery.chosen)},on:{\"click\":function($event){_vm.AddBacteries(bactery)},\"change\":function($event){var $$a=bactery.chosen,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(bactery.chosen=$$a.concat([$$v]))}else{$$i>-1&&(bactery.chosen=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.$set(bactery, \"chosen\", $$c)}}}}),_vm._v(\" \"),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":bactery._id}},[(!bactery.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(bactery.opis))]):_vm._e(),_vm._v(\" \"),(bactery.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#4ae387\"}},[_vm._v(_vm._s(bactery.opis))]):_vm._e()])])}))])]):_vm._e()]):_vm._e(),_vm._v(\" \"),(_vm.MicrobiologyScenario === 'MAIBPoR' && _vm.ShowAntibiotics && !_vm.ShowBacteries)?_c('div',{staticClass:\"col-md-1\"}):_vm._e(),_vm._v(\" \"),(_vm.MicrobiologyScenario === 'MAIBPoR' && _vm.ShowAntibiotics && !_vm.ShowBacteries)?_c('div',{staticClass:\"col-md-10\"},[(_vm.Antibiotics.length)?_c('div',{staticClass:\"col-md-12\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-4\"},_vm._l((_vm.filteredAntibiotics(1, 3)),function(antibiotik){return _c('div',{key:antibiotik._id,staticClass:\"form-check abc-checkbox abc-checkbox-primary\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(antibiotik.chosen),expression:\"antibiotik.chosen\"}],staticClass:\"form-check-input\",attrs:{\"id\":antibiotik._id,\"type\":\"checkbox\",\"disabled\":antibiotik.disabled},domProps:{\"checked\":Array.isArray(antibiotik.chosen)?_vm._i(antibiotik.chosen,null)>-1:(antibiotik.chosen)},on:{\"click\":function($event){_vm.AddAntibiotics(antibiotik)},\"change\":function($event){var $$a=antibiotik.chosen,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(antibiotik.chosen=$$a.concat([$$v]))}else{$$i>-1&&(antibiotik.chosen=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.$set(antibiotik, \"chosen\", $$c)}}}}),_vm._v(\" \"),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":antibiotik._id}},[(!antibiotik.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(antibiotik.opis))]):_vm._e(),_vm._v(\" \"),(antibiotik.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#4ae387\"}},[_vm._v(_vm._s(antibiotik.opis))]):_vm._e()])])})),_vm._v(\" \"),_c('div',{staticClass:\"col-md-4\"},_vm._l((_vm.filteredAntibiotics(2, 3)),function(antibiotik){return _c('div',{key:antibiotik._id,staticClass:\"form-check abc-checkbox abc-checkbox-primary\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(antibiotik.chosen),expression:\"antibiotik.chosen\"}],staticClass:\"form-check-input\",attrs:{\"id\":antibiotik._id,\"type\":\"checkbox\",\"disabled\":antibiotik.disabled},domProps:{\"checked\":Array.isArray(antibiotik.chosen)?_vm._i(antibiotik.chosen,null)>-1:(antibiotik.chosen)},on:{\"click\":function($event){_vm.AddAntibiotics(antibiotik)},\"change\":function($event){var $$a=antibiotik.chosen,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(antibiotik.chosen=$$a.concat([$$v]))}else{$$i>-1&&(antibiotik.chosen=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.$set(antibiotik, \"chosen\", $$c)}}}}),_vm._v(\" \"),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":antibiotik._id}},[(!antibiotik.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(antibiotik.opis))]):_vm._e(),_vm._v(\" \"),(antibiotik.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#4ae387\"}},[_vm._v(_vm._s(antibiotik.opis))]):_vm._e()])])})),_vm._v(\" \"),_c('div',{staticClass:\"col-md-4\"},_vm._l((_vm.filteredAntibiotics(3, 3)),function(antibiotik){return _c('div',{key:antibiotik._id,staticClass:\"form-check abc-checkbox abc-checkbox-primary\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(antibiotik.chosen),expression:\"antibiotik.chosen\"}],staticClass:\"form-check-input\",attrs:{\"id\":antibiotik._id,\"type\":\"checkbox\",\"disabled\":antibiotik.disabled},domProps:{\"checked\":Array.isArray(antibiotik.chosen)?_vm._i(antibiotik.chosen,null)>-1:(antibiotik.chosen)},on:{\"click\":function($event){_vm.AddAntibiotics(antibiotik)},\"change\":function($event){var $$a=antibiotik.chosen,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(antibiotik.chosen=$$a.concat([$$v]))}else{$$i>-1&&(antibiotik.chosen=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.$set(antibiotik, \"chosen\", $$c)}}}}),_vm._v(\" \"),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":antibiotik._id}},[(!antibiotik.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(antibiotik.opis))]):_vm._e(),_vm._v(\" \"),(antibiotik.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#4ae387\"}},[_vm._v(_vm._s(antibiotik.opis))]):_vm._e()])])}))])]):_vm._e()]):_vm._e(),_vm._v(\" \"),(_vm.MicrobiologyScenario === 'MAIBPoR' && !_vm.ShowAntibiotics && !_vm.ShowBacteries)?_c('div',{staticClass:\"col-md-1\"}):_vm._e(),_vm._v(\" \"),(_vm.MicrobiologyScenario === 'MAIBPoR' && !_vm.ShowAntibiotics && !_vm.ShowBacteries)?_c('div',{staticClass:\"col-md-10\"},[(_vm.SelectedBacteries.length)?_c('vuestic-tabs-bactery',{ref:\"tabs\",attrs:{\"names\":_vm.BacteryTabs,\"tab\":_vm.CurrentTab,\"id\":_vm.CurrentTab,\"prikazi\":_vm.sample.status != 'VERIFICIRAN' && _vm.sample.status != 'ODOBREN'}},_vm._l((_vm.SelectedBacteries),function(test){return _c('div',{key:test._id,attrs:{\"slot\":_vm.CurrentTab},slot:_vm.CurrentTab},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.opis === _vm.CurrentTab),expression:\"test.opis === CurrentTab\"}],staticClass:\"row\"},[_c('div',{staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped first-td-padding\"},[_c('thead',[_c('tr',{attrs:{\"align\":\"left\"}},[_c('td',{staticStyle:{\"text-transform\":\"none\"},attrs:{\"width\":\"30%\"}},[_vm._v(_vm._s(test.antibiogram.opis))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"10%\"}},[_vm._v(_vm._s(''))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(''))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(''))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(''))])])]),_vm._v(\" \"),_c('tbody',_vm._l((test.antibiogram.antibiotici),function(abtk){return _c('tr',{key:abtk._id,class:{'table-danger': false, 'table-success': false,'table-warning': false},attrs:{\"align\":\"left\"}},[_c('td',{attrs:{\"title\":abtk.opis}},[_vm._v(_vm._s(abtk.opis))]),_vm._v(\" \"),_c('td',[_c('bactery-radio-button',{attrs:{\"disabled\":_vm.sample.status === 'ODOBREN' || _vm.sample.status === 'VERIFICIRAN',\"label\":'',\"value\":'',\"id\":'' + test._id + abtk._id,\"name\":test._id + abtk._id},model:{value:(abtk.rezultat),callback:function ($$v) {_vm.$set(abtk, \"rezultat\", $$v)},expression:\"abtk.rezultat\"}})],1),_vm._v(\" \"),_c('td',[_c('postavke-radio-button',{attrs:{\"disabled\":_vm.sample.status === 'ODOBREN' || _vm.sample.status === 'VERIFICIRAN',\"label\":'Senzitivan',\"value\":'S',\"id\":'S' + test._id + abtk._id,\"name\":test._id + abtk._id},model:{value:(abtk.rezultat),callback:function ($$v) {_vm.$set(abtk, \"rezultat\", $$v)},expression:\"abtk.rezultat\"}})],1),_vm._v(\" \"),_c('td',[_c('postavke-radio-button',{attrs:{\"disabled\":_vm.sample.status === 'ODOBREN' || _vm.sample.status === 'VERIFICIRAN',\"label\":'Intermedijaran',\"value\":'I',\"id\":'I' + test._id + abtk._id,\"name\":test._id + abtk._id},model:{value:(abtk.rezultat),callback:function ($$v) {_vm.$set(abtk, \"rezultat\", $$v)},expression:\"abtk.rezultat\"}})],1),_vm._v(\" \"),_c('td',[_c('postavke-radio-button',{attrs:{\"disabled\":_vm.sample.status === 'ODOBREN' || _vm.sample.status === 'VERIFICIRAN',\"label\":'Rezistentan',\"value\":'R',\"id\":'R' + test._id + abtk._id,\"name\":test._id + abtk._id},model:{value:(abtk.rezultat),callback:function ($$v) {_vm.$set(abtk, \"rezultat\", $$v)},expression:\"abtk.rezultat\"}})],1)])}))])])])])})):_vm._e()],1):_vm._e(),_vm._v(\" \"),(_vm.MicrobiologyScenario === 'MANBNeR' || _vm.MicrobiologyScenario === 'MANBPoR' || _vm.MicrobiologyScenario === 'MAIBNeR')?_c('div',{staticClass:\"col-md-12\"},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.show_table),expression:\"show_table\"}],staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped first-td-padding\"},[_c('thead',[_c('tr',{attrs:{\"align\":\"left\"}},[_c('td',[_vm._v(_vm._s('REZULTAT'))])])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.rezultati),function(test,index){return _c('tr',{directives:[{name:\"show\",rawName:\"v-show\",value:(index < 1),expression:\"index < 1\"}],key:test.labassay_id,class:{\n                          'table-danger':  (test.rezultat_m.length && test.rezultat_m[0].pozitivan), \n                          'table-success':  (test.rezultat_m.length && test.rezultat_m[0].negativan),\n                          'table-warning': false\n                        },attrs:{\"align\":\"left\"}},[(_vm.sample.status != 'ODOBREN' &&  _vm.sample.status != 'VERIFICIRAN')?_c('td',[_c('div',{staticClass:\"form-group\"},[_c('div',{staticClass:\"input-group\"},[_c('textarea',{directives:[{name:\"model\",rawName:\"v-model\",value:(test.rezultat),expression:\"test.rezultat\"}],attrs:{\"type\":\"text\",\"id\":\"simple-textarea\",\"required\":\"\"},domProps:{\"value\":(test.rezultat)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(test, \"rezultat\", $event.target.value)}}}),_vm._v(\" \"),_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"simple-textarea\"}},[_vm._v(_vm._s(''))]),_vm._v(\" \"),_c('i',{staticClass:\"bar\"})])])]):_vm._e(),_vm._v(\" \"),(_vm.sample.status === 'ODOBREN' ||  _vm.sample.status === 'VERIFICIRAN')?_c('td',[_c('div',{staticClass:\"form-group\"},[_c('div',{staticClass:\"input-group\"},[_c('input',{attrs:{\"id\":\"input-icon-left\",\"title\":\" \",\"name\":\"input-icon-left\",\"disabled\":\"\"}}),_vm._v(\" \"),(test.rezultat.length)?_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"input-icon-left\"}},[_vm._v(_vm._s(test.rezultat))]):_vm._e(),_vm._v(\" \"),(!test.rezultat.length)?_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"input-icon-left\"}},[_vm._v(_vm._s(\"Nema podataka.\"))]):_vm._e(),_vm._v(\" \"),_c('i',{staticClass:\"bar\"})])])]):_vm._e()])}))])])]):_vm._e()]):_vm._e()])]),_vm._v(\" \"),_c('vuestic-modal-micro-bactery',{ref:\"staticModalMicroBactery\",attrs:{\"show\":_vm.show,\"large\":true,\"sample\":_vm.sample,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',{staticStyle:{\"color\":\"#acb5be\"}},[_vm._v(_vm._s('Rezultat analize: '))]),_vm._v(\" \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(_vm.CurrentTest))])]),_vm._v(\" \"),_c('div',[(_vm.show_table)?_c('div',{staticClass:\"row\"},[(true)?_c('div',{staticClass:\"col-md-12\"},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.show_table),expression:\"show_table\"}],staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped first-td-padding\"},[_c('thead',[_c('tr',{attrs:{\"align\":\"left\"}},[_c('td',[_vm._v(_vm._s('REZULTAT'))])])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.rezultati),function(test,index){return _c('tr',{directives:[{name:\"show\",rawName:\"v-show\",value:(index < 1),expression:\"index < 1\"}],key:test.labassay_id,class:{\n                          'table-danger':  (test.rezultat_m.length && test.rezultat_m[0].pozitivan), \n                          'table-success':  (test.rezultat_m.length && test.rezultat_m[0].negativan),\n                          'table-warning': false\n                        },attrs:{\"align\":\"left\"}},[(_vm.sample.status != 'ODOBREN' &&  _vm.sample.status != 'VERIFICIRAN')?_c('td',[_c('div',{staticClass:\"form-group\"},[_c('div',{staticClass:\"input-group\"},[_c('textarea',{directives:[{name:\"model\",rawName:\"v-model\",value:(test.rezultat),expression:\"test.rezultat\"}],attrs:{\"type\":\"text\",\"id\":\"simple-textarea\",\"required\":\"\"},domProps:{\"value\":(test.rezultat)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(test, \"rezultat\", $event.target.value)}}}),_vm._v(\" \"),_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"simple-textarea\"}},[_vm._v(_vm._s(''))]),_vm._v(\" \"),_c('i',{staticClass:\"bar\"})])])]):_vm._e(),_vm._v(\" \"),(_vm.sample.status === 'ODOBREN' ||  _vm.sample.status === 'VERIFICIRAN')?_c('td',[_c('div',{staticClass:\"form-group\"},[_c('div',{staticClass:\"input-group\"},[_c('input',{attrs:{\"id\":\"input-icon-left\",\"title\":\" \",\"name\":\"input-icon-left\",\"disabled\":\"\"}}),_vm._v(\" \"),(test.rezultat.length)?_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"input-icon-left\"}},[_vm._v(_vm._s(test.rezultat))]):_vm._e(),_vm._v(\" \"),(!test.rezultat.length)?_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"input-icon-left\"}},[_vm._v(_vm._s(\"Nema podataka.\"))]):_vm._e(),_vm._v(\" \"),_c('i',{staticClass:\"bar\"})])])]):_vm._e()])}))])])]):_vm._e()]):_vm._e()])]),_vm._v(\" \"),_c('vuestic-modal-micro-result',{ref:\"staticModalSelectResult\",attrs:{\"show\":_vm.show,\"sample\":_vm.sample,\"large\":_vm.ShowAllBacteries,\"neg\":_vm.ModalNegative,\"pos\":_vm.ModalPositive,\"selected\":_vm.ModalPositiveCondition,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',{staticStyle:{\"color\":\"#acb5be\"}},[_vm._v(_vm._s(_vm.MicrobiologyModalHeader)+\" |\")]),_vm._v(\" \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"Izbornik\"))])]),_vm._v(\" \"),(!_vm.ModalNegative && !_vm.ModalPositive)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-6\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-3\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-6\"},[_c('button',{staticClass:\"btn btn-secondary btn-sm wizard-back pull-left\",staticStyle:{\"text-transform\":\"none\",\"border\":\"0px\"},on:{\"click\":function($event){_vm.ModalNegative = true; _vm.ModalPositive = false;}}},[_vm._v(_vm._s('Negativan'))])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-3\"})])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-6\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-2\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-6\"},[_c('button',{staticClass:\"btn btn-secondary-danger btn-sm wizard-next pull-right\",staticStyle:{\"text-transform\":\"none\",\"border\":\"0px\"},on:{\"click\":function($event){_vm.ModalPositive = true; _vm.ModalNegative = false;}}},[_vm._v(_vm._s('Pozitivan'))])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-4\"})])])]):_vm._e(),_vm._v(\" \"),(_vm.ModalNegative && !_vm.ModalPositive)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-1\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-11\"},_vm._l((_vm.MicrobiologyResult.NegativeDescriptions),function(desc,index){return _c('vuestic-radio-button',{key:index,attrs:{\"label\":_vm.MicrobiologyResult.NegativeDescriptions[index],\"id\":_vm.MicrobiologyResult.NegativeDescriptions[index],\"value\":_vm.MicrobiologyResult.NegativeDescriptions[index],\"name\":_vm.MicrobiologyResult.NegativeDescriptions[index],\"disabled\":false},model:{value:(_vm.NegativeResultSelection),callback:function ($$v) {_vm.NegativeResultSelection=$$v},expression:\"NegativeResultSelection\"}})}))]):_vm._e(),_vm._v(\" \"),(!_vm.ModalNegative && _vm.ModalPositive && !_vm.MicrobiologyResult.DefaultBacteries.length)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-1\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-11\"},_vm._l((_vm.MicrobiologyResult.PositiveDescriptions),function(desc,index){return _c('vuestic-radio-button',{key:index,attrs:{\"label\":_vm.MicrobiologyResult.PositiveDescriptions[index],\"id\":_vm.MicrobiologyResult.PositiveDescriptions[index],\"value\":_vm.MicrobiologyResult.PositiveDescriptions[index],\"name\":_vm.MicrobiologyResult.PositiveDescriptions[index],\"disabled\":false},model:{value:(_vm.PositiveResultSelection),callback:function ($$v) {_vm.PositiveResultSelection=$$v},expression:\"PositiveResultSelection\"}})}))]):_vm._e(),_vm._v(\" \"),(!_vm.ModalNegative && _vm.ModalPositive && _vm.MicrobiologyResult.DefaultBacteries.length)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-6\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-2\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-10\"},_vm._l((_vm.MicrobiologyResult.DefaultBacteries),function(bakt,index){return _c('div',{key:index,staticClass:\"form-check abc-checkbox abc-checkbox-primary\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(bakt.chosen),expression:\"bakt.chosen\"}],staticClass:\"form-check-input\",attrs:{\"id\":bakt._id,\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(bakt.chosen)?_vm._i(bakt.chosen,null)>-1:(bakt.chosen)},on:{\"click\":function($event){_vm.SelectBactery(bakt, index)},\"change\":function($event){var $$a=bakt.chosen,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(bakt.chosen=$$a.concat([$$v]))}else{$$i>-1&&(bakt.chosen=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.$set(bakt, \"chosen\", $$c)}}}}),_vm._v(\" \"),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":bakt._id}},[_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(bakt.opis))])])])}))])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-6\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-1\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-6\"},[(!_vm.ShowAllBacteries)?_c('a',{staticStyle:{\"font-size\":\"16px\",\"color\":\"#4ae387\"},attrs:{\"href\":\"#\"},on:{\"click\":function($event){$event.preventDefault();_vm.ShowAllBacteries = true}}},[_vm._v(\"Prikaži više\")]):_vm._e()]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-5\"})]),_vm._v(\" \"),(_vm.ShowAllBacteries)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-1\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-10\"},_vm._l((_vm.MicrobiologyResult.RemainingBacteries),function(bakt,index){return _c('div',{key:index,staticClass:\"form-check abc-checkbox abc-checkbox-primary\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(bakt.chosen),expression:\"bakt.chosen\"}],staticClass:\"form-check-input\",attrs:{\"id\":bakt._id,\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(bakt.chosen)?_vm._i(bakt.chosen,null)>-1:(bakt.chosen)},on:{\"click\":function($event){_vm.SelectBactery(bakt, index)},\"change\":function($event){var $$a=bakt.chosen,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(bakt.chosen=$$a.concat([$$v]))}else{$$i>-1&&(bakt.chosen=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.$set(bakt, \"chosen\", $$c)}}}}),_vm._v(\" \"),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":bakt._id}},[_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(bakt.opis))])])])}))]):_vm._e()])]):_vm._e()]),_vm._v(\" \"),_c('vuestic-modal-delete',{ref:\"staticModalDeleteSample\",attrs:{\"show\":_vm.show,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',{staticStyle:{\"color\":\"#acb5be\"}},[_vm._v(_vm._s('Brisanje uzorka: '))]),_vm._v(\" \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(_vm.sid))])]),_vm._v(\" \"),_c('div',[_c('h5',[_vm._v(_vm._s('Jeste li sigurni da želite obrisati uzorak?'))])])]),_vm._v(\" \"),_c('vuestic-modal-comment',{ref:\"staticModalComment\",attrs:{\"show\":_vm.show,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(_vm._s('Unos komentara za uzorak: ' + _vm.sid))]),_vm._v(\" \"),_c('div',[_c('h5')])]),_vm._v(\" \"),_c('vuestic-modal-edit',{ref:\"staticModalEditSample\",attrs:{\"show\":_vm.show,\"sample\":_vm.sid,\"action\":\"Edit\",\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(_vm._s('Uređivanje uzorka: ' + _vm.sid))]),_vm._v(\" \"),_c('div',[_c('h5')])]),_vm._v(\" \"),_c('vuestic-modal-mail',{ref:\"staticModalSendMail\",attrs:{\"show\":_vm.show,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"\\n          \"+_vm._s('Slanje nalaza na adresu: ')+\"\\n          \"),_c('span',{staticStyle:{\"color\":\"#4ae387\"}},[_vm._v(_vm._s(_vm.email))])]),_vm._v(\" \"),_c('div',[_c('h5',[_vm._v(_vm._s('Jeste li sigurni da želite poslati nalaz?'))])])]),_vm._v(\" \"),_c('vuestic-modal-all-results',{ref:\"staticModalAllResults\",attrs:{\"show\":_vm.show,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"\\n          \"+_vm._s('Izbor rezultata: ')+\"\\n          \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(_vm.labassay))])]),_vm._v(\" \"),_c('div',[_c('div',{staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped first-td-padding\"},[_c('thead',[_c('tr',[_c('td',[_vm._v(\"analizator\")]),_vm._v(\" \"),_c('td',[_vm._v(\"vrijeme\")]),_vm._v(\" \"),_c('td',[_vm._v(\"rezultat\")]),_vm._v(\" \"),_c('td',[_vm._v(\"jedinica\")]),_vm._v(\" \"),_c('td',[_vm._v(\"reference\")]),_vm._v(\" \"),(_vm.sample_status != 'ODOBREN' &&  _vm.sample_status != 'VERIFICIRAN')?_c('td',[_vm._v(\"izbor\")]):_vm._e(),_vm._v(\" \"),_c('td',{attrs:{\"align\":\"middle\"}})])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.vise.rezultat),function(test){return _c('tr',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.rezultat_f != ''),expression:\"test.rezultat_f != ''\"}],key:test._id,class:{\n                    'table-danger': _vm.Interpretacija(_vm.vise.labassay.analit, test.rezultat_f, test.jedinice_f, _vm.vise.refd, _vm.vise.refg, _vm.$store.state.site, _vm.vise.interp, _vm.vise.extend, _vm.spec)[5] === 'Red' && !test.multidata, \n                    'table-success': _vm.Interpretacija(_vm.vise.labassay.analit, test.rezultat_f, test.jedinice_f, _vm.vise.refd, _vm.vise.refg, _vm.$store.state.site, _vm.vise.interp, _vm.vise.extend, _vm.spec)[5] === 'Green' && !test.multidata,\n                    'table-warning': _vm.Interpretacija(_vm.vise.labassay.analit, test.rezultat_f, test.jedinice_f, _vm.vise.refd, _vm.vise.refg, _vm.$store.state.site, _vm.vise.interp, _vm.vise.extend, _vm.spec)[5] === 'Yellow' && !test.multidata\n                  }},[_c('td',[_vm._v(_vm._s(test.anaassay.aparat.ime))]),_vm._v(\" \"),_c('td',[_vm._v(\"\\n                    \"+_vm._s(JSON.stringify(\n                    test.updated_at\n                    ).slice(9, 11) +\n                    \".\" +\n                    JSON.stringify(\n                    test.updated_at\n                    ).slice(6, 8) +\n                    \".\" +\n                    JSON.stringify(\n                    test.updated_at\n                    ).slice(1, 5) + ' | ')+\"\\n                    \"),_c('sub',[_vm._v(\"\\n                      \"+_vm._s(JSON.stringify(\n                      test.updated_at\n                      ).slice(12, 20))+\"\\n                    \")])]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(test.rezultat_f))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(test.jedinice_f))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(_vm.Interpretacija(_vm.vise.labassay.analit, test.rezultat_f, test.jedinice_f, _vm.vise.refd, _vm.vise.refg, _vm.$store.state.site, _vm.vise.interp, _vm.vise.extend, _vm.spec)[4]))]),_vm._v(\" \"),(_vm.sample_status != 'ODOBREN' &&  _vm.sample_status != 'VERIFICIRAN')?_c('td',[(!test.izabran)?_c('i',{staticClass:\"glyphicon glyphicon-unchecked\",staticStyle:{\"font-size\":\"18px\",\"color\":\"#e34a4a\"},on:{\"click\":function($event){$event.preventDefault();_vm.IzborTesta(_vm.vise, test)}}}):_vm._e(),_vm._v(\" \"),(test.izabran)?_c('i',{staticClass:\"glyphicon glyphicon-check\",staticStyle:{\"font-size\":\"18px\",\"color\":\"#4ae387\"}}):_vm._e()]):_vm._e(),_vm._v(\" \"),_c('td',[_c('i',{class:{'fa fa-exclamation-triangle icon-right input-icon error-icon' : _vm.Interpretacija(_vm.vise.labassay.analit, test.rezultat_f, test.jedinice_f, _vm.vise.refd, _vm.vise.refg, _vm.$store.state.site, _vm.vise.interp, _vm.vise.extend, _vm.spec)[5] === 'Red'}}),_vm._v(\" \"),_c('i',{class:{'fa fa-check success-icon icon-right input-icon' : _vm.Interpretacija(_vm.vise.labassay.analit, test.rezultat_f, test.jedinice_f, _vm.vise.refd, _vm.vise.refg, _vm.$store.state.site, _vm.vise.interp, _vm.vise.extend, _vm.spec)[5] === 'Green'}})])])}))])])])]),_vm._v(\" \"),_c('vuestic-modal-error',{ref:\"staticModalError\",attrs:{\"show\":_vm.show,\"cancelText\":\"ZATVORI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"\\n          \"+_vm._s('')+\"\\n          \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s('404: Not Found'))])]),_vm._v(\" \"),_c('div',[_c('h5',[_vm._v(_vm._s('Greška prilikom čitanja nalaza.'))])])]),_vm._v(\" \"),_c('vuestic-modal-error',{ref:\"staticModalVerifyPrivilege\",attrs:{\"show\":_vm.show,\"cancelText\":\"ZATVORI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"\\n          \"+_vm._s('')+\"\\n          \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s('401: Not Authorized'))])]),_vm._v(\" \"),_c('div',[_c('h5',[_vm._v(_vm._s('Nemate odgovarajuće privilegije.'))])])]),_vm._v(\" \"),_c('vuestic-modal-exclamation',{ref:\"staticModalExclamation\",attrs:{\"show\":_vm.show,\"cancelText\":\"ZATVORI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"\\n          \"+_vm._s('')+\"\\n          \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(_vm.warning.analiza))])]),_vm._v(\" \"),_c('div',[_c('h5',[_vm._v(_vm._s(_vm.warning.control))]),_vm._v(\" \"),_c('p',[_vm._v(_vm._s(_vm.warning.text))])])]),_vm._v(\" \"),_c('vuestic-modal-reference',{ref:\"staticModalReference\",attrs:{\"show\":_vm.show,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"\\n          \"+_vm._s('Referentne vrijednosti: ')+\"\\n          \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(_vm.reference.naziv)+\" (\"+_vm._s(_vm.reference.opis)+\")\")])]),_vm._v(\" \"),_c('div',[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-1\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-2\"},[_c('div',{staticClass:\"form-group\"},[_c('div',{staticClass:\"input-group\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.reference.dref),expression:\"reference.dref\"}],staticStyle:{\"color\":\"#e34a4a\"},attrs:{\"id\":\"input-icon-left\",\"title\":\" \",\"name\":\"input-icon-left\",\"required\":\"\"},domProps:{\"value\":(_vm.reference.dref)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.reference, \"dref\", $event.target.value)}}}),_vm._v(\" \"),_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"input-icon-left\"}},[_vm._v(_vm._s('Donja'))]),_vm._v(\" \"),_c('i',{staticClass:\"bar\"})])])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-1\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-2\"},[_c('div',{staticClass:\"form-group\"},[_c('div',{staticClass:\"input-group\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.reference.gref),expression:\"reference.gref\"}],staticStyle:{\"color\":\"#e34a4a\"},attrs:{\"id\":\"input-icon-left\",\"title\":\" \",\"name\":\"input-icon-left\",\"required\":\"\"},domProps:{\"value\":(_vm.reference.gref)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.reference, \"gref\", $event.target.value)}}}),_vm._v(\" \"),_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"input-icon-left\"}},[_vm._v(_vm._s('Gornja'))]),_vm._v(\" \"),_c('i',{staticClass:\"bar\"})])])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-1\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-4\"},[(_vm.$store.state.access.level < 1)?_c('vuestic-simple-select',{staticStyle:{\"font-size\":\"14px\"},attrs:{\"label\":\"Interpretacija\",\"title\":\" \",\"options\":_vm.interpretacije},model:{value:(_vm.reference.interp),callback:function ($$v) {_vm.$set(_vm.reference, \"interp\", $$v)},expression:\"reference.interp\"}}):_vm._e(),_vm._v(\" \"),(_vm.$store.state.access.level > 0)?_c('div',{staticClass:\"form-group\"},[_c('div',{staticClass:\"input-group\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.reference.interp),expression:\"reference.interp\"}],attrs:{\"id\":\"input-icon-left\",\"title\":\" \",\"name\":\"input-icon-left\",\"required\":\"\",\"disabled\":true},domProps:{\"value\":(_vm.reference.interp)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.reference, \"interp\", $event.target.value)}}}),_vm._v(\" \"),_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"input-icon-left\"}},[_vm._v(_vm._s(_vm.reference.interp))]),_vm._v(\" \"),_c('i',{staticClass:\"bar\"})])]):_vm._e()],1),_vm._v(\" \"),_c('div',{staticClass:\"col-md-1\"})]),_vm._v(\" \"),_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-1\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-2\"},[_c('vuestic-simple-select',{staticStyle:{\"font-size\":\"14px\"},attrs:{\"label\":\"Jedinica\",\"title\":\" \",\"options\":_vm.jedinice},model:{value:(_vm.reference.jedinica),callback:function ($$v) {_vm.$set(_vm.reference, \"jedinica\", $$v)},expression:\"reference.jedinica\"}})],1),_vm._v(\" \"),_c('div',{staticClass:\"col-md-1\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-7\"},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.reference.interp != 'spec'),expression:\"reference.interp != 'spec'\"}],staticClass:\"form-group\"},[_c('div',{staticClass:\"input-group\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.reference.extend),expression:\"reference.extend\"}],staticStyle:{\"color\":\"#e34a4a\"},attrs:{\"id\":\"input-icon-left\",\"title\":\" \",\"name\":\"input-icon-left\",\"required\":\"\"},domProps:{\"value\":(_vm.reference.extend)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.reference, \"extend\", $event.target.value)}}}),_vm._v(\" \"),_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"input-icon-left\"}},[_vm._v(_vm._s('Proširena referentna vrijednost'))]),_vm._v(\" \"),_c('i',{staticClass:\"bar\"})])]),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.reference.interp === 'spec'),expression:\"reference.interp === 'spec'\"}],staticClass:\"form-group\"},[_c('div',{staticClass:\"input-group\"},[_c('textarea',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.reference.extend),expression:\"reference.extend\"}],staticStyle:{\"color\":\"#e34a4a\"},attrs:{\"type\":\"text\",\"id\":\"simple-textarea\",\"required\":\"\"},domProps:{\"value\":(_vm.reference.extend)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.reference, \"extend\", $event.target.value)}}}),_vm._v(\" \"),_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"simple-textarea\"}},[_vm._v(_vm._s('Specifična interpretacija rezultata'))]),_vm._v(\" \"),_c('i',{staticClass:\"bar\"})])])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-1\"})])])]),_vm._v(\" \"),_c('vuestic-modal-find',{ref:\"staticModalFind\",attrs:{\"show\":_vm.show,\"data_pid\":Number(_vm.data_pid),\"data_length\":Number(_vm.data_length),\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"\\n          \"+_vm._s('')+\"\\n          \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s('Redni broj pacijenta'))])]),_vm._v(\" \"),_c('div',[_c('h5')])]),_vm._v(\" \"),_c('vuestic-modal-aparati',{ref:\"staticModalAparati\",attrs:{\"show\":_vm.show,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"\\n          \"+_vm._s('Izbor analizatora: ')+\"\\n          \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(this.analiza.ime + ' (' + this.analiza.analit + ')'))])]),_vm._v(\" \"),_c('div',[_c('vuestic-accordion-obrada',_vm._l((_vm.analysers),function(element){return _c('vuestic-collapse-aparati',{key:element._id,attrs:{\"analyser\":element}},[_c('span',{attrs:{\"slot\":\"header\"},slot:\"header\"},[_vm._v(_vm._s(element.ime + ', ' + element.site.naziv))]),_vm._v(\" \"),_c('div',{attrs:{\"slot\":\"body\"},slot:\"body\"},[_c('div',{staticClass:\"va-row\"})])])}))],1)]),_vm._v(\" \"),_c('vuestic-modal-results-multi',{ref:\"staticModalResultsMulti\",attrs:{\"show\":_vm.show,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"\\n          \"+_vm._s('Izbor rezultata: ')+\"\\n          \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(_vm.multi_test))])]),_vm._v(\" \"),_c('div')]),_vm._v(\" \"),_c('patient-evaluation-single',{ref:\"staticModalEvaluationSingle\",attrs:{\"show\":_vm.show,\"cancelText\":\"ZATVORI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',[_vm._v(_vm._s(_vm.ime + ' ' + _vm.prezime))])]),_vm._v(\" \"),(_vm.Procjena.length && !_vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',{staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped table-sm color-icon-label-table\"},[_c('thead',[_c('tr',{attrs:{\"align\":\"middle\"}},[_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('REZULTAT'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('JEDINICA'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('REFERENCE'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('DATUM'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"15%\"}},[_vm._v(_vm._s('VRIJEME'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"5%\",\"align\":\"middle\"}})])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.Procjena),function(element,index){return _c('tr',{key:index,class:{\n                          'table-danger': _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Red', \n                          'table-success': _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Green',\n                          'table-warning': _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Yellow'\n                        },attrs:{\"align\":\"middle\"}},[_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.rezultat))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.jedinica))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(_vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[4]))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.datum))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"15%\"}},[_vm._v(_vm._s(element.vrijeme))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"9%\",\"align\":\"middle\"}},[_c('i',{class:{'fa fa-exclamation-triangle icon-right input-icon error-icon' : _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Red'}}),_vm._v(\" \"),_c('i',{class:{'fa fa-check success-icon icon-right input-icon' : _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Green'}})])])}))]),_vm._v(\" \"),_c('div',{staticStyle:{\"text-align\":\"center\"}},[_c('span',{staticClass:\"circle badge-info\"}),_vm._v(\"\\n                \"+_vm._s(_vm.table_header)+\"\\n              \")])])])]):_vm._e(),_vm._v(\" \"),(_vm.showLineChart && _vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('line-chart',{attrs:{\"options\":_vm.optionsLineChart,\"data\":_vm.dataLineChart,\"type\":\"line\"}})],1)]):_vm._e(),_vm._v(\" \"),(!_vm.showLineChart && _vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',[_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"Nema podataka.\"))])])])]):_vm._e()]),_vm._v(\" \"),_c('patient-evaluation-single',{ref:\"staticModalLabAssayEvalSingle\",attrs:{\"show\":_vm.show,\"cancelText\":\"ZATVORI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',{staticStyle:{\"color\":\"#4ae387\"}},[_vm._v(_vm._s(_vm.analiza_eval.ime + ' (' + _vm.analiza_eval.analit + ')'))]),_vm._v(\" \"),_c('span',[_vm._v(_vm._s(\" - Rezultati analize u zadnjih 14 dana\"))])]),_vm._v(\" \"),(_vm.Procjena.length && !_vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',{staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped table-sm color-icon-label-table\"},[_c('thead',[_c('tr',{attrs:{\"align\":\"middle\"}},[_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('REZULTAT'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('JEDINICA'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('REFERENCE'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('DATUM'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"15%\"}},[_vm._v(_vm._s('VRIJEME'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"5%\",\"align\":\"middle\"}})])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.Procjena),function(element,index){return _c('tr',{key:index,class:{\n                      'table-danger': _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Red', \n                      'table-success': _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Green',\n                      'table-warning': _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Yellow'\n                    },attrs:{\"align\":\"middle\"}},[_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.rezultat))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.jedinica))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(_vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[4]))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.datum))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"15%\"}},[_vm._v(_vm._s(element.vrijeme))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"9%\",\"align\":\"middle\"}},[_c('i',{class:{'fa fa-exclamation-triangle icon-right input-icon error-icon' : _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Red'}}),_vm._v(\" \"),_c('i',{class:{'fa fa-check success-icon icon-right input-icon' : _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Green'}})])])}))]),_vm._v(\" \"),_c('div',{staticStyle:{\"text-align\":\"center\"}},[_c('span',{staticClass:\"circle badge-info\"}),_vm._v(\"\\n                \"+_vm._s(_vm.table_header)+\"\\n              \")])])])]):_vm._e(),_vm._v(\" \"),(_vm.showLineChart && _vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('line-chart',{attrs:{\"options\":_vm.optionsLineChart,\"data\":_vm.dataLineChart,\"type\":\"line\"}})],1)]):_vm._e(),_vm._v(\" \"),(!_vm.showLineChart && _vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',[_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"Nema podataka.\"))])])])]):_vm._e()]),_vm._v(\" \"),_c('patient-evaluation-multi',{ref:\"staticModalEvaluationMulti\",attrs:{\"show\":_vm.show,\"multiparam_izbor\":_vm.multiparam_izbor,\"multiparam_izbornik\":_vm.multiparam_izbornik,\"cancelText\":\"ZATVORI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',[_vm._v(_vm._s(_vm.ime + ' ' + _vm.prezime))])]),_vm._v(\" \"),(_vm.Procjena.length && !_vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',{staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped table-sm color-icon-label-table\"},[_c('thead',[_c('tr',{attrs:{\"align\":\"middle\"}},[_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('REZULTAT'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('JEDINICA'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('REFERENCE'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('DATUM'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"15%\"}},[_vm._v(_vm._s('VRIJEME'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"5%\",\"align\":\"middle\"}})])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.Procjena),function(element,index){return _c('tr',{key:index,class:{\n                      'table-danger': _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Red', \n                      'table-success': _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Green',\n                      'table-warning': _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Yellow'\n                    },attrs:{\"align\":\"middle\"}},[_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.rezultat))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.jedinica))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(_vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[4]))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.datum))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"15%\"}},[_vm._v(_vm._s(element.vrijeme))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"9%\",\"align\":\"middle\"}},[_c('i',{class:{'fa fa-exclamation-triangle icon-right input-icon error-icon' : _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Red'}}),_vm._v(\" \"),_c('i',{class:{'fa fa-check success-icon icon-right input-icon' : _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Green'}})])])}))]),_vm._v(\" \"),_c('div',{staticStyle:{\"text-align\":\"center\"}},[_c('span',{staticClass:\"circle badge-info\"}),_vm._v(\"\\n                \"+_vm._s(_vm.table_header)+\"\\n              \")])])])]):_vm._e(),_vm._v(\" \"),(!_vm.Procjena.length && !_vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',[_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"Nema podataka.\"))])])])]):_vm._e(),_vm._v(\" \"),(_vm.showLineChart && _vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('line-chart',{attrs:{\"options\":_vm.optionsLineChart,\"data\":_vm.dataLineChart,\"type\":\"line\"}})],1)]):_vm._e(),_vm._v(\" \"),(!_vm.showLineChart && _vm.graph)?_c('div',{staticClass:\"row\"},[(!_vm.showLineChart && !_vm.spinner)?_c('div',{staticClass:\"col-md-12\"},[_c('div',[_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"Nema podataka.\"))])])]):_vm._e(),_vm._v(\" \"),(!_vm.showLineChart && _vm.spinner)?_c('div',{staticClass:\"col-md-12\",staticStyle:{\"min-height\":\"400px\"}},[_c('div',{staticStyle:{\"display\":\"flex\",\"flex-direction\":\"row\",\"justify-content\":\"center\",\"align-items\":\"center\"}},[_c('div',{staticStyle:{\"float\":\"left\"}}),_vm._v(\" \"),_c('span',{staticStyle:{\"vertical-align\":\"middle\"}},[_c('atom-spinner',{staticStyle:{\"opacity\":\"0.25\"},attrs:{\"animation-duration\":1000,\"size\":300,\"color\":'#4ae387'}})],1)])]):_vm._e()]):_vm._e()]),_vm._v(\" \"),_c('patient-evaluation-multi',{ref:\"staticModalLabAssayEvalMulti\",attrs:{\"show\":_vm.show,\"multiparam_izbor\":_vm.multiparam_izbor,\"multiparam_izbornik\":_vm.multiparam_izbornik,\"cancelText\":\"ZATVORI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',{staticStyle:{\"color\":\"#4ae387\"}},[_vm._v(_vm._s(_vm.analiza_eval.ime + ' (' + _vm.analiza_eval.analit + ')'))]),_vm._v(\" \"),_c('span',[_vm._v(_vm._s(\" - Rezultati analize u zadnjih 14 dana\"))])]),_vm._v(\" \"),(_vm.Procjena.length && !_vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',{staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped table-sm color-icon-label-table\"},[_c('thead',[_c('tr',{attrs:{\"align\":\"middle\"}},[_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('REZULTAT'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('JEDINICA'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('REFERENCE'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('DATUM'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"15%\"}},[_vm._v(_vm._s('VRIJEME'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"5%\",\"align\":\"middle\"}})])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.Procjena),function(element,index){return _c('tr',{key:index,class:{\n                      'table-danger': _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Red', \n                      'table-success': _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Green',\n                      'table-warning': _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Yellow'\n                    },attrs:{\"align\":\"middle\"}},[_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.rezultat))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.jedinica))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(_vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[4]))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.datum))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"15%\"}},[_vm._v(_vm._s(element.vrijeme))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"9%\",\"align\":\"middle\"}},[_c('i',{class:{'fa fa-exclamation-triangle icon-right input-icon error-icon' : _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Red'}}),_vm._v(\" \"),_c('i',{class:{'fa fa-check success-icon icon-right input-icon' : _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Green'}})])])}))]),_vm._v(\" \"),_c('div',{staticStyle:{\"text-align\":\"center\"}},[_c('span',{staticClass:\"circle badge-info\"}),_vm._v(\"\\n                \"+_vm._s(_vm.table_header)+\"\\n              \")])])])]):_vm._e(),_vm._v(\" \"),(!_vm.Procjena.length && !_vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',[_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"Nema podataka.\"))])])])]):_vm._e(),_vm._v(\" \"),(_vm.showLineChart && _vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('line-chart',{attrs:{\"options\":_vm.optionsLineChart,\"data\":_vm.dataLineChart,\"type\":\"line\"}})],1)]):_vm._e(),_vm._v(\" \"),(!_vm.showLineChart && _vm.graph)?_c('div',{staticClass:\"row\"},[(!_vm.showLineChart && !_vm.spinner)?_c('div',{staticClass:\"col-md-12\"},[_c('div',[_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"Nema podataka.\"))])])]):_vm._e(),_vm._v(\" \"),(!_vm.showLineChart && _vm.spinner)?_c('div',{staticClass:\"col-md-12\",staticStyle:{\"min-height\":\"400px\"}},[_c('div',{staticStyle:{\"display\":\"flex\",\"flex-direction\":\"row\",\"justify-content\":\"center\",\"align-items\":\"center\"}},[_c('div',{staticStyle:{\"float\":\"left\"}}),_vm._v(\" \"),_c('span',{staticStyle:{\"vertical-align\":\"middle\"}},[_c('atom-spinner',{staticStyle:{\"opacity\":\"0.25\"},attrs:{\"animation-duration\":1000,\"size\":300,\"color\":'#4ae387'}})],1)])]):_vm._e()]):_vm._e()])],1):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',{staticClass:\"col-md-6\"},[_c('loading',{attrs:{\"active\":_vm.isLoading,\"can-cancel\":false,\"on-cancel\":_vm.onCancel,\"color\":\"#4ae387\",\"is-full-page\":_vm.fullPage},on:{\"update:active\":function($event){_vm.isLoading=$event}}})],1),_vm._v(\" \"),_c('div',{staticClass:\"col-md-6\"},[(false)?_c('button',{on:{\"click\":function($event){$event.preventDefault();_vm.Test($event)}}},[_vm._v(_vm._s('Loading...'))]):_vm._e()])])])])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-5fb25dc1\",\"hasScoped\":true,\"transformToRequire\":{\"video\":\"src\",\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/obrada/Obrada.vue\n// module id = rl2g\n// module chunks = 6","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('span',{staticClass:\"circle\",class:_vm.classObject})}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-29844c72\",\"hasScoped\":true,\"transformToRequire\":{\"video\":\"src\",\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/obrada/BadgeColumn.vue\n// module id = uW86\n// module chunks = 6 15 24 44","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-5fb25dc1\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/sass-loader/lib/loader.js?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Obrada.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"8bc691c8\", content, true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/extract-text-webpack-plugin/dist/loader.js?{\"omit\":1,\"remove\":true}!./node_modules/vue-style-loader!./node_modules/css-loader?{\"minimize\":true,\"sourceMap\":true}!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-5fb25dc1\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/sass-loader/lib/loader.js?{\"sourceMap\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/components/obrada/Obrada.vue\n// module id = wY/V\n// module chunks = 6"],"sourceRoot":""}