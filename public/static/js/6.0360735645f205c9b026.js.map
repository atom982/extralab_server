{"version":3,"sources":["webpack:///static/js/6.0360735645f205c9b026.js","webpack:///./src/components/obrada/Obrada.vue","webpack:///./src/components/obrada/functions/interpretacija.js","webpack:///./src/components/obrada/Obrada.vue?da59","webpack:///./src/components/obrada/data-izbornik/izbornik.js","webpack:///./src/components/obrada/Obrada.vue?7c54","webpack:///./src/components/obrada/BadgeColumn.vue?1db5","webpack:///./node_modules/core-js/library/modules/es6.object.get-own-property-names.js","webpack:///./src/components/obrada/Obrada.vue?f755","webpack:///src/components/obrada/Obrada.vue","webpack:///./node_modules/vue-loading-overlay/dist/vue-loading.css","webpack:///src/components/obrada/BadgeColumn.vue","webpack:///./src/components/obrada/BadgeColumn.vue?c12c","webpack:///./node_modules/core-js/library/modules/_object-gopn-ext.js","webpack:///./node_modules/vue-loading-overlay/dist/vue-loading.css?ff3f","webpack:///./node_modules/pdfobject/pdfobject.js","webpack:///./src/components/obrada/BadgeColumn.vue","webpack:///./node_modules/vue-loading-overlay/dist/vue-loading.min.js","webpack:///./node_modules/babel-runtime/core-js/object/get-own-property-names.js","webpack:///./src/components/obrada/functions/reference.js","webpack:///./node_modules/core-js/library/fn/object/get-own-property-names.js","webpack:///./src/services/utils.js","webpack:///./src/components/obrada/BadgeColumn.vue?7a0e","webpack:///./node_modules/core-js/library/modules/_object-gopn.js"],"names":["webpackJsonp","0fl9","module","__webpack_exports__","__webpack_require__","injectStyle","ssrContext","Object","defineProperty","value","__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Obrada_vue__","__WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_3f02d9e7_hasScoped_true_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Obrada_vue__","normalizeComponent","__vue_styles__","Component","3r/r","exports","None","result","dref","gref","replace","Standard","rezultat","isNaN","Number","Math","abs","Less","Greater","GreaterEqual","Negativan","includes","Reaktivan","Normalan","toLowerCase","Uredan","Plus","trim","Infekcija","TSH","TRG","HOL","HDL","LDL","fPSA","Sedimentacija","rez1","split","rez2","Bistar","Boja","Nesto","Exists","Blasti","Morf","LeuErc","rez","Titar","Specific","4wj/","content","i","locals","8472","data","o01","o02","o05","o06","o07","o08","o09","o10","o11","o12","se03","se04","se05","se06","se07","se08","se09","se10","neg","reakt","EiqO","push","version","sources","names","mappings","file","sourcesContent","sourceRoot","FrRU","G5/o","f","IEaf","render","_vm","this","_h","$createElement","_c","_self","staticClass","directives","name","rawName","main","pdf","expression","on","click","$event","preventDefault","Nazad","_v","_s","verificiran","email_button","attrs","disabled","Email","email","MailDialog","size","id","title","required","domProps","input","target","composing","for","headerText","header","pagination","data_pid","data_length","rezultati_length","Results","length","spol","data_spol","data_min","datum","query_date","today","today_date","forward_disabled","backward_disabled","_l","uzorak","removed","key","sid","sample","slot","staticStyle","line-height","tip","align","status","_e","test","index","labassay_id","class","table-danger","rezultat_m","pozitivan","table-success","negativan","table-warning","color","MicroResultSelect","ResetSample","analit","ime","OpenMicro","realizovan","unit","font-size","opacity","fa fa-exclamation-triangle icon-right input-icon error-icon","Exclamation","fa fa-check success-icon icon-right input-icon","calculated","Interpretacija","dRef","gRef","$store","state","site","interp","extend","spec","multidata","SelectAnalyser","contextmenu","LabAssayEval","Evaluation","edit","display","undefined","select_options","width","change","$$selectedVal","Array","prototype","filter","call","options","o","selected","map","_value","$set","multiple","option","vise","GetResults","MultiGet","odobren","multi_count","GetResultsMulti","Reference","Calculate","manual","retest","RetestEnable","RetestDisable","min-height","final","final_pdf","samples","link","pacijent","prezime","Povratak","partials_condition","text-transform","Partials","ref","show","cancelText","okText","update:show","naslov","labID","opis","jedinica","refd","refg","rezultat_multiple","flag","naziv","kod","min-width","ExclamationMulti","CurrentTest","large","update","access","level","ShowAntibiotics","ShowBacteries","MicrobiologyScenario","povratak","empty","TemporaryAntibiotics","TemporaryBacteriesAdd","TemporaryBacteries","filteredBacteries","bactery","_id","type","checked","isArray","chosen","_i","AddBacteries","$$a","$$el","$$c","$$i","concat","slice","Antibiotics","filteredAntibiotics","antibiotik","AddAntibiotics","SelectedBacteries","BacteryTabs","tab","CurrentTab","prikazi","antibiogram","abtk","label","model","callback","$$v","ShowAllBacteries","ModalNegative","pos","ModalPositive","ModalPositiveCondition","MicrobiologyModalHeader","border","MicrobiologyResult","desc","NegativeDescriptions","NegativeResultSelection","DefaultBacteries","PositiveDescriptions","PositiveResultSelection","bakt","SelectBactery","href","action","labassay","sample_status","rezultat_f","jedinice_f","anaassay","aparat","JSON","stringify","updated_at","izabran","IzborTesta","warning","analiza","control","text","reference","interpretacije","jedinice","element","analyser","multi_test","Procjena","graph","vrijeme","text-align","table_header","showLineChart","optionsLineChart","dataLineChart","analiza_eval","multiparam_izbor","multiparam_izbornik","spinner","flex-direction","justify-content","align-items","float","vertical-align","animation-duration","active","isLoading","can-cancel","on-cancel","onCancel","is-full-page","fullPage","update:active","staticRenderFns","esExports","KUw5","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_own_property_names__","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_own_property_names___default","n","__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray__","__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray___default","__WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify__","__WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default","__WEBPACK_IMPORTED_MODULE_3_vue__","__WEBPACK_IMPORTED_MODULE_4__router__","__WEBPACK_IMPORTED_MODULE_5_vuex_store__","__WEBPACK_IMPORTED_MODULE_6_services_utils__","__WEBPACK_IMPORTED_MODULE_7__config_config_js__","__WEBPACK_IMPORTED_MODULE_8__BadgeColumn_vue__","__WEBPACK_IMPORTED_MODULE_9__main__","__WEBPACK_IMPORTED_MODULE_10__functions_reference_js__","__WEBPACK_IMPORTED_MODULE_10__functions_reference_js___default","__WEBPACK_IMPORTED_MODULE_11__data_izbornik_izbornik__","__WEBPACK_IMPORTED_MODULE_12_vue_loading_overlay__","__WEBPACK_IMPORTED_MODULE_12_vue_loading_overlay___default","__WEBPACK_IMPORTED_MODULE_13_vue_loading_overlay_dist_vue_loading_css__","__WEBPACK_IMPORTED_MODULE_13_vue_loading_overlay_dist_vue_loading_css___default","__WEBPACK_IMPORTED_MODULE_14__vuestic_components_vuestic_chart_chart_types_LineChart__","__WEBPACK_IMPORTED_MODULE_15_epic_spinners__","__WEBPACK_IMPORTED_MODULE_16_pdfobject__","__WEBPACK_IMPORTED_MODULE_16_pdfobject___default","component","AllowGetSample","MicrobiologyOrder","MicrobiologySample","Antibiograms","Bacteries","negative","positive","BUG","F_RESULT","M_RESULT","RemainingBacteries","multiparam_id","multiparams","Response","lokacija","timestamp","jmbg","pid","email_tmp","approved","verified","partials","count","nalaz","report","path","url","uzorci","multi_rezultati","check","testovi","rezultati","analysers","analyser_selected","analyser_patient","analitiprikaz","analiti","show_table","resdata","email_changed","Previous","Next","Datum","query","next","previous","toastText","toastIcon","toastPosition","toastDuration","isToastFullWidth","className","components","Loading","a","AtomSpinner","watch","beforeCreate","_this","get","token","then","res","mounted","_this2","$on","forEach","_","isEmpty","palette","getters","obj","Multi","multi","param","Date","time","getTime","getTimezoneOffset","toISOString","substring","kontrola","sort","b","parse","responsive","maintainAspectRatio","scales","xAxes","gridLines","yAxes","labels","danger","primary","info","datasets","backgroundColor","hex2rgb","css","pointBorderColor","pointBackgroundColor","borderColor","transparent","setTimeout","$refs","staticModalDeleteSample","open","staticModalEditSample","staticModalComment","BarcodePrint","SaveResults","Approve","Verify","Disapprove","UnVerify","height","embed","staticModalError","pdf_exists","dispatch","GetSingleSample","DeletedSample","EditSample","SaveMultiResults","SendMail","AnalyserSelected","Sljedeci","Prethodni","staticModalFind","$route","params","patient","date","document","getElementById","post","userId","antibiotici","ant","selectedBacteries","results","zaprimljen","status_uzorka","stat","localeCompare","numeric","sensitivity","bakterija","rbr_a","$emit","Antibiotici","largeModalneg","largeModalpos","antibgr","antbtk","console","log","__v","beforeDestroy","$off","created","Created","setDate","getDate","methods","napomena","m_interp","m_opis","multiparam","interpretacija","snizeno","poviseno","staticModalExclamation","e","_this3","response","staticModalLabAssayEvalMulti","staticModalLabAssayEvalSingle","_this4","staticModalEvaluationMulti","staticModalEvaluationSingle","column","columns","_this5","item","indexOf","_this6","splice","_this7","topcije","grupa","grouporder","sifra","IDE","kategorija","eval","sekcija","bakterije","neg_description","pos_description","refSet","unshift","bakterioloski","bakterijed","bakterijei","neg_rezultati","poz_rezultati","counter","ima","maxVal","reduce","max","val","bact","staticModalMicroBactery","event","_this8","staticModalSelectResult","staticModalResetSample","_this9","found","toString","_this10","_this11","antibiogrami","_this12","_this13","anaassays","staticModalAparati","_this14","close","success","staticModalReference","_this15","printEPL","surname","pacijentRBr","godiste","code","from","_this16","_this17","idNalaza","location","memo","_this18","_this19","id_u","id_t","_this20","ana","_this21","single","opcije","module_sn","tmpOptionsAna","nazivTesta","sn","dilucija","rezultat_i","izbor","largeModalMulti","staticModalSendMail","_this22","showToast","icon","position","duration","fullWidth","false","_this23","edited","_this24","_this25","_this26","_this27","verify","sendEmail","staticModalVerifyPrivilege","_this28","_this29","created_at","staticModalAllResults","_this30","picked","_this31","MbHo","R7hf","props","rowData","rowIndex","classObject","badge-warning","badge-primary","badge-danger","badge-info","badge-violet","badge-dark-blue","RHNw","Rrel","toIObject","gOPN","windowNames","window","getOwnPropertyNames","getWindowNames","it","SYh3","UqI+","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","root","factory","apply","navigator","supportsPDFs","isIE","supportsPdfActiveX","createAXO","buildFragmentString","embedError","getTargetElement","generatePDFJSiframe","generateEmbedElement","ua","userAgent","supportsPdfMimeType","mimeTypes","isModernBrowser","Promise","isFirefox","isFirefoxWithPDFJS","parseInt","isIOS","ax","ActiveXObject","pdfParams","prop","string","hasOwnProperty","encodeURIComponent","msg","targetSelector","targetNode","body","querySelector","jQuery","nodeType","pdfOpenFragment","PDFJS_URL","fullURL","scrollfix","iframe","style","overflow","innerHTML","getElementsByTagName","page","pdfOpenParams","fallbackLink","assumptionMode","forcePDFJS","fallbackHTML","c","pdfobjectversion","XMpX","__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_BadgeColumn_vue__","__WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_1099f53e_hasScoped_true_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_BadgeColumn_vue__","ZZvs","t","self","r","l","m","d","enumerable","Symbol","toStringTag","__esModule","create","bind","default","p","s","u","_compiled","functional","_scopeId","$vnode","parent","__VUE_SSR_CONTEXT__","_registeredComponents","add","_ssrRegister","$root","$options","shadowRoot","_injectStyles","HTMLElement","addEventListener","focusIn","isActive","$el","contains","container","isFullPage","parentElement","focus","removeEventListener","String","viewBox","xmlns","stroke","fill","fill-rule","transform","stroke-width","stroke-opacity","cx","cy","attributeName","to","dur","repeatCount","begin","values","calcMode","fill-opacity","x","y","attributeType","mixins","Boolean","programmatic","Function","transition","canCancel","zIndex","loader","Spinner","Dots","Bars","beforeMount","appendChild","keyPress","cancel","hide","arguments","$destroy","remove","parentNode","removeChild","keyCode","tabindex","aria-busy","aria-label","background","_t","tag","assign","el","createElement","propsData","keys","$slots","install","$loading","aFK5","d5lM","Interpretation","gAsd","$Object","hLWQ","hex","rgb","match","g","iF2Y","n0T6","$keys","hiddenKeys","O"],"mappings":"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","file":"static/js/6.0360735645f205c9b026.js","sourcesContent":["webpackJsonp([6,42],{\n\n/***/ \"0fl9\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Obrada_vue__ = __webpack_require__(\"KUw5\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_3f02d9e7_hasScoped_true_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Obrada_vue__ = __webpack_require__(\"IEaf\");\nfunction injectStyle (ssrContext) {\n  __webpack_require__(\"4wj/\")\n}\nvar normalizeComponent = __webpack_require__(\"VU/8\")\n/* script */\n\n/* template */\n\n/* template functional */\n  var __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-3f02d9e7\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Obrada_vue__[\"a\" /* default */],\n  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_3f02d9e7_hasScoped_true_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Obrada_vue__[\"a\" /* default */],\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Component.exports);\n\n\n/***/ }),\n\n/***/ \"3r/r\":\n/***/ (function(module, exports) {\n\nmodule.exports = {\n  None: function None(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    return [\" \", \"No Class\"];\n  },\n\n  Standard: function Standard(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (isNaN(rezultat) || rezultat === \"\" || dref == \"0\" && gref == \"0\") {\n      return [\" \", \"No Class\"];\n    } else if (Number(rezultat) < Number(Math.abs(dref))) {\n      return [\"L\", \"Red\"];\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\n      return [\"H\", \"Red\"];\n    } else if (Number(rezultat) === Number(Math.abs(dref)) || Number(rezultat) === Number(Math.abs(gref))) {\n      return [\" \", \"Yellow\"];\n    } else {\n      return [\" \", \"Green\"];\n    }\n  },\n\n  Less: function Less(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (isNaN(rezultat) || rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\n      return [\"H\", \"Red\"];\n    } else if (Number(rezultat) <= Number(Math.abs(gref)) && Number(rezultat) >= Number(Math.abs(dref))) {\n      return [\" \", \"Yellow\"];\n    } else {\n      return [\" \", \"Green\"];\n    }\n  },\n\n  Greater: function Greater(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (isNaN(rezultat) || rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (Number(rezultat) < Number(Math.abs(gref))) {\n      return [\"L\", \"Red\"];\n    } else if (Number(rezultat) == Number(Math.abs(gref))) {\n      return [\" \", \"Yellow\"];\n    } else {\n      return [\" \", \"Green\"];\n    }\n  },\n\n  GreaterEqual: function GreaterEqual(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (isNaN(rezultat) || rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (Number(rezultat) < Number(Math.abs(gref))) {\n      return [\"L\", \"Red\"];\n    } else if (Number(rezultat) == Number(Math.abs(gref))) {\n      return [\" \", \"Green\"];\n    } else {\n      return [\" \", \"Green\"];\n    }\n  },\n\n  Negativan: function Negativan(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (rezultat.includes(\"pozitivan\")) {\n      return [\"H\", \"Red\"];\n    } else if (rezultat.includes(\"negativan\")) {\n      return [\" \", \"Green\"];\n    } else if (rezultat.includes(\"graničan\")) {\n      return [\" \", \"Yellow\"];\n    } else {\n      return [\" \", \"No Class\"];\n    }\n  },\n\n  Reaktivan: function Reaktivan(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (rezultat.includes(\"reaktivan\")) {\n      return [\"H\", \"Red\"];\n    } else if (rezultat.includes(\"negativan\")) {\n      return [\" \", \"Green\"];\n    } else if (rezultat.includes(\"graničan\")) {\n      return [\" \", \"Yellow\"];\n    } else {\n      return [\" \", \"No Class\"];\n    }\n  },\n\n  Normalan: function Normalan(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (rezultat.toLowerCase().includes(\"norm\") && !rezultat.toLowerCase().includes(\"nije\")) {\n      return [\" \", \"Green\"];\n    } else {\n      return [\"H\", \"Red\"];\n    }\n  },\n\n  Uredan: function Uredan(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (rezultat.toLowerCase().includes(\"ured\") && !rezultat.toLowerCase().includes(\"nije\")) {\n      return [\" \", \"Green\"];\n    } else {\n      return [\"H\", \"Red\"];\n    }\n  },\n\n  Plus: function Plus(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (rezultat.trim() === \"+++\" || rezultat.trim() === \"+ + +\") {\n      return [\" \", \"Green\"];\n    } else {\n      return [\"H\", \"Red\"];\n    }\n  },\n\n  Infekcija: function Infekcija(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (isNaN(rezultat) || rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\n      return [\"pasivna infekcija\", \"Green\"];\n    } else if (Number(rezultat) <= Number(Math.abs(gref)) && Number(rezultat) >= Number(Math.abs(dref))) {\n      return [\"siva zona\", \"Yellow\"];\n    } else {\n      return [\"svježa infekcija\", \"Red\"];\n    }\n  },\n\n  TSH: function TSH(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (isNaN(rezultat) || rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\n      return [\"hipotireoza\", \"Red\"];\n    } else if (Number(rezultat) <= Number(Math.abs(gref)) && Number(rezultat) >= Number(Math.abs(dref))) {\n      return [\"eutireoza\", \"Green\"];\n    } else {\n      return [\"hipertireoza\", \"Red\"];\n    }\n  },\n\n  TRG: function TRG(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (isNaN(rezultat) || rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\n      return [\"visoko\", \"Red\"];\n    } else if (Number(rezultat) <= Number(Math.abs(gref)) && Number(rezultat) >= Number(Math.abs(dref))) {\n      return [\"granično\", \"Yellow\"];\n    } else {\n      return [\"idealno\", \"Green\"];\n    }\n  },\n\n  HOL: function HOL(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (isNaN(rezultat) || rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\n      return [\"visoko\", \"Red\"];\n    } else if (Number(rezultat) <= Number(Math.abs(gref)) && Number(rezultat) >= Number(Math.abs(dref))) {\n      return [\"granično\", \"Yellow\"];\n    } else {\n      return [\"idealno\", \"Green\"];\n    }\n  },\n\n  HDL: function HDL(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (isNaN(rezultat) || rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\n      return [\"nema rizika\", \"Green\"];\n    } else if (Number(rezultat) <= Number(Math.abs(gref)) && Number(rezultat) >= Number(Math.abs(dref))) {\n      return [\"rizik\", \"Yellow\"];\n    } else {\n      return [\"visok rizik\", \"Red\"];\n    }\n  },\n\n  LDL: function LDL(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (isNaN(rezultat) || rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\n      return [\"visok rizik\", \"Red\"];\n    } else if (Number(rezultat) <= Number(Math.abs(gref)) && Number(rezultat) >= Number(Math.abs(dref))) {\n      return [\"granično\", \"Yellow\"];\n    } else {\n      return [\"optimalno\", \"Green\"];\n    }\n  },\n\n  fPSA: function fPSA(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (isNaN(rezultat) || rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\n      return [\"benigni proces\", \"Green\"];\n    } else if (Number(rezultat) <= Number(Math.abs(gref)) && Number(rezultat) >= Number(Math.abs(dref))) {\n      return [\"siva zona\", \"Yellow\"];\n    } else {\n      return [\"H\", \"Red\"];\n    }\n  },\n\n  Sedimentacija: function Sedimentacija(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (rezultat.includes(\"/\")) {\n      var rez1 = rezultat.split(\"/\")[0].trim();\n      var rez2 = rezultat.split(\"/\")[1].trim();\n    } else {\n      var rez1 = rezultat.trim();\n      var rez2 = rezultat.trim();\n    }\n\n    if (isNaN(rez1) || rez1 === \"\" || isNaN(rez2) || rez2 === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (Number(rez1) > Number(Math.abs(gref))) {\n      return [\"H\", \"Red\"];\n    } else if (Number(rez1) === Number(Math.abs(gref))) {\n      return [\" \", \"Yellow\"];\n    } else {\n      return [\" \", \"Green\"];\n    }\n  },\n\n  Bistar: function Bistar(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (rezultat === \"bistar\") {\n      return [\" \", \"Green\"];\n    } else {\n      return [\"H\", \"Red\"];\n    }\n  },\n\n  Boja: function Boja(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (rezultat === \"svjetlo žut\") {\n      return [\" \", \"Green\"];\n    } else {\n      return [\"H\", \"Red\"];\n    }\n  },\n\n  Nesto: function Nesto(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (rezultat.includes(\"masa\") || rezultat.includes(\"dosta\")) {\n      return [\"H\", \"Red\"];\n    } else {\n      return [\" \", \"Green\"];\n    }\n  },\n\n  Exists: function Exists(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else {\n      return [\"H\", \"Red\"];\n    }\n  },\n\n  Blasti: function Blasti(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (isNaN(rezultat) || rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (Number(rezultat) < Number(Math.abs(dref))) {\n      return [\" \", \"No Class\"];\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\n      return [\"H\", \"Red\"];\n    } else if (Number(rezultat) === Number(Math.abs(dref)) || Number(rezultat) === Number(Math.abs(gref))) {\n      return [\" \", \"No Class\"];\n    } else {\n      return [\" \", \"Green\"];\n    }\n  },\n\n  Morf: function Morf(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (isNaN(rezultat) || rezultat === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (Number(rezultat) === Number(Math.abs(dref)) || Number(rezultat) === Number(Math.abs(gref))) {\n      return [\" \", \"Green\"];\n    } else {\n      return [\"H\", \"Red\"];\n    }\n  },\n\n  LeuErc: function LeuErc(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (rezultat.includes(\"-\")) {\n      var rez = rezultat.split(\"-\")[1].trim();\n    } else {\n      var rez = rezultat.trim();\n    }\n\n    if (rez === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (isNaN(rez)) {\n      return [\"H\", \"Red\"];\n    } else if (Number(rez) > Number(gref)) {\n      return [\"H\", \"Red\"];\n    } else if (Number(rez) === Number(gref)) {\n      return [\" \", \"Yellow\"];\n    } else {\n      return [\" \", \"Green\"];\n    }\n  },\n\n  Titar: function Titar(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    if (rezultat.includes(\":\")) {\n      var rez1 = rezultat.split(\":\")[0].trim();\n      var rez2 = rezultat.split(\":\")[1].trim();\n    } else {\n      var rez1 = rezultat.trim();\n      var rez2 = \"\";\n    }\n\n    if (isNaN(rez1) || rez1 === \"\" || rez1 != \"1\" || isNaN(rez2) || rez2 === \"\") {\n      return [\" \", \"No Class\"];\n    } else if (Number(rez2) > Number(Math.abs(gref))) {\n      return [\"H\", \"Red\"];\n    } else if (Number(rez2) === Number(Math.abs(gref))) {\n      return [\" \", \"Yellow\"];\n    } else {\n      return [\" \", \"Green\"];\n    }\n  },\n\n  Specific: function Specific(result, dref, gref) {\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n    return [\" \", \"No Class\"];\n  }\n};\n\n/***/ }),\n\n/***/ \"4wj/\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(\"EiqO\");\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(\"rjj0\")(\"4b41f25e\", content, true);\n\n/***/ }),\n\n/***/ \"8472\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar data = {\n  o01: [\"\", \"bistar\", \"blago mutan\", \"vrlo mutan\", \"krvav\"],\n  o02: [\"\", \"svjetlo žut\", \"žut\", \"tamno žut\", \"smeđ\"],\n  o05: [\"\", \"negativan\", \"lagano opalascentan\", \"opalascentan\", \"pozitivan 1+\", \"pozitivan 2+\", \"pozitivan 3+\", \"pozitivan 4+\"],\n  o06: [\"\", \"negativan\", \"pozitivan\"],\n  o07: [\"\", \"negativan\", \"pozitivan\"],\n  o08: [\"\", \"negativan\", \"trag\", \"pozitivan 1+\", \"pozitivan 2+\", \"pozitivan 3+\", \"pozitivan 4+\"],\n  o09: [\"\", \"negativan\", \"pozitivan\"],\n  o10: [\"\", \"negativan\", \"pozitivan\"],\n  o11: [\"\", \"negativan\", \"pozitivan\"],\n  o12: [\"\", \"negativan\", \"pozitivan\"],\n\n  se03: [\"\", \"nešto pločastog ep.\", \"dosta pločastog ep.\", \"masa pločastog ep.\", \"nešto vretenastog ep.\", \"dosta vretenastog ep.\", \"masa vretenastog ep.\", \"nešto okruglog ep.\", \"dosta okruglog ep.\", \"masa okruglog ep.\"],\n  se04: [\"\", \"nešto mok. kis.\", \"dosta mok. kis.\", \"masa mok. kis.\", \"nešto Ca-oxal\", \"dosta Ca-oxal\", \"masa Ca-oxal\", \"nešto tripl fosf.\", \"dosta tripl fosf.\", \"masa tripl fosf.\", \"nešto Ca-carb\", \"dosta Ca-carb\", \"masa Ca-carb\"],\n  se05: [\"\", \"nešto\", \"dosta\", \"masa\"],\n  se06: [\"\", \"nešto\", \"dosta\", \"masa\"],\n  se07: [\"\", \"nešto\", \"dosta\", \"masa\"],\n  se08: [\"\", \"nešto am. fosfata\", \"dosta am. fosfata\", \"masa am. fosfata\", \"nešto am. urata\", \"dosta am. urata\", \"masa am. urata\"],\n  se09: [\"\", \"hijalini\", \"granulirani\", \"eritrocitni\", \"leukocitni\"],\n  se10: [\"\", \"nešto\", \"dosta\", \"masa\"]\n};\n\nvar rez = {\n  neg: [\"\", \"negativan\", \"graničan\", \"pozitivan\"],\n  reakt: [\"\", \"negativan\", \"graničan\", \"reaktivan\"]\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  data: data,\n  rez: rez\n});\n\n/***/ }),\n\n/***/ \"EiqO\":\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(\"FZ+f\")(true);\n// imports\n\n\n// module\nexports.push([module.i, \".collapse-page__content[data-v-3f02d9e7]{padding:2rem}.collapse-page__content__title[data-v-3f02d9e7]{font-size:1.375rem;font-weight:700}.icon-bar a[data-v-3f02d9e7]{color:#fff;text-decoration:none}.icon-bar a[data-v-3f02d9e7]:hover{color:#4ae387}i[data-v-3f02d9e7]:hover{color:#4ae387!important}.circle[data-v-3f02d9e7]{width:1rem;opacity:.5;height:1rem;border-radius:50%;display:inline-block}\", \"\", {\"version\":3,\"sources\":[\"C:/Projects/extralab/client/src/components/obrada/Obrada.vue\"],\"names\":[],\"mappings\":\"AACA,yCACE,YAAc,CACf,AACD,gDACI,mBAAoB,AACpB,eAAkB,CACrB,AACD,6BACE,WAAY,AACZ,oBAAsB,CACvB,AACD,mCACE,aAAe,CAChB,AACD,yBACE,uBAA0B,CAC3B,AACD,yBACE,WAAY,AACZ,WAAa,AACb,YAAa,AACb,kBAAmB,AACnB,oBAAsB,CACvB\",\"file\":\"Obrada.vue\",\"sourcesContent\":[\"\\n.collapse-page__content[data-v-3f02d9e7] {\\n  padding: 2rem;\\n}\\n.collapse-page__content__title[data-v-3f02d9e7] {\\n    font-size: 1.375rem;\\n    font-weight: bold;\\n}\\n.icon-bar a[data-v-3f02d9e7] {\\n  color: #fff;\\n  text-decoration: none;\\n}\\n.icon-bar a[data-v-3f02d9e7]:hover {\\n  color: #4ae387;\\n}\\ni[data-v-3f02d9e7]:hover {\\n  color: #4ae387 !important;\\n}\\n.circle[data-v-3f02d9e7] {\\n  width: 1rem;\\n  opacity: 0.5;\\n  height: 1rem;\\n  border-radius: 50%;\\n  display: inline-block;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n\n/***/ \"FrRU\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(\"iF2Y\");\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(\"rjj0\")(\"3e059dfc\", content, true);\n\n/***/ }),\n\n/***/ \"G5/o\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// 19.1.2.7 Object.getOwnPropertyNames(O)\n__webpack_require__(\"uqUo\")('getOwnPropertyNames', function () {\n  return __webpack_require__(\"Rrel\").f;\n});\n\n\n/***/ }),\n\n/***/ \"IEaf\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"collapse-page\"},[(_vm.show)?_c('div',{staticClass:\"flex md12\"},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.main && _vm.pdf),expression:\"!main && pdf\"}]},[_c('div',{staticClass:\"btn-container\"},[_c('button',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.verificiran),expression:\"verificiran\"}],staticClass:\"btn btn-secondary btn-sm\",on:{\"click\":function($event){$event.preventDefault();_vm.Nazad()}}},[_c('span',{staticClass:\"fa fa-step-backward\"}),_vm._v(\"\\n          \"+_vm._s(' NAZAD')+\"\\n        \")]),_vm._v(\" \"),_c('button',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.verificiran),expression:\"!verificiran\"}],staticClass:\"btn btn-secondary-danger btn-sm\",on:{\"click\":function($event){$event.preventDefault();_vm.Nazad()}}},[_c('span',{staticClass:\"fa fa-step-backward\"}),_vm._v(\"\\n          \"+_vm._s(' NAZAD')+\"\\n        \")]),_vm._v(\" \"),_c('button',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.email_button && _vm.verificiran),expression:\"email_button && verificiran\"}],staticClass:\"btn btn-secondary btn-sm pull-right\",attrs:{\"disabled\":!_vm.Email(_vm.email)},on:{\"click\":function($event){$event.preventDefault();_vm.MailDialog()}}},[_c('span',{staticClass:\"glyphicon glyphicon-send\"}),_vm._v(\"\\n          \"+_vm._s(' Pošalji')+\"\\n        \")]),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.email_button && _vm.verificiran),expression:\"email_button && verificiran\"}],staticClass:\"form-group with-icon-left pull-right\"},[_c('div',{staticClass:\"input-group\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.email),expression:\"email\"}],attrs:{\"size\":\"40\",\"id\":\"input-icon-left\",\"name\":\"input-icon-left\",\"title\":\" \",\"required\":\"\"},domProps:{\"value\":(_vm.email)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.email=$event.target.value}}}),_vm._v(\" \"),_c('i',{staticClass:\"fa fa-envelope-o icon-left input-icon\"}),_vm._v(\" \"),_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"input-icon-left\"}},[_vm._v(_vm._s('Email adresa'))]),_vm._v(\" \"),_c('i',{staticClass:\"bar\"})])])]),_vm._v(\" \"),_c('hr'),_vm._v(\" \"),_c('div',{attrs:{\"id\":\"pdf-container\"}})]),_vm._v(\" \"),_c('vuestic-widget',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.main),expression:\"main\"}],attrs:{\"headerText\":_vm.header,\"pagination\":_vm.pagination,\"main\":_vm.main,\"data_pid\":Number(_vm.data_pid),\"data_length\":Number(_vm.data_length),\"rezultati_length\":_vm.Results.length,\"spol\":_vm.data_spol,\"data_min\":Number(_vm.data_min),\"datum\":_vm.query_date,\"today\":_vm.today_date,\"forward_disabled\":_vm.forward_disabled,\"backward_disabled\":_vm.backward_disabled}},[_c('vuestic-accordion-obrada',_vm._l((_vm.uzorci),function(uzorak){return _c('vuestic-collapse-obrada',{directives:[{name:\"show\",rawName:\"v-show\",value:(!uzorak.removed),expression:\"!uzorak.removed\"}],key:uzorak.sid,attrs:{\"id\":uzorak.sid,\"sample\":uzorak}},[_c('span',{attrs:{\"slot\":\"header\",\"id\":uzorak.sid},slot:\"header\"},[_vm._v(_vm._s(uzorak.sid))]),_vm._v(\" \"),_c('div',{attrs:{\"slot\":\"body\"},slot:\"body\"},[_c('div',{staticStyle:{\"line-height\":\"10px\"}},[_vm._v(\" \")]),_vm._v(\" \"),(uzorak.tip.includes('Mikrobiologija'))?_c('div',{staticClass:\"va-row\"},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.show_table),expression:\"show_table\"}],staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped first-td-padding\"},[_c('thead',[_c('tr',{attrs:{\"align\":\"middle\"}},[(uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN')?_c('td'):_vm._e(),_vm._v(\" \"),_c('td',[_vm._v(_vm._s('ANALIZA'))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s('REZULTAT'))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s('JEDINICA'))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s('REFERENCE'))]),_vm._v(\" \"),(uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN')?_c('td'):_vm._e(),_vm._v(\" \"),(uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN')?_c('td',[_vm._v(_vm._s('PONOVI'))]):_vm._e(),_vm._v(\" \"),_c('td')])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.rezultati),function(test,index){return _c('tr',{directives:[{name:\"show\",rawName:\"v-show\",value:(index < 1),expression:\"index < 1\"}],key:test.labassay_id,class:{\n                        'table-danger': (test.rezultat_m.length && test.rezultat_m[0].pozitivan), \n                        'table-success': (test.rezultat_m.length && test.rezultat_m[0].negativan),\n                        'table-warning': false\n                      },attrs:{\"align\":\"middle\"}},[(uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN')?_c('td',[(uzorak.status === 'ZAPRIMLJEN')?_c('span',{staticClass:\"fa fa-bug\",staticStyle:{\"color\":\"#e34a4a\"},on:{\"click\":function($event){$event.preventDefault();_vm.MicroResultSelect($event)}}}):_vm._e(),_vm._v(\" \"),(uzorak.status != 'ZAPRIMLJEN')?_c('span',{staticClass:\"fa fa-trash\",staticStyle:{\"color\":\"#e34a4a\"},on:{\"click\":function($event){$event.preventDefault();_vm.ResetSample($event)}}}):_vm._e()]):_vm._e(),_vm._v(\" \"),_c('td',{attrs:{\"title\":test.analit}},[_c('span',[_vm._v(_vm._s(test.ime))])]),_vm._v(\" \"),(test.realizovan)?_c('td',[_c('button',{staticClass:\"btn btn-primary btn-micro\",attrs:{\"id\":test.labassay_id},on:{\"click\":function($event){$event.preventDefault();_vm.OpenMicro($event, test)}}},[_c('span',{staticClass:\"glyphicon glyphicon-search\",attrs:{\"id\":test.labassay_id},on:{\"click\":function($event){$event.preventDefault();_vm.OpenMicro($event, test)}}}),_vm._v(\"\\n                          \"+_vm._s('VIŠE')+\"\\n                        \")])]):_vm._e(),_vm._v(\" \"),(!test.realizovan)?_c('td',[_c('button',{staticClass:\"btn btn-pale btn-micro\",attrs:{\"id\":test.labassay_id}},[_c('span',{staticClass:\"glyphicon glyphicon-ban-circle\",attrs:{\"id\":test.labassay_id}}),_vm._v(\"\\n                          \"+_vm._s('VIŠE')+\"\\n                        \")])]):_vm._e(),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(test.unit))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s('/'))]),_vm._v(\" \"),(uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN')?_c('td',[_c('i',{staticClass:\"glyphicon glyphicon-stats\",staticStyle:{\"font-size\":\"15px\",\"color\":\"#f7cc36\",\"opacity\":\"0\"},attrs:{\"id\":\"reference\",\"title\":\" \"}})]):_vm._e(),_vm._v(\" \"),(uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN')?_c('td',[_c('button',{staticClass:\"btn btn-pale btn-micro\"},[_c('span',{staticClass:\"glyphicon glyphicon-ban-circle\"})])]):_vm._e(),_vm._v(\" \"),_c('td',[_c('i',{class:{'fa fa-exclamation-triangle icon-right input-icon error-icon' : false},on:{\"click\":function($event){$event.preventDefault();_vm.Exclamation(test)}}}),_vm._v(\" \"),_c('i',{class:{'fa fa-check success-icon icon-right input-icon' : false}})])])}))])])]):_vm._e(),_vm._v(\" \"),(!uzorak.tip.includes('Mikrobiologija'))?_c('div',{staticClass:\"va-row\"},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.show_table),expression:\"show_table\"}],staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped first-td-padding\"},[_c('thead',[_c('tr',{attrs:{\"align\":\"middle\"}},[(uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN')?_c('td'):_vm._e(),_vm._v(\" \"),_c('td',[_vm._v(_vm._s('ANALIZA'))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s('REZULTAT'))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s('JEDINICA'))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s('REFERENCE'))]),_vm._v(\" \"),(uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN')?_c('td'):_vm._e(),_vm._v(\" \"),(uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN' && _vm.calculated)?_c('td',[_vm._v(_vm._s('AKCIJA'))]):_vm._e(),_vm._v(\" \"),(uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN')?_c('td',[_vm._v(_vm._s('PONOVI'))]):_vm._e(),_vm._v(\" \"),_c('td')])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.rezultati),function(test){return _c('tr',{key:test.labassay_id,class:{\n                        'table-danger': _vm.Interpretacija(test.analit, test.rezultat, test.unit, test.dRef, test.gRef, _vm.$store.state.site, test.interp, test.extend, _vm.spec)[5] === 'Red' && !test.multidata, \n                        'table-success': _vm.Interpretacija(test.analit, test.rezultat, test.unit, test.dRef, test.gRef, _vm.$store.state.site, test.interp, test.extend, _vm.spec)[5] === 'Green' && !test.multidata,\n                        'table-warning': _vm.Interpretacija(test.analit, test.rezultat, test.unit, test.dRef, test.gRef, _vm.$store.state.site, test.interp, test.extend, _vm.spec)[5] === 'Yellow' && !test.multidata\n                      },attrs:{\"align\":\"middle\"}},[(uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN')?_c('td',[(!test.multidata)?_c('i',{staticClass:\"glyphicon glyphicon-object-align-bottom\",staticStyle:{\"color\":\"#4ae387\"},on:{\"click\":function($event){$event.preventDefault();_vm.SelectAnalyser(test)}}}):_vm._e(),_vm._v(\" \"),(test.multidata)?_c('span',{staticClass:\"glyphicon glyphicon-object-align-bottom\",staticStyle:{\"color\":\"#d9d9d9\"}}):_vm._e()]):_vm._e(),_vm._v(\" \"),_c('td',{attrs:{\"title\":test.analit}},[_c('span',{on:{\"contextmenu\":function($event){_vm.LabAssayEval($event, test)},\"click\":function($event){$event.preventDefault();_vm.Evaluation(test)}}},[_vm._v(_vm._s(test.ime))])]),_vm._v(\" \"),(!test.multidata)?_c('td',[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.edit == false),expression:\"test.edit == false\"}],staticStyle:{\"display\":\"inline\",\"font-size\":\"14px\",\"line-height\":\"4.5px\"}},[_c('label',[_c('strong',[_vm._v(_vm._s(test.rezultat))])])]),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.edit == true),expression:\"test.edit == true\"}],staticStyle:{\"display\":\"inline\",\"line-height\":\"5px\"}},[(test.select_options != undefined)?_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(test.rezultat),expression:\"test.rezultat\"}],staticStyle:{\"width\":\"110px\"},on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.$set(test, \"rezultat\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},_vm._l((test.select_options),function(option){return _c('option',{key:option},[_vm._v(_vm._s(option))])})):_vm._e()]),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.edit == true),expression:\"test.edit == true\"}],staticStyle:{\"display\":\"inline\"}},[(test.select_options === undefined)?_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(test.rezultat),expression:\"test.rezultat\"}],staticStyle:{\"width\":\"110px\",\"font-size\":\"12px\",\"line-height\":\"7px\"},domProps:{\"value\":(test.rezultat)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(test, \"rezultat\", $event.target.value)}}}):_vm._e()]),_vm._v(\" \"),_c('sup',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.vise > 2),expression:\"test.vise > 2\"}],on:{\"click\":function($event){$event.preventDefault();_vm.GetResults(test, uzorak.status)}}},[_c('i',{staticClass:\"fa fa-star\",staticStyle:{\"font-size\":\"5px\",\"color\":\"#e34a4a\"},attrs:{\"id\":\"star\",\"title\":\" \"}})]),_vm._v(\" \"),_c('sup',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.vise < 3),expression:\"test.vise < 3\"}]},[_c('i',{staticClass:\"fa fa-star-o\",staticStyle:{\"font-size\":\"5px\",\"opacity\":\"0\"},attrs:{\"id\":\"star\",\"title\":\" \"}})])]):_vm._e(),_vm._v(\" \"),(test.multidata && test.realizovan)?_c('td',[_c('button',{staticClass:\"btn btn-primary btn-micro\",attrs:{\"id\":test.labassay_id},on:{\"click\":function($event){$event.preventDefault();_vm.MultiGet($event, test.ime, test.analit, test.rezultat, test.odobren)}}},[_c('span',{staticClass:\"glyphicon glyphicon-search\",attrs:{\"id\":test.labassay_id},on:{\"click\":function($event){$event.preventDefault();_vm.MultiGet($event, test.ime, test.analit, test.rezultat, test.odobren)}}}),_vm._v(\"\\n                          \"+_vm._s('VIŠE')+\"\\n                        \")]),_vm._v(\" \"),_c('sup',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.multi_count > 2),expression:\"test.multi_count > 2\"}],on:{\"click\":function($event){$event.preventDefault();_vm.GetResultsMulti(test, uzorak.status)}}},[_c('i',{staticClass:\"fa fa-star\",staticStyle:{\"font-size\":\"5px\",\"color\":\"#e34a4a\"},attrs:{\"id\":\"star\",\"title\":\" \"}})]),_vm._v(\" \"),_c('sup',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.multi_count < 3),expression:\"test.multi_count < 3\"}]},[_c('i',{staticClass:\"fa fa-star-o\",staticStyle:{\"font-size\":\"5px\",\"opacity\":\"0\"},attrs:{\"id\":\"star\",\"title\":\" \"}})])]):_vm._e(),_vm._v(\" \"),(test.multidata && !test.realizovan)?_c('td',[_c('button',{staticClass:\"btn btn-warning btn-micro\",attrs:{\"id\":test.labassay_id},on:{\"click\":function($event){$event.preventDefault();_vm.MultiGet($event, test.ime, test.analit, test.rezultat, test.odobren)}}},[_c('span',{staticClass:\"glyphicon glyphicon-search\",attrs:{\"id\":test.labassay_id},on:{\"click\":function($event){$event.preventDefault();_vm.MultiGet($event, test.ime, test.analit, test.rezultat, test.odobren)}}}),_vm._v(\"\\n                          \"+_vm._s('VIŠE')+\"\\n                        \")]),_vm._v(\" \"),_c('sup',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.multi_count > 2),expression:\"test.multi_count > 2\"}],on:{\"click\":function($event){$event.preventDefault();_vm.GetResultsMulti(test, uzorak.status)}}},[_c('i',{staticClass:\"fa fa-star\",staticStyle:{\"font-size\":\"5px\",\"color\":\"#e34a4a\"},attrs:{\"id\":\"star\",\"title\":\" \"}})]),_vm._v(\" \"),_c('sup',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.multi_count < 3),expression:\"test.multi_count < 3\"}]},[_c('i',{staticClass:\"fa fa-star-o\",staticStyle:{\"font-size\":\"5px\",\"opacity\":\"0\"},attrs:{\"id\":\"star\",\"title\":\" \"}})])]):_vm._e(),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(test.unit))]),_vm._v(\" \"),(!test.multidata)?_c('td',[_vm._v(_vm._s(_vm.Interpretacija(test.analit, test.rezultat, test.unit, test.dRef, test.gRef, _vm.$store.state.site, test.interp, test.extend, _vm.spec)[4]))]):_vm._e(),_vm._v(\" \"),(test.multidata)?_c('td',[_vm._v(_vm._s('/'))]):_vm._e(),_vm._v(\" \"),(uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN')?_c('td',[(!test.multidata)?_c('i',{staticClass:\"glyphicon glyphicon-stats\",staticStyle:{\"font-size\":\"15px\",\"color\":\"#f7cc36\"},attrs:{\"id\":\"reference\",\"title\":\" \"},on:{\"click\":function($event){$event.preventDefault();_vm.Reference($event, test)}}}):_vm._e(),_vm._v(\" \"),(test.multidata)?_c('i',{staticClass:\"glyphicon glyphicon-stats\",staticStyle:{\"font-size\":\"15px\",\"color\":\"#f7cc36\",\"opacity\":\"0\"},attrs:{\"id\":\"reference\",\"title\":\" \"}}):_vm._e()]):_vm._e(),_vm._v(\" \"),(uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN' && _vm.calculated && !test.calculated)?_c('td',[_c('button',{staticClass:\"btn btn-pale btn-micro\"},[_c('span',{staticClass:\"glyphicon glyphicon-ban-circle\"})])]):_vm._e(),_vm._v(\" \"),(uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN' && _vm.calculated && test.calculated)?_c('td',[_c('button',{staticClass:\"btn btn-primary btn-micro\",attrs:{\"id\":test.test},on:{\"click\":function($event){$event.preventDefault();_vm.Calculate($event, test.labassay_id, test.ime, test.id)}}},[_c('span',{staticClass:\"fa fa-calculator\",attrs:{\"id\":test.test}})])]):_vm._e(),_vm._v(\" \"),(uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN' \n                        && (test.rezultat === '' || test.manual || test.calculated))?_c('td',[_c('button',{staticClass:\"btn btn-pale btn-micro\"},[_c('span',{staticClass:\"glyphicon glyphicon-ban-circle\"})])]):_vm._e(),_vm._v(\" \"),(uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN' \n                        && test.rezultat != '' && !test.manual && !test.calculated)?_c('td',[(!test.retest)?_c('button',{staticClass:\"btn btn-primary btn-micro\",attrs:{\"id\":test.test},on:{\"click\":function($event){$event.preventDefault();_vm.RetestEnable($event)}}},[_c('span',{staticClass:\"fa fa-refresh\",attrs:{\"id\":test.test}})]):_vm._e(),_vm._v(\" \"),(test.retest)?_c('button',{staticClass:\"btn btn-info btn-micro\",attrs:{\"id\":test.test},on:{\"click\":function($event){$event.preventDefault();_vm.RetestDisable($event)}}},[_c('span',{staticClass:\"glyphicon glyphicon-duplicate\",attrs:{\"id\":test.test}})]):_vm._e()]):_vm._e(),_vm._v(\" \"),_c('td',[_c('i',{class:{'fa fa-exclamation-triangle icon-right input-icon error-icon' : _vm.Interpretacija(test.analit, test.rezultat, test.unit, test.dRef, test.gRef, _vm.$store.state.site, test.interp, test.extend, _vm.spec)[5] === 'Red' && !test.multidata},on:{\"click\":function($event){$event.preventDefault();_vm.Exclamation(test)}}}),_vm._v(\" \"),_c('i',{class:{'fa fa-check success-icon icon-right input-icon' : _vm.Interpretacija(test.analit, test.rezultat, test.unit, test.dRef, test.gRef, _vm.$store.state.site, test.interp, test.extend, _vm.spec)[5] === 'Green' && !test.multidata}})])])}))])])]):_vm._e()])])})),_vm._v(\" \"),_c('div',{staticStyle:{\"min-height\":\"10px\"}}),_vm._v(\" \"),(_vm.verificiran)?_c('div',{staticClass:\"va-row\"},[_c('div',{staticClass:\"flex md12\"},[_c('vuestic-collapse-nalaz',{attrs:{\"final\":_vm.verificiran,\"final_pdf\":_vm.final_pdf,\"samples\":_vm.samples,\"pdf\":_vm.link,\"pacijent\":_vm.ime + ' ' + _vm.prezime}},[_c('span',{attrs:{\"slot\":\"header\"},slot:\"header\"},[_vm._v(\"Nalaz\")]),_vm._v(\" \"),_c('div',{attrs:{\"slot\":\"body\"},slot:\"body\"},[_c('div',{staticClass:\"va-row\"})])])],1)]):_vm._e(),_vm._v(\" \"),_c('div',[_c('hr')]),_vm._v(\" \"),_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-3\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-6\"},[_c('div',{staticClass:\"btn-container\"},[_c('button',{staticClass:\"btn btn-secondary btn-sm wizard-back pull-left\",on:{\"click\":function($event){$event.preventDefault();_vm.Povratak()}}},[_c('span',{staticClass:\"fa fa-backward\"}),_vm._v(\"\\n              \"+_vm._s(' POVRATAK')+\"\\n            \")]),_vm._v(\" \"),(_vm.partials_condition && !_vm.verificiran)?_c('button',{staticClass:\"btn btn-secondary-warning btn-sm wizard-back pull-right\",staticStyle:{\"text-transform\":\"none\",\"color\":\"#e34a4a\"},on:{\"click\":function($event){$event.preventDefault();_vm.Partials()}}},[_c('span',{staticClass:\"fa fa-file-pdf-o\",staticStyle:{\"color\":\"#e34a4a\"}}),_vm._v(\"\\n              \"+_vm._s(' Djelimični nalaz')+\"\\n            \")]):_vm._e()])])])],1),_vm._v(\" \"),_c('vuestic-modal-multi',{ref:\"largeModalMulti\",attrs:{\"show\":_vm.show,\"sample\":_vm.sample,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(_vm._s(_vm.naslov))]),_vm._v(\" \"),_c('div',{staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped first-td-padding\"},[_c('thead',[_c('tr',{attrs:{\"align\":\"middle\"}},[_c('td',{attrs:{\"width\":\"10%\"}}),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('ANALIT'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"30%\"}},[_vm._v(_vm._s('REZULTAT'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"10%\"}},[_vm._v(_vm._s('JEDINICA'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('REFERENCE'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"10%\"}})])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.analiti),function(test){return _c('tr',{key:test.labID,class:{\n                  'table-danger': _vm.Interpretacija(test.opis, test.rezultat, test.jedinica, test.refd, test.refg, _vm.$store.state.site, test.interp, test.extend, _vm.spec)[5] === 'Red' && !test.rezultat_multiple.length, \n                  'table-success': _vm.Interpretacija(test.opis, test.rezultat, test.jedinica, test.refd, test.refg, _vm.$store.state.site, test.interp, test.extend, _vm.spec)[5] === 'Green' && !test.rezultat_multiple.length, \n                  'table-warning': _vm.Interpretacija(test.opis, test.rezultat, test.jedinica, test.refd, test.refg, _vm.$store.state.site, test.interp, test.extend, _vm.spec)[5] === 'Yellow' && !test.rezultat_multiple.length                                  \n                },attrs:{\"align\":\"middle\"}},[(test.flag != '')?_c('td',[_vm._v(_vm._s(test.flag))]):_vm._e(),_vm._v(\" \"),(test.flag === '')?_c('td',[_vm._v(\" \")]):_vm._e(),_vm._v(\" \"),_c('td',{attrs:{\"title\":test.opis}},[_vm._v(_vm._s(test.naziv))]),_vm._v(\" \"),_c('td',{attrs:{\"id\":test.analit}},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.edit == false),expression:\"test.edit == false\"}]},[_c('label',[_c('strong',[_vm._v(_vm._s(test.rezultat))])])]),_vm._v(\" \"),(test.select_options != undefined && (test.kod === 's03' || test.kod === 's04' || test.kod === 's08' || test.kod === 's09'))?_c('select',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.edit == true),expression:\"test.edit == true\"},{name:\"model\",rawName:\"v-model\",value:(test.rezultat_multiple),expression:\"test.rezultat_multiple\"}],staticStyle:{\"min-width\":\"200px\"},attrs:{\"multiple\":\"\",\"size\":test.select_options.length},on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.$set(test, \"rezultat_multiple\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},_vm._l((test.select_options),function(option){return _c('option',{key:option},[_vm._v(_vm._s(option))])})):_vm._e(),_vm._v(\" \"),(test.select_options != undefined && (test.kod != 's03' && test.kod != 's04' && test.kod != 's08' && test.kod != 's09'))?_c('select',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.edit == true),expression:\"test.edit == true\"},{name:\"model\",rawName:\"v-model\",value:(test.rezultat),expression:\"test.rezultat\"}],staticStyle:{\"width\":\"200px\"},on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.$set(test, \"rezultat\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},_vm._l((test.select_options),function(option){return _c('option',{key:option},[_vm._v(_vm._s(option))])})):_vm._e(),_vm._v(\" \"),(test.select_options === undefined)?_c('input',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.edit == true),expression:\"test.edit == true\"},{name:\"model\",rawName:\"v-model\",value:(test.rezultat),expression:\"test.rezultat\"}],staticStyle:{\"width\":\"200px\"},domProps:{\"value\":(test.rezultat)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(test, \"rezultat\", $event.target.value)}}}):_vm._e()]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(_vm.Interpretacija(test.opis, test.rezultat, test.jedinica, test.refd, test.refg, _vm.$store.state.site, test.interp, test.extend, _vm.spec)[3]))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(_vm.Interpretacija(test.opis, test.rezultat, test.jedinica, test.refd, test.refg, _vm.$store.state.site, test.interp, test.extend, _vm.spec)[4]))]),_vm._v(\" \"),_c('td',[_c('i',{class:{'fa fa-exclamation-triangle icon-right input-icon error-icon' : _vm.Interpretacija(test.opis, test.rezultat, test.jedinica, test.refd, test.refg, _vm.$store.state.site, test.interp, test.extend, _vm.spec)[5] === 'Red' && !test.rezultat_multiple.length},on:{\"click\":function($event){$event.preventDefault();_vm.ExclamationMulti(test)}}}),_vm._v(\" \"),_c('i',{class:{'fa fa-check success-icon icon-right input-icon' : _vm.Interpretacija(test.opis, test.rezultat, test.jedinica, test.refd, test.refg, _vm.$store.state.site, test.interp, test.extend, _vm.spec)[5] === 'Green' && !test.rezultat_multiple.length}})])])}))])])]),_vm._v(\" \"),_c('vuestic-modal-micro-reset',{ref:\"staticModalResetSample\",attrs:{\"show\":_vm.show,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',{staticStyle:{\"color\":\"#acb5be\"}},[_vm._v(_vm._s('Brisanje rezultata: '))]),_vm._v(\" \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(_vm.CurrentTest))])]),_vm._v(\" \"),_c('div',[_c('h5',[_vm._v(_vm._s('Jeste li sigurni da želite obrisati rezultat?'))])])]),_vm._v(\" \"),_c('vuestic-modal-micro-bactery',{ref:\"staticModalMicroBactery\",attrs:{\"show\":_vm.show,\"large\":true,\"sample\":_vm.sample,\"update\":_vm.$store.state.access.level < 1 && !_vm.ShowAntibiotics && !_vm.ShowBacteries && _vm.MicrobiologyScenario === 'MAIBPoR',\"povratak\":_vm.ShowAntibiotics || _vm.ShowBacteries,\"empty\":_vm.TemporaryAntibiotics.length > 0 || _vm.TemporaryBacteriesAdd.length > 0,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[(!_vm.ShowAntibiotics && !_vm.ShowBacteries)?_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',{staticStyle:{\"color\":\"#acb5be\"}},[_vm._v(_vm._s('Rezultat analize: '))]),_vm._v(\" \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(_vm.CurrentTest))])]):_vm._e(),_vm._v(\" \"),(_vm.ShowAntibiotics && !_vm.ShowBacteries)?_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',{staticStyle:{\"color\":\"#acb5be\"}},[_vm._v(_vm._s('Antibiotici | '))]),_vm._v(\" \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"Izbornik\"))])]):_vm._e(),_vm._v(\" \"),(!_vm.ShowAntibiotics && _vm.ShowBacteries)?_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',{staticStyle:{\"color\":\"#acb5be\"}},[_vm._v(_vm._s('Bakterije | '))]),_vm._v(\" \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"Izbornik\"))])]):_vm._e(),_vm._v(\" \"),_c('div',[(_vm.show_table)?_c('div',{staticClass:\"row\"},[(_vm.MicrobiologyScenario === 'MAIBPoR' && _vm.ShowBacteries && !_vm.ShowAntibiotics)?_c('div',{staticClass:\"col-md-1\"}):_vm._e(),_vm._v(\" \"),(_vm.MicrobiologyScenario === 'MAIBPoR' && _vm.ShowBacteries && !_vm.ShowAntibiotics)?_c('div',{staticClass:\"col-md-10\"},[(_vm.TemporaryBacteries.length)?_c('div',{staticClass:\"col-md-12\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-4\"},_vm._l((_vm.filteredBacteries(1, 3)),function(bactery){return _c('div',{key:bactery._id,staticClass:\"form-check abc-checkbox abc-checkbox-primary\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(bactery.chosen),expression:\"bactery.chosen\"}],staticClass:\"form-check-input\",attrs:{\"id\":bactery._id,\"type\":\"checkbox\",\"disabled\":bactery.disabled},domProps:{\"checked\":Array.isArray(bactery.chosen)?_vm._i(bactery.chosen,null)>-1:(bactery.chosen)},on:{\"click\":function($event){_vm.AddBacteries(bactery)},\"change\":function($event){var $$a=bactery.chosen,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(bactery.chosen=$$a.concat([$$v]))}else{$$i>-1&&(bactery.chosen=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.$set(bactery, \"chosen\", $$c)}}}}),_vm._v(\" \"),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":\"checkbox\"}},[(!bactery.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(bactery.opis))]):_vm._e(),_vm._v(\" \"),(bactery.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#4ae387\"}},[_vm._v(_vm._s(bactery.opis))]):_vm._e()])])})),_vm._v(\" \"),_c('div',{staticClass:\"col-md-4\"},_vm._l((_vm.filteredBacteries(2, 3)),function(bactery){return _c('div',{key:bactery._id,staticClass:\"form-check abc-checkbox abc-checkbox-primary\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(bactery.chosen),expression:\"bactery.chosen\"}],staticClass:\"form-check-input\",attrs:{\"id\":bactery._id,\"type\":\"checkbox\",\"disabled\":bactery.disabled},domProps:{\"checked\":Array.isArray(bactery.chosen)?_vm._i(bactery.chosen,null)>-1:(bactery.chosen)},on:{\"click\":function($event){_vm.AddBacteries(bactery)},\"change\":function($event){var $$a=bactery.chosen,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(bactery.chosen=$$a.concat([$$v]))}else{$$i>-1&&(bactery.chosen=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.$set(bactery, \"chosen\", $$c)}}}}),_vm._v(\" \"),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":\"checkbox\"}},[(!bactery.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(bactery.opis))]):_vm._e(),_vm._v(\" \"),(bactery.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#4ae387\"}},[_vm._v(_vm._s(bactery.opis))]):_vm._e()])])})),_vm._v(\" \"),_c('div',{staticClass:\"col-md-4\"},_vm._l((_vm.filteredBacteries(3, 3)),function(bactery){return _c('div',{key:bactery._id,staticClass:\"form-check abc-checkbox abc-checkbox-primary\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(bactery.chosen),expression:\"bactery.chosen\"}],staticClass:\"form-check-input\",attrs:{\"id\":bactery._id,\"type\":\"checkbox\",\"disabled\":bactery.disabled},domProps:{\"checked\":Array.isArray(bactery.chosen)?_vm._i(bactery.chosen,null)>-1:(bactery.chosen)},on:{\"click\":function($event){_vm.AddBacteries(bactery)},\"change\":function($event){var $$a=bactery.chosen,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(bactery.chosen=$$a.concat([$$v]))}else{$$i>-1&&(bactery.chosen=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.$set(bactery, \"chosen\", $$c)}}}}),_vm._v(\" \"),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":\"checkbox\"}},[(!bactery.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(bactery.opis))]):_vm._e(),_vm._v(\" \"),(bactery.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#4ae387\"}},[_vm._v(_vm._s(bactery.opis))]):_vm._e()])])}))])]):_vm._e()]):_vm._e(),_vm._v(\" \"),(_vm.MicrobiologyScenario === 'MAIBPoR' && _vm.ShowAntibiotics && !_vm.ShowBacteries)?_c('div',{staticClass:\"col-md-1\"}):_vm._e(),_vm._v(\" \"),(_vm.MicrobiologyScenario === 'MAIBPoR' && _vm.ShowAntibiotics && !_vm.ShowBacteries)?_c('div',{staticClass:\"col-md-10\"},[(_vm.Antibiotics.length)?_c('div',{staticClass:\"col-md-12\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-4\"},_vm._l((_vm.filteredAntibiotics(1, 3)),function(antibiotik){return _c('div',{key:antibiotik._id,staticClass:\"form-check abc-checkbox abc-checkbox-primary\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(antibiotik.chosen),expression:\"antibiotik.chosen\"}],staticClass:\"form-check-input\",attrs:{\"id\":antibiotik._id,\"type\":\"checkbox\",\"disabled\":antibiotik.disabled},domProps:{\"checked\":Array.isArray(antibiotik.chosen)?_vm._i(antibiotik.chosen,null)>-1:(antibiotik.chosen)},on:{\"click\":function($event){_vm.AddAntibiotics(antibiotik)},\"change\":function($event){var $$a=antibiotik.chosen,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(antibiotik.chosen=$$a.concat([$$v]))}else{$$i>-1&&(antibiotik.chosen=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.$set(antibiotik, \"chosen\", $$c)}}}}),_vm._v(\" \"),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":\"checkbox\"}},[(!antibiotik.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(antibiotik.opis))]):_vm._e(),_vm._v(\" \"),(antibiotik.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#4ae387\"}},[_vm._v(_vm._s(antibiotik.opis))]):_vm._e()])])})),_vm._v(\" \"),_c('div',{staticClass:\"col-md-4\"},_vm._l((_vm.filteredAntibiotics(2, 3)),function(antibiotik){return _c('div',{key:antibiotik._id,staticClass:\"form-check abc-checkbox abc-checkbox-primary\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(antibiotik.chosen),expression:\"antibiotik.chosen\"}],staticClass:\"form-check-input\",attrs:{\"id\":antibiotik._id,\"type\":\"checkbox\",\"disabled\":antibiotik.disabled},domProps:{\"checked\":Array.isArray(antibiotik.chosen)?_vm._i(antibiotik.chosen,null)>-1:(antibiotik.chosen)},on:{\"click\":function($event){_vm.AddAntibiotics(antibiotik)},\"change\":function($event){var $$a=antibiotik.chosen,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(antibiotik.chosen=$$a.concat([$$v]))}else{$$i>-1&&(antibiotik.chosen=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.$set(antibiotik, \"chosen\", $$c)}}}}),_vm._v(\" \"),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":\"checkbox\"}},[(!antibiotik.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(antibiotik.opis))]):_vm._e(),_vm._v(\" \"),(antibiotik.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#4ae387\"}},[_vm._v(_vm._s(antibiotik.opis))]):_vm._e()])])})),_vm._v(\" \"),_c('div',{staticClass:\"col-md-4\"},_vm._l((_vm.filteredAntibiotics(3, 3)),function(antibiotik){return _c('div',{key:antibiotik._id,staticClass:\"form-check abc-checkbox abc-checkbox-primary\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(antibiotik.chosen),expression:\"antibiotik.chosen\"}],staticClass:\"form-check-input\",attrs:{\"id\":antibiotik._id,\"type\":\"checkbox\",\"disabled\":antibiotik.disabled},domProps:{\"checked\":Array.isArray(antibiotik.chosen)?_vm._i(antibiotik.chosen,null)>-1:(antibiotik.chosen)},on:{\"click\":function($event){_vm.AddAntibiotics(antibiotik)},\"change\":function($event){var $$a=antibiotik.chosen,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(antibiotik.chosen=$$a.concat([$$v]))}else{$$i>-1&&(antibiotik.chosen=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.$set(antibiotik, \"chosen\", $$c)}}}}),_vm._v(\" \"),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":\"checkbox\"}},[(!antibiotik.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(antibiotik.opis))]):_vm._e(),_vm._v(\" \"),(antibiotik.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#4ae387\"}},[_vm._v(_vm._s(antibiotik.opis))]):_vm._e()])])}))])]):_vm._e()]):_vm._e(),_vm._v(\" \"),(_vm.MicrobiologyScenario === 'MAIBPoR' && !_vm.ShowAntibiotics && !_vm.ShowBacteries)?_c('div',{staticClass:\"col-md-1\"}):_vm._e(),_vm._v(\" \"),(_vm.MicrobiologyScenario === 'MAIBPoR' && !_vm.ShowAntibiotics && !_vm.ShowBacteries)?_c('div',{staticClass:\"col-md-10\"},[(_vm.SelectedBacteries.length)?_c('vuestic-tabs-bactery',{ref:\"tabs\",attrs:{\"names\":_vm.BacteryTabs,\"tab\":_vm.CurrentTab,\"id\":_vm.CurrentTab,\"prikazi\":_vm.sample.status != 'VERIFICIRAN' && _vm.sample.status != 'ODOBREN'}},_vm._l((_vm.SelectedBacteries),function(test){return _c('div',{key:test._id,attrs:{\"slot\":_vm.CurrentTab},slot:_vm.CurrentTab},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.opis === _vm.CurrentTab),expression:\"test.opis === CurrentTab\"}],staticClass:\"row\"},[_c('div',{staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped first-td-padding\"},[_c('thead',[_c('tr',{attrs:{\"align\":\"left\"}},[_c('td',{attrs:{\"width\":\"30%\"}},[_vm._v(_vm._s(test.antibiogram.opis))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"10%\"}},[_vm._v(_vm._s(''))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(''))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(''))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(''))])])]),_vm._v(\" \"),_c('tbody',_vm._l((test.antibiogram.antibiotici),function(abtk){return _c('tr',{key:abtk._id,class:{'table-danger': false, 'table-success': false,'table-warning': false},attrs:{\"align\":\"left\"}},[_c('td',{attrs:{\"title\":abtk.opis}},[_vm._v(_vm._s(abtk.opis))]),_vm._v(\" \"),_c('td',[_c('bactery-radio-button',{attrs:{\"disabled\":_vm.sample.status === 'ODOBREN' || _vm.sample.status === 'VERIFICIRAN',\"label\":'',\"value\":'',\"name\":test._id + abtk._id},model:{value:(abtk.rezultat),callback:function ($$v) {_vm.$set(abtk, \"rezultat\", $$v)},expression:\"abtk.rezultat\"}})],1),_vm._v(\" \"),_c('td',[_c('postavke-radio-button',{attrs:{\"disabled\":_vm.sample.status === 'ODOBREN' || _vm.sample.status === 'VERIFICIRAN',\"label\":'Senzitivan',\"value\":'S',\"name\":test._id + abtk._id},model:{value:(abtk.rezultat),callback:function ($$v) {_vm.$set(abtk, \"rezultat\", $$v)},expression:\"abtk.rezultat\"}})],1),_vm._v(\" \"),_c('td',[_c('postavke-radio-button',{attrs:{\"disabled\":_vm.sample.status === 'ODOBREN' || _vm.sample.status === 'VERIFICIRAN',\"label\":'Intermedijaran',\"value\":'I',\"name\":test._id + abtk._id},model:{value:(abtk.rezultat),callback:function ($$v) {_vm.$set(abtk, \"rezultat\", $$v)},expression:\"abtk.rezultat\"}})],1),_vm._v(\" \"),_c('td',[_c('postavke-radio-button',{attrs:{\"disabled\":_vm.sample.status === 'ODOBREN' || _vm.sample.status === 'VERIFICIRAN',\"label\":'Rezistentan',\"value\":'R',\"name\":test._id + abtk._id},model:{value:(abtk.rezultat),callback:function ($$v) {_vm.$set(abtk, \"rezultat\", $$v)},expression:\"abtk.rezultat\"}})],1)])}))])])])])})):_vm._e()],1):_vm._e(),_vm._v(\" \"),(_vm.MicrobiologyScenario === 'MANBNeR' || _vm.MicrobiologyScenario === 'MANBPoR' || _vm.MicrobiologyScenario === 'MAIBNeR')?_c('div',{staticClass:\"col-md-12\"},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.show_table),expression:\"show_table\"}],staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped first-td-padding\"},[_c('thead',[_c('tr',{attrs:{\"align\":\"left\"}},[_c('td',[_vm._v(_vm._s('REZULTAT'))])])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.rezultati),function(test,index){return _c('tr',{directives:[{name:\"show\",rawName:\"v-show\",value:(index < 1),expression:\"index < 1\"}],key:test.labassay_id,class:{\n                        'table-danger':  (test.rezultat_m.length && test.rezultat_m[0].pozitivan), \n                        'table-success':  (test.rezultat_m.length && test.rezultat_m[0].negativan),\n                        'table-warning': false\n                      },attrs:{\"align\":\"left\"}},[(_vm.sample.status != 'ODOBREN' &&  _vm.sample.status != 'VERIFICIRAN')?_c('td',[_c('div',{staticClass:\"form-group\"},[_c('div',{staticClass:\"input-group\"},[_c('textarea',{directives:[{name:\"model\",rawName:\"v-model\",value:(test.rezultat),expression:\"test.rezultat\"}],attrs:{\"type\":\"text\",\"id\":\"simple-textarea\",\"required\":\"\"},domProps:{\"value\":(test.rezultat)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(test, \"rezultat\", $event.target.value)}}}),_vm._v(\" \"),_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"simple-textarea\"}},[_vm._v(_vm._s(''))]),_vm._v(\" \"),_c('i',{staticClass:\"bar\"})])])]):_vm._e(),_vm._v(\" \"),(_vm.sample.status === 'ODOBREN' ||  _vm.sample.status === 'VERIFICIRAN')?_c('td',[_c('div',{staticClass:\"form-group\"},[_c('div',{staticClass:\"input-group\"},[_c('input',{attrs:{\"id\":\"input-icon-left\",\"title\":\" \",\"name\":\"input-icon-left\",\"disabled\":\"\"}}),_vm._v(\" \"),(test.rezultat.length)?_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"input-icon-left\"}},[_vm._v(_vm._s(test.rezultat))]):_vm._e(),_vm._v(\" \"),(!test.rezultat.length)?_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"input-icon-left\"}},[_vm._v(_vm._s(\"Nema podataka.\"))]):_vm._e(),_vm._v(\" \"),_c('i',{staticClass:\"bar\"})])])]):_vm._e()])}))])])]):_vm._e()]):_vm._e()])]),_vm._v(\" \"),_c('vuestic-modal-micro-result',{ref:\"staticModalSelectResult\",attrs:{\"show\":_vm.show,\"sample\":_vm.sample,\"large\":_vm.ShowAllBacteries,\"neg\":_vm.ModalNegative,\"pos\":_vm.ModalPositive,\"selected\":_vm.ModalPositiveCondition,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',{staticStyle:{\"color\":\"#acb5be\"}},[_vm._v(_vm._s(_vm.MicrobiologyModalHeader)+\" |\")]),_vm._v(\" \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"Izbornik\"))])]),_vm._v(\" \"),(!_vm.ModalNegative && !_vm.ModalPositive)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-6\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-3\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-6\"},[_c('button',{staticClass:\"btn btn-secondary btn-sm wizard-back pull-left\",staticStyle:{\"text-transform\":\"none\",\"border\":\"0px\"},on:{\"click\":function($event){_vm.ModalNegative = true; _vm.ModalPositive = false;}}},[_vm._v(_vm._s('Negativan'))])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-3\"})])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-6\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-2\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-6\"},[_c('button',{staticClass:\"btn btn-secondary-danger btn-sm wizard-next pull-right\",staticStyle:{\"text-transform\":\"none\",\"border\":\"0px\"},on:{\"click\":function($event){_vm.ModalPositive = true; _vm.ModalNegative = false;}}},[_vm._v(_vm._s('Pozitivan'))])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-4\"})])])]):_vm._e(),_vm._v(\" \"),(_vm.ModalNegative && !_vm.ModalPositive)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-1\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-11\"},_vm._l((_vm.MicrobiologyResult.NegativeDescriptions),function(desc,index){return _c('vuestic-radio-button',{key:index,attrs:{\"label\":_vm.MicrobiologyResult.NegativeDescriptions[index],\"id\":_vm.MicrobiologyResult.NegativeDescriptions[index],\"value\":_vm.MicrobiologyResult.NegativeDescriptions[index],\"name\":_vm.MicrobiologyResult.NegativeDescriptions[index],\"disabled\":false},model:{value:(_vm.NegativeResultSelection),callback:function ($$v) {_vm.NegativeResultSelection=$$v},expression:\"NegativeResultSelection\"}})}))]):_vm._e(),_vm._v(\" \"),(!_vm.ModalNegative && _vm.ModalPositive && !_vm.MicrobiologyResult.DefaultBacteries.length)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-1\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-11\"},_vm._l((_vm.MicrobiologyResult.PositiveDescriptions),function(desc,index){return _c('vuestic-radio-button',{key:index,attrs:{\"label\":_vm.MicrobiologyResult.PositiveDescriptions[index],\"id\":_vm.MicrobiologyResult.PositiveDescriptions[index],\"value\":_vm.MicrobiologyResult.PositiveDescriptions[index],\"name\":_vm.MicrobiologyResult.PositiveDescriptions[index],\"disabled\":false},model:{value:(_vm.PositiveResultSelection),callback:function ($$v) {_vm.PositiveResultSelection=$$v},expression:\"PositiveResultSelection\"}})}))]):_vm._e(),_vm._v(\" \"),(!_vm.ModalNegative && _vm.ModalPositive && _vm.MicrobiologyResult.DefaultBacteries.length)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-6\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-2\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-10\"},_vm._l((_vm.MicrobiologyResult.DefaultBacteries),function(bakt,index){return _c('div',{key:index,staticClass:\"form-check abc-checkbox abc-checkbox-primary\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(bakt.chosen),expression:\"bakt.chosen\"}],staticClass:\"form-check-input\",attrs:{\"id\":bakt._id,\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(bakt.chosen)?_vm._i(bakt.chosen,null)>-1:(bakt.chosen)},on:{\"click\":function($event){_vm.SelectBactery(bakt, index)},\"change\":function($event){var $$a=bakt.chosen,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(bakt.chosen=$$a.concat([$$v]))}else{$$i>-1&&(bakt.chosen=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.$set(bakt, \"chosen\", $$c)}}}}),_vm._v(\" \"),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":\"checkbox\"}},[_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(bakt.opis))])])])}))])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-6\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-1\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-6\"},[(!_vm.ShowAllBacteries)?_c('a',{staticStyle:{\"font-size\":\"16px\",\"color\":\"#4ae387\"},attrs:{\"href\":\"#\"},on:{\"click\":function($event){$event.preventDefault();_vm.ShowAllBacteries = true}}},[_vm._v(\"Prikaži više\")]):_vm._e()]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-5\"})]),_vm._v(\" \"),(_vm.ShowAllBacteries)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-1\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-10\"},_vm._l((_vm.MicrobiologyResult.RemainingBacteries),function(bakt,index){return _c('div',{key:index,staticClass:\"form-check abc-checkbox abc-checkbox-primary\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(bakt.chosen),expression:\"bakt.chosen\"}],staticClass:\"form-check-input\",attrs:{\"id\":bakt._id,\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(bakt.chosen)?_vm._i(bakt.chosen,null)>-1:(bakt.chosen)},on:{\"click\":function($event){_vm.SelectBactery(bakt, index)},\"change\":function($event){var $$a=bakt.chosen,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(bakt.chosen=$$a.concat([$$v]))}else{$$i>-1&&(bakt.chosen=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.$set(bakt, \"chosen\", $$c)}}}}),_vm._v(\" \"),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":\"checkbox\"}},[_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(bakt.opis))])])])}))]):_vm._e()])]):_vm._e()]),_vm._v(\" \"),_c('vuestic-modal-delete',{ref:\"staticModalDeleteSample\",attrs:{\"show\":_vm.show,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',{staticStyle:{\"color\":\"#acb5be\"}},[_vm._v(_vm._s('Brisanje uzorka: '))]),_vm._v(\" \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(_vm.sid))])]),_vm._v(\" \"),_c('div',[_c('h5',[_vm._v(_vm._s('Jeste li sigurni da želite obrisati uzorak?'))])])]),_vm._v(\" \"),_c('vuestic-modal-comment',{ref:\"staticModalComment\",attrs:{\"show\":_vm.show,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(_vm._s('Unos komentara za uzorak: ' + _vm.sid))]),_vm._v(\" \"),_c('div',[_c('h5')])]),_vm._v(\" \"),_c('vuestic-modal-edit',{ref:\"staticModalEditSample\",attrs:{\"show\":_vm.show,\"sample\":_vm.sid,\"action\":\"Edit\",\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(_vm._s('Uređivanje uzorka: ' + _vm.sid))]),_vm._v(\" \"),_c('div',[_c('h5')])]),_vm._v(\" \"),_c('vuestic-modal-mail',{ref:\"staticModalSendMail\",attrs:{\"show\":_vm.show,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"\\n        \"+_vm._s('Slanje nalaza na adresu: ')+\"\\n        \"),_c('span',{staticStyle:{\"color\":\"#4ae387\"}},[_vm._v(_vm._s(_vm.email))])]),_vm._v(\" \"),_c('div',[_c('h5',[_vm._v(_vm._s('Jeste li sigurni da želite poslati nalaz?'))])])]),_vm._v(\" \"),_c('vuestic-modal-all-results',{ref:\"staticModalAllResults\",attrs:{\"show\":_vm.show,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"\\n        \"+_vm._s('Izbor rezultata: ')+\"\\n        \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(_vm.labassay))])]),_vm._v(\" \"),_c('div',[_c('div',{staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped first-td-padding\"},[_c('thead',[_c('tr',[_c('td',[_vm._v(\"analizator\")]),_vm._v(\" \"),_c('td',[_vm._v(\"vrijeme\")]),_vm._v(\" \"),_c('td',[_vm._v(\"rezultat\")]),_vm._v(\" \"),_c('td',[_vm._v(\"jedinica\")]),_vm._v(\" \"),_c('td',[_vm._v(\"reference\")]),_vm._v(\" \"),(_vm.sample_status != 'ODOBREN' &&  _vm.sample_status != 'VERIFICIRAN')?_c('td',[_vm._v(\"izbor\")]):_vm._e(),_vm._v(\" \"),_c('td',{attrs:{\"align\":\"middle\"}})])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.vise.rezultat),function(test){return _c('tr',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.rezultat_f != ''),expression:\"test.rezultat_f != ''\"}],key:test._id,class:{\n                  'table-danger': _vm.Interpretacija(_vm.vise.labassay.analit, test.rezultat_f, test.jedinice_f, _vm.vise.refd, _vm.vise.refg, _vm.$store.state.site, _vm.vise.interp, _vm.vise.extend, _vm.spec)[5] === 'Red' && !test.multidata, \n                  'table-success': _vm.Interpretacija(_vm.vise.labassay.analit, test.rezultat_f, test.jedinice_f, _vm.vise.refd, _vm.vise.refg, _vm.$store.state.site, _vm.vise.interp, _vm.vise.extend, _vm.spec)[5] === 'Green' && !test.multidata,\n                  'table-warning': _vm.Interpretacija(_vm.vise.labassay.analit, test.rezultat_f, test.jedinice_f, _vm.vise.refd, _vm.vise.refg, _vm.$store.state.site, _vm.vise.interp, _vm.vise.extend, _vm.spec)[5] === 'Yellow' && !test.multidata\n                }},[_c('td',[_vm._v(_vm._s(test.anaassay.aparat.ime))]),_vm._v(\" \"),_c('td',[_vm._v(\"\\n                  \"+_vm._s(JSON.stringify(\n                  test.updated_at\n                  ).slice(9, 11) +\n                  \".\" +\n                  JSON.stringify(\n                  test.updated_at\n                  ).slice(6, 8) +\n                  \".\" +\n                  JSON.stringify(\n                  test.updated_at\n                  ).slice(1, 5) + ' | ')+\"\\n                  \"),_c('sub',[_vm._v(\"\\n                    \"+_vm._s(JSON.stringify(\n                    test.updated_at\n                    ).slice(12, 20))+\"\\n                  \")])]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(test.rezultat_f))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(test.jedinice_f))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(_vm.Interpretacija(_vm.vise.labassay.analit, test.rezultat_f, test.jedinice_f, _vm.vise.refd, _vm.vise.refg, _vm.$store.state.site, _vm.vise.interp, _vm.vise.extend, _vm.spec)[4]))]),_vm._v(\" \"),(_vm.sample_status != 'ODOBREN' &&  _vm.sample_status != 'VERIFICIRAN')?_c('td',[(!test.izabran)?_c('i',{staticClass:\"glyphicon glyphicon-unchecked\",staticStyle:{\"font-size\":\"18px\",\"color\":\"#e34a4a\"},on:{\"click\":function($event){$event.preventDefault();_vm.IzborTesta(_vm.vise, test)}}}):_vm._e(),_vm._v(\" \"),(test.izabran)?_c('i',{staticClass:\"glyphicon glyphicon-check\",staticStyle:{\"font-size\":\"18px\",\"color\":\"#4ae387\"}}):_vm._e()]):_vm._e(),_vm._v(\" \"),_c('td',[_c('i',{class:{'fa fa-exclamation-triangle icon-right input-icon error-icon' : _vm.Interpretacija(_vm.vise.labassay.analit, test.rezultat_f, test.jedinice_f, _vm.vise.refd, _vm.vise.refg, _vm.$store.state.site, _vm.vise.interp, _vm.vise.extend, _vm.spec)[5] === 'Red'}}),_vm._v(\" \"),_c('i',{class:{'fa fa-check success-icon icon-right input-icon' : _vm.Interpretacija(_vm.vise.labassay.analit, test.rezultat_f, test.jedinice_f, _vm.vise.refd, _vm.vise.refg, _vm.$store.state.site, _vm.vise.interp, _vm.vise.extend, _vm.spec)[5] === 'Green'}})])])}))])])])]),_vm._v(\" \"),_c('vuestic-modal-error',{ref:\"staticModalError\",attrs:{\"show\":_vm.show,\"cancelText\":\"ZATVORI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"\\n        \"+_vm._s('')+\"\\n        \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s('404: Not Found'))])]),_vm._v(\" \"),_c('div',[_c('h5',[_vm._v(_vm._s('Greška prilikom čitanja nalaza.'))])])]),_vm._v(\" \"),_c('vuestic-modal-error',{ref:\"staticModalVerifyPrivilege\",attrs:{\"show\":_vm.show,\"cancelText\":\"ZATVORI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"\\n        \"+_vm._s('')+\"\\n        \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s('401: Not Authorized'))])]),_vm._v(\" \"),_c('div',[_c('h5',[_vm._v(_vm._s('Nemate odgovarajuće privilegije.'))])])]),_vm._v(\" \"),_c('vuestic-modal-exclamation',{ref:\"staticModalExclamation\",attrs:{\"show\":_vm.show,\"cancelText\":\"ZATVORI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"\\n        \"+_vm._s('')+\"\\n        \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(_vm.warning.analiza))])]),_vm._v(\" \"),_c('div',[_c('h5',[_vm._v(_vm._s(_vm.warning.control))]),_vm._v(\" \"),_c('p',[_vm._v(_vm._s(_vm.warning.text))])])]),_vm._v(\" \"),_c('vuestic-modal-reference',{ref:\"staticModalReference\",attrs:{\"show\":_vm.show,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"\\n        \"+_vm._s('Referentne vrijednosti: ')+\"\\n        \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(_vm.reference.naziv)+\" (\"+_vm._s(_vm.reference.opis)+\")\")])]),_vm._v(\" \"),_c('div',[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-1\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-2\"},[_c('div',{staticClass:\"form-group\"},[_c('div',{staticClass:\"input-group\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.reference.dref),expression:\"reference.dref\"}],staticStyle:{\"color\":\"#e34a4a\"},attrs:{\"id\":\"input-icon-left\",\"title\":\" \",\"name\":\"input-icon-left\",\"required\":\"\"},domProps:{\"value\":(_vm.reference.dref)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.reference, \"dref\", $event.target.value)}}}),_vm._v(\" \"),_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"input-icon-left\"}},[_vm._v(_vm._s('Donja'))]),_vm._v(\" \"),_c('i',{staticClass:\"bar\"})])])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-1\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-2\"},[_c('div',{staticClass:\"form-group\"},[_c('div',{staticClass:\"input-group\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.reference.gref),expression:\"reference.gref\"}],staticStyle:{\"color\":\"#e34a4a\"},attrs:{\"id\":\"input-icon-left\",\"title\":\" \",\"name\":\"input-icon-left\",\"required\":\"\"},domProps:{\"value\":(_vm.reference.gref)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.reference, \"gref\", $event.target.value)}}}),_vm._v(\" \"),_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"input-icon-left\"}},[_vm._v(_vm._s('Gornja'))]),_vm._v(\" \"),_c('i',{staticClass:\"bar\"})])])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-1\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-4\"},[(_vm.$store.state.access.level < 1)?_c('vuestic-simple-select',{staticStyle:{\"font-size\":\"14px\"},attrs:{\"label\":\"Interpretacija\",\"title\":\" \",\"options\":_vm.interpretacije},model:{value:(_vm.reference.interp),callback:function ($$v) {_vm.$set(_vm.reference, \"interp\", $$v)},expression:\"reference.interp\"}}):_vm._e(),_vm._v(\" \"),(_vm.$store.state.access.level > 0)?_c('div',{staticClass:\"form-group\"},[_c('div',{staticClass:\"input-group\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.reference.interp),expression:\"reference.interp\"}],attrs:{\"id\":\"input-icon-left\",\"title\":\" \",\"name\":\"input-icon-left\",\"required\":\"\",\"disabled\":true},domProps:{\"value\":(_vm.reference.interp)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.reference, \"interp\", $event.target.value)}}}),_vm._v(\" \"),_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"input-icon-left\"}},[_vm._v(_vm._s(_vm.reference.interp))]),_vm._v(\" \"),_c('i',{staticClass:\"bar\"})])]):_vm._e()],1),_vm._v(\" \"),_c('div',{staticClass:\"col-md-1\"})]),_vm._v(\" \"),_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-1\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-2\"},[_c('vuestic-simple-select',{staticStyle:{\"font-size\":\"14px\"},attrs:{\"label\":\"Jedinica\",\"title\":\" \",\"options\":_vm.jedinice},model:{value:(_vm.reference.jedinica),callback:function ($$v) {_vm.$set(_vm.reference, \"jedinica\", $$v)},expression:\"reference.jedinica\"}})],1),_vm._v(\" \"),_c('div',{staticClass:\"col-md-1\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-7\"},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.reference.interp != 'spec'),expression:\"reference.interp != 'spec'\"}],staticClass:\"form-group\"},[_c('div',{staticClass:\"input-group\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.reference.extend),expression:\"reference.extend\"}],staticStyle:{\"color\":\"#e34a4a\"},attrs:{\"id\":\"input-icon-left\",\"title\":\" \",\"name\":\"input-icon-left\",\"required\":\"\"},domProps:{\"value\":(_vm.reference.extend)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.reference, \"extend\", $event.target.value)}}}),_vm._v(\" \"),_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"input-icon-left\"}},[_vm._v(_vm._s('Proširena referentna vrijednost'))]),_vm._v(\" \"),_c('i',{staticClass:\"bar\"})])]),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.reference.interp === 'spec'),expression:\"reference.interp === 'spec'\"}],staticClass:\"form-group\"},[_c('div',{staticClass:\"input-group\"},[_c('textarea',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.reference.extend),expression:\"reference.extend\"}],staticStyle:{\"color\":\"#e34a4a\"},attrs:{\"type\":\"text\",\"id\":\"simple-textarea\",\"required\":\"\"},domProps:{\"value\":(_vm.reference.extend)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.reference, \"extend\", $event.target.value)}}}),_vm._v(\" \"),_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"simple-textarea\"}},[_vm._v(_vm._s('Specifična interpretacija rezultata'))]),_vm._v(\" \"),_c('i',{staticClass:\"bar\"})])])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-1\"})])])]),_vm._v(\" \"),_c('vuestic-modal-find',{ref:\"staticModalFind\",attrs:{\"show\":_vm.show,\"data_pid\":Number(_vm.data_pid),\"data_length\":Number(_vm.data_length),\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"\\n        \"+_vm._s('')+\"\\n        \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s('Redni broj pacijenta'))])]),_vm._v(\" \"),_c('div',[_c('h5')])]),_vm._v(\" \"),_c('vuestic-modal-aparati',{ref:\"staticModalAparati\",attrs:{\"show\":_vm.show,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"\\n        \"+_vm._s('Izbor analizatora: ')+\"\\n        \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(this.analiza.ime + ' (' + this.analiza.analit + ')'))])]),_vm._v(\" \"),_c('div',[_c('vuestic-accordion-obrada',_vm._l((_vm.analysers),function(element){return _c('vuestic-collapse-aparati',{key:element._id,attrs:{\"analyser\":element}},[_c('span',{attrs:{\"slot\":\"header\"},slot:\"header\"},[_vm._v(_vm._s(element.ime + ', ' + element.site.naziv))]),_vm._v(\" \"),_c('div',{attrs:{\"slot\":\"body\"},slot:\"body\"},[_c('div',{staticClass:\"va-row\"})])])}))],1)]),_vm._v(\" \"),_c('vuestic-modal-results-multi',{ref:\"staticModalResultsMulti\",attrs:{\"show\":_vm.show,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"\\n        \"+_vm._s('Izbor rezultata: ')+\"\\n        \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(_vm.multi_test))])]),_vm._v(\" \"),_c('div')]),_vm._v(\" \"),_c('patient-evaluation-single',{ref:\"staticModalEvaluationSingle\",attrs:{\"show\":_vm.show,\"cancelText\":\"ZATVORI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',[_vm._v(_vm._s(_vm.ime + ' ' + _vm.prezime))])]),_vm._v(\" \"),(_vm.Procjena.length && !_vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',{staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped table-sm color-icon-label-table\"},[_c('thead',[_c('tr',{attrs:{\"align\":\"middle\"}},[_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('REZULTAT'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('JEDINICA'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('REFERENCE'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('DATUM'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"15%\"}},[_vm._v(_vm._s('VRIJEME'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"5%\",\"align\":\"middle\"}})])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.Procjena),function(element,index){return _c('tr',{key:index,class:{\n                        'table-danger': _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Red', \n                        'table-success': _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Green',\n                        'table-warning': _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Yellow'\n                      },attrs:{\"align\":\"middle\"}},[_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.rezultat))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.jedinica))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(_vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[4]))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.datum))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"15%\"}},[_vm._v(_vm._s(element.vrijeme))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"9%\",\"align\":\"middle\"}},[_c('i',{class:{'fa fa-exclamation-triangle icon-right input-icon error-icon' : _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Red'}}),_vm._v(\" \"),_c('i',{class:{'fa fa-check success-icon icon-right input-icon' : _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Green'}})])])}))]),_vm._v(\" \"),_c('div',{staticStyle:{\"text-align\":\"center\"}},[_c('span',{staticClass:\"circle badge-info\"}),_vm._v(\"\\n              \"+_vm._s(_vm.table_header)+\"\\n            \")])])])]):_vm._e(),_vm._v(\" \"),(_vm.showLineChart && _vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('line-chart',{attrs:{\"options\":_vm.optionsLineChart,\"data\":_vm.dataLineChart,\"type\":\"line\"}})],1)]):_vm._e(),_vm._v(\" \"),(!_vm.showLineChart && _vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',[_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"Nema podataka.\"))])])])]):_vm._e()]),_vm._v(\" \"),_c('patient-evaluation-single',{ref:\"staticModalLabAssayEvalSingle\",attrs:{\"show\":_vm.show,\"cancelText\":\"ZATVORI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',{staticStyle:{\"color\":\"#4ae387\"}},[_vm._v(_vm._s(_vm.analiza_eval.ime + ' (' + _vm.analiza_eval.analit + ')'))]),_vm._v(\" \"),_c('span',[_vm._v(_vm._s(\" - Rezultati analize u zadnjih 14 dana\"))])]),_vm._v(\" \"),(_vm.Procjena.length && !_vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',{staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped table-sm color-icon-label-table\"},[_c('thead',[_c('tr',{attrs:{\"align\":\"middle\"}},[_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('REZULTAT'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('JEDINICA'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('REFERENCE'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('DATUM'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"15%\"}},[_vm._v(_vm._s('VRIJEME'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"5%\",\"align\":\"middle\"}})])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.Procjena),function(element,index){return _c('tr',{key:index,class:{\n                        'table-danger': _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Red', \n                        'table-success': _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Green',\n                        'table-warning': _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Yellow'\n                      },attrs:{\"align\":\"middle\"}},[_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.rezultat))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.jedinica))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(_vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[4]))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.datum))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"15%\"}},[_vm._v(_vm._s(element.vrijeme))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"9%\",\"align\":\"middle\"}},[_c('i',{class:{'fa fa-exclamation-triangle icon-right input-icon error-icon' : _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Red'}}),_vm._v(\" \"),_c('i',{class:{'fa fa-check success-icon icon-right input-icon' : _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Green'}})])])}))]),_vm._v(\" \"),_c('div',{staticStyle:{\"text-align\":\"center\"}},[_c('span',{staticClass:\"circle badge-info\"}),_vm._v(\"\\n              \"+_vm._s(_vm.table_header)+\"\\n            \")])])])]):_vm._e(),_vm._v(\" \"),(_vm.showLineChart && _vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('line-chart',{attrs:{\"options\":_vm.optionsLineChart,\"data\":_vm.dataLineChart,\"type\":\"line\"}})],1)]):_vm._e(),_vm._v(\" \"),(!_vm.showLineChart && _vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',[_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"Nema podataka.\"))])])])]):_vm._e()]),_vm._v(\" \"),_c('patient-evaluation-multi',{ref:\"staticModalEvaluationMulti\",attrs:{\"show\":_vm.show,\"multiparam_izbor\":_vm.multiparam_izbor,\"multiparam_izbornik\":_vm.multiparam_izbornik,\"cancelText\":\"ZATVORI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',[_vm._v(_vm._s(_vm.ime + ' ' + _vm.prezime))])]),_vm._v(\" \"),(_vm.Procjena.length && !_vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',{staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped table-sm color-icon-label-table\"},[_c('thead',[_c('tr',{attrs:{\"align\":\"middle\"}},[_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('REZULTAT'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('JEDINICA'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('REFERENCE'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('DATUM'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"15%\"}},[_vm._v(_vm._s('VRIJEME'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"5%\",\"align\":\"middle\"}})])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.Procjena),function(element,index){return _c('tr',{key:index,class:{\n                        'table-danger': _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Red', \n                        'table-success': _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Green',\n                        'table-warning': _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Yellow'\n                      },attrs:{\"align\":\"middle\"}},[_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.rezultat))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.jedinica))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(_vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[4]))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.datum))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"15%\"}},[_vm._v(_vm._s(element.vrijeme))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"9%\",\"align\":\"middle\"}},[_c('i',{class:{'fa fa-exclamation-triangle icon-right input-icon error-icon' : _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Red'}}),_vm._v(\" \"),_c('i',{class:{'fa fa-check success-icon icon-right input-icon' : _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Green'}})])])}))]),_vm._v(\" \"),_c('div',{staticStyle:{\"text-align\":\"center\"}},[_c('span',{staticClass:\"circle badge-info\"}),_vm._v(\"\\n              \"+_vm._s(_vm.table_header)+\"\\n            \")])])])]):_vm._e(),_vm._v(\" \"),(!_vm.Procjena.length && !_vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',[_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"Nema podataka.\"))])])])]):_vm._e(),_vm._v(\" \"),(_vm.showLineChart && _vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('line-chart',{attrs:{\"options\":_vm.optionsLineChart,\"data\":_vm.dataLineChart,\"type\":\"line\"}})],1)]):_vm._e(),_vm._v(\" \"),(!_vm.showLineChart && _vm.graph)?_c('div',{staticClass:\"row\"},[(!_vm.showLineChart && !_vm.spinner)?_c('div',{staticClass:\"col-md-12\"},[_c('div',[_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"Nema podataka.\"))])])]):_vm._e(),_vm._v(\" \"),(!_vm.showLineChart && _vm.spinner)?_c('div',{staticClass:\"col-md-12\",staticStyle:{\"min-height\":\"400px\"}},[_c('div',{staticStyle:{\"display\":\"flex\",\"flex-direction\":\"row\",\"justify-content\":\"center\",\"align-items\":\"center\"}},[_c('div',{staticStyle:{\"float\":\"left\"}}),_vm._v(\" \"),_c('span',{staticStyle:{\"vertical-align\":\"middle\"}},[_c('atom-spinner',{staticStyle:{\"opacity\":\"0.25\"},attrs:{\"animation-duration\":1000,\"size\":300,\"color\":'#4ae387'}})],1)])]):_vm._e()]):_vm._e()]),_vm._v(\" \"),_c('patient-evaluation-multi',{ref:\"staticModalLabAssayEvalMulti\",attrs:{\"show\":_vm.show,\"multiparam_izbor\":_vm.multiparam_izbor,\"multiparam_izbornik\":_vm.multiparam_izbornik,\"cancelText\":\"ZATVORI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',{staticStyle:{\"color\":\"#4ae387\"}},[_vm._v(_vm._s(_vm.analiza_eval.ime + ' (' + _vm.analiza_eval.analit + ')'))]),_vm._v(\" \"),_c('span',[_vm._v(_vm._s(\" - Rezultati analize u zadnjih 14 dana\"))])]),_vm._v(\" \"),(_vm.Procjena.length && !_vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',{staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped table-sm color-icon-label-table\"},[_c('thead',[_c('tr',{attrs:{\"align\":\"middle\"}},[_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('REZULTAT'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('JEDINICA'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('REFERENCE'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('DATUM'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"15%\"}},[_vm._v(_vm._s('VRIJEME'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"5%\",\"align\":\"middle\"}})])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.Procjena),function(element,index){return _c('tr',{key:index,class:{\n                        'table-danger': _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Red', \n                        'table-success': _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Green',\n                        'table-warning': _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Yellow'\n                      },attrs:{\"align\":\"middle\"}},[_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.rezultat))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.jedinica))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(_vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[4]))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.datum))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"15%\"}},[_vm._v(_vm._s(element.vrijeme))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"9%\",\"align\":\"middle\"}},[_c('i',{class:{'fa fa-exclamation-triangle icon-right input-icon error-icon' : _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Red'}}),_vm._v(\" \"),_c('i',{class:{'fa fa-check success-icon icon-right input-icon' : _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Green'}})])])}))]),_vm._v(\" \"),_c('div',{staticStyle:{\"text-align\":\"center\"}},[_c('span',{staticClass:\"circle badge-info\"}),_vm._v(\"\\n              \"+_vm._s(_vm.table_header)+\"\\n            \")])])])]):_vm._e(),_vm._v(\" \"),(!_vm.Procjena.length && !_vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',[_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"Nema podataka.\"))])])])]):_vm._e(),_vm._v(\" \"),(_vm.showLineChart && _vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('line-chart',{attrs:{\"options\":_vm.optionsLineChart,\"data\":_vm.dataLineChart,\"type\":\"line\"}})],1)]):_vm._e(),_vm._v(\" \"),(!_vm.showLineChart && _vm.graph)?_c('div',{staticClass:\"row\"},[(!_vm.showLineChart && !_vm.spinner)?_c('div',{staticClass:\"col-md-12\"},[_c('div',[_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"Nema podataka.\"))])])]):_vm._e(),_vm._v(\" \"),(!_vm.showLineChart && _vm.spinner)?_c('div',{staticClass:\"col-md-12\",staticStyle:{\"min-height\":\"400px\"}},[_c('div',{staticStyle:{\"display\":\"flex\",\"flex-direction\":\"row\",\"justify-content\":\"center\",\"align-items\":\"center\"}},[_c('div',{staticStyle:{\"float\":\"left\"}}),_vm._v(\" \"),_c('span',{staticStyle:{\"vertical-align\":\"middle\"}},[_c('atom-spinner',{staticStyle:{\"opacity\":\"0.25\"},attrs:{\"animation-duration\":1000,\"size\":300,\"color\":'#4ae387'}})],1)])]):_vm._e()]):_vm._e()])],1):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',{staticClass:\"col-md-6\"},[_c('loading',{attrs:{\"active\":_vm.isLoading,\"can-cancel\":false,\"on-cancel\":_vm.onCancel,\"color\":\"#4ae387\",\"is-full-page\":_vm.fullPage},on:{\"update:active\":function($event){_vm.isLoading=$event}}})],1),_vm._v(\" \"),_c('div',{staticClass:\"col-md-6\"},[(false)?_c('button',{on:{\"click\":function($event){$event.preventDefault();_vm.Test($event)}}},[_vm._v(_vm._s('Loading...'))]):_vm._e()])])])])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\n/* harmony default export */ __webpack_exports__[\"a\"] = (esExports);\n\n/***/ }),\n\n/***/ \"KUw5\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_own_property_names__ = __webpack_require__(\"aFK5\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_own_property_names___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_own_property_names__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray__ = __webpack_require__(\"Gu7T\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify__ = __webpack_require__(\"mvHQ\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_vue__ = __webpack_require__(\"7+uW\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__router__ = __webpack_require__(\"YaEn\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_vuex_store__ = __webpack_require__(\"IcnI\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_services_utils__ = __webpack_require__(\"hLWQ\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__config_config_js__ = __webpack_require__(\"1wn0\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__BadgeColumn_vue__ = __webpack_require__(\"XMpX\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__main__ = __webpack_require__(\"NHnr\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__functions_reference_js__ = __webpack_require__(\"d5lM\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__functions_reference_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_10__functions_reference_js__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__data_izbornik_izbornik__ = __webpack_require__(\"8472\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12_vue_loading_overlay__ = __webpack_require__(\"ZZvs\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12_vue_loading_overlay___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_12_vue_loading_overlay__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13_vue_loading_overlay_dist_vue_loading_css__ = __webpack_require__(\"SYh3\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13_vue_loading_overlay_dist_vue_loading_css___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_13_vue_loading_overlay_dist_vue_loading_css__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__vuestic_components_vuestic_chart_chart_types_LineChart__ = __webpack_require__(\"eDOj\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15_epic_spinners__ = __webpack_require__(\"pyJd\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16_pdfobject__ = __webpack_require__(\"UqI+\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16_pdfobject___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_16_pdfobject__);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n__WEBPACK_IMPORTED_MODULE_3_vue__[\"default\"].component(\"line-chart\", __WEBPACK_IMPORTED_MODULE_14__vuestic_components_vuestic_chart_chart_types_LineChart__[\"a\" /* default */]);\n__WEBPACK_IMPORTED_MODULE_3_vue__[\"default\"].component(\"badge-column\", __WEBPACK_IMPORTED_MODULE_8__BadgeColumn_vue__[\"default\"]);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: \"collapse-obrada\",\n\n  data: function data() {\n    return {\n      AllowGetSample: true,\n      MicrobiologyOrder: false,\n      MicrobiologySample: false,\n      ModalNegative: false,\n      ModalPositive: false,\n      ModalPositiveCondition: false,\n      ShowAllBacteries: false,\n      ShowAntibiotics: false,\n      ShowBacteries: false,\n      BacteryTabs: [\"\"],\n      CurrentTab: \"\",\n      CurrentTest: \"\",\n      MicrobiologyModalHeader: \"Predefinisani rezultati\",\n      SelectedBacteries: [],\n      NegativeResultSelection: \"\",\n      PositiveResultSelection: \"\",\n      MicrobiologyScenario: \"Unknown\",\n      Antibiotics: [],\n      TemporaryAntibiotics: [],\n      TemporaryBacteries: [],\n      TemporaryBacteriesAdd: [],\n      Antibiograms: [],\n      Bacteries: [],\n\n      MicrobiologyResult: {\n        negative: null,\n        positive: null,\n        BUG: null,\n        F_RESULT: \"\",\n        M_RESULT: [],\n        DefaultBacteries: [],\n        RemainingBacteries: [],\n        NegativeDescriptions: [],\n        PositiveDescriptions: []\n      },\n\n      multiparam_izbor: \"\",\n      multiparam_id: \"\",\n      analit: {},\n      multiparams: [],\n      Response: {},\n      spinner: false,\n      multiparam_izbornik: [],\n      warning: { analiza: \"\", text: \"\", control: \"\" },\n      main: false,\n      show: true,\n      pdf: false,\n      header: \"\",\n      lokacija: {},\n      timestamp: \"\",\n      pacijent: \"\",\n      ime: \"\",\n      prezime: \"\",\n      jmbg: \"\",\n      pid: \"\",\n      sid: \"\",\n      email: \"\",\n      email_tmp: \"\",\n      verificiran: false,\n      email_button: false,\n      final_pdf: false,\n      odobren: false,\n      approved: 0,\n      verified: 0,\n      partials: [],\n      partials_condition: false,\n      count: 0,\n      nalaz: {},\n      report: {},\n      path: \"\",\n      url: \"\",\n      uzorci: [],\n      vise: [],\n      samples: [],\n      sample_status: \"\",\n      labassay: \"\",\n      multi_test: \"\",\n      multi_rezultati: [],\n      check: \"\",\n      link: \"\",\n      spec: \"*\",\n      testovi: [],\n      rezultati: [],\n      analysers: [],\n      analyser: {},\n      analiza: {},\n      analyser_selected: {},\n      analyser_patient: {},\n      analitiprikaz: [],\n      analiti: [],\n      naslov: \"\",\n      calculated: false,\n      show_table: false,\n      sample: {},\n      resdata: {},\n      email_changed: false,\n      Previous: { pid: null },\n      Next: { pid: null },\n      Results: [],\n      Datum: { today: null, query: null, next: null, previous: null },\n      pagination: false,\n      forward_disabled: false,\n      backward_disabled: false,\n      data_length: 0,\n      data_min: 1,\n      data_pid: 0,\n      data_spol: \"\",\n      query_date: \"\",\n      today_date: \"\",\n      reference: {},\n      interpretacije: [\"none\", \"A\", \"ogtt\", \"insul\", \"less\", \"infekc\", \"grt\", \"grte\", \"neg\", \"urbl\", \"reakt\", \"norm\", \"norma\", \"ured\", \"plus\", \"morf\", \"titar\", \"tsh\", \"trg\", \"hol\", \"hdl\", \"ldl\", \"fpsa\", \"sediment\", \"bistar\", \"boja\", \"nesto\", \"exists\", \"blst\", \"leu\", \"spec\"],\n      toastText: \"\",\n      toastIcon: \"\",\n      toastPosition: \"\",\n      toastDuration: 2500,\n      isToastFullWidth: false,\n      className: \"\",\n      isLoading: false,\n      fullPage: true,\n      analiza_eval: {},\n      showLineChart: false,\n      optionsLineChart: {},\n      dataLineChart: {},\n      Procjena: [],\n      jedinica: \"\",\n      jedinice: [],\n      graph: false,\n      table_header: \"\"\n    };\n  },\n\n  components: {\n    Loading: __WEBPACK_IMPORTED_MODULE_12_vue_loading_overlay___default.a,\n    AtomSpinner: __WEBPACK_IMPORTED_MODULE_15_epic_spinners__[\"a\" /* AtomSpinner */]\n  },\n\n  watch: {\n    email: function email() {\n      if (this.email.trim() != this.email_tmp.trim()) {\n        this.email_changed = true;\n      }\n    },\n    ModalNegative: function ModalNegative() {\n      if (this.ModalNegative) {\n        this.MicrobiologyModalHeader = \"Predefinisani rezultati\";\n        if (this.MicrobiologyScenario.includes(\"MANB\")) {\n          this.ModalPositiveCondition = true;\n        } else {\n          this.ModalPositiveCondition = false;\n        }\n      }\n    },\n    ModalPositive: function ModalPositive() {\n      if (this.ModalPositive) {\n        if (this.MicrobiologyScenario === \"MAIBNoR\") {\n          this.MicrobiologyModalHeader = \"Bakterije\";\n        } else {\n          this.MicrobiologyModalHeader = \"Predefinisani rezultati\";\n        }\n\n        if (this.MicrobiologyScenario.includes(\"MANB\")) {\n          this.ModalPositiveCondition = true;\n        } else {\n          this.ModalPositiveCondition = false;\n        }\n      }\n    },\n    MicrobiologyScenario: function MicrobiologyScenario() {\n      switch (this.MicrobiologyScenario) {\n        case \"MAIBNoR\":\n          this.ModalNegative = false;\n          this.ModalPositive = false;\n          this.ModalPositiveCondition = false;\n          this.MicrobiologyModalHeader = \"Predefinisani rezultati\";\n          this.NegativeResultSelection = \"\";\n          this.PositiveResultSelection = \"\";\n          this.SelectedBacteries = [];\n          this.ShowAllBacteries = false;\n\n          break;\n\n        case \"MAIBNeR\":\n          this.SelectedBacteries = [];\n\n          break;\n\n        case \"MAIBPoR\":\n          break;\n\n        case \"MANBNoR\":\n          this.ModalNegative = false;\n          this.ModalPositive = false;\n          this.ModalPositiveCondition = false;\n          this.MicrobiologyModalHeader = \"Predefinisani rezultati\";\n          this.NegativeResultSelection = \"\";\n          this.PositiveResultSelection = \"\";\n          this.SelectedBacteries = [];\n          this.ShowAllBacteries = false;\n\n          break;\n\n        case \"MANBNeR\":\n          this.SelectedBacteries = [];\n\n          break;\n\n        case \"MANBPoR\":\n          this.SelectedBacteries = [];\n\n          break;\n\n        default:\n          break;\n      }\n    }\n  },\n  beforeCreate: function beforeCreate() {\n    var _this = this;\n\n    __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].get(\"postavke/jedinice/mount/list?token=\" + this.$store.state.token + \"&site=\" + this.$store.state.site, {}).then(function (res) {\n      _this.jedinice = res.data.jedinica;\n    });\n  },\n  mounted: function mounted() {\n    var _this2 = this;\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"Parametar\", function (data) {\n      _this2.spinner = true;\n\n      _this2.analit = {};\n\n      _this2.multiparams.forEach(function (element) {\n        if (element.opis === data) {\n          _this2.analit = element;\n          _this2.multiparam_id = element._id;\n          _this2.multiparam_izbor = data;\n        }\n      });\n\n      if (_.isEmpty(_this2.analit)) {} else {\n        if (!_.isEmpty(_this2.Response)) {\n          _this2.showLineChart = false;\n          var palette = __WEBPACK_IMPORTED_MODULE_5_vuex_store__[\"a\" /* default */].getters.palette;\n\n          _this2.Procjena = [];\n\n          var obj = {};\n          var count = 0;\n\n          _this2.Response.Multi.forEach(function (element) {\n            count++;\n            element.multi.forEach(function (param) {\n              if (_this2.multiparam_id == param.labassay && param.rezultat[0].rezultat_f.trim() != \"\") {\n                obj.rezultat = param.rezultat[0].rezultat_f;\n                obj.jedinica = param.rezultat[0].jedinice_f;\n                obj.analit = \"Nema podataka\";\n                obj.interp = param.interp;\n                obj.extend = param.extend;\n                obj.refd = param.refd;\n                obj.refg = param.refg;\n                obj.sid = \"Nema podataka\";\n                obj.updated_at = new Date(param.rezultat[0].updated_at);\n\n                var datum = __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(new Date(param.rezultat[0].updated_at)).slice(9, 11) + \".\" + __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(new Date(param.rezultat[0].updated_at)).slice(6, 8) + \".\" + __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(new Date(param.rezultat[0].updated_at)).slice(1, 5);\n                var time = __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(new Date(new Date(param.rezultat[0].updated_at).getTime() - new Date(param.rezultat[0].updated_at).getTimezoneOffset() * 60000).toISOString()).substring(12, 17);\n                obj.datum = datum;\n                obj.vrijeme = time;\n                obj.kontrola = _this2.Interpretacija(\"\", obj.rezultat, obj.jedinica, obj.refd, obj.refg, _this2.$store.state.site, obj.interp, obj.extend, _this2.spec)[5];\n\n                _this2.Procjena.push(obj);\n                obj = {};\n              }\n            });\n\n            if (count == _this2.Response.Multi.length) {\n              _this2.Procjena.sort(function (a, b) {\n                return Date.parse(a.updated_at) == Date.parse(b.updated_at) ? 0 : +(Date.parse(a.updated_at) < Date.parse(b.updated_at)) || -1;\n              });\n\n              var data = [];\n\n              if (_this2.Procjena.length) {\n                _this2.optionsLineChart = {\n                  responsive: true,\n                  maintainAspectRatio: false,\n                  title: {\n                    display: true,\n                    text: \"\"\n                  },\n                  scales: {\n                    xAxes: [{\n                      display: true,\n                      gridLines: {\n                        display: true,\n                        color: \"#eee\"\n                      }\n                    }],\n                    yAxes: [{\n                      display: true,\n                      gridLines: {\n                        display: true,\n                        color: \"#eee\"\n                      }\n                    }]\n                  }\n                };\n\n                var labels = [];\n                var kontrola = [];\n                var temp = \"\";\n\n                _this2.Procjena.forEach(function (element) {\n                  if (!isNaN(element.rezultat.trim())) {\n                    switch (element.kontrola) {\n                      case \"Red\":\n                        kontrola.push(palette.danger);\n                        break;\n                      case \"Green\":\n                        kontrola.push(palette.primary);\n                        break;\n                      case \"Yellow\":\n                        kontrola.push(palette.warning);\n                        break;\n\n                      default:\n                        kontrola.push(palette.info);\n                        break;\n                    }\n\n                    labels.push(element.datum);\n                    data.push(element.rezultat);\n                  }\n                });\n\n                _this2.dataLineChart = {\n                  labels: labels,\n                  datasets: [{\n                    label: _this2.table_header,\n                    backgroundColor: __WEBPACK_IMPORTED_MODULE_6_services_utils__[\"a\" /* default */].hex2rgb(palette.info, 0.5).css,\n                    pointBorderColor: kontrola,\n                    pointBackgroundColor: kontrola,\n                    borderColor: palette.transparent,\n                    data: data\n                  }]\n                };\n\n                if (data.length) {\n                  setTimeout(function () {\n                    _this2.showLineChart = true;\n                  }, 500);\n                }\n              } else {\n                _this2.spinner = false;\n              }\n            }\n          });\n        } else {}\n      }\n    });\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"graph\", function () {\n      _this2.Procjena.sort(function (a, b) {\n        return Date.parse(a.updated_at) == Date.parse(b.updated_at) ? 0 : +(Date.parse(a.updated_at) < Date.parse(b.updated_at)) || -1;\n      });\n\n      var data = [];\n\n      if (_this2.Procjena.length) {\n        var palette = __WEBPACK_IMPORTED_MODULE_5_vuex_store__[\"a\" /* default */].getters.palette;\n        _this2.optionsLineChart = {\n          responsive: true,\n          maintainAspectRatio: false,\n          title: {\n            display: true,\n            text: \"\"\n          },\n          scales: {\n            xAxes: [{\n              display: true,\n              gridLines: {\n                display: true,\n                color: \"#eee\"\n              }\n            }],\n            yAxes: [{\n              display: true,\n              gridLines: {\n                display: true,\n                color: \"#eee\"\n              }\n            }]\n          }\n        };\n\n        var labels = [];\n        var kontrola = [];\n        var temp = \"\";\n\n        _this2.Procjena.forEach(function (element) {\n          if (!isNaN(element.rezultat.trim())) {\n            switch (element.kontrola) {\n              case \"Red\":\n                kontrola.push(palette.danger);\n                break;\n              case \"Green\":\n                kontrola.push(palette.primary);\n                break;\n              case \"Yellow\":\n                kontrola.push(palette.warning);\n                break;\n\n              default:\n                kontrola.push(palette.info);\n                break;\n            }\n\n            labels.push(element.datum);\n            data.push(element.rezultat);\n          }\n        });\n\n        _this2.dataLineChart = {\n          labels: labels,\n          datasets: [{\n            label: _this2.analiza_eval.ime + \" | \" + _this2.analiza_eval.analit,\n            backgroundColor: __WEBPACK_IMPORTED_MODULE_6_services_utils__[\"a\" /* default */].hex2rgb(palette.info, 0.5).css,\n            pointBorderColor: kontrola,\n            pointBackgroundColor: kontrola,\n            borderColor: palette.transparent,\n            data: data\n          }]\n        };\n\n        if (data.length) {\n          _this2.showLineChart = true;\n        }\n      } else {}\n      _this2.graph = false;\n    });\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"table\", function () {\n      _this2.Procjena.sort(function (a, b) {\n        return Date.parse(a.updated_at) == Date.parse(b.updated_at) ? 0 : +(Date.parse(a.updated_at) > Date.parse(b.updated_at)) || -1;\n      });\n\n      var data = [];\n\n      if (_this2.Procjena.length) {\n        var palette = __WEBPACK_IMPORTED_MODULE_5_vuex_store__[\"a\" /* default */].getters.palette;\n        _this2.optionsLineChart = {\n          responsive: true,\n          maintainAspectRatio: false,\n          title: {\n            display: true,\n            text: \"\"\n          },\n          scales: {\n            xAxes: [{\n              display: true,\n              gridLines: {\n                display: true,\n                color: \"#eee\"\n              }\n            }],\n            yAxes: [{\n              display: true,\n              gridLines: {\n                display: true,\n                color: \"#eee\"\n              }\n            }]\n          }\n        };\n\n        var labels = [];\n        var kontrola = [];\n        var temp = \"\";\n\n        _this2.Procjena.forEach(function (element) {\n          if (!isNaN(element.rezultat.trim())) {\n            switch (element.kontrola) {\n              case \"Red\":\n                kontrola.push(palette.danger);\n                break;\n              case \"Green\":\n                kontrola.push(palette.primary);\n                break;\n              case \"Yellow\":\n                kontrola.push(palette.warning);\n                break;\n\n              default:\n                kontrola.push(palette.info);\n                break;\n            }\n\n            labels.push(element.datum);\n            data.push(element.rezultat);\n          }\n        });\n\n        _this2.dataLineChart = {\n          labels: labels,\n          datasets: [{\n            label: _this2.analiza_eval.ime + \" | \" + _this2.analiza_eval.analit,\n            backgroundColor: __WEBPACK_IMPORTED_MODULE_6_services_utils__[\"a\" /* default */].hex2rgb(palette.info, 0.5).css,\n            pointBorderColor: kontrola,\n            pointBackgroundColor: kontrola,\n            borderColor: palette.transparent,\n            data: data\n          }]\n        };\n\n        if (data.length) {\n          _this2.showLineChart = true;\n        }\n      } else {}\n      _this2.graph = true;\n    });\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"trash\", function (data) {\n      _this2.sid = data.sid;\n      _this2.$refs.staticModalDeleteSample.open();\n    });\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"edit\", function (data) {\n      _this2.sid = data.sid;\n      _this2.$refs.staticModalEditSample.open();\n    });\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"comment\", function (data) {\n      _this2.sid = data.sid;\n      _this2.$refs.staticModalComment.open();\n    });\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"barcode\", function (data) {\n      _this2.BarcodePrint(data);\n    });\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"save\", function (data) {\n      _this2.SaveResults(_this2.rezultati, \"save\");\n    });\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"check\", function (data) {\n      _this2.Approve(_this2.rezultati);\n    });\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"verify\", function (data) {\n      _this2.Verify(data, \"verify\");\n    });\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"undo\", function (data) {\n      _this2.Disapprove(_this2.rezultati, \"undo\");\n    });\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"unlock\", function (data) {\n      _this2.UnVerify(data, \"unlock\");\n    });\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"Nalaz\", function (data) {\n      if (!data.final_pdf) {\n        _this2.$refs.staticModalError.open();\n      } else {\n        _this2.path = _this2.timestamp + \".pdf\";\n\n        _this2.url = __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"i\" /* server */] + \"nalazi/\" + _this2.path;\n\n        var options = {\n          width: \"100%\",\n          height: \"800px\"\n        };\n        __WEBPACK_IMPORTED_MODULE_16_pdfobject___default.a.embed(_this2.url, \"#pdf-container\", options);\n\n        _this2.email_button = true;\n        _this2.main = false;\n        _this2.pdf = true;\n      }\n    });\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"pdf\", function (data) {\n      if (!data.pdf_exists) {\n        _this2.$refs.staticModalError.open();\n      } else {\n        _this2.path = \"samples/\" + data.sid + \".pdf\";\n\n        _this2.url = __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"i\" /* server */] + \"nalazi/samples/\" + data.sid + \".pdf\";\n\n        var options = {\n          width: \"100%\",\n          height: \"800px\"\n        };\n        __WEBPACK_IMPORTED_MODULE_16_pdfobject___default.a.embed(_this2.url, \"#pdf-container\", options);\n\n        _this2.main = false;\n        _this2.pdf = true;\n      }\n    });\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"Sample\", function (data) {\n      if (data.tip.includes(\"Mikrobiologija\")) {\n        _this2.MicrobiologySample = true;\n      } else {\n        _this2.MicrobiologySample = false;\n      }\n\n      _this2.$store.dispatch(\"SetSample\", data.sid);\n      _this2.GetSingleSample(data);\n    });\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"Deleted\", function (data) {\n      _this2.DeletedSample(data);\n    });\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"Edited\", function (data) {\n      _this2.EditSample(data);\n    });\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"SaveMulti\", function (data) {\n      _this2.SaveMultiResults(_this2.analiti, data);\n    });\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"Mail\", function () {\n      _this2.SendMail(_this2.email);\n    });\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"Error\", function () {});\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"Analyser\", function (data) {\n      _this2.AnalyserSelected(data);\n    });\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"Sljedeci\", function () {\n      _this2.Sljedeci();\n    });\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"Prethodni\", function () {\n      _this2.Prethodni();\n    });\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"Search\", function () {\n      _this2.$refs.staticModalFind.open();\n    });\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"Push\", function (data) {\n      if (_this2.$route.params.id != data) {\n        _this2.Results.forEach(function (element) {\n          if (element.pid == data) {\n            __WEBPACK_IMPORTED_MODULE_4__router__[\"a\" /* default */].push(\"/obrada/rezultati/\" + element.patient + \"/\" + element.pid + \"?date=\" + element.date);\n          }\n        });\n      } else {}\n    });\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"Reference\", function () {\n      _this2.reference.dref = Math.abs(_this2.reference.dref.replace(/,/g, \".\").trim());\n      _this2.reference.gref = Math.abs(_this2.reference.gref.replace(/,/g, \".\").trim());\n\n      if (_this2.reference.interp != \"spec\") {\n        _this2.reference.extend = _this2.reference.extend.replace(/(\\r\\n|\\n|\\r)/gm, \" \");\n      }\n\n      if (isNaN(_this2.reference.dref) || isNaN(_this2.reference.gref) || _this2.reference.dref === \"\" || _this2.reference.gref === \"\" || _this2.reference.dref > _this2.reference.gref) {} else {\n        document.getElementById(_this2.$store.state.sid).click();\n\n        __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].post(\"/rezultati/odobravanje/reference/\", {\n          email: _this2.$store.state.userId,\n          token: _this2.$store.state.token,\n          site: _this2.$store.state.site,\n          reference: _this2.reference\n        }).then(function (res) {\n          setTimeout(function () {\n            document.getElementById(_this2.$store.state.sid).click();\n          }, 500);\n        });\n      }\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"Antibiotik\", function (data) {\n      if (_this2.sample.status != \"ODOBREN\" && _this2.sample.status != \"VERIFICIRAN\") {\n        _this2.TemporaryAntibiotics = [];\n        _this2.TemporaryBacteries = [];\n        _this2.TemporaryBacteriesAdd = [];\n\n        _this2.Antibiotics.forEach(function (element) {\n          element.chosen = false;\n          element.disabled = false;\n        });\n\n        _this2.SelectedBacteries.forEach(function (selected) {\n          if (selected.opis == data) {\n            selected.antibiogram.antibiotici.forEach(function (ant) {\n              _this2.Antibiotics.forEach(function (antibiotik) {\n                if (antibiotik._id == ant._id) {\n                  antibiotik.disabled = true;\n                  antibiotik.chosen = true;\n                  antibiotik.rezultat = ant.rezultat;\n                }\n              });\n            });\n          }\n        });\n\n        _this2.ShowAntibiotics = true;\n      }\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"tabChanged\", function (data) {\n      _this2.CurrentTab = data;\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"AllowClick\", function (data) {\n      if (_this2.MicrobiologySample) {\n        if (data) {\n          _this2.AllowGetSample = false;\n        } else {\n          _this2.AllowGetSample = true;\n        }\n      }\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"MicroReset\", function () {\n      _this2.rezultati[0].rezultat = \"\";\n      _this2.rezultati[0].rezultat_m = [];\n      _this2.rezultati[0].realizovan = false;\n\n      _this2.MicrobiologyResult.DefaultBacteries.forEach(function (element) {\n        element.chosen = false;\n      });\n\n      _this2.MicrobiologyResult.RemainingBacteries.forEach(function (element) {\n        element.chosen = false;\n      });\n\n      _this2.selectedBacteries = [];\n      _this2.ShowAllBacteries = false;\n\n      if (_this2.MicrobiologyScenario.includes(\"MAIB\")) {\n        _this2.isLoading = true;\n\n        __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].post(\"/rezultati/odobravanje/sacuvaj/\" + _this2.$store.state.sid, {\n          email: _this2.$store.state.userId,\n          token: _this2.$store.state.token,\n          site: _this2.$store.state.site,\n          rezultati: _this2.rezultati\n        }).then(function (res) {\n          __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].get(\"rezultati/odobravanje/samples/\" + _this2.$route.params.patient + \"/\" + _this2.$route.params.id + \"?token=\" + _this2.$store.state.token + \"&site=\" + _this2.$store.state.site + \"&date=\" + _this2.$route.query.date, {}).then(function (res) {\n            _this2.uzorci = [];\n\n            res.data.results.forEach(function (element) {\n              var check = 0;\n              var zaprimljen = 0;\n              var realizovan = 0;\n\n              if (element.verificiran) {\n                var status_uzorka = \"VERIFICIRAN\";\n              } else {\n                var status_uzorka = element.status;\n              }\n\n              element.rezultati.forEach(function (test) {\n                check++;\n\n                if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n                  zaprimljen++;\n                }\n\n                if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n                  realizovan++;\n                }\n\n                if (check === element.rezultati.length) {\n                  if (status_uzorka === \"VERIFICIRAN\") {\n                    _this2.uzorci.push({\n                      sid: element.id,\n                      status: \"VERIFICIRAN\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else if (status_uzorka === \"ODOBREN\") {\n                    _this2.uzorci.push({\n                      sid: element.id,\n                      status: \"ODOBREN\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else if (zaprimljen < 1) {\n                    _this2.uzorci.push({\n                      sid: element.id,\n                      status: \"REALIZOVAN\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else if (realizovan < 1) {\n                    var stat = \"ZAPRIMLJEN\";\n                    if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                      if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                        stat = \"REALIZOVAN\";\n                      }\n                    }\n                    _this2.uzorci.push({\n                      sid: element.id,\n                      status: stat,\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else {\n                    _this2.uzorci.push({\n                      sid: element.id,\n                      status: \"U OBRADI\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  }\n                }\n              });\n            });\n\n            _this2.uzorci = _this2.uzorci.sort(function (a, b) {\n              return a.sid.localeCompare(b.sid, undefined, {\n                numeric: true,\n                sensitivity: \"base\"\n              });\n            });\n          }).then(function (res) {\n            _this2.MicrobiologyScenario = \"MAIBNoR\";\n            _this2.isLoading = false;\n          });\n        });\n      } else if (_this2.MicrobiologyScenario.includes(\"MANB\")) {\n        _this2.isLoading = true;\n\n        __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].post(\"/rezultati/odobravanje/sacuvaj/\" + _this2.$store.state.sid, {\n          email: _this2.$store.state.userId,\n          token: _this2.$store.state.token,\n          site: _this2.$store.state.site,\n          rezultati: _this2.rezultati\n        }).then(function (res) {\n          __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].get(\"rezultati/odobravanje/samples/\" + _this2.$route.params.patient + \"/\" + _this2.$route.params.id + \"?token=\" + _this2.$store.state.token + \"&site=\" + _this2.$store.state.site + \"&date=\" + _this2.$route.query.date, {}).then(function (res) {\n            _this2.uzorci = [];\n\n            res.data.results.forEach(function (element) {\n              var check = 0;\n              var zaprimljen = 0;\n              var realizovan = 0;\n\n              if (element.verificiran) {\n                var status_uzorka = \"VERIFICIRAN\";\n              } else {\n                var status_uzorka = element.status;\n              }\n\n              element.rezultati.forEach(function (test) {\n                check++;\n\n                if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n                  zaprimljen++;\n                }\n\n                if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n                  realizovan++;\n                }\n\n                if (check === element.rezultati.length) {\n                  if (status_uzorka === \"VERIFICIRAN\") {\n                    _this2.uzorci.push({\n                      sid: element.id,\n                      status: \"VERIFICIRAN\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else if (status_uzorka === \"ODOBREN\") {\n                    _this2.uzorci.push({\n                      sid: element.id,\n                      status: \"ODOBREN\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else if (zaprimljen < 1) {\n                    _this2.uzorci.push({\n                      sid: element.id,\n                      status: \"REALIZOVAN\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else if (realizovan < 1) {\n                    var stat = \"ZAPRIMLJEN\";\n                    if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                      if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                        stat = \"REALIZOVAN\";\n                      }\n                    }\n                    _this2.uzorci.push({\n                      sid: element.id,\n                      status: stat,\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else {\n                    _this2.uzorci.push({\n                      sid: element.id,\n                      status: \"U OBRADI\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  }\n                }\n              });\n            });\n\n            _this2.uzorci = _this2.uzorci.sort(function (a, b) {\n              return a.sid.localeCompare(b.sid, undefined, {\n                numeric: true,\n                sensitivity: \"base\"\n              });\n            });\n          }).then(function (res) {\n            _this2.MicrobiologyScenario = \"MANBNoR\";\n            _this2.isLoading = false;\n          });\n        });\n      } else {}\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"MicroResult\", function () {\n      switch (_this2.MicrobiologyScenario) {\n        case \"MAIBNoR\":\n          _this2.rezultati[0].rezultat_m = [{\n            bakterija: false,\n            negativan: _this2.ModalNegative,\n            pozitivan: _this2.ModalPositive,\n            _id: null,\n            naziv: null,\n            opis: null,\n            antibiogram: {\n              _id: null,\n              naziv: null,\n              opis: null,\n              antibiotici: [{\n                _id: null,\n                rbr_a: null,\n                naziv: null,\n                opis: null,\n                rezultat: null\n              }]\n            }\n          }];\n\n          if (_this2.ModalNegative) {\n            _this2.rezultati[0].rezultat = _this2.NegativeResultSelection;\n            _this2.isLoading = true;\n\n            __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].post(\"/rezultati/odobravanje/sacuvaj/\" + _this2.$store.state.sid, {\n              email: _this2.$store.state.userId,\n              token: _this2.$store.state.token,\n              site: _this2.$store.state.site,\n              rezultati: _this2.rezultati\n            }).then(function (res) {\n              __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].get(\"rezultati/odobravanje/samples/\" + _this2.$route.params.patient + \"/\" + _this2.$route.params.id + \"?token=\" + _this2.$store.state.token + \"&site=\" + _this2.$store.state.site + \"&date=\" + _this2.$route.query.date, {}).then(function (res) {\n                _this2.uzorci = [];\n\n                res.data.results.forEach(function (element) {\n                  var check = 0;\n                  var zaprimljen = 0;\n                  var realizovan = 0;\n\n                  if (element.verificiran) {\n                    var status_uzorka = \"VERIFICIRAN\";\n                  } else {\n                    var status_uzorka = element.status;\n                  }\n\n                  element.rezultati.forEach(function (test) {\n                    check++;\n\n                    if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n                      zaprimljen++;\n                    }\n\n                    if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n                      realizovan++;\n                    }\n\n                    if (check === element.rezultati.length) {\n                      if (status_uzorka === \"VERIFICIRAN\") {\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: \"VERIFICIRAN\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else if (status_uzorka === \"ODOBREN\") {\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: \"ODOBREN\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else if (zaprimljen < 1) {\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: \"REALIZOVAN\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else if (realizovan < 1) {\n                        var stat = \"ZAPRIMLJEN\";\n                        if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                          if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                            stat = \"REALIZOVAN\";\n                          }\n                        }\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: stat,\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else {\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: \"U OBRADI\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      }\n                    }\n                  });\n                });\n\n                _this2.uzorci = _this2.uzorci.sort(function (a, b) {\n                  return a.sid.localeCompare(b.sid, undefined, {\n                    numeric: true,\n                    sensitivity: \"base\"\n                  });\n                });\n              }).then(function (res) {\n                __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$emit(\"CloseMicroResult\");\n                _this2.rezultati[0].realizovan = true;\n                _this2.MicrobiologyScenario = \"MAIBNeR\";\n                _this2.isLoading = false;\n              });\n            });\n          } else {\n            _this2.PositiveResultSelection = \"\";\n            _this2.SelectedBacteries.forEach(function (element) {\n              _this2.PositiveResultSelection = _this2.PositiveResultSelection + element.opis + \"\\n\";\n              var Antibiotici = [];\n              var antibiotik = {};\n\n              _this2.Antibiotics.forEach(function (antibiotik) {\n                element.antibiogram.antibiotici.forEach(function (ant) {\n                  if (antibiotik._id == ant) {\n                    antibiotik = {\n                      _id: antibiotik._id,\n                      rbr_a: antibiotik.rbr_a,\n                      naziv: antibiotik.naziv,\n                      opis: antibiotik.opis,\n                      disabled: false,\n                      rezultat: \"\"\n                    };\n                    Antibiotici.push(antibiotik);\n                    antibiotik = {};\n                  }\n                });\n              });\n\n              _this2.rezultati[0].rezultat_m.push({\n                bakterija: true,\n                negativan: _this2.largeModalneg,\n                pozitivan: _this2.largeModalpos,\n                _id: element._id,\n                naziv: element.naziv,\n                opis: element.opis,\n                antibiogram: {\n                  _id: element.antibiogram._id,\n                  naziv: element.antibiogram.naziv,\n                  opis: element.antibiogram.opis,\n                  antibiotici: [].concat(Antibiotici)\n                }\n              });\n            });\n\n            _this2.rezultati[0].rezultat = _this2.PositiveResultSelection.trim();\n\n            __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].post(\"/rezultati/odobravanje/sacuvaj/\" + _this2.$store.state.sid, {\n              email: _this2.$store.state.userId,\n              token: _this2.$store.state.token,\n              site: _this2.$store.state.site,\n              rezultati: _this2.rezultati\n            }).then(function (res) {\n              __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].get(\"rezultati/odobravanje/samples/\" + _this2.$route.params.patient + \"/\" + _this2.$route.params.id + \"?token=\" + _this2.$store.state.token + \"&site=\" + _this2.$store.state.site + \"&date=\" + _this2.$route.query.date, {}).then(function (res) {\n                _this2.uzorci = [];\n\n                res.data.results.forEach(function (element) {\n                  var check = 0;\n                  var zaprimljen = 0;\n                  var realizovan = 0;\n\n                  if (element.verificiran) {\n                    var status_uzorka = \"VERIFICIRAN\";\n                  } else {\n                    var status_uzorka = element.status;\n                  }\n\n                  element.rezultati.forEach(function (test) {\n                    check++;\n\n                    if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n                      zaprimljen++;\n                    }\n\n                    if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n                      realizovan++;\n                    }\n\n                    if (check === element.rezultati.length) {\n                      if (status_uzorka === \"VERIFICIRAN\") {\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: \"VERIFICIRAN\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else if (status_uzorka === \"ODOBREN\") {\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: \"ODOBREN\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else if (zaprimljen < 1) {\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: \"REALIZOVAN\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else if (realizovan < 1) {\n                        var stat = \"ZAPRIMLJEN\";\n                        if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                          if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                            stat = \"REALIZOVAN\";\n                          }\n                        }\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: stat,\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else {\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: \"U OBRADI\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      }\n                    }\n                  });\n                });\n\n                _this2.uzorci = _this2.uzorci.sort(function (a, b) {\n                  return a.sid.localeCompare(b.sid, undefined, {\n                    numeric: true,\n                    sensitivity: \"base\"\n                  });\n                });\n              }).then(function (res) {\n                __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$emit(\"CloseMicroResult\");\n                _this2.rezultati[0].realizovan = true;\n                _this2.MicrobiologyScenario = \"MAIBPoR\";\n                _this2.isLoading = false;\n              });\n            });\n          }\n\n          break;\n\n        case \"MANBNoR\":\n          _this2.rezultati[0].rezultat_m = [{\n            bakterija: false,\n            negativan: _this2.ModalNegative,\n            pozitivan: _this2.ModalPositive,\n            _id: null,\n            naziv: null,\n            opis: null,\n            antibiogram: {\n              _id: null,\n              naziv: null,\n              opis: null,\n              antibiotici: [{\n                _id: null,\n                rbr_a: null,\n                naziv: null,\n                opis: null,\n                rezultat: null\n              }]\n            }\n          }];\n\n          if (_this2.ModalNegative) {\n            _this2.rezultati[0].rezultat = _this2.NegativeResultSelection;\n            _this2.isLoading = true;\n\n            __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].post(\"/rezultati/odobravanje/sacuvaj/\" + _this2.$store.state.sid, {\n              email: _this2.$store.state.userId,\n              token: _this2.$store.state.token,\n              site: _this2.$store.state.site,\n              rezultati: _this2.rezultati\n            }).then(function (res) {\n              __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].get(\"rezultati/odobravanje/samples/\" + _this2.$route.params.patient + \"/\" + _this2.$route.params.id + \"?token=\" + _this2.$store.state.token + \"&site=\" + _this2.$store.state.site + \"&date=\" + _this2.$route.query.date, {}).then(function (res) {\n                _this2.uzorci = [];\n\n                res.data.results.forEach(function (element) {\n                  var check = 0;\n                  var zaprimljen = 0;\n                  var realizovan = 0;\n\n                  if (element.verificiran) {\n                    var status_uzorka = \"VERIFICIRAN\";\n                  } else {\n                    var status_uzorka = element.status;\n                  }\n\n                  element.rezultati.forEach(function (test) {\n                    check++;\n\n                    if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n                      zaprimljen++;\n                    }\n\n                    if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n                      realizovan++;\n                    }\n\n                    if (check === element.rezultati.length) {\n                      if (status_uzorka === \"VERIFICIRAN\") {\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: \"VERIFICIRAN\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else if (status_uzorka === \"ODOBREN\") {\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: \"ODOBREN\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else if (zaprimljen < 1) {\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: \"REALIZOVAN\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else if (realizovan < 1) {\n                        var stat = \"ZAPRIMLJEN\";\n                        if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                          if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                            stat = \"REALIZOVAN\";\n                          }\n                        }\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: stat,\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else {\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: \"U OBRADI\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      }\n                    }\n                  });\n                });\n\n                _this2.uzorci = _this2.uzorci.sort(function (a, b) {\n                  return a.sid.localeCompare(b.sid, undefined, {\n                    numeric: true,\n                    sensitivity: \"base\"\n                  });\n                });\n              }).then(function (res) {\n                __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$emit(\"CloseMicroResult\");\n                _this2.rezultati[0].realizovan = true;\n                _this2.MicrobiologyScenario = \"MANBNeR\";\n                _this2.isLoading = false;\n              });\n            });\n          } else {\n            _this2.rezultati[0].rezultat = _this2.PositiveResultSelection;\n            _this2.isLoading = true;\n\n            __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].post(\"/rezultati/odobravanje/sacuvaj/\" + _this2.$store.state.sid, {\n              email: _this2.$store.state.userId,\n              token: _this2.$store.state.token,\n              site: _this2.$store.state.site,\n              rezultati: _this2.rezultati\n            }).then(function (res) {\n              __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].get(\"rezultati/odobravanje/samples/\" + _this2.$route.params.patient + \"/\" + _this2.$route.params.id + \"?token=\" + _this2.$store.state.token + \"&site=\" + _this2.$store.state.site + \"&date=\" + _this2.$route.query.date, {}).then(function (res) {\n                _this2.uzorci = [];\n\n                res.data.results.forEach(function (element) {\n                  var check = 0;\n                  var zaprimljen = 0;\n                  var realizovan = 0;\n\n                  if (element.verificiran) {\n                    var status_uzorka = \"VERIFICIRAN\";\n                  } else {\n                    var status_uzorka = element.status;\n                  }\n\n                  element.rezultati.forEach(function (test) {\n                    check++;\n\n                    if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n                      zaprimljen++;\n                    }\n\n                    if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n                      realizovan++;\n                    }\n\n                    if (check === element.rezultati.length) {\n                      if (status_uzorka === \"VERIFICIRAN\") {\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: \"VERIFICIRAN\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else if (status_uzorka === \"ODOBREN\") {\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: \"ODOBREN\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else if (zaprimljen < 1) {\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: \"REALIZOVAN\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else if (realizovan < 1) {\n                        var stat = \"ZAPRIMLJEN\";\n                        if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                          if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                            stat = \"REALIZOVAN\";\n                          }\n                        }\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: stat,\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else {\n                        _this2.uzorci.push({\n                          sid: element.id,\n                          status: \"U OBRADI\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      }\n                    }\n                  });\n                });\n\n                _this2.uzorci = _this2.uzorci.sort(function (a, b) {\n                  return a.sid.localeCompare(b.sid, undefined, {\n                    numeric: true,\n                    sensitivity: \"base\"\n                  });\n                });\n              }).then(function (res) {\n                __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$emit(\"CloseMicroResult\");\n                _this2.rezultati[0].realizovan = true;\n                _this2.MicrobiologyScenario = \"MANBPoR\";\n                _this2.isLoading = false;\n              });\n            });\n          }\n\n          break;\n\n        default:\n          break;\n      }\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"ResetResultSelection\", function () {\n      switch (_this2.MicrobiologyScenario) {\n        case \"MAIBNoR\":\n          _this2.ModalNegative = false;\n          _this2.ModalPositive = false;\n          _this2.ModalPositiveCondition = false;\n          _this2.MicrobiologyModalHeader = \"Predefinisani rezultati\";\n          _this2.NegativeResultSelection = \"\";\n          _this2.PositiveResultSelection = \"\";\n          _this2.SelectedBacteries = [];\n          _this2.ShowAllBacteries = false;\n\n          break;\n\n        case \"MAIBNeR\":\n          _this2.SelectedBacteries = [];\n\n          break;\n\n        case \"MAIBPoR\":\n          break;\n\n        case \"MANBNoR\":\n          _this2.ModalNegative = false;\n          _this2.ModalPositive = false;\n          _this2.ModalPositiveCondition = false;\n          _this2.MicrobiologyModalHeader = \"Predefinisani rezultati\";\n          _this2.NegativeResultSelection = \"\";\n          _this2.PositiveResultSelection = \"\";\n          _this2.SelectedBacteries = [];\n          _this2.ShowAllBacteries = false;\n\n          break;\n\n        case \"MANBNeR\":\n          _this2.SelectedBacteries = [];\n\n          break;\n\n        case \"MANBPoR\":\n          _this2.SelectedBacteries = [];\n\n          break;\n\n        default:\n          break;\n      }\n\n      _this2.MicrobiologyResult.DefaultBacteries.forEach(function (element) {\n        element.chosen = false;\n      });\n\n      _this2.MicrobiologyResult.RemainingBacteries.forEach(function (element) {\n        element.chosen = false;\n      });\n\n      _this2.selectedBacteries = [];\n      _this2.ShowAllBacteries = false;\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"CancelMicroResult\", function () {\n      switch (_this2.MicrobiologyScenario) {\n        case \"MAIBNoR\":\n          _this2.ModalNegative = false;\n          _this2.ModalPositive = false;\n          _this2.ModalPositiveCondition = false;\n          _this2.MicrobiologyModalHeader = \"Predefinisani rezultati\";\n          _this2.NegativeResultSelection = \"\";\n          _this2.PositiveResultSelection = \"\";\n          _this2.SelectedBacteries = [];\n          _this2.ShowAllBacteries = false;\n\n          break;\n\n        case \"MAIBNeR\":\n          _this2.SelectedBacteries = [];\n\n          break;\n\n        case \"MAIBPoR\":\n          break;\n\n        case \"MANBNoR\":\n          _this2.ModalNegative = false;\n          _this2.ModalPositive = false;\n          _this2.ModalPositiveCondition = false;\n          _this2.MicrobiologyModalHeader = \"Predefinisani rezultati\";\n          _this2.NegativeResultSelection = \"\";\n          _this2.PositiveResultSelection = \"\";\n          _this2.SelectedBacteries = [];\n          _this2.ShowAllBacteries = false;\n\n          break;\n\n        case \"MANBNeR\":\n          _this2.SelectedBacteries = [];\n\n          break;\n\n        case \"MANBPoR\":\n          _this2.SelectedBacteries = [];\n\n          break;\n\n        default:\n          break;\n      }\n\n      _this2.MicrobiologyResult.DefaultBacteries.forEach(function (element) {\n        element.chosen = false;\n      });\n\n      _this2.MicrobiologyResult.RemainingBacteries.forEach(function (element) {\n        element.chosen = false;\n      });\n\n      _this2.selectedBacteries = [];\n      _this2.ShowAllBacteries = false;\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"MicroBactery\", function () {\n      _this2.isLoading = true;\n\n      __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].post(\"/rezultati/odobravanje/sacuvaj/\" + _this2.$store.state.sid, {\n        email: _this2.$store.state.userId,\n        token: _this2.$store.state.token,\n        site: _this2.$store.state.site,\n        rezultati: _this2.rezultati\n      }).then(function (res) {\n        __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].get(\"rezultati/odobravanje/samples/\" + _this2.$route.params.patient + \"/\" + _this2.$route.params.id + \"?token=\" + _this2.$store.state.token + \"&site=\" + _this2.$store.state.site + \"&date=\" + _this2.$route.query.date, {}).then(function (res) {\n          _this2.uzorci = [];\n\n          res.data.results.forEach(function (element) {\n            var check = 0;\n            var zaprimljen = 0;\n            var realizovan = 0;\n\n            if (element.verificiran) {\n              var status_uzorka = \"VERIFICIRAN\";\n            } else {\n              var status_uzorka = element.status;\n            }\n\n            element.rezultati.forEach(function (test) {\n              check++;\n\n              if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n                zaprimljen++;\n              }\n\n              if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n                realizovan++;\n              }\n\n              if (check === element.rezultati.length) {\n                if (status_uzorka === \"VERIFICIRAN\") {\n                  _this2.uzorci.push({\n                    sid: element.id,\n                    status: \"VERIFICIRAN\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else if (status_uzorka === \"ODOBREN\") {\n                  _this2.uzorci.push({\n                    sid: element.id,\n                    status: \"ODOBREN\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else if (zaprimljen < 1) {\n                  _this2.uzorci.push({\n                    sid: element.id,\n                    status: \"REALIZOVAN\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else if (realizovan < 1) {\n                  var stat = \"ZAPRIMLJEN\";\n                  if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                    if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                      stat = \"REALIZOVAN\";\n                    }\n                  }\n                  _this2.uzorci.push({\n                    sid: element.id,\n                    status: stat,\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else {\n                  _this2.uzorci.push({\n                    sid: element.id,\n                    status: \"U OBRADI\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                }\n              }\n            });\n          });\n\n          _this2.uzorci = _this2.uzorci.sort(function (a, b) {\n            return a.sid.localeCompare(b.sid, undefined, {\n              numeric: true,\n              sensitivity: \"base\"\n            });\n          });\n        }).then(function (res) {\n          __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$emit(\"CloseMicroBactery\");\n          _this2.isLoading = false;\n        });\n      });\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"CancelMicroBactery\", function () {});\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"PovratakMicroBactery\", function () {\n      _this2.ShowAntibiotics = false;\n      _this2.ShowBacteries = false;\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"SpasiMicroBactery\", function () {\n      if (_this2.TemporaryBacteriesAdd.length) {\n        var bakterija = {};\n        var antibiogram = {};\n        var antibiotik = {};\n\n        _this2.TemporaryBacteriesAdd.forEach(function (element) {\n          _this2.Antibiograms.forEach(function (antibgr) {\n            if (__WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(element.antibiogram._id) === __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(antibgr._id)) {\n              antibiogram = antibgr;\n            }\n          });\n\n          antibiogram.antibiotici.forEach(function (antbtk) {\n            antbtk.disabled = false;\n            antbtk.rezultat = \"\";\n          });\n\n          bakterija.bakterija = true;\n          bakterija._id = element._id;\n          bakterija.naziv = element.naziv;\n          bakterija.opis = element.opis;\n          bakterija.antibiogram = antibiogram;\n\n          console.log(bakterija);\n\n          _this2.SelectedBacteries.push(bakterija);\n          _this2.BacteryTabs.push(bakterija.opis);\n          _this2.rezultati[0].rezultat_m.push(bakterija);\n          bakterija = {};\n          antibiogram = {};\n        });\n      }\n\n      if (_this2.TemporaryAntibiotics.length || _this2.TemporaryBacteriesAdd.length) {\n        _this2.TemporaryAntibiotics.forEach(function (element) {\n          _this2.rezultati[0].rezultat_m.forEach(function (selected) {\n            if (selected.opis == _this2.CurrentTab) {\n              selected.antibiogram.antibiotici.push(element);\n            }\n          });\n        });\n\n        _this2.isLoading = true;\n\n        __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].post(\"/rezultati/odobravanje/sacuvaj/\" + _this2.$store.state.sid, {\n          email: _this2.$store.state.userId,\n          token: _this2.$store.state.token,\n          site: _this2.$store.state.site,\n          rezultati: _this2.rezultati\n        }).then(function (res) {\n          __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].get(\"rezultati/odobravanje/samples/\" + _this2.$route.params.patient + \"/\" + _this2.$route.params.id + \"?token=\" + _this2.$store.state.token + \"&site=\" + _this2.$store.state.site + \"&date=\" + _this2.$route.query.date, {}).then(function (res) {\n            _this2.uzorci = [];\n\n            res.data.results.forEach(function (element) {\n              var check = 0;\n              var zaprimljen = 0;\n              var realizovan = 0;\n\n              if (element.verificiran) {\n                var status_uzorka = \"VERIFICIRAN\";\n              } else {\n                var status_uzorka = element.status;\n              }\n\n              element.rezultati.forEach(function (test) {\n                check++;\n\n                if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n                  zaprimljen++;\n                }\n\n                if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n                  realizovan++;\n                }\n\n                if (check === element.rezultati.length) {\n                  if (status_uzorka === \"VERIFICIRAN\") {\n                    _this2.uzorci.push({\n                      sid: element.id,\n                      status: \"VERIFICIRAN\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else if (status_uzorka === \"ODOBREN\") {\n                    _this2.uzorci.push({\n                      sid: element.id,\n                      status: \"ODOBREN\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else if (zaprimljen < 1) {\n                    _this2.uzorci.push({\n                      sid: element.id,\n                      status: \"REALIZOVAN\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else if (realizovan < 1) {\n                    var stat = \"ZAPRIMLJEN\";\n                    if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                      if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                        stat = \"REALIZOVAN\";\n                      }\n                    }\n                    _this2.uzorci.push({\n                      sid: element.id,\n                      status: stat,\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else {\n                    _this2.uzorci.push({\n                      sid: element.id,\n                      status: \"U OBRADI\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  }\n                }\n              });\n            });\n\n            _this2.uzorci = _this2.uzorci.sort(function (a, b) {\n              return a.sid.localeCompare(b.sid, undefined, {\n                numeric: true,\n                sensitivity: \"base\"\n              });\n            });\n          }).then(function (res) {\n            _this2.MicrobiologyScenario = \"MAIBPoR\";\n            _this2.ShowAntibiotics = false;\n            _this2.ShowBacteries = false;\n            _this2.isLoading = false;\n\n            if (_this2.TemporaryBacteriesAdd.length) {\n              _this2.CurrentTab = _this2.BacteryTabs[_this2.BacteryTabs.length - 1];\n            }\n          });\n        });\n      } else {\n        _this2.MicrobiologyScenario = \"MAIBPoR\";\n        _this2.ShowAntibiotics = false;\n        _this2.ShowBacteries = false;\n      }\n    });\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$on(\"UpdateMicroBactery\", function (data) {\n      if (_this2.$store.state.access.level < 1 && !_this2.ShowAntibiotics && !_this2.ShowBacteries && _this2.MicrobiologyScenario === \"MAIBPoR\") {\n        if (_this2.sample.status != \"ODOBREN\" && _this2.sample.status != \"VERIFICIRAN\") {\n          _this2.TemporaryAntibiotics = [];\n          _this2.TemporaryBacteries = [];\n          _this2.TemporaryBacteriesAdd = [];\n          var obj = {};\n\n          _this2.Bacteries.forEach(function (element) {\n            obj.chosen = false;\n            obj.disabled = false;\n            obj._id = element._id;\n            obj.naziv = element.naziv;\n            obj.opis = element.opis;\n            obj.antibiogram = element.antibiogram;\n            obj.__v = element.__v;\n            obj.chosen = element.chosen;\n            _this2.TemporaryBacteries.push(obj);\n            obj = {};\n          });\n\n          _this2.TemporaryBacteries.forEach(function (element) {\n            _this2.SelectedBacteries.forEach(function (selected) {\n              if (selected._id == element._id) {\n                element.chosen = true;\n                element.disabled = true;\n              }\n            });\n          });\n\n          _this2.ShowBacteries = true;\n        }\n      }\n    });\n  },\n  beforeDestroy: function beforeDestroy() {\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"Parametar\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"trash\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"edit\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"comment\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"barcode\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"save\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"check\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"verify\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"undo\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"unlock\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"Nalaz\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"pdf\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"Sample\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"Deleted\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"Edited\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"SaveMulti\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"Mail\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"Error\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"Analyser\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"Sljedeci\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"Prethodni\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"Search\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"Push\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"Reference\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"graph\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"table\");\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"tabChanged\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"Antibiotik\");\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"MicroResult\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"ResetResultSelection\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"CancelMicroResult\");\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"MicroReset\");\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"AllowClick\");\n\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"MicroBactery\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"CancelMicroBactery\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"PovratakMicroBactery\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"SpasiMicroBactery\");\n    __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$off(\"UpdateMicroBactery\");\n  },\n  created: function created() {\n    this.Created();\n\n    this.Previous.pid = Number(this.$route.params.id) - 1;\n    this.Next.pid = Number(this.$route.params.id) + 1;\n    this.query_date = this.$route.query.date.substring(8, 10) + \".\" + this.$route.query.date.substring(5, 7) + \".\" + this.$route.query.date.substring(0, 4);\n\n    this.Datum.today = new Date(__WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(new Date(new Date().setDate(new Date().getDate()))).substring(1, 11) + \"T00:00:00\");\n\n    this.today_date = __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(new Date(new Date().setDate(new Date().getDate()))).substring(1, 11).substring(8, 10) + \".\" + __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(new Date(new Date().setDate(new Date().getDate()))).substring(1, 11).substring(5, 7) + \".\" + __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(new Date(new Date().setDate(new Date().getDate()))).substring(1, 11).substring(0, 4);\n\n    this.Datum.query = new Date(this.$route.query.date.substring(0, 10) + \"T00:00:00\");\n\n    this.Datum.next = new Date(new Date(this.$route.query.date.substring(0, 10) + \"T00:00:00\").setDate(this.Datum.query.getDate() + 1));\n\n    this.Datum.previous = new Date(new Date(this.$route.query.date.substring(0, 10) + \"T00:00:00\").setDate(this.Datum.query.getDate() - 1));\n\n    if (new Date(this.Datum.today) > new Date(this.Datum.query)) {\n      this.pagination = false;\n    } else if (new Date(this.Datum.today) < new Date(this.Datum.query)) {\n      this.pagination = false;\n    } else {\n      this.pagination = true;\n    }\n\n    this.interpretacije = this.interpretacije.sort(function (a, b) {\n      return a.localeCompare(b, undefined, {\n        numeric: true,\n        sensitivity: \"base\"\n      });\n    });\n  },\n\n\n  methods: {\n    ExclamationMulti: function ExclamationMulti(test) {\n      this.warning = { analiza: \"\", text: \"\", napomena: \"\", control: \"\" };\n      var rezultat = test.rezultat.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n      var m_interp = {};\n      var m_opis = \"\";\n\n      this.analitiprikaz.forEach(function (element) {\n        element.labassay.multiparam.forEach(function (param) {\n          if (__WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(param._id) == __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(test.analit)) {\n            m_interp = param.interpretacija;\n            m_opis = param.opis;\n          }\n        });\n      });\n\n      switch (this.Interpretacija(test.opis, rezultat, test.jedinica, test.refd, test.refg, this.$store.state.site, test.interp, \"\", this.spec)[2]) {\n        case \"L\":\n          this.warning = {\n            analiza: m_opis,\n            text: m_interp.snizeno.text.trim(),\n            napomena: m_interp.napomena.trim(),\n            control: \"Sniženo\"\n          };\n          break;\n\n        case \"H\":\n          switch (test.interp) {\n            case \"neg\":\n              this.warning = {\n                analiza: m_opis,\n                text: m_interp.poviseno.text.trim(),\n                napomena: m_interp.napomena.trim(),\n                control: \"Pozitivan\"\n              };\n              break;\n\n            default:\n              this.warning = {\n                analiza: m_opis,\n                text: m_interp.poviseno.text.trim(),\n                napomena: m_interp.napomena.trim(),\n                control: \"Povišeno\"\n              };\n              break;\n          }\n\n          break;\n\n        default:\n          this.warning = { analiza: \"\", text: \"\", napomena: \"\", control: \"\" };\n          break;\n      }\n\n      if (this.warning.text && this.warning.text != \"\") {}\n    },\n    Exclamation: function Exclamation(test) {\n      this.warning = { analiza: \"\", text: \"\", napomena: \"\", control: \"\" };\n      var rezultat = test.rezultat.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\");\n\n      switch (this.Interpretacija(test.opis, rezultat, test.jedinica, test.dRef, test.gRef, this.$store.state.site, test.interp, test.extend, this.spec)[2]) {\n        case \"L\":\n          this.warning = {\n            analiza: test.analit,\n            text: test.interpretacija.snizeno.text.trim(),\n            napomena: test.interpretacija.napomena.trim(),\n            control: \"Sniženo\"\n          };\n          break;\n\n        case \"H\":\n          switch (test.interp) {\n            case \"neg\":\n              this.warning = {\n                analiza: test.analit,\n                text: test.interpretacija.poviseno.text.trim(),\n                napomena: test.interpretacija.napomena.trim(),\n                control: \"Pozitivan\"\n              };\n              break;\n\n            default:\n              this.warning = {\n                analiza: test.analit,\n                text: test.interpretacija.poviseno.text.trim(),\n                napomena: test.interpretacija.napomena.trim(),\n                control: \"Povišeno\"\n              };\n              break;\n          }\n\n          break;\n\n        default:\n          this.warning = { analiza: \"\", text: \"\", napomena: \"\", control: \"\" };\n          break;\n      }\n\n      if (this.warning.text && this.warning.text != \"\") {\n        this.$refs.staticModalExclamation.open();\n      }\n    },\n    LabAssayEval: function LabAssayEval(e, test) {\n      var _this3 = this;\n\n      this.analiza_eval = test;\n      e.preventDefault();\n      this.spinner = false;\n      this.showLineChart = false;\n      var palette = __WEBPACK_IMPORTED_MODULE_5_vuex_store__[\"a\" /* default */].getters.palette;\n      this.table_header = test.ime + \" | \" + test.analit;\n      if (!test.multidata) {\n        this.isLoading = true;\n        this.Procjena = [];\n\n        __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].get(\"/labassay/evaluation/single\" + \"?token=\" + this.$store.state.token + \"&site=\" + this.$store.state.site + \"&range=\" + \"14\", {}).then(function (response) {\n          if (response.data.Results.length) {\n            var obj = {};\n            var count = 0;\n\n            response.data.Results.forEach(function (element) {\n              count++;\n              element.rezultati.forEach(function (rez) {\n                if (rez.labassay === test.labassay_id && element.verificiran && rez.rezultat[rez.rezultat.length - 1].rezultat_f.trim() != \"\") {\n                  obj.rezultat = rez.rezultat[rez.rezultat.length - 1].rezultat_f;\n                  obj.jedinica = rez.rezultat[rez.rezultat.length - 1].jedinice_f;\n                  obj.analit = \"\";\n                  obj.interp = rez.interp;\n                  obj.extend = rez.extend;\n                  obj.refd = rez.refd;\n                  obj.refg = rez.refg;\n                  obj.sid = element.id;\n                  obj.updated_at = rez.rezultat[rez.rezultat.length - 1].updated_at;\n\n                  var datum = __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(rez.rezultat[rez.rezultat.length - 1].updated_at).slice(9, 11) + \".\" + __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(rez.rezultat[rez.rezultat.length - 1].updated_at).slice(6, 8) + \".\" + __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(rez.rezultat[rez.rezultat.length - 1].updated_at).slice(1, 5);\n                  var time = __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(new Date(new Date(rez.rezultat[rez.rezultat.length - 1].updated_at).getTime() - new Date(rez.rezultat[rez.rezultat.length - 1].updated_at).getTimezoneOffset() * 60000).toISOString()).substring(12, 17);\n\n                  obj.datum = datum;\n                  obj.vrijeme = time;\n                  obj.kontrola = _this3.Interpretacija(\"\", obj.rezultat, obj.jedinica, obj.refd, obj.refg, _this3.$store.state.site, obj.interp, obj.extend, _this3.spec)[5];\n\n                  _this3.Procjena.push(obj);\n                  obj = {};\n                }\n              });\n\n              if (count == response.data.Results.length) {\n                _this3.Procjena.sort(function (a, b) {\n                  return Date.parse(a.updated_at) == Date.parse(b.updated_at) ? 0 : +(Date.parse(a.updated_at) < Date.parse(b.updated_at)) || -1;\n                });\n\n                var data = [];\n\n                if (_this3.Procjena.length) {\n                  _this3.optionsLineChart = {\n                    responsive: true,\n                    maintainAspectRatio: false,\n                    title: {\n                      display: true,\n                      text: \"\"\n                    },\n                    scales: {\n                      xAxes: [{\n                        display: true,\n                        gridLines: {\n                          display: true,\n                          color: \"#eee\"\n                        }\n                      }],\n                      yAxes: [{\n                        display: true,\n                        gridLines: {\n                          display: true,\n                          color: \"#eee\"\n                        }\n                      }]\n                    }\n                  };\n\n                  var labels = [];\n                  var kontrola = [];\n                  var temp = \"\";\n\n                  _this3.Procjena.forEach(function (element) {\n                    if (!isNaN(element.rezultat.trim())) {\n                      switch (element.kontrola) {\n                        case \"Red\":\n                          kontrola.push(palette.danger);\n                          break;\n                        case \"Green\":\n                          kontrola.push(palette.primary);\n                          break;\n                        case \"Yellow\":\n                          kontrola.push(palette.warning);\n                          break;\n\n                        default:\n                          kontrola.push(palette.info);\n                          break;\n                      }\n\n                      labels.push(element.datum);\n                      data.push(element.rezultat);\n                    }\n                  });\n\n                  _this3.dataLineChart = {\n                    labels: labels,\n                    datasets: [{\n                      label: test.ime + \" | \" + test.analit,\n                      backgroundColor: __WEBPACK_IMPORTED_MODULE_6_services_utils__[\"a\" /* default */].hex2rgb(palette.info, 0.5).css,\n                      pointBorderColor: kontrola,\n                      pointBackgroundColor: kontrola,\n                      borderColor: palette.transparent,\n                      data: data\n                    }]\n                  };\n\n                  if (data.length) {\n                    _this3.showLineChart = true;\n                  }\n                  _this3.$refs.staticModalLabAssayEvalSingle.open();\n                } else {}\n              }\n            });\n          } else {}\n          _this3.isLoading = false;\n        });\n      } else {\n        this.multiparam_izbor = test.multiparam[0].opis;\n        this.multiparam_id = test.multiparam[0]._id;\n\n        this.multiparams = [];\n\n        this.multiparam_izbornik = [];\n\n        test.multiparam.forEach(function (element) {\n          _this3.multiparam_izbornik.push(element.opis);\n          _this3.multiparams.push(element);\n        });\n\n        this.isLoading = true;\n        this.Procjena = [];\n\n        __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].get(\"/labassay/evaluation/multi\" + \"?token=\" + this.$store.state.token + \"&site=\" + this.$store.state.site + \"&labassay=\" + test.labassay_id + \"&range=\" + \"14\", {}).then(function (response) {\n          if (response.data.Multi.length) {\n            _this3.Response = response.data;\n\n            var obj = {};\n            var count = 0;\n\n            response.data.Multi.forEach(function (element) {\n              count++;\n              element.multi.forEach(function (param) {\n                if (_this3.multiparam_id == param.labassay && param.rezultat[0].rezultat_f.trim() != \"\") {\n                  obj.rezultat = param.rezultat[0].rezultat_f;\n                  obj.jedinica = param.rezultat[0].jedinice_f;\n                  obj.analit = \"Nema podataka\";\n                  obj.interp = param.interp;\n                  obj.extend = param.extend;\n                  obj.refd = param.refd;\n                  obj.refg = param.refg;\n                  obj.sid = \"Nema podataka\";\n                  obj.updated_at = new Date(param.rezultat[0].updated_at);\n\n                  var datum = __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(new Date(param.rezultat[0].updated_at)).slice(9, 11) + \".\" + __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(new Date(param.rezultat[0].updated_at)).slice(6, 8) + \".\" + __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(new Date(param.rezultat[0].updated_at)).slice(1, 5);\n                  var time = __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(new Date(new Date(param.rezultat[0].updated_at).getTime() - new Date(param.rezultat[0].updated_at).getTimezoneOffset() * 60000).toISOString()).substring(12, 17);\n                  obj.datum = datum;\n                  obj.vrijeme = time;\n                  obj.kontrola = _this3.Interpretacija(\"\", obj.rezultat, obj.jedinica, obj.refd, obj.refg, _this3.$store.state.site, obj.interp, obj.extend, _this3.spec)[5];\n\n                  _this3.Procjena.push(obj);\n                  obj = {};\n                }\n              });\n\n              if (count == response.data.Multi.length) {\n                _this3.Procjena.sort(function (a, b) {\n                  return Date.parse(a.updated_at) == Date.parse(b.updated_at) ? 0 : +(Date.parse(a.updated_at) < Date.parse(b.updated_at)) || -1;\n                });\n\n                var data = [];\n\n                if (_this3.Procjena.length) {\n                  _this3.optionsLineChart = {\n                    responsive: true,\n                    maintainAspectRatio: false,\n                    title: {\n                      display: true,\n                      text: \"\"\n                    },\n                    scales: {\n                      xAxes: [{\n                        display: true,\n                        gridLines: {\n                          display: true,\n                          color: \"#eee\"\n                        }\n                      }],\n                      yAxes: [{\n                        display: true,\n                        gridLines: {\n                          display: true,\n                          color: \"#eee\"\n                        }\n                      }]\n                    }\n                  };\n\n                  var labels = [];\n                  var kontrola = [];\n                  var temp = \"\";\n\n                  _this3.Procjena.forEach(function (element) {\n                    if (!isNaN(element.rezultat.trim())) {\n                      switch (element.kontrola) {\n                        case \"Red\":\n                          kontrola.push(palette.danger);\n                          break;\n                        case \"Green\":\n                          kontrola.push(palette.primary);\n                          break;\n                        case \"Yellow\":\n                          kontrola.push(palette.warning);\n                          break;\n\n                        default:\n                          kontrola.push(palette.info);\n                          break;\n                      }\n\n                      labels.push(element.datum);\n                      data.push(element.rezultat);\n                    }\n                  });\n\n                  _this3.dataLineChart = {\n                    labels: labels,\n                    datasets: [{\n                      label: test.ime + \" | \" + test.analit,\n                      backgroundColor: __WEBPACK_IMPORTED_MODULE_6_services_utils__[\"a\" /* default */].hex2rgb(palette.info, 0.5).css,\n                      pointBorderColor: kontrola,\n                      pointBackgroundColor: kontrola,\n                      borderColor: palette.transparent,\n                      data: data\n                    }]\n                  };\n\n                  if (data.length) {\n                    _this3.showLineChart = true;\n                  }\n\n                  _this3.$refs.staticModalLabAssayEvalMulti.open();\n                } else {}\n              }\n            });\n          } else {}\n          _this3.isLoading = false;\n        });\n      }\n    },\n    Evaluation: function Evaluation(test) {\n      var _this4 = this;\n\n      this.analiza_eval = test;\n      this.spinner = false;\n      if (true) {\n        this.showLineChart = false;\n        var palette = __WEBPACK_IMPORTED_MODULE_5_vuex_store__[\"a\" /* default */].getters.palette;\n        this.table_header = test.ime + \" | \" + test.analit;\n\n        if (test.multidata) {\n          this.multiparam_izbor = test.multiparam[0].opis;\n          this.multiparam_id = test.multiparam[0]._id;\n\n          this.multiparams = [];\n\n          this.multiparam_izbornik = [];\n\n          test.multiparam.forEach(function (element) {\n            _this4.multiparam_izbornik.push(element.opis);\n            _this4.multiparams.push(element);\n          });\n\n          this.isLoading = true;\n          this.Procjena = [];\n\n          __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].get(\"/patient/evaluation/multi\" + \"?token=\" + this.$store.state.token + \"&site=\" + this.$store.state.site + \"&patient=\" + this.pacijent + \"&labassay=\" + test.labassay_id, {}).then(function (response) {\n            if (response.data.Multi.length) {\n              _this4.Response = response.data;\n\n              var obj = {};\n              var count = 0;\n\n              response.data.Multi.forEach(function (element) {\n                count++;\n                element.multi.forEach(function (param) {\n                  if (_this4.multiparam_id == param.labassay && param.rezultat[0].rezultat_f.trim() != \"\") {\n                    obj.rezultat = param.rezultat[0].rezultat_f;\n                    obj.jedinica = param.rezultat[0].jedinice_f;\n                    obj.analit = \"Nema podataka\";\n                    obj.interp = param.interp;\n                    obj.extend = param.extend;\n                    obj.refd = param.refd;\n                    obj.refg = param.refg;\n                    obj.sid = \"Nema podataka\";\n                    obj.updated_at = new Date(param.rezultat[0].updated_at);\n\n                    var datum = __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(new Date(param.rezultat[0].updated_at)).slice(9, 11) + \".\" + __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(new Date(param.rezultat[0].updated_at)).slice(6, 8) + \".\" + __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(new Date(param.rezultat[0].updated_at)).slice(1, 5);\n                    var time = __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(new Date(new Date(param.rezultat[0].updated_at).getTime() - new Date(param.rezultat[0].updated_at).getTimezoneOffset() * 60000).toISOString()).substring(12, 17);\n                    obj.datum = datum;\n                    obj.vrijeme = time;\n                    obj.kontrola = _this4.Interpretacija(\"\", obj.rezultat, obj.jedinica, obj.refd, obj.refg, _this4.$store.state.site, obj.interp, obj.extend, _this4.spec)[5];\n\n                    _this4.Procjena.push(obj);\n                    obj = {};\n                  }\n                });\n\n                if (count == response.data.Multi.length) {\n                  _this4.Procjena.sort(function (a, b) {\n                    return Date.parse(a.updated_at) == Date.parse(b.updated_at) ? 0 : +(Date.parse(a.updated_at) < Date.parse(b.updated_at)) || -1;\n                  });\n\n                  var data = [];\n\n                  if (_this4.Procjena.length) {\n                    _this4.optionsLineChart = {\n                      responsive: true,\n                      maintainAspectRatio: false,\n                      title: {\n                        display: true,\n                        text: \"\"\n                      },\n                      scales: {\n                        xAxes: [{\n                          display: true,\n                          gridLines: {\n                            display: true,\n                            color: \"#eee\"\n                          }\n                        }],\n                        yAxes: [{\n                          display: true,\n                          gridLines: {\n                            display: true,\n                            color: \"#eee\"\n                          }\n                        }]\n                      }\n                    };\n\n                    var labels = [];\n                    var kontrola = [];\n                    var temp = \"\";\n\n                    _this4.Procjena.forEach(function (element) {\n                      if (!isNaN(element.rezultat.trim())) {\n                        switch (element.kontrola) {\n                          case \"Red\":\n                            kontrola.push(palette.danger);\n                            break;\n                          case \"Green\":\n                            kontrola.push(palette.primary);\n                            break;\n                          case \"Yellow\":\n                            kontrola.push(palette.warning);\n                            break;\n\n                          default:\n                            kontrola.push(palette.info);\n                            break;\n                        }\n\n                        labels.push(element.datum);\n                        data.push(element.rezultat);\n                      }\n                    });\n\n                    _this4.dataLineChart = {\n                      labels: labels,\n                      datasets: [{\n                        label: test.ime + \" | \" + test.analit,\n                        backgroundColor: __WEBPACK_IMPORTED_MODULE_6_services_utils__[\"a\" /* default */].hex2rgb(palette.info, 0.5).css,\n                        pointBorderColor: kontrola,\n                        pointBackgroundColor: kontrola,\n                        borderColor: palette.transparent,\n                        data: data\n                      }]\n                    };\n\n                    if (data.length) {\n                      _this4.showLineChart = true;\n                    }\n\n                    _this4.$refs.staticModalEvaluationMulti.open();\n                  } else {}\n                }\n              });\n            } else {}\n            _this4.isLoading = false;\n          });\n        } else {\n          this.isLoading = true;\n          this.Procjena = [];\n\n          __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].get(\"/patient/evaluation/single\" + \"?token=\" + this.$store.state.token + \"&site=\" + this.$store.state.site + \"&patient=\" + this.pacijent, {}).then(function (response) {\n            if (response.data.Results.length) {\n              var obj = {};\n              var count = 0;\n\n              response.data.Results.forEach(function (element) {\n                count++;\n                element.rezultati.forEach(function (rez) {\n                  if (rez.labassay === test.labassay_id && element.verificiran && rez.rezultat[rez.rezultat.length - 1].rezultat_f.trim() != \"\") {\n                    obj.rezultat = rez.rezultat[rez.rezultat.length - 1].rezultat_f;\n                    obj.jedinica = rez.rezultat[rez.rezultat.length - 1].jedinice_f;\n                    obj.analit = \"\";\n                    obj.interp = rez.interp;\n                    obj.extend = rez.extend;\n                    obj.refd = rez.refd;\n                    obj.refg = rez.refg;\n                    obj.sid = element.id;\n                    obj.updated_at = rez.rezultat[rez.rezultat.length - 1].updated_at;\n\n                    var datum = __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(rez.rezultat[rez.rezultat.length - 1].updated_at).slice(9, 11) + \".\" + __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(rez.rezultat[rez.rezultat.length - 1].updated_at).slice(6, 8) + \".\" + __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(rez.rezultat[rez.rezultat.length - 1].updated_at).slice(1, 5);\n                    var time = __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_json_stringify___default()(new Date(new Date(rez.rezultat[rez.rezultat.length - 1].updated_at).getTime() - new Date(rez.rezultat[rez.rezultat.length - 1].updated_at).getTimezoneOffset() * 60000).toISOString()).substring(12, 17);\n\n                    obj.datum = datum;\n                    obj.vrijeme = time;\n                    obj.kontrola = _this4.Interpretacija(\"\", obj.rezultat, obj.jedinica, obj.refd, obj.refg, _this4.$store.state.site, obj.interp, obj.extend, _this4.spec)[5];\n\n                    _this4.Procjena.push(obj);\n                    obj = {};\n                  }\n                });\n\n                if (count == response.data.Results.length) {\n                  _this4.Procjena.sort(function (a, b) {\n                    return Date.parse(a.updated_at) == Date.parse(b.updated_at) ? 0 : +(Date.parse(a.updated_at) < Date.parse(b.updated_at)) || -1;\n                  });\n\n                  var data = [];\n\n                  if (_this4.Procjena.length) {\n                    _this4.optionsLineChart = {\n                      responsive: true,\n                      maintainAspectRatio: false,\n                      title: {\n                        display: true,\n                        text: \"\"\n                      },\n                      scales: {\n                        xAxes: [{\n                          display: true,\n                          gridLines: {\n                            display: true,\n                            color: \"#eee\"\n                          }\n                        }],\n                        yAxes: [{\n                          display: true,\n                          gridLines: {\n                            display: true,\n                            color: \"#eee\"\n                          }\n                        }]\n                      }\n                    };\n\n                    var labels = [];\n                    var kontrola = [];\n                    var temp = \"\";\n\n                    _this4.Procjena.forEach(function (element) {\n                      if (!isNaN(element.rezultat.trim())) {\n                        switch (element.kontrola) {\n                          case \"Red\":\n                            kontrola.push(palette.danger);\n                            break;\n                          case \"Green\":\n                            kontrola.push(palette.primary);\n                            break;\n                          case \"Yellow\":\n                            kontrola.push(palette.warning);\n                            break;\n\n                          default:\n                            kontrola.push(palette.info);\n                            break;\n                        }\n\n                        labels.push(element.datum);\n                        data.push(element.rezultat);\n                      }\n                    });\n\n                    _this4.dataLineChart = {\n                      labels: labels,\n                      datasets: [{\n                        label: test.ime + \" | \" + test.analit,\n                        backgroundColor: __WEBPACK_IMPORTED_MODULE_6_services_utils__[\"a\" /* default */].hex2rgb(palette.info, 0.5).css,\n                        pointBorderColor: kontrola,\n                        pointBackgroundColor: kontrola,\n                        borderColor: palette.transparent,\n                        data: data\n                      }]\n                    };\n\n                    if (data.length) {\n                      _this4.showLineChart = true;\n                    }\n\n                    _this4.$refs.staticModalEvaluationSingle.open();\n                  } else {}\n                }\n              });\n            } else {}\n            _this4.isLoading = false;\n          });\n        }\n      }\n    },\n    filteredAntibiotics: function filteredAntibiotics(column, columns) {\n      var _this5 = this;\n\n      return this.Antibiotics.filter(function (item) {\n        return _this5.Antibiotics.indexOf(item) % columns === column - 1;\n      });\n    },\n    filteredBacteries: function filteredBacteries(column, columns) {\n      var _this6 = this;\n\n      return this.TemporaryBacteries.filter(function (item) {\n        return _this6.TemporaryBacteries.indexOf(item) % columns === column - 1;\n      });\n    },\n    AddAntibiotics: function AddAntibiotics(data) {\n      var obj = {};\n\n      if (!data.chosen) {\n        obj._id = data._id, obj.rbr_a = data.rbr_a, obj.naziv = data.naziv, obj.opis = data.opis, obj.rezultat = \"\";\n        this.TemporaryAntibiotics.push(obj);\n      } else {\n        for (var i = 0; i < this.TemporaryAntibiotics.length; i++) {\n          if (this.TemporaryAntibiotics[i]._id === data._id) {\n            this.TemporaryAntibiotics.splice(i, 1);\n            break;\n          }\n        }\n      }\n    },\n    AddBacteries: function AddBacteries(data) {\n      if (!data.chosen) {\n        this.TemporaryBacteriesAdd.push(data);\n      } else {\n        for (var i = 0; i < this.TemporaryBacteriesAdd.length; i++) {\n          if (this.TemporaryBacteriesAdd[i]._id === data._id) {\n            this.TemporaryBacteriesAdd.splice(i, 1);\n            break;\n          }\n        }\n      }\n    },\n    OpenMicro: function OpenMicro($event, test) {\n      var _this7 = this;\n\n      this.show_table = false;\n      this.CurrentTab = \"\";\n      this.testovi = [];\n      this.rezultati = [];\n      this.analitiprikaz = [];\n      this.calculated = false;\n\n      var topcije = null;\n      topcije = __WEBPACK_IMPORTED_MODULE_11__data_izbornik_izbornik__[\"a\" /* default */].rez;\n\n      __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].get(\"rezultati/showsingle/\" + this.$store.state.sid + \"?token=\" + this.$store.state.token + \"&site=\" + this.$store.state.site, {}).then(function (res) {\n        var test = {};\n\n        if (res.data.data.length) {\n          res.data.data.sort(function (a, b) {\n            return a.testovi.labassay.grupa + a.testovi.labassay.grouporder == b.testovi.labassay.grupa + b.testovi.labassay.grouporder ? 0 : +(a.testovi.labassay.grupa + a.testovi.labassay.grouporder > b.testovi.labassay.grupa + b.testovi.labassay.grouporder) || -1;\n          });\n\n          _this7.testovi = res.data.data;\n          _this7.analitiprikaz = res.data.multidata;\n\n          res.data.data.forEach(function (element) {\n            test = {};\n            test.realizovan = false;\n\n            test.ime = element.testovi.labassay.naziv;\n            test.test = element.testovi.labassay.sifra;\n            test.analit = element.testovi.labassay.analit;\n            test.IDE = element.testovi._id;\n            test.labassay_id = element.testovi.labassay._id;\n\n            test.multi_count = 0;\n            test.multi_rezultati = [];\n\n            res.data.multidata.forEach(function (multi) {\n              if (multi.labassay._id === element.testovi.labassay._id) {\n                test.multi_rezultati = multi.rezultat;\n                test.multi_count = multi.rezultat[0].rezultat.length;\n              }\n            });\n\n            test.kategorija = element.testovi.labassay.kategorija;\n            test.analyser = element.testovi.labassay.analyser;\n            test.multiparam = element.testovi.labassay.multiparam;\n            test.vise = element.testovi.rezultat.length;\n            test.calculated = element.testovi.labassay.calculated;\n            test.manual = element.testovi.labassay.manual;\n\n            test.select_options = eval(\"topcije.\" + element.testovi.interp.replace(\"%\", \"_\").replace(\"/\", \"_\").replace(\" \", \"_\").replace(/-/g, \"_\").replace(\"#\", \"_\").replace(/^\\d+/, \"\"));\n\n            element.testovi.rezultat.forEach(function (rezultat) {\n              test.sekcija = rezultat.anaassay.sekcija;\n              test.rezultat = rezultat.rezultat_f;\n              test.result = rezultat;\n              test.anaassay = rezultat.anaassay;\n\n              if (rezultat.rezultat_f != \"\") {\n                test.realizovan = true;\n              }\n\n              test.unit = rezultat.jedinice_f;\n\n              if (res.data.verificiran || res.data.status === \"ODOBREN\") {\n                test.odobren = \"ODOBREN\";\n                test.edit = false;\n              } else {\n                test.odobren != \"ODOBREN\";\n                test.edit = true;\n              }\n\n              test.jedinica = rezultat.jedinice_f;\n              test.id = rezultat._id;\n              test.multidata = element.testovi.labassay.multi;\n              test.rezultat_m = rezultat.rezultat_m;\n              test.bakterije = element.testovi.labassay.bakterije;\n              test.neg_description = element.testovi.labassay.neg_description;\n              test.pos_description = element.testovi.labassay.pos_description;\n              test.refSet = element.testovi.grupa;\n              test.dRef = element.testovi.refd;\n              test.gRef = element.testovi.refg;\n              test.interp = element.testovi.interp;\n              test.extend = element.testovi.extend;\n              test.retest = element.testovi.retest;\n              test.interpretacija = element.testovi.labassay.interpretacija;\n            });\n\n            if (test.select_options != undefined && !test.select_options.includes(test.rezultat)) {\n              test.select_options.unshift(test.rezultat);\n            }\n            _this7.rezultati.push(test);\n          });\n\n          if (_this7.MicrobiologySample && _this7.AllowGetSample) {\n            var bakterioloski = false;\n            var negativan = false;\n            var pozitivan = false;\n            var bakterijed = [];\n            var bakterijei = [];\n            var neg_rezultati = [];\n            var poz_rezultati = [];\n\n            _this7.CurrentTest = _this7.rezultati[0].analit;\n\n            neg_rezultati = [].concat(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray___default()(_this7.rezultati[0].neg_description));\n            poz_rezultati = [].concat(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray___default()(_this7.rezultati[0].pos_description));\n\n            if (_this7.rezultati[0].bakterije.length) {\n              bakterioloski = true;\n\n              var counter = 0;\n              var ima = false;\n\n              _this7.Bacteries.forEach(function (element) {\n                element.chosen = false;\n                counter = 0;\n                ima = false;\n                _this7.rezultati[0].bakterije.forEach(function (bakt) {\n                  counter++;\n                  if (element._id == bakt) {\n                    ima = true;\n                  }\n\n                  if (counter === _this7.rezultati[0].bakterije.length && !ima) {\n                    bakterijed.push(element);\n                  }\n\n                  if (counter === _this7.rezultati[0].bakterije.length && ima) {\n                    bakterijei.push(element);\n                  }\n                });\n              });\n\n              switch (_this7.rezultati[0].rezultat_m.length) {\n                case 0:\n                  _this7.MicrobiologyScenario = \"MAIBNoR\";\n                  _this7.SelectedBacteries = [];\n                  break;\n                case 1:\n                  _this7.MicrobiologyScenario = \"MAIBNeR\";\n                  _this7.SelectedBacteries = [];\n\n                  negativan = true;\n\n                  if (!neg_rezultati.includes(_this7.rezultati[0].rezultat.trim())) {\n                    neg_rezultati.unshift(_this7.rezultati[0].rezultat.trim());\n                  }\n\n                  break;\n\n                default:\n                  _this7.MicrobiologyScenario = \"MAIBPoR\";\n                  _this7.SelectedBacteries = [];\n                  _this7.BacteryTabs = [];\n\n                  _this7.rezultati[0].rezultat_m.forEach(function (element) {\n                    if (element.bakterija) {\n                      _this7.SelectedBacteries.push(element);\n                      _this7.BacteryTabs.push(element.opis);\n                    }\n                  });\n\n                  var maxVal = _this7.SelectedBacteries.reduce(function (max, val) {\n                    return max.antibiogram.antibiotici.length > val.antibiogram.antibiotici.length ? max : val;\n                  });\n\n                  if (_this7.CurrentTab == \"\") {}\n                  _this7.CurrentTab = _this7.SelectedBacteries[0].opis;\n\n                  bakterijed.forEach(function (element) {\n                    _this7.SelectedBacteries.forEach(function (bact) {\n                      if (element._id == bact._id) {\n                        element.chosen = true;\n                      }\n                    });\n                  });\n\n                  bakterijei.forEach(function (element) {\n                    _this7.SelectedBacteries.forEach(function (bact) {\n                      if (element._id == bact._id) {\n                        element.chosen = true;\n                      }\n                    });\n                  });\n\n                  pozitivan = true;\n                  if (!poz_rezultati.includes(_this7.rezultati[0].rezultat.trim())) {\n                    poz_rezultati.unshift(_this7.rezultati[0].rezultat.trim());\n                  }\n\n                  break;\n              }\n            } else {\n              bakterioloski = false;\n              _this7.SelectedBacteries = [];\n\n              switch (_this7.rezultati[0].rezultat_m.length) {\n                case 0:\n                  _this7.MicrobiologyScenario = \"MANBNoR\";\n                  neg_rezultati = _this7.rezultati[0].neg_description;\n                  poz_rezultati = _this7.rezultati[0].pos_description;\n\n                  break;\n\n                case 1:\n                  if (_this7.rezultati[0].rezultat_m[0].negativan === true) {\n                    _this7.MicrobiologyScenario = \"MANBNeR\";\n\n                    negativan = true;\n\n                    if (!neg_rezultati.includes(_this7.rezultati[0].rezultat.trim())) {\n                      neg_rezultati.unshift(_this7.rezultati[0].rezultat.trim());\n                    }\n                  } else {\n                    _this7.MicrobiologyScenario = \"MANBPoR\";\n\n                    pozitivan = true;\n\n                    if (!poz_rezultati.includes(_this7.rezultati[0].rezultat.trim())) {\n                      poz_rezultati.unshift(_this7.rezultati[0].rezultat.trim());\n                    }\n                  }\n\n                  break;\n\n                default:\n                  _this7.MicrobiologyScenario = \"Unknown\";\n\n                  break;\n              }\n            }\n\n            _this7.MicrobiologyResult = {\n              negative: negativan,\n              positive: pozitivan,\n              BUG: bakterioloski,\n              F_RESULT: _this7.rezultati[0].rezultat,\n              M_RESULT: [].concat(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray___default()(_this7.rezultati[0].rezultat_m)),\n              DefaultBacteries: [].concat(bakterijei),\n              RemainingBacteries: [].concat(bakterijed),\n              NegativeDescriptions: [].concat(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray___default()(neg_rezultati)),\n              PositiveDescriptions: [].concat(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray___default()(poz_rezultati))\n            };\n          } else {\n            _this7.MicrobiologyScenario = \"Unknown\";\n\n            _this7.MicrobiologyResult = {\n              negative: null,\n              positive: null,\n              BUG: null,\n              F_RESULT: \"\",\n              M_RESULT: [],\n              DefaultBacteries: [],\n              RemainingBacteries: [],\n              NegativeDescriptions: [],\n              PositiveDescriptions: []\n            };\n          }\n\n          _this7.rezultati.forEach(function (element) {\n            if (element.calculated) {\n              _this7.calculated = true;\n            }\n          });\n\n          _this7.show_table = true;\n        }\n      }).then(function () {\n        _this7.ShowAntibiotics = false;\n        _this7.ShowBacteries = false;\n        _this7.$refs.staticModalMicroBactery.open();\n      });\n    },\n    SelectBactery: function SelectBactery(data) {\n      if (!data.chosen) {\n        this.SelectedBacteries.push(data);\n      } else {\n        for (var i = this.SelectedBacteries.length - 1; i >= 0; i--) {\n          if (this.SelectedBacteries[i]._id === data._id) {\n            this.SelectedBacteries.splice(i, 1);\n          }\n        }\n      }\n\n      if (this.SelectedBacteries.length > 0) {\n        this.ModalPositiveCondition = true;\n      } else {\n        this.ModalPositiveCondition = false;\n      }\n    },\n    MicroResultSelect: function MicroResultSelect(event) {\n      var _this8 = this;\n\n      this.uzorci.forEach(function (element) {\n        if (element.sid === _this8.$store.state.sid) {\n          _this8.sample.status = \"ZAPRIMLJEN\";\n        }\n      });\n      this.$refs.staticModalSelectResult.open();\n    },\n    ResetSample: function ResetSample(event) {\n      this.$refs.staticModalResetSample.open();\n    },\n    onCancel: function onCancel() {},\n    Prethodni: function Prethodni() {\n      var _this9 = this;\n\n      this.pagination = false;\n\n      var check = 0;\n      var found = false;\n      this.Results.forEach(function (element) {\n        check++;\n        if (element.pid == _this9.Previous.pid) {\n          found = true;\n          __WEBPACK_IMPORTED_MODULE_4__router__[\"a\" /* default */].push(\"/obrada/rezultati/\" + element.patient + \"/\" + element.pid + \"?date=\" + element.date);\n        }\n      });\n\n      if (check === this.Results.length) {\n        if (found) {\n          __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].get(\"/rezultati/pagination\" + \"?token=\" + this.$store.state.token + \"&site=\" + this.$store.state.site + \"&pid=\" + this.Previous.pid.toString() + \"&date=\" + this.$route.query.date, {}).then(function (res) {\n            res.data.rezultati = res.data.rezultati.sort(function (a, b) {\n              return a.pid.localeCompare(b.pid, undefined, {\n                numeric: true,\n                sensitivity: \"base\"\n              });\n            });\n\n            _this9.data_length = res.data.rezultati[res.data.rezultati.length - 1].pid;\n            _this9.data_min = res.data.rezultati[0].pid;\n            if (__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_own_property_names___default()(res.data).length === 0) {\n              _this9.pagination = true;\n              _this9.backward_disabled = true;\n            } else {\n              _this9.data_pid = res.data.data.pid;\n              _this9.Results = res.data.rezultati;\n\n              __WEBPACK_IMPORTED_MODULE_4__router__[\"a\" /* default */].push(\"/obrada/rezultati/\" + res.data.data.patient + \"/\" + res.data.data.pid + \"?date=\" + res.data.data.date);\n            }\n          });\n        } else {\n          this.Previous.pid = this.Previous.pid - 1;\n          if (this.Previous.pid > 0) {\n            this.Prethodni();\n          } else {}\n        }\n      } else {}\n    },\n    Sljedeci: function Sljedeci() {\n      var _this10 = this;\n\n      this.pagination = false;\n\n      var check = 0;\n      var found = false;\n      this.Results.forEach(function (element) {\n        check++;\n        if (element.pid == _this10.Next.pid) {\n          found = true;\n          __WEBPACK_IMPORTED_MODULE_4__router__[\"a\" /* default */].push(\"/obrada/rezultati/\" + element.patient + \"/\" + element.pid + \"?date=\" + element.date);\n        }\n      });\n\n      if (check === this.Results.length) {\n        if (found) {\n          __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].get(\"/rezultati/pagination\" + \"?token=\" + this.$store.state.token + \"&site=\" + this.$store.state.site + \"&pid=\" + this.Next.pid.toString() + \"&date=\" + this.$route.query.date, {}).then(function (res) {\n            res.data.rezultati = res.data.rezultati.sort(function (a, b) {\n              return a.pid.localeCompare(b.pid, undefined, {\n                numeric: true,\n                sensitivity: \"base\"\n              });\n            });\n\n            _this10.data_length = res.data.rezultati[res.data.rezultati.length - 1].pid;\n            _this10.data_min = res.data.rezultati[0].pid;\n            if (__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_own_property_names___default()(res.data).length === 0) {\n              _this10.pagination = true;\n              _this10.forward_disabled = true;\n            } else {\n              _this10.data_pid = res.data.data.pid;\n              _this10.Results = res.data.rezultati;\n\n              __WEBPACK_IMPORTED_MODULE_4__router__[\"a\" /* default */].push(\"/obrada/rezultati/\" + res.data.data.patient + \"/\" + res.data.data.pid + \"?date=\" + res.data.data.date);\n            }\n          });\n        } else {\n          this.Next.pid = this.Next.pid + 1;\n          this.Sljedeci();\n        }\n      } else {}\n    },\n    Created: function Created() {\n      var _this11 = this;\n\n      this.MicrobiologyOrder = false;\n\n      __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].get(\"rezultati/odobravanje/samples/\" + this.$route.params.patient + \"/\" + this.$route.params.id + \"?token=\" + this.$store.state.token + \"&site=\" + this.$store.state.site + \"&date=\" + this.$route.query.date, {}).then(function (res) {\n        _this11.header = res.data.results[0].patient.ime + \" \" + res.data.results[0].patient.prezime;\n        _this11.lokacija = res.data.lokacija;\n        _this11.final_pdf = res.data.final_pdf;\n\n        _this11.analyser_patient = res.data.results[0].patient;\n\n        _this11.timestamp = res.data.results[0].timestamp;\n\n        _this11.pacijent = res.data.results[0].patient._id;\n        _this11.ime = res.data.results[0].patient.ime;\n        _this11.prezime = res.data.results[0].patient.prezime;\n        _this11.data_spol = res.data.results[0].patient.spol;\n        _this11.jmbg = res.data.results[0].patient.jmbg;\n        _this11.pid = res.data.results[0].sample.pid;\n\n        _this11.email = res.data.results[0].patient.email.trim();\n        _this11.email_tmp = res.data.results[0].patient.email.trim();\n\n        if (!_this11.Email(_this11.email)) {\n          _this11.email = \"\";\n          _this11.email_tmp = \"\";\n        }\n\n        _this11.count = res.data.results.length;\n        _this11.approved = 0;\n        _this11.verified = 0;\n\n        _this11.odobren = true;\n        _this11.verificiran = true;\n        _this11.partials = [];\n        _this11.partials_condition = false;\n\n        res.data.results.forEach(function (element) {\n          if (element.verificiran) {\n            _this11.verified++;\n            _this11.partials.push(element._id);\n          }\n          if (element.status === \"ODOBREN\" || element.status === \"VERIFICIRAN\") {\n            _this11.approved++;\n          }\n          if (element.status != \"ODOBREN\" && element.status != \"VERIFICIRAN\") {\n            _this11.odobren = false;\n          }\n          if (!element.verificiran) {\n            _this11.verificiran = false;\n          }\n        });\n\n        if (_this11.count > _this11.verified && _this11.verified > 1) {\n          _this11.partials_condition = true;\n        }\n\n        _this11.uzorci = [];\n\n        _this11.nalaz.patient = res.data.results[0].patient._id;\n        _this11.nalaz.samples = [];\n\n        res.data.results.forEach(function (element) {\n          var check = 0;\n          var zaprimljen = 0;\n          var realizovan = 0;\n\n          if (element.verificiran) {\n            var status_uzorka = \"VERIFICIRAN\";\n          } else {\n            var status_uzorka = element.status;\n          }\n\n          _this11.nalaz.samples.push(element._id);\n\n          element.rezultati.forEach(function (test) {\n            check++;\n\n            if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n              zaprimljen++;\n            }\n\n            if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n              realizovan++;\n            }\n\n            if (check === element.rezultati.length) {\n              if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                _this11.MicrobiologyOrder = true;\n              }\n\n              if (status_uzorka === \"VERIFICIRAN\") {\n                _this11.uzorci.push({\n                  sid: element.id,\n                  status: \"VERIFICIRAN\",\n                  pdf_exists: element.pdf_exists,\n                  tip: element.sample.tip,\n                  _id: element._id,\n                  removed: false\n                });\n              } else if (status_uzorka === \"ODOBREN\") {\n                _this11.uzorci.push({\n                  sid: element.id,\n                  status: \"ODOBREN\",\n                  pdf_exists: element.pdf_exists,\n                  tip: element.sample.tip,\n                  _id: element._id,\n                  removed: false\n                });\n              } else if (zaprimljen < 1) {\n                _this11.uzorci.push({\n                  sid: element.id,\n                  status: \"REALIZOVAN\",\n                  pdf_exists: element.pdf_exists,\n                  tip: element.sample.tip,\n                  _id: element._id,\n                  removed: false\n                });\n              } else if (realizovan < 1) {\n                var stat = \"ZAPRIMLJEN\";\n                if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                  if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                    stat = \"REALIZOVAN\";\n                  }\n                }\n                _this11.uzorci.push({\n                  sid: element.id,\n                  status: stat,\n                  pdf_exists: element.pdf_exists,\n                  tip: element.sample.tip,\n                  _id: element._id,\n                  removed: false\n                });\n              } else {\n                _this11.uzorci.push({\n                  sid: element.id,\n                  status: \"U OBRADI\",\n                  pdf_exists: element.pdf_exists,\n                  tip: element.sample.tip,\n                  _id: element._id,\n                  removed: false\n                });\n              }\n            }\n          });\n        });\n\n        _this11.uzorci = _this11.uzorci.sort(function (a, b) {\n          return a.sid.localeCompare(b.sid, undefined, {\n            numeric: true,\n            sensitivity: \"base\"\n          });\n        });\n        _this11.main = true;\n\n        _this11.pagination = true;\n\n        __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].get(\"/rezultati/pagination\" + \"?token=\" + _this11.$store.state.token + \"&site=\" + _this11.$store.state.site + \"&pid=\" + _this11.$route.params.id + \"&date=\" + _this11.$route.query.date, {}).then(function (res) {\n          res.data.rezultati = res.data.rezultati.sort(function (a, b) {\n            return a.pid.localeCompare(b.pid, undefined, {\n              numeric: true,\n              sensitivity: \"base\"\n            });\n          });\n\n          _this11.data_length = res.data.rezultati[res.data.rezultati.length - 1].pid;\n          _this11.data_min = res.data.rezultati[0].pid;\n          if (__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_own_property_names___default()(res.data).length === 0) {\n            _this11.pagination = true;\n          } else {\n            _this11.data_pid = res.data.data.pid;\n            _this11.Results = res.data.rezultati;\n          }\n\n          if (_this11.MicrobiologyOrder) {\n            __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].get(\"mikrobiologija/bakterije/get?token=\" + _this11.$store.state.token + \"&site=\" + _this11.$store.state.site, {}).then(function (res) {\n              _this11.Bacteries = res.data.bakterije;\n              __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].get(\"mikrobiologija/antibiogrami/get?token=\" + _this11.$store.state.token + \"&site=\" + _this11.$store.state.site, {}).then(function (res) {\n                _this11.Antibiograms = res.data.antibiogrami;\n\n                _this11.Antibiograms.sort(function (a, b) {\n                  return a.naziv.localeCompare(b.naziv, undefined, {\n                    numeric: true,\n                    sensitivity: \"base\"\n                  });\n                });\n\n                __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].get(\"mikrobiologija/antibiotici/get?token=\" + _this11.$store.state.token + \"&site=\" + _this11.$store.state.site, {}).then(function (res) {\n                  res.data.antibiotici.sort(function (a, b) {\n                    return a.rbr_a.localeCompare(b.rbr_a, undefined, {\n                      numeric: true,\n                      sensitivity: \"base\"\n                    });\n                  });\n\n                  _this11.Antibiotics = [];\n\n                  res.data.antibiotici.forEach(function (element) {\n                    element.chosen = false;\n                    element.disabled = false;\n                    _this11.Antibiotics.push(element);\n                  });\n                });\n              });\n            });\n          }\n        });\n      });\n    },\n    Povratak: function Povratak() {\n      __WEBPACK_IMPORTED_MODULE_4__router__[\"a\" /* default */].push(\"/obrada/pregled/\" + \"?sekcija=\" + \"SVE\");\n    },\n    Nazad: function Nazad() {\n      this.email_button = false;\n      this.main = true;\n      this.pdf = false;\n    },\n\n    Email: function Email(email) {\n      if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email)) {\n        return true;\n      } else {\n        return false;\n      }\n    },\n    GetSingleSample: function GetSingleSample(data) {\n      var _this12 = this;\n\n      this.testovi = [];\n      this.rezultati = [];\n      this.analitiprikaz = [];\n      this.calculated = false;\n\n      var topcije = null;\n      topcije = __WEBPACK_IMPORTED_MODULE_11__data_izbornik_izbornik__[\"a\" /* default */].rez;\n\n      this.show_table = false;\n\n      __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].get(\"rezultati/showsingle/\" + data.sid + \"?token=\" + this.$store.state.token + \"&site=\" + this.$store.state.site, {}).then(function (res) {\n        var test = {};\n\n        if (res.data.data.length) {\n          res.data.data.sort(function (a, b) {\n            return a.testovi.labassay.grupa + a.testovi.labassay.grouporder == b.testovi.labassay.grupa + b.testovi.labassay.grouporder ? 0 : +(a.testovi.labassay.grupa + a.testovi.labassay.grouporder > b.testovi.labassay.grupa + b.testovi.labassay.grouporder) || -1;\n          });\n\n          _this12.testovi = res.data.data;\n          _this12.analitiprikaz = res.data.multidata;\n\n          res.data.data.forEach(function (element) {\n            test = {};\n            test.realizovan = false;\n\n            test.ime = element.testovi.labassay.naziv;\n            test.test = element.testovi.labassay.sifra;\n            test.analit = element.testovi.labassay.analit;\n            test.IDE = element.testovi._id;\n            test.labassay_id = element.testovi.labassay._id;\n\n            test.multi_count = 0;\n            test.multi_rezultati = [];\n\n            res.data.multidata.forEach(function (multi) {\n              if (multi.labassay._id === element.testovi.labassay._id) {\n                test.multi_rezultati = multi.rezultat;\n                test.multi_count = multi.rezultat[0].rezultat.length;\n              }\n            });\n\n            test.kategorija = element.testovi.labassay.kategorija;\n            test.analyser = element.testovi.labassay.analyser;\n            test.multiparam = element.testovi.labassay.multiparam;\n            test.vise = element.testovi.rezultat.length;\n            test.calculated = element.testovi.labassay.calculated;\n            test.manual = element.testovi.labassay.manual;\n\n            test.select_options = eval(\"topcije.\" + element.testovi.interp.replace(\"%\", \"_\").replace(\"/\", \"_\").replace(\" \", \"_\").replace(/-/g, \"_\").replace(\"#\", \"_\").replace(/^\\d+/, \"\"));\n\n            element.testovi.rezultat.forEach(function (rezultat) {\n              test.sekcija = rezultat.anaassay.sekcija;\n              test.rezultat = rezultat.rezultat_f;\n              test.result = rezultat;\n              test.anaassay = rezultat.anaassay;\n\n              if (rezultat.rezultat_f != \"\") {\n                test.realizovan = true;\n              }\n\n              test.unit = rezultat.jedinice_f;\n\n              if (res.data.verificiran || res.data.status === \"ODOBREN\") {\n                test.odobren = \"ODOBREN\";\n                test.edit = false;\n              } else {\n                test.odobren != \"ODOBREN\";\n                test.edit = true;\n              }\n\n              test.jedinica = rezultat.jedinice_f;\n              test.id = rezultat._id;\n              test.multidata = element.testovi.labassay.multi;\n              test.rezultat_m = rezultat.rezultat_m;\n              test.bakterije = element.testovi.labassay.bakterije;\n              test.neg_description = element.testovi.labassay.neg_description;\n              test.pos_description = element.testovi.labassay.pos_description;\n              test.refSet = element.testovi.grupa;\n              test.dRef = element.testovi.refd;\n              test.gRef = element.testovi.refg;\n              test.interp = element.testovi.interp;\n              test.extend = element.testovi.extend;\n              test.retest = element.testovi.retest;\n              test.interpretacija = element.testovi.labassay.interpretacija;\n            });\n\n            if (test.select_options != undefined && !test.select_options.includes(test.rezultat)) {\n              test.select_options.unshift(test.rezultat);\n            }\n            _this12.rezultati.push(test);\n          });\n\n          if (_this12.MicrobiologySample && _this12.AllowGetSample) {\n            var bakterioloski = false;\n            var negativan = false;\n            var pozitivan = false;\n            var bakterijed = [];\n            var bakterijei = [];\n            var neg_rezultati = [];\n            var poz_rezultati = [];\n\n            _this12.CurrentTest = _this12.rezultati[0].analit;\n\n            neg_rezultati = [].concat(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray___default()(_this12.rezultati[0].neg_description));\n            poz_rezultati = [].concat(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray___default()(_this12.rezultati[0].pos_description));\n\n            if (_this12.rezultati[0].bakterije.length) {\n              bakterioloski = true;\n\n              var counter = 0;\n              var ima = false;\n\n              _this12.Bacteries.forEach(function (element) {\n                element.chosen = false;\n                counter = 0;\n                ima = false;\n                _this12.rezultati[0].bakterije.forEach(function (bakt) {\n                  counter++;\n                  if (element._id == bakt) {\n                    ima = true;\n                  }\n\n                  if (counter === _this12.rezultati[0].bakterije.length && !ima) {\n                    bakterijed.push(element);\n                  }\n\n                  if (counter === _this12.rezultati[0].bakterije.length && ima) {\n                    bakterijei.push(element);\n                  }\n                });\n              });\n\n              switch (_this12.rezultati[0].rezultat_m.length) {\n                case 0:\n                  _this12.MicrobiologyScenario = \"MAIBNoR\";\n                  _this12.SelectedBacteries = [];\n                  break;\n                case 1:\n                  _this12.MicrobiologyScenario = \"MAIBNeR\";\n                  _this12.SelectedBacteries = [];\n\n                  negativan = true;\n\n                  if (!neg_rezultati.includes(_this12.rezultati[0].rezultat.trim())) {\n                    neg_rezultati.unshift(_this12.rezultati[0].rezultat.trim());\n                  }\n\n                  break;\n\n                default:\n                  _this12.MicrobiologyScenario = \"MAIBPoR\";\n                  _this12.SelectedBacteries = [];\n                  _this12.BacteryTabs = [];\n\n                  _this12.rezultati[0].rezultat_m.forEach(function (element) {\n                    if (element.bakterija) {\n                      _this12.SelectedBacteries.push(element);\n                      _this12.BacteryTabs.push(element.opis);\n                    }\n                  });\n\n                  var maxVal = _this12.SelectedBacteries.reduce(function (max, val) {\n                    return max.antibiogram.antibiotici.length > val.antibiogram.antibiotici.length ? max : val;\n                  });\n\n                  if (_this12.CurrentTab == \"\") {}\n                  _this12.CurrentTab = _this12.SelectedBacteries[0].opis;\n\n                  bakterijed.forEach(function (element) {\n                    _this12.SelectedBacteries.forEach(function (bact) {\n                      if (element._id == bact._id) {\n                        element.chosen = true;\n                      }\n                    });\n                  });\n\n                  bakterijei.forEach(function (element) {\n                    _this12.SelectedBacteries.forEach(function (bact) {\n                      if (element._id == bact._id) {\n                        element.chosen = true;\n                      }\n                    });\n                  });\n\n                  pozitivan = true;\n                  if (!poz_rezultati.includes(_this12.rezultati[0].rezultat.trim())) {\n                    poz_rezultati.unshift(_this12.rezultati[0].rezultat.trim());\n                  }\n\n                  break;\n              }\n            } else {\n              bakterioloski = false;\n              _this12.SelectedBacteries = [];\n\n              switch (_this12.rezultati[0].rezultat_m.length) {\n                case 0:\n                  _this12.MicrobiologyScenario = \"MANBNoR\";\n                  neg_rezultati = _this12.rezultati[0].neg_description;\n                  poz_rezultati = _this12.rezultati[0].pos_description;\n\n                  break;\n\n                case 1:\n                  if (_this12.rezultati[0].rezultat_m[0].negativan === true) {\n                    _this12.MicrobiologyScenario = \"MANBNeR\";\n\n                    negativan = true;\n\n                    if (!neg_rezultati.includes(_this12.rezultati[0].rezultat.trim())) {\n                      neg_rezultati.unshift(_this12.rezultati[0].rezultat.trim());\n                    }\n                  } else {\n                    _this12.MicrobiologyScenario = \"MANBPoR\";\n\n                    pozitivan = true;\n\n                    if (!poz_rezultati.includes(_this12.rezultati[0].rezultat.trim())) {\n                      poz_rezultati.unshift(_this12.rezultati[0].rezultat.trim());\n                    }\n                  }\n\n                  break;\n\n                default:\n                  _this12.MicrobiologyScenario = \"Unknown\";\n\n                  break;\n              }\n            }\n\n            _this12.MicrobiologyResult = {\n              negative: negativan,\n              positive: pozitivan,\n              BUG: bakterioloski,\n              F_RESULT: _this12.rezultati[0].rezultat,\n              M_RESULT: [].concat(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray___default()(_this12.rezultati[0].rezultat_m)),\n              DefaultBacteries: [].concat(bakterijei),\n              RemainingBacteries: [].concat(bakterijed),\n              NegativeDescriptions: [].concat(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray___default()(neg_rezultati)),\n              PositiveDescriptions: [].concat(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray___default()(poz_rezultati))\n            };\n          } else {\n            _this12.MicrobiologyScenario = \"Unknown\";\n\n            _this12.MicrobiologyResult = {\n              negative: null,\n              positive: null,\n              BUG: null,\n              F_RESULT: \"\",\n              M_RESULT: [],\n              DefaultBacteries: [],\n              RemainingBacteries: [],\n              NegativeDescriptions: [],\n              PositiveDescriptions: []\n            };\n          }\n\n          _this12.rezultati.forEach(function (element) {\n            if (element.calculated) {\n              _this12.calculated = true;\n            }\n          });\n\n          _this12.sample = data;\n          _this12.show_table = true;\n        }\n      }).then(function () {\n        __WEBPACK_IMPORTED_MODULE_9__main__[\"bus\"].$emit(\"SetClientHeight\", data.sid);\n      });\n    },\n    SelectAnalyser: function SelectAnalyser(test) {\n      var _this13 = this;\n\n      __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].get(\"rezultati/odobravanje/analysers\" + \"?token=\" + this.$store.state.token + \"&site=\" + this.$store.state.site + \"&test=\" + test.labassay_id, {}).then(function (res) {\n        _this13.analysers = [];\n\n        res.data.anaassays.forEach(function (element) {\n          element.aparat.site = element.site;\n          _this13.analysers.push(element.aparat);\n        });\n\n        _this13.analysers.forEach(function (analyser) {\n          analyser.selected = false;\n        });\n\n        _this13.analiza = test;\n\n        _this13.rezultati.forEach(function (element) {\n          _this13.analysers.forEach(function (analyser) {\n            if (element.ime === _this13.analiza.ime && element.anaassay.aparat === analyser._id) {\n              analyser.selected = true;\n              _this13.analyser_selected = analyser;\n            }\n          });\n        });\n        _this13.$refs.staticModalAparati.open();\n      });\n    },\n    AnalyserSelected: function AnalyserSelected(analyser) {\n      var _this14 = this;\n\n      this.analyser = analyser;\n\n      if (this.analyser_selected._id === analyser._id) {\n        this.$refs.staticModalAparati.close();\n      } else {\n        __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].post(\"rezultati/odobravanje/references\", {\n          token: this.$store.state.token,\n          site: this.$store.state.site,\n          id: this.sample.sid,\n          pacijent: this.analyser_patient,\n          analiza: this.analiza,\n          analyser: this.analyser\n        }).then(function (res) {\n          if (res.data.success) {\n            var data = {};\n\n            _this14.uzorci.forEach(function (element) {\n              if (element.sid === _this14.$store.state.sid) {\n                data = element;\n              }\n            });\n\n            _this14.testovi = [];\n            _this14.rezultati = [];\n            _this14.analitiprikaz = [];\n            _this14.calculated = false;\n\n            var topcije = null;\n            topcije = __WEBPACK_IMPORTED_MODULE_11__data_izbornik_izbornik__[\"a\" /* default */].rez;\n\n            _this14.show_table = false;\n\n            __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].get(\"rezultati/showsingle/\" + data.sid + \"?token=\" + _this14.$store.state.token + \"&site=\" + _this14.$store.state.site, {}).then(function (res) {\n              var test = {};\n\n              if (res.data.data.length) {\n                res.data.data.sort(function (a, b) {\n                  return a.testovi.labassay.grupa + a.testovi.labassay.grouporder == b.testovi.labassay.grupa + b.testovi.labassay.grouporder ? 0 : +(a.testovi.labassay.grupa + a.testovi.labassay.grouporder > b.testovi.labassay.grupa + b.testovi.labassay.grouporder) || -1;\n                });\n\n                _this14.testovi = res.data.data;\n                _this14.analitiprikaz = res.data.multidata;\n\n                res.data.data.forEach(function (element) {\n                  test = {};\n                  test.realizovan = false;\n\n                  test.ime = element.testovi.labassay.naziv;\n                  test.test = element.testovi.labassay.sifra;\n                  test.analit = element.testovi.labassay.analit;\n                  test.IDE = element.testovi._id;\n                  test.labassay_id = element.testovi.labassay._id;\n\n                  test.multi_count = 0;\n                  test.multi_rezultati = [];\n\n                  res.data.multidata.forEach(function (multi) {\n                    if (multi.labassay._id === element.testovi.labassay._id) {\n                      test.multi_rezultati = multi.rezultat;\n                      test.multi_count = multi.rezultat[0].rezultat.length;\n                    }\n                  });\n\n                  test.kategorija = element.testovi.labassay.kategorija;\n                  test.analyser = element.testovi.labassay.analyser;\n                  test.multiparam = element.testovi.labassay.multiparam;\n                  test.vise = element.testovi.rezultat.length;\n                  test.calculated = element.testovi.labassay.calculated;\n                  test.manual = element.testovi.labassay.manual;\n\n                  test.select_options = eval(\"topcije.\" + element.testovi.interp.replace(\"%\", \"_\").replace(\"/\", \"_\").replace(\" \", \"_\").replace(/-/g, \"_\").replace(\"#\", \"_\").replace(/^\\d+/, \"\"));\n\n                  element.testovi.rezultat.forEach(function (rezultat) {\n                    test.sekcija = rezultat.anaassay.sekcija;\n                    test.rezultat = rezultat.rezultat_f;\n                    test.result = rezultat;\n                    test.anaassay = rezultat.anaassay;\n\n                    if (rezultat.rezultat_f != \"\") {\n                      test.realizovan = true;\n                    }\n\n                    test.unit = rezultat.jedinice_f;\n\n                    if (res.data.verificiran || res.data.status === \"ODOBREN\") {\n                      test.odobren = \"ODOBREN\";\n                      test.edit = false;\n                    } else {\n                      test.odobren != \"ODOBREN\";\n                      test.edit = true;\n                    }\n\n                    test.jedinica = rezultat.jedinice_f;\n                    test.id = rezultat._id;\n                    test.multidata = element.testovi.labassay.multi;\n                    test.rezultat_m = rezultat.rezultat_m;\n                    test.bakterije = element.testovi.labassay.bakterije;\n                    test.neg_description = element.testovi.labassay.neg_description;\n                    test.pos_description = element.testovi.labassay.pos_description;\n                    test.refSet = element.testovi.grupa;\n                    test.dRef = element.testovi.refd;\n                    test.gRef = element.testovi.refg;\n                    test.interp = element.testovi.interp;\n                    test.extend = element.testovi.extend;\n                    test.retest = element.testovi.retest;\n                    test.interpretacija = element.testovi.labassay.interpretacija;\n                  });\n\n                  if (test.select_options != undefined && !test.select_options.includes(test.rezultat)) {\n                    test.select_options.unshift(test.rezultat);\n                  }\n                  _this14.rezultati.push(test);\n                });\n\n                _this14.rezultati.forEach(function (element) {\n                  if (element.calculated) {\n                    _this14.calculated = true;\n                  }\n                });\n\n                _this14.sample = data;\n                _this14.show_table = true;\n              }\n            });\n            _this14.$refs.staticModalAparati.close();\n          } else {}\n        });\n      }\n    },\n    Reference: function Reference(event, test) {\n      this.reference = {\n        sample: this.$store.state.sid,\n        labassay: test.labassay_id,\n        naziv: test.ime,\n        opis: test.analit,\n        dref: test.dRef,\n        gref: test.gRef,\n        interp: test.interp,\n        extend: test.extend,\n        jedinica: test.jedinica\n      };\n      this.$refs.staticModalReference.open();\n    },\n    BarcodePrint: function BarcodePrint(data) {\n      var _this15 = this;\n\n      var link = __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"g\" /* barcode */] + data.sid + \".png\";\n\n      __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].get(\"uzorci/barcode/\" + data.sid + \"?token=\" + this.$store.state.token + \"&site=\" + this.$store.state.site, {}).then(function (res) {\n        printEPL(res.data.name + \" \" + res.data.surname, _this15.sid, res.data.pacijentRBr, res.data.godiste, res.data.datum, link, res.data.code, _this15.$store.state.site, undefined, undefined);\n      });\n    },\n    SaveResults: function SaveResults(rezultati, from) {\n      var _this16 = this;\n\n      this.isLoading = true;\n\n      if (!this.MicrobiologySample) {\n        rezultati.forEach(function (element) {\n          element.rezultat = element.rezultat.replace(/,/g, \".\");\n        });\n\n        rezultati[0].rezultat_m = [];\n      }\n\n      __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].post(\"/rezultati/odobravanje/sacuvaj/\" + this.$store.state.sid, {\n        email: this.$store.state.userId,\n        token: this.$store.state.token,\n        site: this.$store.state.site,\n        rezultati: rezultati\n      }).then(function (res) {\n        __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].get(\"rezultati/odobravanje/samples/\" + _this16.$route.params.patient + \"/\" + _this16.$route.params.id + \"?token=\" + _this16.$store.state.token + \"&site=\" + _this16.$store.state.site + \"&date=\" + _this16.$route.query.date, {}).then(function (res) {\n          _this16.uzorci = [];\n\n          res.data.results.forEach(function (element) {\n            var check = 0;\n            var zaprimljen = 0;\n            var realizovan = 0;\n\n            if (element.verificiran) {\n              var status_uzorka = \"VERIFICIRAN\";\n            } else {\n              var status_uzorka = element.status;\n            }\n\n            element.rezultati.forEach(function (test) {\n              check++;\n\n              if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n                zaprimljen++;\n              }\n\n              if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n                realizovan++;\n              }\n\n              if (check === element.rezultati.length) {\n                if (status_uzorka === \"VERIFICIRAN\") {\n                  _this16.uzorci.push({\n                    sid: element.id,\n                    status: \"VERIFICIRAN\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else if (status_uzorka === \"ODOBREN\") {\n                  _this16.uzorci.push({\n                    sid: element.id,\n                    status: \"ODOBREN\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else if (zaprimljen < 1) {\n                  _this16.uzorci.push({\n                    sid: element.id,\n                    status: \"REALIZOVAN\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else if (realizovan < 1) {\n                  var stat = \"ZAPRIMLJEN\";\n                  if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                    if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                      stat = \"REALIZOVAN\";\n                    }\n                  }\n                  _this16.uzorci.push({\n                    sid: element.id,\n                    status: stat,\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else {\n                  _this16.uzorci.push({\n                    sid: element.id,\n                    status: \"U OBRADI\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                }\n              }\n            });\n          });\n\n          _this16.uzorci = _this16.uzorci.sort(function (a, b) {\n            return a.sid.localeCompare(b.sid, undefined, {\n              numeric: true,\n              sensitivity: \"base\"\n            });\n          });\n\n          _this16.isLoading = false;\n        });\n      });\n    },\n    DeletedSample: function DeletedSample(data) {\n      var _this17 = this;\n\n      this.uzorci.forEach(function (element) {\n        if (element.sid === data) {\n          element.removed = false;\n        }\n      });\n\n      for (var i = 0; i < this.uzorci.length; i++) {\n        if (this.uzorci[i].sid === data) {\n          this.uzorci.splice(i, 1);\n          break;\n        }\n      }\n\n      if (this.uzorci.length) {\n        this.show = false;\n        this.main = false;\n        __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].get(\"rezultati/odobravanje/samples/\" + this.$route.params.patient + \"/\" + this.$route.params.id + \"?token=\" + this.$store.state.token + \"&site=\" + this.$store.state.site + \"&date=\" + this.$route.query.date, {}).then(function (res) {\n          _this17.count = res.data.results.length;\n          _this17.approved = 0;\n\n          _this17.odobren = true;\n          _this17.verificiran = true;\n\n          _this17.resdata = {};\n\n          _this17.resdata = res.data.results;\n\n          res.data.results.forEach(function (element) {\n            if (element.status === \"ODOBREN\" || element.status === \"VERIFICIRAN\") {\n              _this17.approved++;\n            }\n            if (element.status != \"ODOBREN\" && element.status != \"VERIFICIRAN\") {\n              _this17.odobren = false;\n            }\n            if (!element.verificiran) {\n              _this17.verificiran = false;\n            }\n          });\n\n          if (_this17.count == _this17.approved) {\n            var report = [];\n\n            _this17.uzorci.forEach(function (element) {\n              report.push(element._id);\n            });\n\n            __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].post(\"nalazi/create\", {\n              token: _this17.$store.state.token,\n              site: _this17.$store.state.site,\n              type: \"multi\",\n              uzorci: _this17.uzorci,\n              samples: report,\n              timestamp: _this17.timestamp,\n              napomena: \"\",\n              status: false,\n              idNalaza: \"\",\n              location: \"/\",\n              naziv: _this17.timestamp\n            }).then(function (res) {\n              if (res.data.success) {\n                __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].post(\"nalazi/memo\", {\n                  token: _this17.$store.state.token,\n                  site: _this17.$store.state.site,\n                  timestamp: _this17.timestamp,\n                  height: res.data.memo,\n                  location: \"/\",\n                  naziv: _this17.timestamp\n                }).then(function (res) {\n                  _this17.final_pdf = true;\n\n                  _this17.uzorci = [];\n\n                  _this17.resdata.forEach(function (element) {\n                    var check = 0;\n                    var zaprimljen = 0;\n                    var realizovan = 0;\n\n                    if (element.verificiran) {\n                      var status_uzorka = \"VERIFICIRAN\";\n                    } else {\n                      var status_uzorka = element.status;\n                    }\n\n                    element.rezultati.forEach(function (test) {\n                      check++;\n\n                      if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n                        zaprimljen++;\n                      }\n\n                      if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n                        realizovan++;\n                      }\n\n                      if (check === element.rezultati.length) {\n                        if (status_uzorka === \"VERIFICIRAN\") {\n                          _this17.uzorci.push({\n                            sid: element.id,\n                            status: \"VERIFICIRAN\",\n                            pdf_exists: element.pdf_exists,\n                            tip: element.sample.tip,\n                            _id: element._id,\n                            removed: false\n                          });\n                        } else if (status_uzorka === \"ODOBREN\") {\n                          _this17.uzorci.push({\n                            sid: element.id,\n                            status: \"ODOBREN\",\n                            pdf_exists: element.pdf_exists,\n                            tip: element.sample.tip,\n                            _id: element._id,\n                            removed: false\n                          });\n                        } else if (zaprimljen < 1) {\n                          _this17.uzorci.push({\n                            sid: element.id,\n                            status: \"REALIZOVAN\",\n                            pdf_exists: element.pdf_exists,\n                            tip: element.sample.tip,\n                            _id: element._id,\n                            removed: false\n                          });\n                        } else if (realizovan < 1) {\n                          var stat = \"ZAPRIMLJEN\";\n                          if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                            if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                              stat = \"REALIZOVAN\";\n                            }\n                          }\n                          _this17.uzorci.push({\n                            sid: element.id,\n                            status: stat,\n                            pdf_exists: element.pdf_exists,\n                            tip: element.sample.tip,\n                            _id: element._id,\n                            removed: false\n                          });\n                        } else {\n                          _this17.uzorci.push({\n                            sid: element.id,\n                            status: \"U OBRADI\",\n                            pdf_exists: element.pdf_exists,\n                            tip: element.sample.tip,\n                            _id: element._id,\n                            removed: false\n                          });\n                        }\n                      }\n                    });\n                  });\n\n                  _this17.uzorci = _this17.uzorci.sort(function (a, b) {\n                    return a.sid.localeCompare(b.sid, undefined, {\n                      numeric: true,\n                      sensitivity: \"base\"\n                    });\n                  });\n\n                  _this17.main = true;\n                  _this17.show = true;\n                });\n              }\n            });\n          } else {\n            _this17.uzorci = [];\n\n            res.data.results.forEach(function (element) {\n              var check = 0;\n              var zaprimljen = 0;\n              var realizovan = 0;\n\n              if (element.verificiran) {\n                var status_uzorka = \"VERIFICIRAN\";\n              } else {\n                var status_uzorka = element.status;\n              }\n\n              element.rezultati.forEach(function (test) {\n                check++;\n\n                if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n                  zaprimljen++;\n                }\n\n                if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n                  realizovan++;\n                }\n\n                if (check === element.rezultati.length) {\n                  if (status_uzorka === \"VERIFICIRAN\") {\n                    _this17.uzorci.push({\n                      sid: element.id,\n                      status: \"VERIFICIRAN\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else if (status_uzorka === \"ODOBREN\") {\n                    _this17.uzorci.push({\n                      sid: element.id,\n                      status: \"ODOBREN\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else if (zaprimljen < 1) {\n                    _this17.uzorci.push({\n                      sid: element.id,\n                      status: \"REALIZOVAN\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else if (realizovan < 1) {\n                    var stat = \"ZAPRIMLJEN\";\n                    if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                      if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                        stat = \"REALIZOVAN\";\n                      }\n                    }\n                    _this17.uzorci.push({\n                      sid: element.id,\n                      status: stat,\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else {\n                    _this17.uzorci.push({\n                      sid: element.id,\n                      status: \"U OBRADI\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  }\n                }\n              });\n            });\n\n            _this17.uzorci = _this17.uzorci.sort(function (a, b) {\n              return a.sid.localeCompare(b.sid, undefined, {\n                numeric: true,\n                sensitivity: \"base\"\n              });\n            });\n\n            _this17.main = true;\n            _this17.show = true;\n          }\n        });\n      } else {\n        __WEBPACK_IMPORTED_MODULE_4__router__[\"a\" /* default */].push(\"/obrada/pregled\");\n      }\n    },\n    EditSample: function EditSample(data) {\n      var _this18 = this;\n\n      document.getElementById(data).click();\n\n      __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].get(\"rezultati/odobravanje/samples/\" + this.$route.params.patient + \"/\" + this.$route.params.id + \"?token=\" + this.$store.state.token + \"&site=\" + this.$store.state.site + \"&date=\" + this.$route.query.date, {}).then(function (res) {\n        _this18.uzorci = [];\n\n        res.data.results.forEach(function (element) {\n          var check = 0;\n          var zaprimljen = 0;\n          var realizovan = 0;\n\n          if (element.verificiran) {\n            var status_uzorka = \"VERIFICIRAN\";\n          } else {\n            var status_uzorka = element.status;\n          }\n\n          element.rezultati.forEach(function (test) {\n            check++;\n\n            if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n              zaprimljen++;\n            }\n\n            if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n              realizovan++;\n            }\n\n            if (check === element.rezultati.length) {\n              if (status_uzorka === \"VERIFICIRAN\") {\n                _this18.uzorci.push({\n                  sid: element.id,\n                  status: \"VERIFICIRAN\",\n                  pdf_exists: element.pdf_exists,\n                  tip: element.sample.tip,\n                  _id: element._id,\n                  removed: false\n                });\n              } else if (status_uzorka === \"ODOBREN\") {\n                _this18.uzorci.push({\n                  sid: element.id,\n                  status: \"ODOBREN\",\n                  pdf_exists: element.pdf_exists,\n                  tip: element.sample.tip,\n                  _id: element._id,\n                  removed: false\n                });\n              } else if (zaprimljen < 1) {\n                _this18.uzorci.push({\n                  sid: element.id,\n                  status: \"REALIZOVAN\",\n                  pdf_exists: element.pdf_exists,\n                  tip: element.sample.tip,\n                  _id: element._id,\n                  removed: false\n                });\n              } else if (realizovan < 1) {\n                var stat = \"ZAPRIMLJEN\";\n                if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                  if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                    stat = \"REALIZOVAN\";\n                  }\n                }\n                _this18.uzorci.push({\n                  sid: element.id,\n                  status: stat,\n                  pdf_exists: element.pdf_exists,\n                  tip: element.sample.tip,\n                  _id: element._id,\n                  removed: false\n                });\n              } else {\n                _this18.uzorci.push({\n                  sid: element.id,\n                  status: \"U OBRADI\",\n                  pdf_exists: element.pdf_exists,\n                  tip: element.sample.tip,\n                  _id: element._id,\n                  removed: false\n                });\n              }\n            }\n          });\n        });\n\n        _this18.uzorci = _this18.uzorci.sort(function (a, b) {\n          return a.sid.localeCompare(b.sid, undefined, {\n            numeric: true,\n            sensitivity: \"base\"\n          });\n        });\n      }).then(function () {\n        setTimeout(function () {\n          document.getElementById(_this18.$store.state.sid).click();\n        }, 500);\n      });\n    },\n\n    RetestEnable: function RetestEnable(event) {\n      var _this19 = this;\n\n      __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].post(\"rezultati/odobravanje/retest/da/\", {\n        id_u: this.$store.state.sid,\n        id_t: event.target.id,\n        site: this.$store.state.site,\n        token: this.$store.state.token\n      }).then(function (res) {\n        if (res.data.success) {\n          _this19.rezultati.forEach(function (element) {\n            if (element.test === event.target.id) {\n              element.retest = true;\n            }\n          });\n        }\n      });\n    },\n    RetestDisable: function RetestDisable(event) {\n      var _this20 = this;\n\n      __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].post(\"rezultati/odobravanje/retest/ne/\", {\n        id_u: this.$store.state.sid,\n        id_t: event.target.id,\n        site: this.$store.state.site,\n        token: this.$store.state.token\n      }).then(function (res) {\n        if (res.data.success) {\n          _this20.rezultati.forEach(function (element) {\n            if (element.test === event.target.id) {\n              element.retest = false;\n            }\n          });\n        }\n      });\n    },\n    MultiGet: function MultiGet(event, naziv, ana, rezultat, odobren) {\n      var _this21 = this;\n\n      this.naslov = \"Rezultati testa: \" + naziv + \" (\" + ana + \")\";\n      this.analiti = [];\n      var single = {};\n      var i = 0;\n      var kontrola = false;\n\n      this.uzorci.forEach(function (element) {\n        if (element.sid === _this21.$store.state.sid) {\n          _this21.check = element.status;\n        }\n      });\n\n      this.analitiprikaz.forEach(function (element) {\n        i++;\n        single = {};\n\n        var opcije = null;\n        opcije = __WEBPACK_IMPORTED_MODULE_11__data_izbornik_izbornik__[\"a\" /* default */].data;\n\n        if (event.target.id === element.labassay._id) {\n          element.rezultat.forEach(function (analit) {\n            single.kod = analit.rezultat[0].module_sn;\n            single.select_options = eval(\"opcije.\" + analit.rezultat[0].module_sn.replace(\"%\", \"_\").replace(\"/\", \"_\").replace(\" \", \"_\").replace(/-/g, \"_\").replace(\"#\", \"_\").replace(/^\\d+/, \"\"));\n\n            var tmpOptionsAna = [];\n            if (single.select_options != undefined) {\n              tmpOptionsAna = single.select_options.slice();\n              single.select_options = tmpOptionsAna.slice();\n            }\n\n            if (analit.rezultat[0].rezultat_f.trim() != \"\" && single.select_options != undefined && !single.select_options.includes(analit.rezultat[0].rezultat_f)) {\n              if (single.kod != \"s03\" && single.kod != \"s04\" && single.kod != \"s08\" && single.kod != \"s09\") {\n                single.select_options.unshift(analit.rezultat[0].rezultat_f);\n              }\n            }\n\n            single.refd = analit.refd;\n            single.labID = event.target.id;\n            single.refg = analit.refg;\n            single.interp = analit.interp;\n            single.interpretacija = null;\n            single.nazivTesta = naziv;\n            single.grupa = analit.grupa;\n            single.naziv = analit.rezultat[0].sn;\n            single.opis = analit.rezultat[0].dilucija;\n            single.jedinica = analit.rezultat[0].jedinice_f;\n            single.rezultat = analit.rezultat[0].rezultat_f;\n            single.flag = analit.rezultat[0].rezultat_i;\n            single.manual = element.labassay.manual;\n            single.odobren = odobren;\n\n            if (single.select_options != undefined && (single.kod === \"s03\" || single.kod === \"s04\" || single.kod === \"s08\" || single.kod === \"s09\")) {\n              single.rezultat_multiple = single.rezultat.split(\";\");\n              for (var i = single.rezultat_multiple.length - 1; i >= 0; i--) {\n                single.rezultat_multiple[i] = single.rezultat_multiple[i].trim();\n                if (single.rezultat_multiple[i] === \"\") {\n                  single.rezultat_multiple.splice(i, 1);\n                }\n              }\n            } else {\n              single.rezultat_multiple = [];\n            }\n\n            if (_this21.check === \"ODOBREN\" || _this21.check === \"VERIFICIRAN\") {\n              single.edit = false;\n            } else {\n              single.edit = true;\n            }\n\n            if (ana === \"Opšti pregled urina\" && _this21.check != \"ODOBREN\" && _this21.check != \"VERIFICIRAN\") {\n              if (analit.rezultat[0].rezultat_f === \"\" && single.select_options != undefined) {\n                single.rezultat = single.select_options[1];\n              }\n            }\n\n            single.analit = analit.rezultat[0].anaassay;\n            single.izbor = ana;\n\n            _this21.analiti.push(single);\n\n            single = {};\n          });\n        }\n\n        if (i === _this21.analitiprikaz.length) {\n          kontrola = true;\n        }\n      });\n\n      if (kontrola) {\n        this.$refs.largeModalMulti.open();\n      }\n    },\n    Interpretacija: function Interpretacija(test, rezultat, jedinica, refd, refg, site, interp, extend, spec) {\n      return Object(__WEBPACK_IMPORTED_MODULE_10__functions_reference_js__[\"Interpretation\"])(test, rezultat, jedinica, refd, refg, site, interp, extend, spec);\n    },\n    MailDialog: function MailDialog() {\n      this.$refs.staticModalSendMail.open();\n    },\n    SendMail: function SendMail(email) {\n      var _this22 = this;\n\n      this.isLoading = true;\n\n      __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].post(\"nalazi/mail\", {\n        token: this.$store.state.token,\n        site: this.$store.state.site,\n        email: email,\n        timestamp: this.timestamp,\n        location: \"/\",\n        naziv: this.timestamp\n      }).then(function (res) {\n        _this22.isLoading = false;\n\n        if (res.data.success) {\n          _this22.toastText = \"Nalaz uspješno poslan.\";\n          _this22.toastIcon = \"fa-check\";\n          _this22.toastPosition = \"top-right\";\n          _this22.className = \"vuestic-toast-primary\";\n\n          _this22.showToast(_this22.toastText, {\n            icon: _this22.toastIcon,\n            position: _this22.toastPosition,\n            duration: 2500,\n            fullWidth: _this22.false,\n            className: _this22.className\n          });\n\n          if (_this22.email_changed) {\n            __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].post(\"pacijenti/detalji/update/\" + _this22.pacijent, {\n              email: email.trim(),\n              token: _this22.$store.state.token,\n              site: _this22.$store.state.site\n            }).then(function (res) {});\n          }\n        } else {\n          _this22.toastText = \"Greška prilikom slanja nalaza!\";\n          _this22.toastIcon = \"fa-remove\";\n          _this22.toastPosition = \"top-right\";\n          _this22.className = \"vuestic-toast-danger\";\n\n          _this22.showToast(_this22.toastText, {\n            icon: _this22.toastIcon,\n            position: _this22.toastPosition,\n            duration: 2500,\n            fullWidth: _this22.false,\n            className: _this22.className\n          });\n        }\n      });\n    },\n    SaveMultiResults: function SaveMultiResults(analiti, data) {\n      var _this23 = this;\n\n      analiti.forEach(function (analit) {\n        analit.rezultat = analit.rezultat.replace(/,/g, \".\");\n\n        if (analit.rezultat_multiple.length) {\n          analit.rezultat = \"\";\n\n          analit.rezultat_multiple.forEach(function (element) {\n            if (element === \"\") {} else {\n              analit.rezultat = analit.rezultat + element + \";\";\n            }\n          });\n\n          analit.rezultat = analit.rezultat.trim().slice(0, analit.rezultat.length - 1);\n        }\n      });\n\n      this.isLoading = true;\n\n      __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].post(\"/rezultati/odobravanje/analiti/\" + this.$store.state.sid, {\n        analiti: analiti,\n        site: this.$store.state.site,\n        token: this.$store.state.token\n      }).then(function (res) {\n        __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].get(\"rezultati/odobravanje/samples/\" + _this23.$route.params.patient + \"/\" + _this23.$route.params.id + \"?token=\" + _this23.$store.state.token + \"&site=\" + _this23.$store.state.site + \"&date=\" + _this23.$route.query.date, {}).then(function (res) {\n          _this23.uzorci = [];\n\n          res.data.results.forEach(function (element) {\n            var check = 0;\n            var zaprimljen = 0;\n            var realizovan = 0;\n\n            if (element.verificiran) {\n              var status_uzorka = \"VERIFICIRAN\";\n            } else {\n              var status_uzorka = element.status;\n            }\n\n            element.rezultati.forEach(function (test) {\n              check++;\n\n              if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n                zaprimljen++;\n              }\n\n              if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n                realizovan++;\n              }\n\n              if (check === element.rezultati.length) {\n                if (status_uzorka === \"VERIFICIRAN\") {\n                  _this23.uzorci.push({\n                    sid: element.id,\n                    status: \"VERIFICIRAN\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else if (status_uzorka === \"ODOBREN\") {\n                  _this23.uzorci.push({\n                    sid: element.id,\n                    status: \"ODOBREN\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else if (zaprimljen < 1) {\n                  _this23.uzorci.push({\n                    sid: element.id,\n                    status: \"REALIZOVAN\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else if (realizovan < 1) {\n                  var stat = \"ZAPRIMLJEN\";\n                  if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                    if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                      stat = \"REALIZOVAN\";\n                    }\n                  }\n                  _this23.uzorci.push({\n                    sid: element.id,\n                    status: stat,\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else {\n                  _this23.uzorci.push({\n                    sid: element.id,\n                    status: \"U OBRADI\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                }\n              }\n            });\n          });\n\n          _this23.uzorci = _this23.uzorci.sort(function (a, b) {\n            return a.sid.localeCompare(b.sid, undefined, {\n              numeric: true,\n              sensitivity: \"base\"\n            });\n          });\n\n          _this23.isLoading = false;\n        });\n      }).then(function (res) {\n        var data = {};\n\n        _this23.uzorci.forEach(function (element) {\n          if (element.sid === _this23.$store.state.sid) {\n            data = element;\n          }\n        });\n\n        _this23.testovi = [];\n        _this23.rezultati = [];\n        _this23.analitiprikaz = [];\n        _this23.calculated = false;\n\n        var topcije = null;\n        topcije = __WEBPACK_IMPORTED_MODULE_11__data_izbornik_izbornik__[\"a\" /* default */].rez;\n\n        _this23.show_table = false;\n\n        __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].get(\"rezultati/showsingle/\" + data.sid + \"?token=\" + _this23.$store.state.token + \"&site=\" + _this23.$store.state.site, {}).then(function (res) {\n          var test = {};\n\n          if (res.data.data.length) {\n            res.data.data.sort(function (a, b) {\n              return a.testovi.labassay.grupa + a.testovi.labassay.grouporder == b.testovi.labassay.grupa + b.testovi.labassay.grouporder ? 0 : +(a.testovi.labassay.grupa + a.testovi.labassay.grouporder > b.testovi.labassay.grupa + b.testovi.labassay.grouporder) || -1;\n            });\n\n            _this23.testovi = res.data.data;\n            _this23.analitiprikaz = res.data.multidata;\n\n            res.data.data.forEach(function (element) {\n              test = {};\n              test.realizovan = false;\n\n              test.ime = element.testovi.labassay.naziv;\n              test.test = element.testovi.labassay.sifra;\n              test.analit = element.testovi.labassay.analit;\n              test.IDE = element.testovi._id;\n              test.labassay_id = element.testovi.labassay._id;\n\n              test.multi_count = 0;\n              test.multi_rezultati = [];\n\n              res.data.multidata.forEach(function (multi) {\n                if (multi.labassay._id === element.testovi.labassay._id) {\n                  test.multi_rezultati = multi.rezultat;\n                  test.multi_count = multi.rezultat[0].rezultat.length;\n                }\n              });\n\n              test.kategorija = element.testovi.labassay.kategorija;\n              test.analyser = element.testovi.labassay.analyser;\n              test.multiparam = element.testovi.labassay.multiparam;\n              test.vise = element.testovi.rezultat.length;\n              test.calculated = element.testovi.labassay.calculated;\n              test.manual = element.testovi.labassay.manual;\n\n              test.select_options = eval(\"topcije.\" + element.testovi.interp.replace(\"%\", \"_\").replace(\"/\", \"_\").replace(\" \", \"_\").replace(/-/g, \"_\").replace(\"#\", \"_\").replace(/^\\d+/, \"\"));\n\n              element.testovi.rezultat.forEach(function (rezultat) {\n                test.sekcija = rezultat.anaassay.sekcija;\n                test.rezultat = rezultat.rezultat_f;\n                test.result = rezultat;\n                test.anaassay = rezultat.anaassay;\n\n                if (rezultat.rezultat_f != \"\") {\n                  test.realizovan = true;\n                }\n\n                test.unit = rezultat.jedinice_f;\n\n                if (res.data.verificiran || res.data.status === \"ODOBREN\") {\n                  test.odobren = \"ODOBREN\";\n                  test.edit = false;\n                } else {\n                  test.odobren != \"ODOBREN\";\n                  test.edit = true;\n                }\n\n                test.jedinica = rezultat.jedinice_f;\n                test.id = rezultat._id;\n                test.multidata = element.testovi.labassay.multi;\n                test.rezultat_m = rezultat.rezultat_m;\n                test.bakterije = element.testovi.labassay.bakterije;\n                test.neg_description = element.testovi.labassay.neg_description;\n                test.pos_description = element.testovi.labassay.pos_description;\n                test.refSet = element.testovi.grupa;\n                test.dRef = element.testovi.refd;\n                test.gRef = element.testovi.refg;\n                test.interp = element.testovi.interp;\n                test.extend = element.testovi.extend;\n                test.retest = element.testovi.retest;\n                test.interpretacija = element.testovi.labassay.interpretacija;\n              });\n\n              if (test.select_options != undefined && !test.select_options.includes(test.rezultat)) {\n                test.select_options.unshift(test.rezultat);\n              }\n              _this23.rezultati.push(test);\n            });\n\n            _this23.rezultati.forEach(function (element) {\n              if (element.calculated) {\n                _this23.calculated = true;\n              }\n            });\n\n            _this23.sample = data;\n            _this23.show_table = true;\n          }\n        });\n      });\n    },\n\n    Calculate: function Calculate(event, id, ime, edited) {\n      var _this24 = this;\n\n      __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].post(\"/rezultati/odobravanje/calculate/\" + this.$store.state.sid, {\n        _id: id,\n        token: this.$store.state.token,\n        site: this.$store.state.site,\n        ime: ime,\n        pid: this.pid\n      }).then(function (res) {\n        __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].get(\"rezultati/odobravanje/samples/\" + _this24.$route.params.patient + \"/\" + _this24.$route.params.id + \"?token=\" + _this24.$store.state.token + \"&site=\" + _this24.$store.state.site + \"&date=\" + _this24.$route.query.date, {}).then(function (res) {\n          _this24.uzorci = [];\n\n          res.data.results.forEach(function (element) {\n            var check = 0;\n            var zaprimljen = 0;\n            var realizovan = 0;\n\n            if (element.verificiran) {\n              var status_uzorka = \"VERIFICIRAN\";\n            } else {\n              var status_uzorka = element.status;\n            }\n\n            element.rezultati.forEach(function (test) {\n              check++;\n\n              if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n                zaprimljen++;\n              }\n\n              if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n                realizovan++;\n              }\n\n              if (check === element.rezultati.length) {\n                if (status_uzorka === \"VERIFICIRAN\") {\n                  _this24.uzorci.push({\n                    sid: element.id,\n                    status: \"VERIFICIRAN\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else if (status_uzorka === \"ODOBREN\") {\n                  _this24.uzorci.push({\n                    sid: element.id,\n                    status: \"ODOBREN\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else if (zaprimljen < 1) {\n                  _this24.uzorci.push({\n                    sid: element.id,\n                    status: \"REALIZOVAN\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else if (realizovan < 1) {\n                  var stat = \"ZAPRIMLJEN\";\n                  if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                    if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                      stat = \"REALIZOVAN\";\n                    }\n                  }\n                  _this24.uzorci.push({\n                    sid: element.id,\n                    status: stat,\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else {\n                  _this24.uzorci.push({\n                    sid: element.id,\n                    status: \"U OBRADI\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                }\n              }\n            });\n          });\n\n          _this24.uzorci = _this24.uzorci.sort(function (a, b) {\n            return a.sid.localeCompare(b.sid, undefined, {\n              numeric: true,\n              sensitivity: \"base\"\n            });\n          });\n        });\n      }).then(function (res) {\n        var data = {};\n\n        _this24.uzorci.forEach(function (element) {\n          if (element.sid === _this24.$store.state.sid) {\n            data = element;\n          }\n        });\n\n        _this24.testovi = [];\n        _this24.rezultati = [];\n        _this24.analitiprikaz = [];\n        _this24.calculated = false;\n\n        var topcije = null;\n        topcije = __WEBPACK_IMPORTED_MODULE_11__data_izbornik_izbornik__[\"a\" /* default */].rez;\n\n        __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].get(\"rezultati/showsingle/\" + data.sid + \"?token=\" + _this24.$store.state.token + \"&site=\" + _this24.$store.state.site, {}).then(function (res) {\n          var test = {};\n\n          if (res.data.data.length) {\n            res.data.data.sort(function (a, b) {\n              return a.testovi.labassay.grupa + a.testovi.labassay.grouporder == b.testovi.labassay.grupa + b.testovi.labassay.grouporder ? 0 : +(a.testovi.labassay.grupa + a.testovi.labassay.grouporder > b.testovi.labassay.grupa + b.testovi.labassay.grouporder) || -1;\n            });\n\n            _this24.testovi = res.data.data;\n            _this24.analitiprikaz = res.data.multidata;\n\n            res.data.data.forEach(function (element) {\n              test = {};\n              test.realizovan = false;\n\n              test.ime = element.testovi.labassay.naziv;\n              test.test = element.testovi.labassay.sifra;\n              test.analit = element.testovi.labassay.analit;\n              test.IDE = element.testovi._id;\n              test.labassay_id = element.testovi.labassay._id;\n\n              test.multi_count = 0;\n              test.multi_rezultati = [];\n\n              res.data.multidata.forEach(function (multi) {\n                if (multi.labassay._id === element.testovi.labassay._id) {\n                  test.multi_rezultati = multi.rezultat;\n                  test.multi_count = multi.rezultat[0].rezultat.length;\n                }\n              });\n\n              test.kategorija = element.testovi.labassay.kategorija;\n              test.analyser = element.testovi.labassay.analyser;\n              test.multiparam = element.testovi.labassay.multiparam;\n              test.vise = element.testovi.rezultat.length;\n              test.calculated = element.testovi.labassay.calculated;\n              test.manual = element.testovi.labassay.manual;\n\n              test.select_options = eval(\"topcije.\" + element.testovi.interp.replace(\"%\", \"_\").replace(\"/\", \"_\").replace(\" \", \"_\").replace(/-/g, \"_\").replace(\"#\", \"_\").replace(/^\\d+/, \"\"));\n\n              element.testovi.rezultat.forEach(function (rezultat) {\n                test.sekcija = rezultat.anaassay.sekcija;\n                test.rezultat = rezultat.rezultat_f;\n                test.result = rezultat;\n                test.anaassay = rezultat.anaassay;\n\n                if (rezultat.rezultat_f != \"\") {\n                  test.realizovan = true;\n                }\n\n                test.unit = rezultat.jedinice_f;\n\n                if (res.data.verificiran || res.data.status === \"ODOBREN\") {\n                  test.odobren = \"ODOBREN\";\n                  test.edit = false;\n                } else {\n                  test.odobren != \"ODOBREN\";\n                  test.edit = true;\n                }\n\n                test.jedinica = rezultat.jedinice_f;\n                test.id = rezultat._id;\n                test.multidata = element.testovi.labassay.multi;\n                test.rezultat_m = rezultat.rezultat_m;\n                test.bakterije = element.testovi.labassay.bakterije;\n                test.neg_description = element.testovi.labassay.neg_description;\n                test.pos_description = element.testovi.labassay.pos_description;\n                test.refSet = element.testovi.grupa;\n                test.dRef = element.testovi.refd;\n                test.gRef = element.testovi.refg;\n                test.interp = element.testovi.interp;\n                test.extend = element.testovi.extend;\n                test.retest = element.testovi.retest;\n                test.interpretacija = element.testovi.labassay.interpretacija;\n              });\n\n              if (test.select_options != undefined && !test.select_options.includes(test.rezultat)) {\n                test.select_options.unshift(test.rezultat);\n              }\n              _this24.rezultati.push(test);\n            });\n\n            _this24.rezultati.forEach(function (element) {\n              if (element.calculated) {\n                _this24.calculated = true;\n              }\n            });\n\n            _this24.sample = data;\n          }\n        });\n      });\n    },\n    Approve: function Approve(rezultati) {\n      var _this25 = this;\n\n      this.rezultati.forEach(function (element) {\n        element.edit = false;\n      });\n\n      this.calculated = false;\n\n      if (!this.MicrobiologySample) {\n        rezultati.forEach(function (element) {\n          element.rezultat = element.rezultat.replace(/,/g, \".\");\n        });\n\n        rezultati[0].rezultat_m = [];\n      }\n\n      __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].post(\"/rezultati/odobravanje/sacuvaj/\" + this.$store.state.sid, {\n        email: this.$store.state.userId,\n        token: this.$store.state.token,\n        site: this.$store.state.site,\n        rezultati: rezultati\n      }).then(function (res) {\n        _this25.isLoading = true;\n        __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].post(\"/rezultati/odobravanje/odobri/\" + _this25.$store.state.sid, {\n          testovi: rezultati,\n          site: _this25.$store.state.site,\n          token: _this25.$store.state.token\n        }).then(function (res) {\n          _this25.sample.status = \"ODOBREN\";\n\n          _this25.report = {};\n\n          _this25.uzorci.forEach(function (element) {\n            if (element.sid === _this25.$store.state.sid) {\n              _this25.report = element;\n            }\n          });\n\n          var sample = [];\n          sample.push(_this25.report._id);\n\n          __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].post(\"nalazi/create\", {\n            token: _this25.$store.state.token,\n            site: _this25.$store.state.site,\n            type: \"single\",\n            uzorci: _this25.uzorci,\n            samples: sample,\n            timestamp: _this25.timestamp,\n            napomena: \"\",\n            status: false,\n            idNalaza: \"\",\n            location: \"/samples\",\n            naziv: _this25.report.sid\n          }).then(function (res) {\n            __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].get(\"rezultati/odobravanje/samples/\" + _this25.$route.params.patient + \"/\" + _this25.$route.params.id + \"?token=\" + _this25.$store.state.token + \"&site=\" + _this25.$store.state.site + \"&date=\" + _this25.$route.query.date, {}).then(function (res) {\n              _this25.final_pdf = res.data.final_pdf;\n\n              _this25.count = res.data.results.length;\n              _this25.approved = 0;\n\n              _this25.odobren = true;\n              _this25.verificiran = true;\n\n              res.data.results.forEach(function (element) {\n                if (element.status === \"ODOBREN\" || element.status === \"VERIFICIRAN\") {\n                  _this25.approved++;\n                }\n                if (element.status != \"ODOBREN\" && element.status != \"VERIFICIRAN\") {\n                  _this25.odobren = false;\n                }\n                if (!element.verificiran) {\n                  _this25.verificiran = false;\n                }\n              });\n\n              var response = res.data.results;\n\n              if (_this25.count == _this25.approved) {\n                var report = [];\n\n                _this25.uzorci.forEach(function (element) {\n                  report.push(element._id);\n                });\n\n                __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].post(\"nalazi/create\", {\n                  token: _this25.$store.state.token,\n                  site: _this25.$store.state.site,\n                  type: \"multi\",\n                  uzorci: _this25.uzorci,\n                  samples: report,\n                  timestamp: _this25.timestamp,\n                  napomena: \"\",\n                  status: false,\n                  idNalaza: \"\",\n                  location: \"/\",\n                  naziv: _this25.timestamp\n                }).then(function (res) {\n                  if (res.data.success) {\n                    __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].post(\"nalazi/memo\", {\n                      token: _this25.$store.state.token,\n                      site: _this25.$store.state.site,\n                      timestamp: _this25.timestamp,\n                      height: res.data.memo,\n                      location: \"/\",\n                      naziv: _this25.timestamp\n                    }).then(function (res) {\n                      _this25.uzorci = [];\n\n                      response.forEach(function (element) {\n                        var check = 0;\n                        var zaprimljen = 0;\n                        var realizovan = 0;\n\n                        if (element.verificiran) {\n                          var status_uzorka = \"VERIFICIRAN\";\n                        } else {\n                          var status_uzorka = element.status;\n                        }\n\n                        element.rezultati.forEach(function (test) {\n                          check++;\n\n                          if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n                            zaprimljen++;\n                          }\n\n                          if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n                            realizovan++;\n                          }\n\n                          if (check === element.rezultati.length) {\n                            if (status_uzorka === \"VERIFICIRAN\") {\n                              _this25.uzorci.push({\n                                sid: element.id,\n                                status: \"VERIFICIRAN\",\n                                pdf_exists: element.pdf_exists,\n                                tip: element.sample.tip,\n                                _id: element._id,\n                                removed: false\n                              });\n                            } else if (status_uzorka === \"ODOBREN\") {\n                              _this25.uzorci.push({\n                                sid: element.id,\n                                status: \"ODOBREN\",\n                                pdf_exists: element.pdf_exists,\n                                tip: element.sample.tip,\n                                _id: element._id,\n                                removed: false\n                              });\n                            } else if (zaprimljen < 1) {\n                              _this25.uzorci.push({\n                                sid: element.id,\n                                status: \"REALIZOVAN\",\n                                pdf_exists: element.pdf_exists,\n                                tip: element.sample.tip,\n                                _id: element._id,\n                                removed: false\n                              });\n                            } else if (realizovan < 1) {\n                              var stat = \"ZAPRIMLJEN\";\n                              if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                                if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                                  stat = \"REALIZOVAN\";\n                                }\n                              }\n                              _this25.uzorci.push({\n                                sid: element.id,\n                                status: stat,\n                                pdf_exists: element.pdf_exists,\n                                tip: element.sample.tip,\n                                _id: element._id,\n                                removed: false\n                              });\n                            } else {\n                              _this25.uzorci.push({\n                                sid: element.id,\n                                status: \"U OBRADI\",\n                                pdf_exists: element.pdf_exists,\n                                tip: element.sample.tip,\n                                _id: element._id,\n                                removed: false\n                              });\n                            }\n                          }\n                        });\n                      });\n\n                      _this25.uzorci = _this25.uzorci.sort(function (a, b) {\n                        return a.sid.localeCompare(b.sid, undefined, {\n                          numeric: true,\n                          sensitivity: \"base\"\n                        });\n                      });\n\n                      _this25.main = true;\n                      _this25.isLoading = false;\n                    });\n                  }\n                });\n              } else {\n                _this25.uzorci = [];\n\n                res.data.results.forEach(function (element) {\n                  var check = 0;\n                  var zaprimljen = 0;\n                  var realizovan = 0;\n\n                  if (element.verificiran) {\n                    var status_uzorka = \"VERIFICIRAN\";\n                  } else {\n                    var status_uzorka = element.status;\n                  }\n\n                  element.rezultati.forEach(function (test) {\n                    check++;\n\n                    if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n                      zaprimljen++;\n                    }\n\n                    if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n                      realizovan++;\n                    }\n\n                    if (check === element.rezultati.length) {\n                      if (status_uzorka === \"VERIFICIRAN\") {\n                        _this25.uzorci.push({\n                          sid: element.id,\n                          status: \"VERIFICIRAN\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else if (status_uzorka === \"ODOBREN\") {\n                        _this25.uzorci.push({\n                          sid: element.id,\n                          status: \"ODOBREN\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else if (zaprimljen < 1) {\n                        _this25.uzorci.push({\n                          sid: element.id,\n                          status: \"REALIZOVAN\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else if (realizovan < 1) {\n                        var stat = \"ZAPRIMLJEN\";\n                        if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                          if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                            stat = \"REALIZOVAN\";\n                          }\n                        }\n                        _this25.uzorci.push({\n                          sid: element.id,\n                          status: stat,\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      } else {\n                        _this25.uzorci.push({\n                          sid: element.id,\n                          status: \"U OBRADI\",\n                          pdf_exists: element.pdf_exists,\n                          tip: element.sample.tip,\n                          _id: element._id,\n                          removed: false\n                        });\n                      }\n                    }\n                  });\n                });\n\n                _this25.uzorci = _this25.uzorci.sort(function (a, b) {\n                  return a.sid.localeCompare(b.sid, undefined, {\n                    numeric: true,\n                    sensitivity: \"base\"\n                  });\n                });\n\n                _this25.main = true;\n                _this25.isLoading = false;\n              }\n            }).then(function (res) {});\n          });\n        });\n      });\n    },\n    Disapprove: function Disapprove(rezultati, from) {\n      var _this26 = this;\n\n      this.rezultati.forEach(function (element) {\n        if (element.calculated) {\n          _this26.calculated = true;\n        }\n      });\n\n      __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].post(\"/rezultati/odobravanje/ukloni/\" + this.$store.state.sid, {\n        testovi: rezultati,\n        site: this.$store.state.site,\n        token: this.$store.state.token\n      }).then(function (res) {\n        _this26.isLoading = true;\n\n        __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].get(\"rezultati/odobravanje/samples/\" + _this26.$route.params.patient + \"/\" + _this26.$route.params.id + \"?token=\" + _this26.$store.state.token + \"&site=\" + _this26.$store.state.site + \"&date=\" + _this26.$route.query.date, {}).then(function (res) {\n          _this26.sample.status = \"REALIZOVAN\";\n\n          _this26.final_pdf = res.data.final_pdf;\n\n          _this26.count = res.data.results.length;\n          _this26.approved = 0;\n\n          _this26.odobren = true;\n          _this26.verificiran = true;\n\n          res.data.results.forEach(function (element) {\n            if (element.status === \"ODOBREN\" || element.status === \"VERIFICIRAN\") {\n              _this26.approved++;\n            }\n            if (element.status != \"ODOBREN\" && element.status != \"VERIFICIRAN\") {\n              _this26.odobren = false;\n            }\n            if (!element.verificiran) {\n              _this26.verificiran = false;\n            }\n          });\n\n          _this26.uzorci = [];\n\n          res.data.results.forEach(function (element) {\n            var check = 0;\n            var zaprimljen = 0;\n            var realizovan = 0;\n\n            if (element.verificiran) {\n              var status_uzorka = \"VERIFICIRAN\";\n            } else {\n              var status_uzorka = element.status;\n            }\n\n            element.rezultati.forEach(function (test) {\n              check++;\n\n              if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n                zaprimljen++;\n              }\n\n              if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n                realizovan++;\n              }\n\n              if (check === element.rezultati.length) {\n                if (status_uzorka === \"VERIFICIRAN\") {\n                  _this26.uzorci.push({\n                    sid: element.id,\n                    status: \"VERIFICIRAN\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else if (status_uzorka === \"ODOBREN\") {\n                  _this26.uzorci.push({\n                    sid: element.id,\n                    status: \"ODOBREN\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else if (zaprimljen < 1) {\n                  _this26.uzorci.push({\n                    sid: element.id,\n                    status: \"REALIZOVAN\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else if (realizovan < 1) {\n                  var stat = \"ZAPRIMLJEN\";\n                  if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                    if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                      stat = \"REALIZOVAN\";\n                    }\n                  }\n                  _this26.uzorci.push({\n                    sid: element.id,\n                    status: stat,\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                } else {\n                  _this26.uzorci.push({\n                    sid: element.id,\n                    status: \"U OBRADI\",\n                    pdf_exists: element.pdf_exists,\n                    tip: element.sample.tip,\n                    _id: element._id,\n                    removed: false\n                  });\n                }\n              }\n            });\n          });\n\n          _this26.uzorci = _this26.uzorci.sort(function (a, b) {\n            return a.sid.localeCompare(b.sid, undefined, {\n              numeric: true,\n              sensitivity: \"base\"\n            });\n          });\n\n          _this26.main = true;\n        });\n\n        _this26.rezultati.forEach(function (element) {\n          element.edit = true;\n        });\n\n        _this26.isLoading = false;\n      });\n    },\n    Verify: function Verify(data) {\n      var _this27 = this;\n\n      if (!this.$store.state.access.verify) {\n        this.$refs.staticModalVerifyPrivilege.open();\n      } else {\n        __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].post(\"/rezultati/obrada/verifikacija/\" + this.$store.state.sid, {\n          site: this.$store.state.site,\n          token: this.$store.state.token,\n          verify: true\n        }).then(function (res) {\n          __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].get(\"rezultati/odobravanje/samples/\" + _this27.$route.params.patient + \"/\" + _this27.$route.params.id + \"?token=\" + _this27.$store.state.token + \"&site=\" + _this27.$store.state.site + \"&date=\" + _this27.$route.query.date, {}).then(function (res) {\n            _this27.sample.status = \"VERIFICIRAN\";\n\n            _this27.final_pdf = res.data.final_pdf;\n\n            _this27.count = res.data.results.length;\n            _this27.approved = 0;\n            _this27.verified = 0;\n\n            _this27.odobren = true;\n            _this27.verificiran = true;\n            _this27.partials = [];\n            _this27.partials_condition = false;\n\n            res.data.results.forEach(function (element) {\n              if (element.verificiran) {\n                _this27.partials.push(element._id);\n                _this27.verified++;\n              }\n              if (element.status === \"ODOBREN\" || element.status === \"VERIFICIRAN\") {\n                _this27.approved++;\n              }\n              if (element.status != \"ODOBREN\" && element.status != \"VERIFICIRAN\") {\n                _this27.odobren = false;\n              }\n              if (!element.verificiran) {\n                _this27.verificiran = false;\n              }\n            });\n\n            if (_this27.count > _this27.verified && _this27.verified > 1) {\n              _this27.partials_condition = true;\n            }\n\n            _this27.uzorci = [];\n\n            res.data.results.forEach(function (element) {\n              var check = 0;\n              var zaprimljen = 0;\n              var realizovan = 0;\n\n              if (element.verificiran) {\n                var status_uzorka = \"VERIFICIRAN\";\n              } else {\n                var status_uzorka = element.status;\n              }\n\n              element.rezultati.forEach(function (test) {\n                check++;\n\n                if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n                  zaprimljen++;\n                }\n\n                if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n                  realizovan++;\n                }\n\n                if (check === element.rezultati.length) {\n                  if (status_uzorka === \"VERIFICIRAN\") {\n                    _this27.uzorci.push({\n                      sid: element.id,\n                      status: \"VERIFICIRAN\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else if (status_uzorka === \"ODOBREN\") {\n                    _this27.uzorci.push({\n                      sid: element.id,\n                      status: \"ODOBREN\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else if (zaprimljen < 1) {\n                    _this27.uzorci.push({\n                      sid: element.id,\n                      status: \"REALIZOVAN\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else if (realizovan < 1) {\n                    var stat = \"ZAPRIMLJEN\";\n                    if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                      if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                        stat = \"REALIZOVAN\";\n                      }\n                    }\n                    _this27.uzorci.push({\n                      sid: element.id,\n                      status: stat,\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else {\n                    _this27.uzorci.push({\n                      sid: element.id,\n                      status: \"U OBRADI\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  }\n                }\n              });\n            });\n\n            _this27.uzorci = _this27.uzorci.sort(function (a, b) {\n              return a.sid.localeCompare(b.sid, undefined, {\n                numeric: true,\n                sensitivity: \"base\"\n              });\n            });\n\n            if (_this27.verificiran) {\n              __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].post(\"rezultati/nalazi/status\", {\n                token: _this27.$store.state.token,\n                site: _this27.$store.state.site,\n                timestamp: _this27.timestamp,\n                location: \"/\",\n                naziv: _this27.timestamp,\n                status: true\n              }).then(function (res) {\n                _this27.main = true;\n\n                if (_this27.lokacija.sendEmail) {\n                  __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].post(\"nalazi/mail\", {\n                    token: _this27.$store.state.token,\n                    site: _this27.$store.state.site,\n                    email: _this27.lokacija.email,\n                    timestamp: _this27.timestamp,\n                    location: \"/\",\n                    naziv: _this27.timestamp\n                  }).then(function (res) {\n                    if (res.data.success) {} else {\n                      _this27.toastText = \"Greška prilikom slanja nalaza!\";\n                      _this27.toastIcon = \"fa-remove\";\n                      _this27.toastPosition = \"top-right\";\n                      _this27.className = \"vuestic-toast-danger\";\n\n                      _this27.showToast(_this27.toastText, {\n                        icon: _this27.toastIcon,\n                        position: _this27.toastPosition,\n                        duration: 2500,\n                        fullWidth: _this27.false,\n                        className: _this27.className\n                      });\n                    }\n                  });\n                } else {}\n              });\n            } else {\n              _this27.main = true;\n            }\n          });\n        });\n      }\n    },\n    UnVerify: function UnVerify(data) {\n      var _this28 = this;\n\n      if (!this.$store.state.access.verify) {\n        this.$refs.staticModalVerifyPrivilege.open();\n      } else {\n        this.verificiran = false;\n        this.sid = data.sid;\n\n        __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].post(\"/rezultati/obrada/verifikacija/\" + data.sid, {\n          site: this.$store.state.site,\n          token: this.$store.state.token,\n          verify: false\n        }).then(function (res) {\n          __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].get(\"rezultati/odobravanje/samples/\" + _this28.$route.params.patient + \"/\" + _this28.$route.params.id + \"?token=\" + _this28.$store.state.token + \"&site=\" + _this28.$store.state.site + \"&date=\" + _this28.$route.query.date, {}).then(function (res) {\n            _this28.sample.status = \"ODOBREN\";\n\n            _this28.final_pdf = res.data.final_pdf;\n\n            _this28.count = res.data.results.length;\n            _this28.approved = 0;\n\n            _this28.odobren = true;\n            _this28.verificiran = true;\n            _this28.verified = 0;\n            _this28.partials = [];\n            _this28.partials_condition = false;\n\n            res.data.results.forEach(function (element) {\n              if (element.verificiran) {\n                _this28.verified++;\n                _this28.partials.push(element._id);\n              }\n              if (element.status === \"ODOBREN\" || element.status === \"VERIFICIRAN\") {\n                _this28.approved++;\n              }\n              if (element.status != \"ODOBREN\" && element.status != \"VERIFICIRAN\") {\n                _this28.odobren = false;\n              }\n              if (!element.verificiran) {\n                _this28.verificiran = false;\n              }\n            });\n\n            if (_this28.count > _this28.verified && _this28.verified > 1) {\n              _this28.partials_condition = true;\n            }\n\n            _this28.uzorci = [];\n\n            res.data.results.forEach(function (element) {\n              var check = 0;\n              var zaprimljen = 0;\n              var realizovan = 0;\n\n              if (element.verificiran) {\n                var status_uzorka = \"VERIFICIRAN\";\n              } else {\n                var status_uzorka = element.status;\n              }\n\n              element.rezultati.forEach(function (test) {\n                check++;\n\n                if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\n                  zaprimljen++;\n                }\n\n                if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\n                  realizovan++;\n                }\n\n                if (check === element.rezultati.length) {\n                  if (status_uzorka === \"VERIFICIRAN\") {\n                    _this28.uzorci.push({\n                      sid: element.id,\n                      status: \"VERIFICIRAN\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else if (status_uzorka === \"ODOBREN\") {\n                    _this28.uzorci.push({\n                      sid: element.id,\n                      status: \"ODOBREN\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else if (zaprimljen < 1) {\n                    _this28.uzorci.push({\n                      sid: element.id,\n                      status: \"REALIZOVAN\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else if (realizovan < 1) {\n                    var stat = \"ZAPRIMLJEN\";\n                    if (element.sample.tip.includes(\"Mikrobiologija\")) {\n                      if (element.rezultati[0].rezultat[0].rezultat_m.length) {\n                        stat = \"REALIZOVAN\";\n                      }\n                    }\n                    _this28.uzorci.push({\n                      sid: element.id,\n                      status: stat,\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  } else {\n                    _this28.uzorci.push({\n                      sid: element.id,\n                      status: \"U OBRADI\",\n                      pdf_exists: element.pdf_exists,\n                      tip: element.sample.tip,\n                      _id: element._id,\n                      removed: false\n                    });\n                  }\n                }\n              });\n            });\n\n            _this28.uzorci = _this28.uzorci.sort(function (a, b) {\n              return a.sid.localeCompare(b.sid, undefined, {\n                numeric: true,\n                sensitivity: \"base\"\n              });\n            });\n\n            if (!_this28.verificiran) {\n              __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].post(\"rezultati/nalazi/status\", {\n                token: _this28.$store.state.token,\n                site: _this28.$store.state.site,\n                timestamp: _this28.timestamp,\n                location: \"/\",\n                naziv: _this28.timestamp,\n                status: false\n              }).then(function (res) {\n                _this28.main = true;\n              });\n            } else {\n              _this28.main = true;\n            }\n          });\n        });\n      }\n    },\n    GetResults: function GetResults(data, status) {\n      var _this29 = this;\n\n      this.sample_status = status;\n      this.vise = [];\n      this.labassay = \"\";\n      __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].post(\"/rezultati/odobravanje/results\" + \"?token=\" + this.$store.state.token + \"&site=\" + this.$store.state.site, {\n        id: this.sample.sid,\n        labassay: data.labassay_id\n      }).then(function (res) {\n        if (res.data.success) {\n          _this29.vise = res.data.element;\n          _this29.labassay = _this29.vise.labassay.naziv + \" (\" + _this29.vise.labassay.analit + \")\";\n\n          var i = 0;\n          res.data.element.rezultat.forEach(function (element) {\n            i++;\n            if (res.data.element.rezultat.length == i) {\n              element.izabran = true;\n            } else {\n              element.izabran = false;\n            }\n          });\n\n          _this29.vise.rezultat.sort(function (a, b) {\n            return Date.parse(a.created_at) == Date.parse(b.created_at) ? 0 : +(Date.parse(a.created_at) < Date.parse(b.created_at)) || -1;\n          });\n\n          _this29.$refs.staticModalAllResults.open();\n        }\n      });\n    },\n    GetResultsMulti: function GetResultsMulti(data, status) {\n      this.sample_status = status;\n\n      this.multi_rezultati = [];\n      this.multi_test = data.ime + \" (\" + data.analit + \")\";\n\n      data.multi_rezultati.forEach(function (element) {\n        element.rezultat.forEach(function (rez) {});\n      });\n    },\n    IzborTesta: function IzborTesta(vise, test) {\n      var _this30 = this;\n\n      document.getElementById(this.sample.sid).click();\n\n      __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].post(\"/rezultati/odobravanje/choose\" + \"?token=\" + this.$store.state.token + \"&site=\" + this.$store.state.site, {\n        id: this.sample.sid,\n        labassay: vise.labassay._id,\n        picked: test._id\n      }).then(function (res) {\n        document.getElementById(_this30.sample.sid).click();\n        _this30.$refs.staticModalAllResults.close();\n      });\n    },\n    Partials: function Partials() {\n      var _this31 = this;\n\n      __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"h\" /* http */].post(\"nalazi/create\", {\n        token: this.$store.state.token,\n        site: this.$store.state.site,\n        type: \"partial\",\n        uzorci: this.uzorci,\n        samples: this.partials,\n        timestamp: this.timestamp,\n        napomena: \"\",\n        status: false,\n        idNalaza: \"\",\n        location: \"/partials\",\n        naziv: this.timestamp\n      }).then(function (res) {\n        if (res.data.success) {\n          if (!res.data.success) {\n            _this31.$refs.staticModalError.open();\n          } else {\n            _this31.path = _this31.timestamp + \".pdf\";\n\n            _this31.url = __WEBPACK_IMPORTED_MODULE_7__config_config_js__[\"i\" /* server */] + \"nalazi/partials/\" + _this31.path;\n\n            var options = {\n              width: \"100%\",\n              height: \"800px\"\n            };\n            __WEBPACK_IMPORTED_MODULE_16_pdfobject___default.a.embed(_this31.url, \"#pdf-container\", options);\n\n            _this31.email_button = true;\n            _this31.main = false;\n            _this31.pdf = true;\n          }\n        }\n      });\n    }\n  }\n});\n\n/***/ }),\n\n/***/ \"MbHo\":\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(\"FZ+f\")(true);\n// imports\n\n\n// module\nexports.push([module.i, \".vld-overlay{bottom:0;left:0;position:absolute;right:0;top:0;align-items:center;display:none;justify-content:center;overflow:hidden;z-index:1}.vld-overlay.is-active{display:flex}.vld-overlay.is-full-page{z-index:999;position:fixed}.vld-overlay .vld-background{bottom:0;left:0;position:absolute;right:0;top:0;background:#fff;opacity:.5}.vld-overlay .vld-icon,.vld-parent{position:relative}\", \"\", {\"version\":3,\"sources\":[\"C:/Projects/extralab/client/node_modules/vue-loading-overlay/dist/vue-loading.css\"],\"names\":[],\"mappings\":\"AAAA,aACE,SAAU,AACV,OAAQ,AACR,kBAAmB,AACnB,QAAS,AACT,MAAO,AACP,mBAAoB,AACpB,aAAc,AACd,uBAAwB,AACxB,gBAAiB,AACjB,SAAU,CACX,AAED,uBACE,YAAa,CACd,AAED,0BACE,YAAa,AACb,cAAe,CAChB,AAED,6BACE,SAAU,AACV,OAAQ,AACR,kBAAmB,AACnB,QAAS,AACT,MAAO,AACP,gBAAiB,AACjB,UAAY,CACb,AAED,mCACE,iBAAkB,CACnB\",\"file\":\"vue-loading.css\",\"sourcesContent\":[\".vld-overlay {\\n  bottom: 0;\\n  left: 0;\\n  position: absolute;\\n  right: 0;\\n  top: 0;\\n  align-items: center;\\n  display: none;\\n  justify-content: center;\\n  overflow: hidden;\\n  z-index: 1\\n}\\n\\n.vld-overlay.is-active {\\n  display: flex\\n}\\n\\n.vld-overlay.is-full-page {\\n  z-index: 999;\\n  position: fixed\\n}\\n\\n.vld-overlay .vld-background {\\n  bottom: 0;\\n  left: 0;\\n  position: absolute;\\n  right: 0;\\n  top: 0;\\n  background: #fff;\\n  opacity: 0.5\\n}\\n\\n.vld-overlay .vld-icon, .vld-parent {\\n  position: relative\\n}\\n\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n\n/***/ \"R7hf\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: \"badgeColumn\",\n  props: {\n    rowData: {\n      type: Object,\n      required: true\n    },\n    rowIndex: {\n      type: Number\n    }\n  },\n  data: function data() {\n    return {\n      classObject: {\n        \"badge-warning\": this.rowIndex % 6 === 0,\n        \"badge-primary\": this.rowIndex % 6 === 1,\n        \"badge-danger\": this.rowIndex % 6 === 2,\n        \"badge-info\": this.rowIndex % 6 === 3,\n        \"badge-violet\": this.rowIndex % 6 === 4,\n        \"badge-dark-blue\": this.rowIndex % 6 === 5\n      }\n    };\n  }\n});\n\n/***/ }),\n\n/***/ \"RHNw\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('span',{staticClass:\"circle\",class:_vm.classObject})}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\n/* harmony default export */ __webpack_exports__[\"a\"] = (esExports);\n\n/***/ }),\n\n/***/ \"Rrel\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window\nvar toIObject = __webpack_require__(\"TcQ7\");\nvar gOPN = __webpack_require__(\"n0T6\").f;\nvar toString = {}.toString;\n\nvar windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames\n  ? Object.getOwnPropertyNames(window) : [];\n\nvar getWindowNames = function (it) {\n  try {\n    return gOPN(it);\n  } catch (e) {\n    return windowNames.slice();\n  }\n};\n\nmodule.exports.f = function getOwnPropertyNames(it) {\n  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));\n};\n\n\n/***/ }),\n\n/***/ \"SYh3\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(\"MbHo\");\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(\"rjj0\")(\"745170b4\", content, true);\n\n/***/ }),\n\n/***/ \"UqI+\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*global ActiveXObject, window, console, define, module, jQuery */\n//jshint unused:false, strict: false\n\n/*\n    PDFObject v2.1.1\n    https://github.com/pipwerks/PDFObject\n    Copyright (c) 2008-2018 Philip Hutchison\n    MIT-style license: http://pipwerks.mit-license.org/\n    UMD module pattern from https://github.com/umdjs/umd/blob/master/templates/returnExports.js\n*/\n\n(function (root, factory) {\n    if (true) {\n        // AMD. Register as an anonymous module.\n        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    } else if (typeof module === 'object' && module.exports) {\n        // Node. Does not work with strict CommonJS, but\n        // only CommonJS-like environments that support module.exports,\n        // like Node.\n        module.exports = factory();\n    } else {\n        // Browser globals (root is window)\n        root.PDFObject = factory();\n  }\n}(this, function () {\n\n    \"use strict\";\n    //jshint unused:true\n\n    //PDFObject is designed for client-side (browsers), not server-side (node)\n    //Will choke on undefined navigator and window vars when run on server\n    //Return boolean false and exit function when running server-side\n\n    if(typeof window === \"undefined\" || typeof navigator === \"undefined\"){ return false; }\n\n    var pdfobjectversion = \"2.1.1\",\n        ua = window.navigator.userAgent,\n\n        //declare booleans\n        supportsPDFs,\n        isIE,\n        supportsPdfMimeType = (typeof navigator.mimeTypes['application/pdf'] !== \"undefined\"),\n        supportsPdfActiveX,\n        isModernBrowser = (function (){ return (typeof window.Promise !== \"undefined\"); })(),\n        isFirefox = (function (){ return (ua.indexOf(\"irefox\") !== -1); } )(),\n        isFirefoxWithPDFJS = (function (){\n            //Firefox started shipping PDF.js in Firefox 19.\n            //If this is Firefox 19 or greater, assume PDF.js is available\n            if(!isFirefox){ return false; }\n            //parse userAgent string to get release version (\"rv\")\n            //ex: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.12; rv:57.0) Gecko/20100101 Firefox/57.0\n            return (parseInt(ua.split(\"rv:\")[1].split(\".\")[0], 10) > 18);\n        })(),\n        isIOS = (function (){ return (/iphone|ipad|ipod/i.test(ua.toLowerCase())); })(),\n\n        //declare functions\n        createAXO,\n        buildFragmentString,\n        log,\n        embedError,\n        embed,\n        getTargetElement,\n        generatePDFJSiframe,\n        generateEmbedElement;\n\n\n    /* ----------------------------------------------------\n       Supporting functions\n       ---------------------------------------------------- */\n\n    createAXO = function (type){\n        var ax;\n        try {\n            ax = new ActiveXObject(type);\n        } catch (e) {\n            ax = null; //ensure ax remains null\n        }\n        return ax;\n    };\n\n    //IE11 still uses ActiveX for Adobe Reader, but IE 11 doesn't expose\n    //window.ActiveXObject the same way previous versions of IE did\n    //window.ActiveXObject will evaluate to false in IE 11, but \"ActiveXObject\" in window evaluates to true\n    //so check the first one for older IE, and the second for IE11\n    //FWIW, MS Edge (replacing IE11) does not support ActiveX at all, both will evaluate false\n    //Constructed as a method (not a prop) to avoid unneccesarry overhead -- will only be evaluated if needed\n    isIE = function (){ return !!(window.ActiveXObject || \"ActiveXObject\" in window); };\n\n    //If either ActiveX support for \"AcroPDF.PDF\" or \"PDF.PdfCtrl\" are found, return true\n    //Constructed as a method (not a prop) to avoid unneccesarry overhead -- will only be evaluated if needed\n    supportsPdfActiveX = function (){ return !!(createAXO(\"AcroPDF.PDF\") || createAXO(\"PDF.PdfCtrl\")); };\n\n    //Determines whether PDF support is available\n    supportsPDFs = (\n        //as of iOS 12, inline PDF rendering is still not supported in Safari or native webview\n        //3rd-party browsers (eg Chrome, Firefox) use Apple's webview for rendering, and thus the same result as Safari\n        //Therefore if iOS, we shall assume that PDF support is not available\n        !isIOS && (\n            //Modern versions of Firefox come bundled with PDFJS\n            isFirefoxWithPDFJS || \n            //Browsers that still support the original MIME type check\n            supportsPdfMimeType || (\n                //Pity the poor souls still using IE\n                isIE() && supportsPdfActiveX()\n            )\n        )\n    );\n\n    //Create a fragment identifier for using PDF Open parameters when embedding PDF\n    buildFragmentString = function(pdfParams){\n\n        var string = \"\",\n            prop;\n\n        if(pdfParams){\n\n            for (prop in pdfParams) {\n                if (pdfParams.hasOwnProperty(prop)) {\n                    string += encodeURIComponent(prop) + \"=\" + encodeURIComponent(pdfParams[prop]) + \"&\";\n                }\n            }\n\n            //The string will be empty if no PDF Params found\n            if(string){\n\n                string = \"#\" + string;\n\n                //Remove last ampersand\n                string = string.slice(0, string.length - 1);\n\n            }\n\n        }\n\n        return string;\n\n    };\n\n    log = function (msg){\n        if(typeof console !== \"undefined\" && console.log){\n            console.log(\"[PDFObject] \" + msg);\n        }\n    };\n\n    embedError = function (msg){\n        log(msg);\n        return false;\n    };\n\n    getTargetElement = function (targetSelector){\n\n        //Default to body for full-browser PDF\n        var targetNode = document.body;\n\n        //If a targetSelector is specified, check to see whether\n        //it's passing a selector, jQuery object, or an HTML element\n\n        if(typeof targetSelector === \"string\"){\n\n            //Is CSS selector\n            targetNode = document.querySelector(targetSelector);\n\n        } else if (typeof jQuery !== \"undefined\" && targetSelector instanceof jQuery && targetSelector.length) {\n\n            //Is jQuery element. Extract HTML node\n            targetNode = targetSelector.get(0);\n\n        } else if (typeof targetSelector.nodeType !== \"undefined\" && targetSelector.nodeType === 1){\n\n            //Is HTML element\n            targetNode = targetSelector;\n\n        }\n\n        return targetNode;\n\n    };\n\n    generatePDFJSiframe = function (targetNode, url, pdfOpenFragment, PDFJS_URL, id){\n\n        var fullURL = PDFJS_URL + \"?file=\" + encodeURIComponent(url) + pdfOpenFragment;\n        var scrollfix = (isIOS) ? \"-webkit-overflow-scrolling: touch; overflow-y: scroll; \" : \"overflow: hidden; \";\n        var iframe = \"<div style='\" + scrollfix + \"position: absolute; top: 0; right: 0; bottom: 0; left: 0;'><iframe  \" + id + \" src='\" + fullURL + \"' style='border: none; width: 100%; height: 100%;' frameborder='0'></iframe></div>\";\n        targetNode.className += \" pdfobject-container\";\n        targetNode.style.position = \"relative\";\n        targetNode.style.overflow = \"auto\";\n        targetNode.innerHTML = iframe;\n        return targetNode.getElementsByTagName(\"iframe\")[0];\n\n    };\n\n    generateEmbedElement = function (targetNode, targetSelector, url, pdfOpenFragment, width, height, id){\n\n        var style = \"\";\n\n        if(targetSelector && targetSelector !== document.body){\n            style = \"width: \" + width + \"; height: \" + height + \";\";\n        } else {\n            style = \"position: absolute; top: 0; right: 0; bottom: 0; left: 0; width: 100%; height: 100%;\";\n        }\n\n        targetNode.className += \" pdfobject-container\";\n        targetNode.innerHTML = \"<embed \" + id + \" class='pdfobject' src='\" + url + pdfOpenFragment + \"' type='application/pdf' style='overflow: auto; \" + style + \"'/>\";\n\n        return targetNode.getElementsByTagName(\"embed\")[0];\n\n    };\n\n    embed = function(url, targetSelector, options){\n\n        //Ensure URL is available. If not, exit now.\n        if(typeof url !== \"string\"){ return embedError(\"URL is not valid\"); }\n\n        //If targetSelector is not defined, convert to boolean\n        targetSelector = (typeof targetSelector !== \"undefined\") ? targetSelector : false;\n\n        //Ensure options object is not undefined -- enables easier error checking below\n        options = (typeof options !== \"undefined\") ? options : {};\n\n        //Get passed options, or set reasonable defaults\n        var id = (options.id && typeof options.id === \"string\") ? \"id='\" + options.id + \"'\" : \"\",\n            page = (options.page) ? options.page : false,\n            pdfOpenParams = (options.pdfOpenParams) ? options.pdfOpenParams : {},\n            fallbackLink = (typeof options.fallbackLink !== \"undefined\") ? options.fallbackLink : true,\n            width = (options.width) ? options.width : \"100%\",\n            height = (options.height) ? options.height : \"100%\",\n            assumptionMode = (typeof options.assumptionMode === \"boolean\") ? options.assumptionMode : true,\n            forcePDFJS = (typeof options.forcePDFJS === \"boolean\") ? options.forcePDFJS : false,\n            PDFJS_URL = (options.PDFJS_URL) ? options.PDFJS_URL : false,\n            targetNode = getTargetElement(targetSelector),\n            fallbackHTML = \"\",\n            pdfOpenFragment = \"\",\n            fallbackHTML_default = \"<p>This browser does not support inline PDFs. Please download the PDF to view it: <a href='[url]'>Download PDF</a></p>\";\n\n        //If target element is specified but is not valid, exit without doing anything\n        if(!targetNode){ return embedError(\"Target element cannot be determined\"); }\n\n\n        //page option overrides pdfOpenParams, if found\n        if(page){\n            pdfOpenParams.page = page;\n        }\n\n        //Stringify optional Adobe params for opening document (as fragment identifier)\n        pdfOpenFragment = buildFragmentString(pdfOpenParams);\n\n        //Do the dance\n\n        //If the forcePDFJS option is invoked, skip everything else and embed as directed\n        if(forcePDFJS && PDFJS_URL){\n\n            return generatePDFJSiframe(targetNode, url, pdfOpenFragment, PDFJS_URL, id);\n\n        //If traditional support is provided, or if this is a modern browser and not iOS (see comment for supportsPDFs declaration)\n        } else if(supportsPDFs || (assumptionMode && isModernBrowser && !isIOS)){\n\n            return generateEmbedElement(targetNode, targetSelector, url, pdfOpenFragment, width, height, id);\n\n        //If everything else has failed and a PDFJS fallback is provided, try to use it\n        } else if(PDFJS_URL){\n\n            return generatePDFJSiframe(targetNode, url, pdfOpenFragment, PDFJS_URL, id);\n\n        } else {\n\n            //Display the fallback link if available\n            if(fallbackLink){\n\n                fallbackHTML = (typeof fallbackLink === \"string\") ? fallbackLink : fallbackHTML_default;\n                targetNode.innerHTML = fallbackHTML.replace(/\\[url\\]/g, url);\n\n            }\n\n            return embedError(\"This browser does not support embedded PDFs\");\n\n        }\n\n    };\n\n    return {\n        embed: function (a,b,c){ return embed(a,b,c); },\n        pdfobjectversion: (function () { return pdfobjectversion; })(),\n        supportsPDFs: (function (){ return supportsPDFs; })()\n    };\n\n}));\n\n/***/ }),\n\n/***/ \"XMpX\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_BadgeColumn_vue__ = __webpack_require__(\"R7hf\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_1099f53e_hasScoped_true_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_BadgeColumn_vue__ = __webpack_require__(\"RHNw\");\nfunction injectStyle (ssrContext) {\n  __webpack_require__(\"FrRU\")\n}\nvar normalizeComponent = __webpack_require__(\"VU/8\")\n/* script */\n\n/* template */\n\n/* template functional */\n  var __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-1099f53e\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_BadgeColumn_vue__[\"a\" /* default */],\n  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_1099f53e_hasScoped_true_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_BadgeColumn_vue__[\"a\" /* default */],\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Component.exports);\n\n\n/***/ }),\n\n/***/ \"ZZvs\":\n/***/ (function(module, exports, __webpack_require__) {\n\n!function(t,e){ true?module.exports=e():\"function\"==typeof define&&define.amd?define(\"VueLoading\",[],e):\"object\"==typeof exports?exports.VueLoading=e():t.VueLoading=e()}(\"undefined\"!=typeof self?self:this,function(){return function(t){var e={};function i(n){if(e[n])return e[n].exports;var r=e[n]={i:n,l:!1,exports:{}};return t[n].call(r.exports,r,r.exports,i),r.l=!0,r.exports}return i.m=t,i.c=e,i.d=function(t,e,n){i.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},i.r=function(t){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})},i.t=function(t,e){if(1&e&&(t=i(t)),8&e)return t;if(4&e&&\"object\"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(i.r(n),Object.defineProperty(n,\"default\",{enumerable:!0,value:t}),2&e&&\"string\"!=typeof t)for(var r in t)i.d(n,r,function(e){return t[e]}.bind(null,r));return n},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,\"a\",e),e},i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},i.p=\"\",i(i.s=1)}([function(t,e,i){},function(t,e,i){\"use strict\";i.r(e);var n=\"undefined\"!=typeof window?window.HTMLElement:Object,r={mounted:function(){document.addEventListener(\"focusin\",this.focusIn)},methods:{focusIn:function(t){if(this.isActive&&t.target!==this.$el&&!this.$el.contains(t.target)){var e=this.container?this.container:this.isFullPage?null:this.$el.parentElement;(this.isFullPage||e&&e.contains(t.target))&&(t.preventDefault(),this.$el.focus())}}},beforeDestroy:function(){document.removeEventListener(\"focusin\",this.focusIn)}};function a(t,e,i,n,r,a,o,s){var u,l=\"function\"==typeof t?t.options:t;if(e&&(l.render=e,l.staticRenderFns=i,l._compiled=!0),n&&(l.functional=!0),a&&(l._scopeId=\"data-v-\"+a),o?(u=function(t){(t=t||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||\"undefined\"==typeof __VUE_SSR_CONTEXT__||(t=__VUE_SSR_CONTEXT__),r&&r.call(this,t),t&&t._registeredComponents&&t._registeredComponents.add(o)},l._ssrRegister=u):r&&(u=s?function(){r.call(this,this.$root.$options.shadowRoot)}:r),u)if(l.functional){l._injectStyles=u;var c=l.render;l.render=function(t,e){return u.call(e),c(t,e)}}else{var d=l.beforeCreate;l.beforeCreate=d?[].concat(d,u):[u]}return{exports:t,options:l}}var o=a({name:\"spinner\",props:{color:{type:String,default:\"#000\"},height:{type:Number,default:64},width:{type:Number,default:64}}},function(){var t=this.$createElement,e=this._self._c||t;return e(\"svg\",{attrs:{viewBox:\"0 0 38 38\",xmlns:\"http://www.w3.org/2000/svg\",width:this.width,height:this.height,stroke:this.color}},[e(\"g\",{attrs:{fill:\"none\",\"fill-rule\":\"evenodd\"}},[e(\"g\",{attrs:{transform:\"translate(1 1)\",\"stroke-width\":\"2\"}},[e(\"circle\",{attrs:{\"stroke-opacity\":\".25\",cx:\"18\",cy:\"18\",r:\"18\"}}),e(\"path\",{attrs:{d:\"M36 18c0-9.94-8.06-18-18-18\"}},[e(\"animateTransform\",{attrs:{attributeName:\"transform\",type:\"rotate\",from:\"0 18 18\",to:\"360 18 18\",dur:\"0.8s\",repeatCount:\"indefinite\"}})],1)])])])},[],!1,null,null,null).exports,s=a({name:\"dots\",props:{color:{type:String,default:\"#000\"},height:{type:Number,default:240},width:{type:Number,default:60}}},function(){var t=this.$createElement,e=this._self._c||t;return e(\"svg\",{attrs:{viewBox:\"0 0 120 30\",xmlns:\"http://www.w3.org/2000/svg\",fill:this.color,width:this.width,height:this.height}},[e(\"circle\",{attrs:{cx:\"15\",cy:\"15\",r:\"15\"}},[e(\"animate\",{attrs:{attributeName:\"r\",from:\"15\",to:\"15\",begin:\"0s\",dur:\"0.8s\",values:\"15;9;15\",calcMode:\"linear\",repeatCount:\"indefinite\"}}),e(\"animate\",{attrs:{attributeName:\"fill-opacity\",from:\"1\",to:\"1\",begin:\"0s\",dur:\"0.8s\",values:\"1;.5;1\",calcMode:\"linear\",repeatCount:\"indefinite\"}})]),e(\"circle\",{attrs:{cx:\"60\",cy:\"15\",r:\"9\",\"fill-opacity\":\"0.3\"}},[e(\"animate\",{attrs:{attributeName:\"r\",from:\"9\",to:\"9\",begin:\"0s\",dur:\"0.8s\",values:\"9;15;9\",calcMode:\"linear\",repeatCount:\"indefinite\"}}),e(\"animate\",{attrs:{attributeName:\"fill-opacity\",from:\"0.5\",to:\"0.5\",begin:\"0s\",dur:\"0.8s\",values:\".5;1;.5\",calcMode:\"linear\",repeatCount:\"indefinite\"}})]),e(\"circle\",{attrs:{cx:\"105\",cy:\"15\",r:\"15\"}},[e(\"animate\",{attrs:{attributeName:\"r\",from:\"15\",to:\"15\",begin:\"0s\",dur:\"0.8s\",values:\"15;9;15\",calcMode:\"linear\",repeatCount:\"indefinite\"}}),e(\"animate\",{attrs:{attributeName:\"fill-opacity\",from:\"1\",to:\"1\",begin:\"0s\",dur:\"0.8s\",values:\"1;.5;1\",calcMode:\"linear\",repeatCount:\"indefinite\"}})])])},[],!1,null,null,null).exports,u=a({name:\"bars\",props:{color:{type:String,default:\"#000\"},height:{type:Number,default:40},width:{type:Number,default:40}}},function(){var t=this.$createElement,e=this._self._c||t;return e(\"svg\",{attrs:{xmlns:\"http://www.w3.org/2000/svg\",viewBox:\"0 0 30 30\",height:this.height,width:this.width,fill:this.color}},[e(\"rect\",{attrs:{x:\"0\",y:\"13\",width:\"4\",height:\"5\"}},[e(\"animate\",{attrs:{attributeName:\"height\",attributeType:\"XML\",values:\"5;21;5\",begin:\"0s\",dur:\"0.6s\",repeatCount:\"indefinite\"}}),e(\"animate\",{attrs:{attributeName:\"y\",attributeType:\"XML\",values:\"13; 5; 13\",begin:\"0s\",dur:\"0.6s\",repeatCount:\"indefinite\"}})]),e(\"rect\",{attrs:{x:\"10\",y:\"13\",width:\"4\",height:\"5\"}},[e(\"animate\",{attrs:{attributeName:\"height\",attributeType:\"XML\",values:\"5;21;5\",begin:\"0.15s\",dur:\"0.6s\",repeatCount:\"indefinite\"}}),e(\"animate\",{attrs:{attributeName:\"y\",attributeType:\"XML\",values:\"13; 5; 13\",begin:\"0.15s\",dur:\"0.6s\",repeatCount:\"indefinite\"}})]),e(\"rect\",{attrs:{x:\"20\",y:\"13\",width:\"4\",height:\"5\"}},[e(\"animate\",{attrs:{attributeName:\"height\",attributeType:\"XML\",values:\"5;21;5\",begin:\"0.3s\",dur:\"0.6s\",repeatCount:\"indefinite\"}}),e(\"animate\",{attrs:{attributeName:\"y\",attributeType:\"XML\",values:\"13; 5; 13\",begin:\"0.3s\",dur:\"0.6s\",repeatCount:\"indefinite\"}})])])},[],!1,null,null,null).exports,l=a({name:\"vue-loading\",mixins:[r],props:{active:Boolean,programmatic:Boolean,container:[Object,Function,n],isFullPage:{type:Boolean,default:!0},transition:{type:String,default:\"fade\"},canCancel:Boolean,onCancel:{type:Function,default:function(){}},color:String,backgroundColor:String,opacity:Number,width:Number,height:Number,zIndex:Number,loader:{type:String,default:\"spinner\"}},data:function(){return{isActive:this.active}},components:{Spinner:o,Dots:s,Bars:u},beforeMount:function(){this.programmatic&&(this.container?(this.isFullPage=!1,this.container.appendChild(this.$el)):document.body.appendChild(this.$el))},mounted:function(){this.programmatic&&(this.isActive=!0),document.addEventListener(\"keyup\",this.keyPress)},methods:{cancel:function(){this.canCancel&&this.isActive&&(this.hide(),this.onCancel.apply(null,arguments))},hide:function(){var t=this;this.$emit(\"hide\"),this.$emit(\"update:active\",!1),this.programmatic&&(this.isActive=!1,setTimeout(function(){var e;t.$destroy(),void 0!==(e=t.$el).remove?e.remove():e.parentNode.removeChild(e)},150))},keyPress:function(t){27===t.keyCode&&this.cancel()}},watch:{active:function(t){this.isActive=t}},beforeDestroy:function(){document.removeEventListener(\"keyup\",this.keyPress)}},function(){var t=this,e=t.$createElement,i=t._self._c||e;return i(\"transition\",{attrs:{name:t.transition}},[i(\"div\",{directives:[{name:\"show\",rawName:\"v-show\",value:t.isActive,expression:\"isActive\"}],staticClass:\"vld-overlay is-active\",class:{\"is-full-page\":t.isFullPage},style:{zIndex:this.zIndex},attrs:{tabindex:\"0\",\"aria-busy\":t.isActive,\"aria-label\":\"Loading\"}},[i(\"div\",{staticClass:\"vld-background\",style:{background:this.backgroundColor,opacity:this.opacity},on:{click:function(e){return e.preventDefault(),t.cancel(e)}}}),i(\"div\",{staticClass:\"vld-icon\"},[t._t(\"before\"),t._t(\"default\",[i(t.loader,{tag:\"component\",attrs:{color:t.color,width:t.width,height:t.height}})]),t._t(\"after\")],2)])])},[],!1,null,null,null).exports,c=function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return{show:function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:e,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:i,a=Object.assign({},e,n,{programmatic:!0}),o=new(t.extend(l))({el:document.createElement(\"div\"),propsData:a}),s=Object.assign({},i,r);return Object.keys(s).map(function(t){o.$slots[t]=s[t]}),o}}};i(0);l.install=function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},n=c(t,e,i);t.$loading=n,t.prototype.$loading=n};e.default=l}]).default});\n\n/***/ }),\n\n/***/ \"aFK5\":\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = { \"default\": __webpack_require__(\"gAsd\"), __esModule: true };\n\n/***/ }),\n\n/***/ \"d5lM\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar interpretacija = __webpack_require__(\"3r/r\");\n\nmodule.exports = {\n  Interpretation: function Interpretation(test, result, jedinica, dref, gref, site, interp, extend, spec) {\n\n    var rezultat = result.trim();\n\n    switch (interp) {\n      case \"none\":\n        return [test, rezultat, interpretacija.None(rezultat, dref, gref)[0], jedinica, \"/\", interpretacija.None(rezultat, dref, gref)[1], extend];\n        break;\n      case \"A\":\n        return [test, rezultat, interpretacija.Standard(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.Standard(rezultat, dref, gref)[1], extend];\n        break;\n      case \"ogtt\":\n        if (dref == \"0\" && gref == \"0\") {\n          var reference = \"/\";\n        } else {\n          var reference = dref + \" - \" + gref;\n        }\n        return [test, rezultat, interpretacija.Standard(rezultat, dref, gref)[0], jedinica, reference, interpretacija.Standard(rezultat, dref, gref)[1], extend];\n        break;\n      case \"insul\":\n        if (dref == \"0\" && gref == \"0\") {\n          var reference = \"/\";\n        } else {\n          var reference = dref + \" - \" + gref;\n        }\n        return [test, rezultat, interpretacija.Standard(rezultat, dref, gref)[0], jedinica, reference, interpretacija.Standard(rezultat, dref, gref)[1], extend];\n        break;\n      case \"less\":\n        if (dref === gref) {\n          return [test, rezultat, interpretacija.Less(rezultat, dref, gref)[0], jedinica, \" < \" + gref, interpretacija.Less(rezultat, dref, gref)[1], extend];\n        } else {\n          return [test, rezultat, interpretacija.Less(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.Less(rezultat, dref, gref)[1], extend];\n        }\n        break;\n      case \"infekc\":\n        return [test, rezultat, interpretacija.Infekcija(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.Infekcija(rezultat, dref, gref)[1], extend];\n        break;\n      case \"grt\":\n        return [test, rezultat, interpretacija.Greater(rezultat, dref, gref)[0], jedinica, \" > \" + gref, interpretacija.Greater(rezultat, dref, gref)[1], extend];\n        break;\n      case \"grte\":\n        return [test, rezultat, interpretacija.GreaterEqual(rezultat, dref, gref)[0], jedinica, \" ≥ \" + gref, interpretacija.GreaterEqual(rezultat, dref, gref)[1], extend];\n        break;\n      case \"neg\":\n        return [test, rezultat, interpretacija.Negativan(rezultat, dref, gref)[0], jedinica, \"negativan\", interpretacija.Negativan(rezultat, dref, gref)[1], extend];\n        break;\n      case \"reakt\":\n        return [test, rezultat, interpretacija.Reaktivan(rezultat, dref, gref)[0], jedinica, \"negativan\", interpretacija.Reaktivan(rezultat, dref, gref)[1], extend];\n        break;\n      case \"norm\":\n        return [test, rezultat, interpretacija.Normalan(rezultat, dref, gref)[0], jedinica, \"normalna\", interpretacija.Normalan(rezultat, dref, gref)[1], extend];\n        break;\n      case \"norma\":\n        return [test, rezultat, interpretacija.Normalan(rezultat, dref, gref)[0], jedinica, \"normalan\", interpretacija.Normalan(rezultat, dref, gref)[1], extend];\n        break;\n      case \"ured\":\n        return [test, rezultat, interpretacija.Uredan(rezultat, dref, gref)[0], jedinica, \"uredna\", interpretacija.Uredan(rezultat, dref, gref)[1], extend];\n        break;\n      case \"plus\":\n        return [test, rezultat, interpretacija.Plus(rezultat, dref, gref)[0], jedinica, \"+ + +\", interpretacija.Plus(rezultat, dref, gref)[1], extend];\n        break;\n      case \"morf\":\n        return [test, rezultat, interpretacija.Morf(rezultat, dref, gref)[0], jedinica, gref, interpretacija.Morf(rezultat, dref, gref)[1], extend];\n        break;\n      case \"titar\":\n        return [test, rezultat, interpretacija.Titar(rezultat, dref, gref)[0], jedinica, \"< \" + dref + \":\" + gref, interpretacija.Titar(rezultat, dref, gref)[1], extend];\n        break;\n      case \"tsh\":\n        return [test, rezultat, interpretacija.TSH(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.TSH(rezultat, dref, gref)[1], extend];\n        break;\n      case \"trg\":\n        return [test, rezultat, interpretacija.TRG(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.TRG(rezultat, dref, gref)[1], extend];\n        break;\n      case \"hol\":\n        return [test, rezultat, interpretacija.HOL(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.HOL(rezultat, dref, gref)[1], extend];\n        break;\n      case \"hdl\":\n        return [test, rezultat, interpretacija.HDL(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.HDL(rezultat, dref, gref)[1], extend];\n        break;\n      case \"ldl\":\n        return [test, rezultat, interpretacija.LDL(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.LDL(rezultat, dref, gref)[1], extend];\n        break;\n      case \"fpsa\":\n        return [test, rezultat, interpretacija.fPSA(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.fPSA(rezultat, dref, gref)[1], extend];\n        break;\n      case \"sediment\":\n        return [test, rezultat, interpretacija.Sedimentacija(rezultat, dref, gref)[0], jedinica, \"< \" + gref, interpretacija.Sedimentacija(rezultat, dref, gref)[1], extend];\n        break;\n      case \"bistar\":\n        return [test, rezultat, interpretacija.Bistar(rezultat, dref, gref)[0], jedinica, \"bistar\", interpretacija.Bistar(rezultat, dref, gref)[1], extend];\n        break;\n      case \"boja\":\n        return [test, rezultat, interpretacija.Boja(rezultat, dref, gref)[0], jedinica, \"svjetlo žut\", interpretacija.Boja(rezultat, dref, gref)[1], extend];\n        break;\n      case \"nesto\":\n        return [test, rezultat, interpretacija.Nesto(rezultat, dref, gref)[0], jedinica, \"nešto\", interpretacija.Nesto(rezultat, dref, gref)[1], extend];\n        break;\n      case \"exists\":\n        return [test, rezultat, interpretacija.Exists(rezultat, dref, gref)[0], jedinica, \" \", interpretacija.Exists(rezultat, dref, gref)[1], extend];\n        break;\n      case \"blst\":\n        return [test, rezultat, interpretacija.Blasti(rezultat, dref, gref)[0], jedinica, gref, interpretacija.Blasti(rezultat, dref, gref)[1], extend];\n        break;\n      case \"leu\":\n        return [test, rezultat, interpretacija.LeuErc(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.LeuErc(rezultat, dref, gref)[1], extend];\n        break;\n      case \"spec\":\n        return [test, rezultat, interpretacija.Specific(rezultat, dref, gref)[0], jedinica, spec, interpretacija.Specific(rezultat, dref, gref)[1], extend];\n        break;\n      default:\n        return [test, rezultat, interpretacija.None(rezultat, dref, gref)[0], jedinica, \"/\", interpretacija.None(rezultat, dref, gref)[1], extend];\n        break;\n    }\n  }\n};\n\n/***/ }),\n\n/***/ \"gAsd\":\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(\"G5/o\");\nvar $Object = __webpack_require__(\"FeBl\").Object;\nmodule.exports = function getOwnPropertyNames(it) {\n  return $Object.getOwnPropertyNames(it);\n};\n\n\n/***/ }),\n\n/***/ \"hLWQ\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n    hex2rgb: function hex2rgb(hex, opacity) {\n        hex = (hex + \"\").trim();\n\n        var rgb = null;\n        var match = hex.match(/^#?(([0-9a-zA-Z]{3}){1,3})$/);\n\n        if (!match) {\n            return null;\n        }\n\n        rgb = {};\n\n        hex = match[1];\n\n        if (hex.length === 6) {\n            rgb.r = parseInt(hex.substring(0, 2), 16);\n            rgb.g = parseInt(hex.substring(2, 4), 16);\n            rgb.b = parseInt(hex.substring(4, 6), 16);\n        } else if (hex.length === 3) {\n            rgb.r = parseInt(hex.substring(0, 1) + hex.substring(0, 1), 16);\n            rgb.g = parseInt(hex.substring(1, 2) + hex.substring(1, 2), 16);\n            rgb.b = parseInt(hex.substring(2, 3) + hex.substring(2, 3), 16);\n        }\n\n        rgb.css = \"rgb\" + (opacity ? \"a\" : \"\") + \"(\";\n        rgb.css += rgb.r + \",\" + rgb.g + \",\" + rgb.b;\n        rgb.css += (opacity ? \",\" + opacity : \"\") + \")\";\n\n        return rgb;\n    }\n});\n\n/***/ }),\n\n/***/ \"iF2Y\":\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(\"FZ+f\")(true);\n// imports\n\n\n// module\nexports.push([module.i, \".circle[data-v-1099f53e]{width:.4rem;height:.4rem;border-radius:50%;display:inline-block}\", \"\", {\"version\":3,\"sources\":[\"C:/Projects/extralab/client/src/components/obrada/BadgeColumn.vue\"],\"names\":[],\"mappings\":\"AACA,yBACE,YAAc,AACd,aAAe,AACf,kBAAmB,AACnB,oBAAsB,CACvB\",\"file\":\"BadgeColumn.vue\",\"sourcesContent\":[\"\\n.circle[data-v-1099f53e] {\\n  width: 0.4rem;\\n  height: 0.4rem;\\n  border-radius: 50%;\\n  display: inline-block;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n\n/***/ \"n0T6\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)\nvar $keys = __webpack_require__(\"Ibhu\");\nvar hiddenKeys = __webpack_require__(\"xnc9\").concat('length', 'prototype');\n\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return $keys(O, hiddenKeys);\n};\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/6.0360735645f205c9b026.js","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-3f02d9e7\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Obrada.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Obrada.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-3f02d9e7\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":\\\"src\\\",\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./Obrada.vue\"\n/* template functional */\n  var __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-3f02d9e7\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/obrada/Obrada.vue\n// module id = 0fl9\n// module chunks = 6","module.exports = {\r\n  None: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\")    \r\n    // (Interpretacija: \"none\")\r\n    return [\" \", \"No Class\"];\r\n  },\r\n\r\n  Standard: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"A\", \"ogtt\", \"insul\")\r\n    if (isNaN(rezultat) || rezultat === \"\" || (dref == \"0\" && gref == \"0\")) {\r\n      return [\" \", \"No Class\"];\r\n    } else if (Number(rezultat) < Number(Math.abs(dref))) {\r\n      return [\"L\", \"Red\"];\r\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\r\n      return [\"H\", \"Red\"];\r\n    } else if (Number(rezultat) === Number(Math.abs(dref)) || Number(rezultat) === Number(Math.abs(gref))) {\r\n      return [\" \", \"Yellow\"];\r\n    } else {\r\n      return [\" \", \"Green\"];\r\n    }\r\n  },\r\n\r\n  Less: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"less\")\r\n    if (isNaN(rezultat) || rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\r\n      return [\"H\", \"Red\"];\r\n    } else if (Number(rezultat) <= Number(Math.abs(gref)) && Number(rezultat) >= Number(Math.abs(dref))) {\r\n      return [\" \", \"Yellow\"];\r\n    } else {\r\n      return [\" \", \"Green\"];\r\n    }\r\n  },\r\n\r\n  Greater: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\")   \r\n    // (Interpretacija: \"grt\")\r\n    if (isNaN(rezultat) || rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (Number(rezultat) < Number(Math.abs(gref))) {\r\n      return [\"L\", \"Red\"];\r\n    } else if (Number(rezultat) == Number(Math.abs(gref))) {\r\n      return [\" \", \"Yellow\"];\r\n    } else {\r\n      return [\" \", \"Green\"];\r\n    }\r\n  },\r\n\r\n  GreaterEqual: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\")   \r\n    // (Interpretacija: \"grte\")\r\n    if (isNaN(rezultat) || rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (Number(rezultat) < Number(Math.abs(gref))) {\r\n      return [\"L\", \"Red\"];\r\n    } else if (Number(rezultat) == Number(Math.abs(gref))) {\r\n      return [\" \", \"Green\"];\r\n    } else {\r\n      return [\" \", \"Green\"];\r\n    }\r\n  },\r\n\r\n  Negativan: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"neg\")\r\n    if (rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (rezultat.includes(\"pozitivan\")) {\r\n      return [\"H\", \"Red\"];\r\n    } else if (rezultat.includes(\"negativan\")) {\r\n      return [\" \", \"Green\"];\r\n    } else if (rezultat.includes(\"graničan\")) {\r\n      return [\" \", \"Yellow\"];\r\n    } else {\r\n      return [\" \", \"No Class\"];\r\n    }\r\n  },\r\n\r\n  Reaktivan: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"reakt\")\r\n    if (rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (rezultat.includes(\"reaktivan\")) {\r\n      return [\"H\", \"Red\"];\r\n    } else if (rezultat.includes(\"negativan\")) {\r\n      return [\" \", \"Green\"];\r\n    } else if (rezultat.includes(\"graničan\")) {\r\n      return [\" \", \"Yellow\"];\r\n    } else {\r\n      return [\" \", \"No Class\"];\r\n    }\r\n  },\r\n\r\n  Normalan: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"norm\")\r\n    if (rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (rezultat.toLowerCase().includes(\"norm\") && !rezultat.toLowerCase().includes(\"nije\")) {\r\n      return [\" \", \"Green\"];\r\n    } else {\r\n      return [\"H\", \"Red\"];\r\n    }\r\n  },\r\n\r\n  Uredan: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"ured\")\r\n    if (rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (rezultat.toLowerCase().includes(\"ured\") && !rezultat.toLowerCase().includes(\"nije\")) {\r\n      return [\" \", \"Green\"];\r\n    } else {\r\n      return [\"H\", \"Red\"];\r\n    }\r\n  },\r\n\r\n  Plus: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"ured\")\r\n    if (rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (rezultat.trim() === \"+++\" || rezultat.trim() === \"+ + +\") {\r\n      return [\" \", \"Green\"];\r\n    } else {\r\n      return [\"H\", \"Red\"];\r\n    }\r\n  },\r\n\r\n  Infekcija: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"infekc\")\r\n    if (isNaN(rezultat) || rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\r\n      return [\"pasivna infekcija\", \"Green\"]; // pasivna infekcija\r\n    } else if (Number(rezultat) <= Number(Math.abs(gref)) && Number(rezultat) >= Number(Math.abs(dref))) {\r\n      return [\"siva zona\", \"Yellow\"]; // siva zona\r\n    } else {\r\n      return [\"svježa infekcija\", \"Red\"]; // svježa infekcija\r\n    }\r\n  },\r\n\r\n  TSH: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"tsh\")\r\n    if (isNaN(rezultat) || rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\r\n      return [\"hipotireoza\", \"Red\"];\r\n    } else if (Number(rezultat) <= Number(Math.abs(gref)) && Number(rezultat) >= Number(Math.abs(dref))) {\r\n      return [\"eutireoza\", \"Green\"];\r\n    } else {\r\n      return [\"hipertireoza\", \"Red\"];\r\n    }\r\n  },\r\n\r\n  TRG: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"trg\")\r\n    if (isNaN(rezultat) || rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\r\n      return [\"visoko\", \"Red\"]; // visoko\r\n    } else if (Number(rezultat) <= Number(Math.abs(gref)) && Number(rezultat) >= Number(Math.abs(dref))) {\r\n      return [\"granično\", \"Yellow\"]; // granično\r\n    } else {\r\n      return [\"idealno\", \"Green\"]; // idealno\r\n    }\r\n  },\r\n\r\n  HOL: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"hol\")\r\n    if (isNaN(rezultat) || rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\r\n      return [\"visoko\", \"Red\"]; // visoko\r\n    } else if (Number(rezultat) <= Number(Math.abs(gref)) && Number(rezultat) >= Number(Math.abs(dref))) {\r\n      return [\"granično\", \"Yellow\"]; // granično\r\n    } else {\r\n      return [\"idealno\", \"Green\"]; // idealno\r\n    }\r\n  },\r\n\r\n  HDL: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"hdl\")    \r\n    if (isNaN(rezultat) || rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\r\n      return [\"nema rizika\", \"Green\"]; // nema rizika\r\n    } else if (Number(rezultat) <= Number(Math.abs(gref)) && Number(rezultat) >= Number(Math.abs(dref))) {\r\n      return [\"rizik\", \"Yellow\"]; // rizik\r\n    } else {\r\n      return [\"visok rizik\", \"Red\"]; // visok rizik\r\n    }\r\n  },\r\n\r\n  LDL: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"ldl\")\r\n    if (isNaN(rezultat) || rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\r\n      return [\"visok rizik\", \"Red\"]; // visok rizik\r\n    } else if (Number(rezultat) <= Number(Math.abs(gref)) && Number(rezultat) >= Number(Math.abs(dref))) {\r\n      return [\"granično\", \"Yellow\"]; // granično\r\n    } else {\r\n      return [\"optimalno\", \"Green\"]; // optimalno\r\n    }\r\n  },\r\n\r\n  fPSA: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\")  \r\n    // (Interpretacija: \"fpsa\")\r\n    if (isNaN(rezultat) || rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\r\n      return [\"benigni proces\", \"Green\"]; // benigni proces\r\n    } else if (Number(rezultat) <= Number(Math.abs(gref)) && Number(rezultat) >= Number(Math.abs(dref))) {\r\n      return [\"siva zona\", \"Yellow\"]; // siva zona\r\n    } else {\r\n      return [\"H\", \"Red\"];\r\n    }\r\n  },\r\n\r\n  Sedimentacija: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"sediment\")\r\n    if (rezultat.includes(\"/\")) {\r\n      var rez1 = rezultat.split(\"/\")[0].trim();\r\n      var rez2 = rezultat.split(\"/\")[1].trim();\r\n    }else{\r\n      var rez1 = rezultat.trim();\r\n      var rez2 = rezultat.trim();\r\n    }\r\n\r\n    if (isNaN(rez1) || rez1 === \"\" || isNaN(rez2) || rez2 === \"\" ) {\r\n      return [\" \", \"No Class\"];\r\n    } else if (Number(rez1) > Number(Math.abs(gref))) { // } else if (Number(rez1) > Number(Math.abs(gref)) || Number(rez2) > Number(Math.abs(gref))) {\r\n      return [\"H\", \"Red\"];\r\n    } else if (Number(rez1) === Number(Math.abs(gref))) { // } else if (Number(rez1) === Number(Math.abs(gref)) || Number(rez2) === Number(Math.abs(gref))) {\r\n      return [\" \", \"Yellow\"];\r\n    } else {\r\n      return [\" \", \"Green\"];\r\n    }\r\n  },\r\n\r\n  Bistar: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"bistar\")\r\n    if (rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (rezultat === \"bistar\") {\r\n      return [\" \", \"Green\"];\r\n    } else {\r\n      return [\"H\", \"Red\"];\r\n    }\r\n  },\r\n\r\n  Boja: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"boja\")\r\n    if (rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (rezultat === \"svjetlo žut\") {\r\n      return [\" \", \"Green\"];\r\n    } else {\r\n      return [\"H\", \"Red\"];\r\n    }\r\n  },\r\n\r\n  Nesto: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"nesto\")\r\n    if (rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (rezultat.includes(\"masa\") || rezultat.includes(\"dosta\")) {\r\n      return [\"H\", \"Red\"];\r\n    } else {\r\n      return [\" \", \"Green\"];\r\n    }\r\n  },\r\n\r\n  Exists: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"exists\")\r\n    if (rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else {      \r\n      return [\"H\", \"Red\"];\r\n    }\r\n  },\r\n\r\n  Blasti: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // DKS: Blasti (Interpretacija: \"blst\")\r\n    if (isNaN(rezultat) || rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (Number(rezultat) < Number(Math.abs(dref))) {\r\n      return [\" \", \"No Class\"];\r\n    } else if (Number(rezultat) > Number(Math.abs(gref))) {\r\n      return [\"H\", \"Red\"];\r\n    } else if (Number(rezultat) === Number(Math.abs(dref)) || Number(rezultat) === Number(Math.abs(gref))) {\r\n      return [\" \", \"No Class\"];\r\n    } else {\r\n      return [\" \", \"Green\"];\r\n    }\r\n  },\r\n\r\n  Morf: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // Spermiogram: Uredne morfološke forme (Interpretacija: \"morf\")\r\n    if (isNaN(rezultat) || rezultat === \"\") {\r\n      return [\" \", \"No Class\"];\r\n    } else if (Number(rezultat) === Number(Math.abs(dref)) || Number(rezultat) === Number(Math.abs(gref))) {\r\n      return [\" \", \"Green\"];\r\n    } else {\r\n      return [\"H\", \"Red\"];\r\n    }\r\n  },\r\n\r\n  LeuErc: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // Sediment: Leukociti, Eritrociti (Interpretacija: \"leu\")\r\n    if (rezultat.includes(\"-\")) {\r\n      var rez = rezultat.split(\"-\")[1].trim();      \r\n    }else{\r\n      var rez = rezultat.trim();      \r\n    }\r\n    \r\n    if (rez === \"\") {     \r\n      return [\" \", \"No Class\"];\r\n    } else if (isNaN(rez)) {      \r\n      return [\"H\", \"Red\"];\r\n    } else if (Number(rez) > Number(gref)) {      \r\n      return [\"H\", \"Red\"];\r\n    } else if (Number(rez) === Number(gref)) {      \r\n      return [\" \", \"Yellow\"];\r\n    } else {      \r\n      return [\" \", \"Green\"];\r\n    }\r\n  },\r\n\r\n  Titar: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"titar\")\r\n    if (rezultat.includes(\":\")) {\r\n      var rez1 = rezultat.split(\":\")[0].trim();\r\n      var rez2 = rezultat.split(\":\")[1].trim();\r\n    }else{\r\n      var rez1 = rezultat.trim();\r\n      var rez2 = \"\";\r\n    }\r\n\r\n    if (isNaN(rez1) || rez1 === \"\" || rez1 != \"1\" || isNaN(rez2) || rez2 === \"\" ) {\r\n      return [\" \", \"No Class\"];\r\n    } else if (Number(rez2) > Number(Math.abs(gref))) {\r\n      return [\"H\", \"Red\"];\r\n    } else if (Number(rez2) === Number(Math.abs(gref))) {\r\n      return [\" \", \"Yellow\"];\r\n    } else {\r\n      return [\" \", \"Green\"];\r\n    }\r\n  },\r\n\r\n  Specific: function(result, dref, gref) {\r\n    var rezultat = result.replace(/,/g, \".\").replace(/</g, \"\").replace(/>/g, \"\") \r\n    // (Interpretacija: \"spec\")\r\n    return [\" \", \"No Class\"];\r\n  },\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/obrada/functions/interpretacija.js","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-3f02d9e7\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/sass-loader/lib/loader.js?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Obrada.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"4b41f25e\", content, true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/extract-text-webpack-plugin/dist/loader.js?{\"omit\":1,\"remove\":true}!./node_modules/vue-style-loader!./node_modules/css-loader?{\"minimize\":true,\"sourceMap\":true}!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-3f02d9e7\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/sass-loader/lib/loader.js?{\"sourceMap\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/components/obrada/Obrada.vue\n// module id = 4wj/\n// module chunks = 6","let data = {\r\n  // Opšti pregled urina\r\n  o01: [\"\", \"bistar\", \"blago mutan\", \"vrlo mutan\", \"krvav\"],\r\n  o02: [\"\", \"svjetlo žut\", \"žut\", \"tamno žut\", \"smeđ\"],\r\n  o05: [\r\n    \"\",\r\n    \"negativan\",\r\n    \"lagano opalascentan\",\r\n    \"opalascentan\",\r\n    \"pozitivan 1+\",\r\n    \"pozitivan 2+\",\r\n    \"pozitivan 3+\",\r\n    \"pozitivan 4+\"\r\n  ],\r\n  o06: [\"\", \"negativan\", \"pozitivan\"],\r\n  o07: [\"\", \"negativan\", \"pozitivan\"],\r\n  o08: [\r\n    \"\",\r\n    \"negativan\",\r\n    \"trag\",\r\n    \"pozitivan 1+\",\r\n    \"pozitivan 2+\",\r\n    \"pozitivan 3+\",\r\n    \"pozitivan 4+\"\r\n  ],\r\n  o09: [\"\", \"negativan\", \"pozitivan\"],\r\n  o10: [\"\", \"negativan\", \"pozitivan\"],\r\n  o11: [\"\", \"negativan\", \"pozitivan\"],\r\n  o12: [\"\", \"negativan\", \"pozitivan\"],\r\n\r\n  // Sediment urina\r\n  se03: [\r\n    \"\",\r\n    \"nešto pločastog ep.\",\r\n    \"dosta pločastog ep.\",\r\n    \"masa pločastog ep.\",\r\n    \"nešto vretenastog ep.\",\r\n    \"dosta vretenastog ep.\",\r\n    \"masa vretenastog ep.\",\r\n    \"nešto okruglog ep.\",\r\n    \"dosta okruglog ep.\",\r\n    \"masa okruglog ep.\"\r\n  ],\r\n  se04: [\r\n    \"\",\r\n    \"nešto mok. kis.\",\r\n    \"dosta mok. kis.\",\r\n    \"masa mok. kis.\",\r\n    \"nešto Ca-oxal\",\r\n    \"dosta Ca-oxal\",\r\n    \"masa Ca-oxal\",\r\n    \"nešto tripl fosf.\",\r\n    \"dosta tripl fosf.\",\r\n    \"masa tripl fosf.\",\r\n    \"nešto Ca-carb\",\r\n    \"dosta Ca-carb\",\r\n    \"masa Ca-carb\"\r\n  ],\r\n  se05: [\"\", \"nešto\", \"dosta\", \"masa\"],\r\n  se06: [\"\", \"nešto\", \"dosta\", \"masa\"],\r\n  se07: [\"\", \"nešto\", \"dosta\", \"masa\"],\r\n  se08: [\r\n    \"\",\r\n    \"nešto am. fosfata\",\r\n    \"dosta am. fosfata\",\r\n    \"masa am. fosfata\",\r\n    \"nešto am. urata\",\r\n    \"dosta am. urata\",\r\n    \"masa am. urata\"\r\n  ],\r\n  se09: [\"\", \"hijalini\", \"granulirani\", \"eritrocitni\", \"leukocitni\"],\r\n  se10: [\"\", \"nešto\", \"dosta\", \"masa\"]\r\n};\r\n\r\nlet rez = {\r\n  neg: [\"\", \"negativan\", \"graničan\", \"pozitivan\"],\r\n  reakt: [\"\", \"negativan\", \"graničan\", \"reaktivan\"]\r\n};\r\n\r\nexport default {\r\n  data,\r\n  rez\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/obrada/data-izbornik/izbornik.js","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \".collapse-page__content[data-v-3f02d9e7]{padding:2rem}.collapse-page__content__title[data-v-3f02d9e7]{font-size:1.375rem;font-weight:700}.icon-bar a[data-v-3f02d9e7]{color:#fff;text-decoration:none}.icon-bar a[data-v-3f02d9e7]:hover{color:#4ae387}i[data-v-3f02d9e7]:hover{color:#4ae387!important}.circle[data-v-3f02d9e7]{width:1rem;opacity:.5;height:1rem;border-radius:50%;display:inline-block}\", \"\", {\"version\":3,\"sources\":[\"C:/Projects/extralab/client/src/components/obrada/Obrada.vue\"],\"names\":[],\"mappings\":\"AACA,yCACE,YAAc,CACf,AACD,gDACI,mBAAoB,AACpB,eAAkB,CACrB,AACD,6BACE,WAAY,AACZ,oBAAsB,CACvB,AACD,mCACE,aAAe,CAChB,AACD,yBACE,uBAA0B,CAC3B,AACD,yBACE,WAAY,AACZ,WAAa,AACb,YAAa,AACb,kBAAmB,AACnB,oBAAsB,CACvB\",\"file\":\"Obrada.vue\",\"sourcesContent\":[\"\\n.collapse-page__content[data-v-3f02d9e7] {\\n  padding: 2rem;\\n}\\n.collapse-page__content__title[data-v-3f02d9e7] {\\n    font-size: 1.375rem;\\n    font-weight: bold;\\n}\\n.icon-bar a[data-v-3f02d9e7] {\\n  color: #fff;\\n  text-decoration: none;\\n}\\n.icon-bar a[data-v-3f02d9e7]:hover {\\n  color: #4ae387;\\n}\\ni[data-v-3f02d9e7]:hover {\\n  color: #4ae387 !important;\\n}\\n.circle[data-v-3f02d9e7] {\\n  width: 1rem;\\n  opacity: 0.5;\\n  height: 1rem;\\n  border-radius: 50%;\\n  display: inline-block;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader?{\"minimize\":true,\"sourceMap\":true}!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-3f02d9e7\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/sass-loader/lib/loader.js?{\"sourceMap\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/components/obrada/Obrada.vue\n// module id = EiqO\n// module chunks = 6","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-1099f53e\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/sass-loader/lib/loader.js?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./BadgeColumn.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"3e059dfc\", content, true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/extract-text-webpack-plugin/dist/loader.js?{\"omit\":1,\"remove\":true}!./node_modules/vue-style-loader!./node_modules/css-loader?{\"minimize\":true,\"sourceMap\":true}!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-1099f53e\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/sass-loader/lib/loader.js?{\"sourceMap\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/components/obrada/BadgeColumn.vue\n// module id = FrRU\n// module chunks = 6 15 23 42","// 19.1.2.7 Object.getOwnPropertyNames(O)\nrequire('./_object-sap')('getOwnPropertyNames', function () {\n  return require('./_object-gopn-ext').f;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/es6.object.get-own-property-names.js\n// module id = G5/o\n// module chunks = 6","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"collapse-page\"},[(_vm.show)?_c('div',{staticClass:\"flex md12\"},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.main && _vm.pdf),expression:\"!main && pdf\"}]},[_c('div',{staticClass:\"btn-container\"},[_c('button',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.verificiran),expression:\"verificiran\"}],staticClass:\"btn btn-secondary btn-sm\",on:{\"click\":function($event){$event.preventDefault();_vm.Nazad()}}},[_c('span',{staticClass:\"fa fa-step-backward\"}),_vm._v(\"\\n          \"+_vm._s(' NAZAD')+\"\\n        \")]),_vm._v(\" \"),_c('button',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.verificiran),expression:\"!verificiran\"}],staticClass:\"btn btn-secondary-danger btn-sm\",on:{\"click\":function($event){$event.preventDefault();_vm.Nazad()}}},[_c('span',{staticClass:\"fa fa-step-backward\"}),_vm._v(\"\\n          \"+_vm._s(' NAZAD')+\"\\n        \")]),_vm._v(\" \"),_c('button',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.email_button && _vm.verificiran),expression:\"email_button && verificiran\"}],staticClass:\"btn btn-secondary btn-sm pull-right\",attrs:{\"disabled\":!_vm.Email(_vm.email)},on:{\"click\":function($event){$event.preventDefault();_vm.MailDialog()}}},[_c('span',{staticClass:\"glyphicon glyphicon-send\"}),_vm._v(\"\\n          \"+_vm._s(' Pošalji')+\"\\n        \")]),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.email_button && _vm.verificiran),expression:\"email_button && verificiran\"}],staticClass:\"form-group with-icon-left pull-right\"},[_c('div',{staticClass:\"input-group\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.email),expression:\"email\"}],attrs:{\"size\":\"40\",\"id\":\"input-icon-left\",\"name\":\"input-icon-left\",\"title\":\" \",\"required\":\"\"},domProps:{\"value\":(_vm.email)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.email=$event.target.value}}}),_vm._v(\" \"),_c('i',{staticClass:\"fa fa-envelope-o icon-left input-icon\"}),_vm._v(\" \"),_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"input-icon-left\"}},[_vm._v(_vm._s('Email adresa'))]),_vm._v(\" \"),_c('i',{staticClass:\"bar\"})])])]),_vm._v(\" \"),_c('hr'),_vm._v(\" \"),_c('div',{attrs:{\"id\":\"pdf-container\"}})]),_vm._v(\" \"),_c('vuestic-widget',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.main),expression:\"main\"}],attrs:{\"headerText\":_vm.header,\"pagination\":_vm.pagination,\"main\":_vm.main,\"data_pid\":Number(_vm.data_pid),\"data_length\":Number(_vm.data_length),\"rezultati_length\":_vm.Results.length,\"spol\":_vm.data_spol,\"data_min\":Number(_vm.data_min),\"datum\":_vm.query_date,\"today\":_vm.today_date,\"forward_disabled\":_vm.forward_disabled,\"backward_disabled\":_vm.backward_disabled}},[_c('vuestic-accordion-obrada',_vm._l((_vm.uzorci),function(uzorak){return _c('vuestic-collapse-obrada',{directives:[{name:\"show\",rawName:\"v-show\",value:(!uzorak.removed),expression:\"!uzorak.removed\"}],key:uzorak.sid,attrs:{\"id\":uzorak.sid,\"sample\":uzorak}},[_c('span',{attrs:{\"slot\":\"header\",\"id\":uzorak.sid},slot:\"header\"},[_vm._v(_vm._s(uzorak.sid))]),_vm._v(\" \"),_c('div',{attrs:{\"slot\":\"body\"},slot:\"body\"},[_c('div',{staticStyle:{\"line-height\":\"10px\"}},[_vm._v(\" \")]),_vm._v(\" \"),(uzorak.tip.includes('Mikrobiologija'))?_c('div',{staticClass:\"va-row\"},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.show_table),expression:\"show_table\"}],staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped first-td-padding\"},[_c('thead',[_c('tr',{attrs:{\"align\":\"middle\"}},[(uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN')?_c('td'):_vm._e(),_vm._v(\" \"),_c('td',[_vm._v(_vm._s('ANALIZA'))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s('REZULTAT'))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s('JEDINICA'))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s('REFERENCE'))]),_vm._v(\" \"),(uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN')?_c('td'):_vm._e(),_vm._v(\" \"),(uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN')?_c('td',[_vm._v(_vm._s('PONOVI'))]):_vm._e(),_vm._v(\" \"),_c('td')])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.rezultati),function(test,index){return _c('tr',{directives:[{name:\"show\",rawName:\"v-show\",value:(index < 1),expression:\"index < 1\"}],key:test.labassay_id,class:{\n                        'table-danger': (test.rezultat_m.length && test.rezultat_m[0].pozitivan), \n                        'table-success': (test.rezultat_m.length && test.rezultat_m[0].negativan),\n                        'table-warning': false\n                      },attrs:{\"align\":\"middle\"}},[(uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN')?_c('td',[(uzorak.status === 'ZAPRIMLJEN')?_c('span',{staticClass:\"fa fa-bug\",staticStyle:{\"color\":\"#e34a4a\"},on:{\"click\":function($event){$event.preventDefault();_vm.MicroResultSelect($event)}}}):_vm._e(),_vm._v(\" \"),(uzorak.status != 'ZAPRIMLJEN')?_c('span',{staticClass:\"fa fa-trash\",staticStyle:{\"color\":\"#e34a4a\"},on:{\"click\":function($event){$event.preventDefault();_vm.ResetSample($event)}}}):_vm._e()]):_vm._e(),_vm._v(\" \"),_c('td',{attrs:{\"title\":test.analit}},[_c('span',[_vm._v(_vm._s(test.ime))])]),_vm._v(\" \"),(test.realizovan)?_c('td',[_c('button',{staticClass:\"btn btn-primary btn-micro\",attrs:{\"id\":test.labassay_id},on:{\"click\":function($event){$event.preventDefault();_vm.OpenMicro($event, test)}}},[_c('span',{staticClass:\"glyphicon glyphicon-search\",attrs:{\"id\":test.labassay_id},on:{\"click\":function($event){$event.preventDefault();_vm.OpenMicro($event, test)}}}),_vm._v(\"\\n                          \"+_vm._s('VIŠE')+\"\\n                        \")])]):_vm._e(),_vm._v(\" \"),(!test.realizovan)?_c('td',[_c('button',{staticClass:\"btn btn-pale btn-micro\",attrs:{\"id\":test.labassay_id}},[_c('span',{staticClass:\"glyphicon glyphicon-ban-circle\",attrs:{\"id\":test.labassay_id}}),_vm._v(\"\\n                          \"+_vm._s('VIŠE')+\"\\n                        \")])]):_vm._e(),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(test.unit))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s('/'))]),_vm._v(\" \"),(uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN')?_c('td',[_c('i',{staticClass:\"glyphicon glyphicon-stats\",staticStyle:{\"font-size\":\"15px\",\"color\":\"#f7cc36\",\"opacity\":\"0\"},attrs:{\"id\":\"reference\",\"title\":\" \"}})]):_vm._e(),_vm._v(\" \"),(uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN')?_c('td',[_c('button',{staticClass:\"btn btn-pale btn-micro\"},[_c('span',{staticClass:\"glyphicon glyphicon-ban-circle\"})])]):_vm._e(),_vm._v(\" \"),_c('td',[_c('i',{class:{'fa fa-exclamation-triangle icon-right input-icon error-icon' : false},on:{\"click\":function($event){$event.preventDefault();_vm.Exclamation(test)}}}),_vm._v(\" \"),_c('i',{class:{'fa fa-check success-icon icon-right input-icon' : false}})])])}))])])]):_vm._e(),_vm._v(\" \"),(!uzorak.tip.includes('Mikrobiologija'))?_c('div',{staticClass:\"va-row\"},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.show_table),expression:\"show_table\"}],staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped first-td-padding\"},[_c('thead',[_c('tr',{attrs:{\"align\":\"middle\"}},[(uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN')?_c('td'):_vm._e(),_vm._v(\" \"),_c('td',[_vm._v(_vm._s('ANALIZA'))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s('REZULTAT'))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s('JEDINICA'))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s('REFERENCE'))]),_vm._v(\" \"),(uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN')?_c('td'):_vm._e(),_vm._v(\" \"),(uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN' && _vm.calculated)?_c('td',[_vm._v(_vm._s('AKCIJA'))]):_vm._e(),_vm._v(\" \"),(uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN')?_c('td',[_vm._v(_vm._s('PONOVI'))]):_vm._e(),_vm._v(\" \"),_c('td')])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.rezultati),function(test){return _c('tr',{key:test.labassay_id,class:{\n                        'table-danger': _vm.Interpretacija(test.analit, test.rezultat, test.unit, test.dRef, test.gRef, _vm.$store.state.site, test.interp, test.extend, _vm.spec)[5] === 'Red' && !test.multidata, \n                        'table-success': _vm.Interpretacija(test.analit, test.rezultat, test.unit, test.dRef, test.gRef, _vm.$store.state.site, test.interp, test.extend, _vm.spec)[5] === 'Green' && !test.multidata,\n                        'table-warning': _vm.Interpretacija(test.analit, test.rezultat, test.unit, test.dRef, test.gRef, _vm.$store.state.site, test.interp, test.extend, _vm.spec)[5] === 'Yellow' && !test.multidata\n                      },attrs:{\"align\":\"middle\"}},[(uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN')?_c('td',[(!test.multidata)?_c('i',{staticClass:\"glyphicon glyphicon-object-align-bottom\",staticStyle:{\"color\":\"#4ae387\"},on:{\"click\":function($event){$event.preventDefault();_vm.SelectAnalyser(test)}}}):_vm._e(),_vm._v(\" \"),(test.multidata)?_c('span',{staticClass:\"glyphicon glyphicon-object-align-bottom\",staticStyle:{\"color\":\"#d9d9d9\"}}):_vm._e()]):_vm._e(),_vm._v(\" \"),_c('td',{attrs:{\"title\":test.analit}},[_c('span',{on:{\"contextmenu\":function($event){_vm.LabAssayEval($event, test)},\"click\":function($event){$event.preventDefault();_vm.Evaluation(test)}}},[_vm._v(_vm._s(test.ime))])]),_vm._v(\" \"),(!test.multidata)?_c('td',[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.edit == false),expression:\"test.edit == false\"}],staticStyle:{\"display\":\"inline\",\"font-size\":\"14px\",\"line-height\":\"4.5px\"}},[_c('label',[_c('strong',[_vm._v(_vm._s(test.rezultat))])])]),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.edit == true),expression:\"test.edit == true\"}],staticStyle:{\"display\":\"inline\",\"line-height\":\"5px\"}},[(test.select_options != undefined)?_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(test.rezultat),expression:\"test.rezultat\"}],staticStyle:{\"width\":\"110px\"},on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.$set(test, \"rezultat\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},_vm._l((test.select_options),function(option){return _c('option',{key:option},[_vm._v(_vm._s(option))])})):_vm._e()]),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.edit == true),expression:\"test.edit == true\"}],staticStyle:{\"display\":\"inline\"}},[(test.select_options === undefined)?_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(test.rezultat),expression:\"test.rezultat\"}],staticStyle:{\"width\":\"110px\",\"font-size\":\"12px\",\"line-height\":\"7px\"},domProps:{\"value\":(test.rezultat)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(test, \"rezultat\", $event.target.value)}}}):_vm._e()]),_vm._v(\" \"),_c('sup',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.vise > 2),expression:\"test.vise > 2\"}],on:{\"click\":function($event){$event.preventDefault();_vm.GetResults(test, uzorak.status)}}},[_c('i',{staticClass:\"fa fa-star\",staticStyle:{\"font-size\":\"5px\",\"color\":\"#e34a4a\"},attrs:{\"id\":\"star\",\"title\":\" \"}})]),_vm._v(\" \"),_c('sup',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.vise < 3),expression:\"test.vise < 3\"}]},[_c('i',{staticClass:\"fa fa-star-o\",staticStyle:{\"font-size\":\"5px\",\"opacity\":\"0\"},attrs:{\"id\":\"star\",\"title\":\" \"}})])]):_vm._e(),_vm._v(\" \"),(test.multidata && test.realizovan)?_c('td',[_c('button',{staticClass:\"btn btn-primary btn-micro\",attrs:{\"id\":test.labassay_id},on:{\"click\":function($event){$event.preventDefault();_vm.MultiGet($event, test.ime, test.analit, test.rezultat, test.odobren)}}},[_c('span',{staticClass:\"glyphicon glyphicon-search\",attrs:{\"id\":test.labassay_id},on:{\"click\":function($event){$event.preventDefault();_vm.MultiGet($event, test.ime, test.analit, test.rezultat, test.odobren)}}}),_vm._v(\"\\n                          \"+_vm._s('VIŠE')+\"\\n                        \")]),_vm._v(\" \"),_c('sup',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.multi_count > 2),expression:\"test.multi_count > 2\"}],on:{\"click\":function($event){$event.preventDefault();_vm.GetResultsMulti(test, uzorak.status)}}},[_c('i',{staticClass:\"fa fa-star\",staticStyle:{\"font-size\":\"5px\",\"color\":\"#e34a4a\"},attrs:{\"id\":\"star\",\"title\":\" \"}})]),_vm._v(\" \"),_c('sup',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.multi_count < 3),expression:\"test.multi_count < 3\"}]},[_c('i',{staticClass:\"fa fa-star-o\",staticStyle:{\"font-size\":\"5px\",\"opacity\":\"0\"},attrs:{\"id\":\"star\",\"title\":\" \"}})])]):_vm._e(),_vm._v(\" \"),(test.multidata && !test.realizovan)?_c('td',[_c('button',{staticClass:\"btn btn-warning btn-micro\",attrs:{\"id\":test.labassay_id},on:{\"click\":function($event){$event.preventDefault();_vm.MultiGet($event, test.ime, test.analit, test.rezultat, test.odobren)}}},[_c('span',{staticClass:\"glyphicon glyphicon-search\",attrs:{\"id\":test.labassay_id},on:{\"click\":function($event){$event.preventDefault();_vm.MultiGet($event, test.ime, test.analit, test.rezultat, test.odobren)}}}),_vm._v(\"\\n                          \"+_vm._s('VIŠE')+\"\\n                        \")]),_vm._v(\" \"),_c('sup',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.multi_count > 2),expression:\"test.multi_count > 2\"}],on:{\"click\":function($event){$event.preventDefault();_vm.GetResultsMulti(test, uzorak.status)}}},[_c('i',{staticClass:\"fa fa-star\",staticStyle:{\"font-size\":\"5px\",\"color\":\"#e34a4a\"},attrs:{\"id\":\"star\",\"title\":\" \"}})]),_vm._v(\" \"),_c('sup',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.multi_count < 3),expression:\"test.multi_count < 3\"}]},[_c('i',{staticClass:\"fa fa-star-o\",staticStyle:{\"font-size\":\"5px\",\"opacity\":\"0\"},attrs:{\"id\":\"star\",\"title\":\" \"}})])]):_vm._e(),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(test.unit))]),_vm._v(\" \"),(!test.multidata)?_c('td',[_vm._v(_vm._s(_vm.Interpretacija(test.analit, test.rezultat, test.unit, test.dRef, test.gRef, _vm.$store.state.site, test.interp, test.extend, _vm.spec)[4]))]):_vm._e(),_vm._v(\" \"),(test.multidata)?_c('td',[_vm._v(_vm._s('/'))]):_vm._e(),_vm._v(\" \"),(uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN')?_c('td',[(!test.multidata)?_c('i',{staticClass:\"glyphicon glyphicon-stats\",staticStyle:{\"font-size\":\"15px\",\"color\":\"#f7cc36\"},attrs:{\"id\":\"reference\",\"title\":\" \"},on:{\"click\":function($event){$event.preventDefault();_vm.Reference($event, test)}}}):_vm._e(),_vm._v(\" \"),(test.multidata)?_c('i',{staticClass:\"glyphicon glyphicon-stats\",staticStyle:{\"font-size\":\"15px\",\"color\":\"#f7cc36\",\"opacity\":\"0\"},attrs:{\"id\":\"reference\",\"title\":\" \"}}):_vm._e()]):_vm._e(),_vm._v(\" \"),(uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN' && _vm.calculated && !test.calculated)?_c('td',[_c('button',{staticClass:\"btn btn-pale btn-micro\"},[_c('span',{staticClass:\"glyphicon glyphicon-ban-circle\"})])]):_vm._e(),_vm._v(\" \"),(uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN' && _vm.calculated && test.calculated)?_c('td',[_c('button',{staticClass:\"btn btn-primary btn-micro\",attrs:{\"id\":test.test},on:{\"click\":function($event){$event.preventDefault();_vm.Calculate($event, test.labassay_id, test.ime, test.id)}}},[_c('span',{staticClass:\"fa fa-calculator\",attrs:{\"id\":test.test}})])]):_vm._e(),_vm._v(\" \"),(uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN' \n                        && (test.rezultat === '' || test.manual || test.calculated))?_c('td',[_c('button',{staticClass:\"btn btn-pale btn-micro\"},[_c('span',{staticClass:\"glyphicon glyphicon-ban-circle\"})])]):_vm._e(),_vm._v(\" \"),(uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN' \n                        && test.rezultat != '' && !test.manual && !test.calculated)?_c('td',[(!test.retest)?_c('button',{staticClass:\"btn btn-primary btn-micro\",attrs:{\"id\":test.test},on:{\"click\":function($event){$event.preventDefault();_vm.RetestEnable($event)}}},[_c('span',{staticClass:\"fa fa-refresh\",attrs:{\"id\":test.test}})]):_vm._e(),_vm._v(\" \"),(test.retest)?_c('button',{staticClass:\"btn btn-info btn-micro\",attrs:{\"id\":test.test},on:{\"click\":function($event){$event.preventDefault();_vm.RetestDisable($event)}}},[_c('span',{staticClass:\"glyphicon glyphicon-duplicate\",attrs:{\"id\":test.test}})]):_vm._e()]):_vm._e(),_vm._v(\" \"),_c('td',[_c('i',{class:{'fa fa-exclamation-triangle icon-right input-icon error-icon' : _vm.Interpretacija(test.analit, test.rezultat, test.unit, test.dRef, test.gRef, _vm.$store.state.site, test.interp, test.extend, _vm.spec)[5] === 'Red' && !test.multidata},on:{\"click\":function($event){$event.preventDefault();_vm.Exclamation(test)}}}),_vm._v(\" \"),_c('i',{class:{'fa fa-check success-icon icon-right input-icon' : _vm.Interpretacija(test.analit, test.rezultat, test.unit, test.dRef, test.gRef, _vm.$store.state.site, test.interp, test.extend, _vm.spec)[5] === 'Green' && !test.multidata}})])])}))])])]):_vm._e()])])})),_vm._v(\" \"),_c('div',{staticStyle:{\"min-height\":\"10px\"}}),_vm._v(\" \"),(_vm.verificiran)?_c('div',{staticClass:\"va-row\"},[_c('div',{staticClass:\"flex md12\"},[_c('vuestic-collapse-nalaz',{attrs:{\"final\":_vm.verificiran,\"final_pdf\":_vm.final_pdf,\"samples\":_vm.samples,\"pdf\":_vm.link,\"pacijent\":_vm.ime + ' ' + _vm.prezime}},[_c('span',{attrs:{\"slot\":\"header\"},slot:\"header\"},[_vm._v(\"Nalaz\")]),_vm._v(\" \"),_c('div',{attrs:{\"slot\":\"body\"},slot:\"body\"},[_c('div',{staticClass:\"va-row\"})])])],1)]):_vm._e(),_vm._v(\" \"),_c('div',[_c('hr')]),_vm._v(\" \"),_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-3\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-6\"},[_c('div',{staticClass:\"btn-container\"},[_c('button',{staticClass:\"btn btn-secondary btn-sm wizard-back pull-left\",on:{\"click\":function($event){$event.preventDefault();_vm.Povratak()}}},[_c('span',{staticClass:\"fa fa-backward\"}),_vm._v(\"\\n              \"+_vm._s(' POVRATAK')+\"\\n            \")]),_vm._v(\" \"),(_vm.partials_condition && !_vm.verificiran)?_c('button',{staticClass:\"btn btn-secondary-warning btn-sm wizard-back pull-right\",staticStyle:{\"text-transform\":\"none\",\"color\":\"#e34a4a\"},on:{\"click\":function($event){$event.preventDefault();_vm.Partials()}}},[_c('span',{staticClass:\"fa fa-file-pdf-o\",staticStyle:{\"color\":\"#e34a4a\"}}),_vm._v(\"\\n              \"+_vm._s(' Djelimični nalaz')+\"\\n            \")]):_vm._e()])])])],1),_vm._v(\" \"),_c('vuestic-modal-multi',{ref:\"largeModalMulti\",attrs:{\"show\":_vm.show,\"sample\":_vm.sample,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(_vm._s(_vm.naslov))]),_vm._v(\" \"),_c('div',{staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped first-td-padding\"},[_c('thead',[_c('tr',{attrs:{\"align\":\"middle\"}},[_c('td',{attrs:{\"width\":\"10%\"}}),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('ANALIT'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"30%\"}},[_vm._v(_vm._s('REZULTAT'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"10%\"}},[_vm._v(_vm._s('JEDINICA'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('REFERENCE'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"10%\"}})])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.analiti),function(test){return _c('tr',{key:test.labID,class:{\n                  'table-danger': _vm.Interpretacija(test.opis, test.rezultat, test.jedinica, test.refd, test.refg, _vm.$store.state.site, test.interp, test.extend, _vm.spec)[5] === 'Red' && !test.rezultat_multiple.length, \n                  'table-success': _vm.Interpretacija(test.opis, test.rezultat, test.jedinica, test.refd, test.refg, _vm.$store.state.site, test.interp, test.extend, _vm.spec)[5] === 'Green' && !test.rezultat_multiple.length, \n                  'table-warning': _vm.Interpretacija(test.opis, test.rezultat, test.jedinica, test.refd, test.refg, _vm.$store.state.site, test.interp, test.extend, _vm.spec)[5] === 'Yellow' && !test.rezultat_multiple.length                                  \n                },attrs:{\"align\":\"middle\"}},[(test.flag != '')?_c('td',[_vm._v(_vm._s(test.flag))]):_vm._e(),_vm._v(\" \"),(test.flag === '')?_c('td',[_vm._v(\" \")]):_vm._e(),_vm._v(\" \"),_c('td',{attrs:{\"title\":test.opis}},[_vm._v(_vm._s(test.naziv))]),_vm._v(\" \"),_c('td',{attrs:{\"id\":test.analit}},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.edit == false),expression:\"test.edit == false\"}]},[_c('label',[_c('strong',[_vm._v(_vm._s(test.rezultat))])])]),_vm._v(\" \"),(test.select_options != undefined && (test.kod === 's03' || test.kod === 's04' || test.kod === 's08' || test.kod === 's09'))?_c('select',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.edit == true),expression:\"test.edit == true\"},{name:\"model\",rawName:\"v-model\",value:(test.rezultat_multiple),expression:\"test.rezultat_multiple\"}],staticStyle:{\"min-width\":\"200px\"},attrs:{\"multiple\":\"\",\"size\":test.select_options.length},on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.$set(test, \"rezultat_multiple\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},_vm._l((test.select_options),function(option){return _c('option',{key:option},[_vm._v(_vm._s(option))])})):_vm._e(),_vm._v(\" \"),(test.select_options != undefined && (test.kod != 's03' && test.kod != 's04' && test.kod != 's08' && test.kod != 's09'))?_c('select',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.edit == true),expression:\"test.edit == true\"},{name:\"model\",rawName:\"v-model\",value:(test.rezultat),expression:\"test.rezultat\"}],staticStyle:{\"width\":\"200px\"},on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.$set(test, \"rezultat\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},_vm._l((test.select_options),function(option){return _c('option',{key:option},[_vm._v(_vm._s(option))])})):_vm._e(),_vm._v(\" \"),(test.select_options === undefined)?_c('input',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.edit == true),expression:\"test.edit == true\"},{name:\"model\",rawName:\"v-model\",value:(test.rezultat),expression:\"test.rezultat\"}],staticStyle:{\"width\":\"200px\"},domProps:{\"value\":(test.rezultat)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(test, \"rezultat\", $event.target.value)}}}):_vm._e()]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(_vm.Interpretacija(test.opis, test.rezultat, test.jedinica, test.refd, test.refg, _vm.$store.state.site, test.interp, test.extend, _vm.spec)[3]))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(_vm.Interpretacija(test.opis, test.rezultat, test.jedinica, test.refd, test.refg, _vm.$store.state.site, test.interp, test.extend, _vm.spec)[4]))]),_vm._v(\" \"),_c('td',[_c('i',{class:{'fa fa-exclamation-triangle icon-right input-icon error-icon' : _vm.Interpretacija(test.opis, test.rezultat, test.jedinica, test.refd, test.refg, _vm.$store.state.site, test.interp, test.extend, _vm.spec)[5] === 'Red' && !test.rezultat_multiple.length},on:{\"click\":function($event){$event.preventDefault();_vm.ExclamationMulti(test)}}}),_vm._v(\" \"),_c('i',{class:{'fa fa-check success-icon icon-right input-icon' : _vm.Interpretacija(test.opis, test.rezultat, test.jedinica, test.refd, test.refg, _vm.$store.state.site, test.interp, test.extend, _vm.spec)[5] === 'Green' && !test.rezultat_multiple.length}})])])}))])])]),_vm._v(\" \"),_c('vuestic-modal-micro-reset',{ref:\"staticModalResetSample\",attrs:{\"show\":_vm.show,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',{staticStyle:{\"color\":\"#acb5be\"}},[_vm._v(_vm._s('Brisanje rezultata: '))]),_vm._v(\" \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(_vm.CurrentTest))])]),_vm._v(\" \"),_c('div',[_c('h5',[_vm._v(_vm._s('Jeste li sigurni da želite obrisati rezultat?'))])])]),_vm._v(\" \"),_c('vuestic-modal-micro-bactery',{ref:\"staticModalMicroBactery\",attrs:{\"show\":_vm.show,\"large\":true,\"sample\":_vm.sample,\"update\":_vm.$store.state.access.level < 1 && !_vm.ShowAntibiotics && !_vm.ShowBacteries && _vm.MicrobiologyScenario === 'MAIBPoR',\"povratak\":_vm.ShowAntibiotics || _vm.ShowBacteries,\"empty\":_vm.TemporaryAntibiotics.length > 0 || _vm.TemporaryBacteriesAdd.length > 0,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[(!_vm.ShowAntibiotics && !_vm.ShowBacteries)?_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',{staticStyle:{\"color\":\"#acb5be\"}},[_vm._v(_vm._s('Rezultat analize: '))]),_vm._v(\" \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(_vm.CurrentTest))])]):_vm._e(),_vm._v(\" \"),(_vm.ShowAntibiotics && !_vm.ShowBacteries)?_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',{staticStyle:{\"color\":\"#acb5be\"}},[_vm._v(_vm._s('Antibiotici | '))]),_vm._v(\" \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"Izbornik\"))])]):_vm._e(),_vm._v(\" \"),(!_vm.ShowAntibiotics && _vm.ShowBacteries)?_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',{staticStyle:{\"color\":\"#acb5be\"}},[_vm._v(_vm._s('Bakterije | '))]),_vm._v(\" \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"Izbornik\"))])]):_vm._e(),_vm._v(\" \"),_c('div',[(_vm.show_table)?_c('div',{staticClass:\"row\"},[(_vm.MicrobiologyScenario === 'MAIBPoR' && _vm.ShowBacteries && !_vm.ShowAntibiotics)?_c('div',{staticClass:\"col-md-1\"}):_vm._e(),_vm._v(\" \"),(_vm.MicrobiologyScenario === 'MAIBPoR' && _vm.ShowBacteries && !_vm.ShowAntibiotics)?_c('div',{staticClass:\"col-md-10\"},[(_vm.TemporaryBacteries.length)?_c('div',{staticClass:\"col-md-12\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-4\"},_vm._l((_vm.filteredBacteries(1, 3)),function(bactery){return _c('div',{key:bactery._id,staticClass:\"form-check abc-checkbox abc-checkbox-primary\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(bactery.chosen),expression:\"bactery.chosen\"}],staticClass:\"form-check-input\",attrs:{\"id\":bactery._id,\"type\":\"checkbox\",\"disabled\":bactery.disabled},domProps:{\"checked\":Array.isArray(bactery.chosen)?_vm._i(bactery.chosen,null)>-1:(bactery.chosen)},on:{\"click\":function($event){_vm.AddBacteries(bactery)},\"change\":function($event){var $$a=bactery.chosen,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(bactery.chosen=$$a.concat([$$v]))}else{$$i>-1&&(bactery.chosen=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.$set(bactery, \"chosen\", $$c)}}}}),_vm._v(\" \"),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":\"checkbox\"}},[(!bactery.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(bactery.opis))]):_vm._e(),_vm._v(\" \"),(bactery.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#4ae387\"}},[_vm._v(_vm._s(bactery.opis))]):_vm._e()])])})),_vm._v(\" \"),_c('div',{staticClass:\"col-md-4\"},_vm._l((_vm.filteredBacteries(2, 3)),function(bactery){return _c('div',{key:bactery._id,staticClass:\"form-check abc-checkbox abc-checkbox-primary\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(bactery.chosen),expression:\"bactery.chosen\"}],staticClass:\"form-check-input\",attrs:{\"id\":bactery._id,\"type\":\"checkbox\",\"disabled\":bactery.disabled},domProps:{\"checked\":Array.isArray(bactery.chosen)?_vm._i(bactery.chosen,null)>-1:(bactery.chosen)},on:{\"click\":function($event){_vm.AddBacteries(bactery)},\"change\":function($event){var $$a=bactery.chosen,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(bactery.chosen=$$a.concat([$$v]))}else{$$i>-1&&(bactery.chosen=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.$set(bactery, \"chosen\", $$c)}}}}),_vm._v(\" \"),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":\"checkbox\"}},[(!bactery.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(bactery.opis))]):_vm._e(),_vm._v(\" \"),(bactery.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#4ae387\"}},[_vm._v(_vm._s(bactery.opis))]):_vm._e()])])})),_vm._v(\" \"),_c('div',{staticClass:\"col-md-4\"},_vm._l((_vm.filteredBacteries(3, 3)),function(bactery){return _c('div',{key:bactery._id,staticClass:\"form-check abc-checkbox abc-checkbox-primary\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(bactery.chosen),expression:\"bactery.chosen\"}],staticClass:\"form-check-input\",attrs:{\"id\":bactery._id,\"type\":\"checkbox\",\"disabled\":bactery.disabled},domProps:{\"checked\":Array.isArray(bactery.chosen)?_vm._i(bactery.chosen,null)>-1:(bactery.chosen)},on:{\"click\":function($event){_vm.AddBacteries(bactery)},\"change\":function($event){var $$a=bactery.chosen,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(bactery.chosen=$$a.concat([$$v]))}else{$$i>-1&&(bactery.chosen=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.$set(bactery, \"chosen\", $$c)}}}}),_vm._v(\" \"),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":\"checkbox\"}},[(!bactery.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(bactery.opis))]):_vm._e(),_vm._v(\" \"),(bactery.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#4ae387\"}},[_vm._v(_vm._s(bactery.opis))]):_vm._e()])])}))])]):_vm._e()]):_vm._e(),_vm._v(\" \"),(_vm.MicrobiologyScenario === 'MAIBPoR' && _vm.ShowAntibiotics && !_vm.ShowBacteries)?_c('div',{staticClass:\"col-md-1\"}):_vm._e(),_vm._v(\" \"),(_vm.MicrobiologyScenario === 'MAIBPoR' && _vm.ShowAntibiotics && !_vm.ShowBacteries)?_c('div',{staticClass:\"col-md-10\"},[(_vm.Antibiotics.length)?_c('div',{staticClass:\"col-md-12\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-4\"},_vm._l((_vm.filteredAntibiotics(1, 3)),function(antibiotik){return _c('div',{key:antibiotik._id,staticClass:\"form-check abc-checkbox abc-checkbox-primary\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(antibiotik.chosen),expression:\"antibiotik.chosen\"}],staticClass:\"form-check-input\",attrs:{\"id\":antibiotik._id,\"type\":\"checkbox\",\"disabled\":antibiotik.disabled},domProps:{\"checked\":Array.isArray(antibiotik.chosen)?_vm._i(antibiotik.chosen,null)>-1:(antibiotik.chosen)},on:{\"click\":function($event){_vm.AddAntibiotics(antibiotik)},\"change\":function($event){var $$a=antibiotik.chosen,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(antibiotik.chosen=$$a.concat([$$v]))}else{$$i>-1&&(antibiotik.chosen=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.$set(antibiotik, \"chosen\", $$c)}}}}),_vm._v(\" \"),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":\"checkbox\"}},[(!antibiotik.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(antibiotik.opis))]):_vm._e(),_vm._v(\" \"),(antibiotik.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#4ae387\"}},[_vm._v(_vm._s(antibiotik.opis))]):_vm._e()])])})),_vm._v(\" \"),_c('div',{staticClass:\"col-md-4\"},_vm._l((_vm.filteredAntibiotics(2, 3)),function(antibiotik){return _c('div',{key:antibiotik._id,staticClass:\"form-check abc-checkbox abc-checkbox-primary\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(antibiotik.chosen),expression:\"antibiotik.chosen\"}],staticClass:\"form-check-input\",attrs:{\"id\":antibiotik._id,\"type\":\"checkbox\",\"disabled\":antibiotik.disabled},domProps:{\"checked\":Array.isArray(antibiotik.chosen)?_vm._i(antibiotik.chosen,null)>-1:(antibiotik.chosen)},on:{\"click\":function($event){_vm.AddAntibiotics(antibiotik)},\"change\":function($event){var $$a=antibiotik.chosen,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(antibiotik.chosen=$$a.concat([$$v]))}else{$$i>-1&&(antibiotik.chosen=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.$set(antibiotik, \"chosen\", $$c)}}}}),_vm._v(\" \"),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":\"checkbox\"}},[(!antibiotik.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(antibiotik.opis))]):_vm._e(),_vm._v(\" \"),(antibiotik.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#4ae387\"}},[_vm._v(_vm._s(antibiotik.opis))]):_vm._e()])])})),_vm._v(\" \"),_c('div',{staticClass:\"col-md-4\"},_vm._l((_vm.filteredAntibiotics(3, 3)),function(antibiotik){return _c('div',{key:antibiotik._id,staticClass:\"form-check abc-checkbox abc-checkbox-primary\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(antibiotik.chosen),expression:\"antibiotik.chosen\"}],staticClass:\"form-check-input\",attrs:{\"id\":antibiotik._id,\"type\":\"checkbox\",\"disabled\":antibiotik.disabled},domProps:{\"checked\":Array.isArray(antibiotik.chosen)?_vm._i(antibiotik.chosen,null)>-1:(antibiotik.chosen)},on:{\"click\":function($event){_vm.AddAntibiotics(antibiotik)},\"change\":function($event){var $$a=antibiotik.chosen,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(antibiotik.chosen=$$a.concat([$$v]))}else{$$i>-1&&(antibiotik.chosen=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.$set(antibiotik, \"chosen\", $$c)}}}}),_vm._v(\" \"),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":\"checkbox\"}},[(!antibiotik.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(antibiotik.opis))]):_vm._e(),_vm._v(\" \"),(antibiotik.chosen)?_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#4ae387\"}},[_vm._v(_vm._s(antibiotik.opis))]):_vm._e()])])}))])]):_vm._e()]):_vm._e(),_vm._v(\" \"),(_vm.MicrobiologyScenario === 'MAIBPoR' && !_vm.ShowAntibiotics && !_vm.ShowBacteries)?_c('div',{staticClass:\"col-md-1\"}):_vm._e(),_vm._v(\" \"),(_vm.MicrobiologyScenario === 'MAIBPoR' && !_vm.ShowAntibiotics && !_vm.ShowBacteries)?_c('div',{staticClass:\"col-md-10\"},[(_vm.SelectedBacteries.length)?_c('vuestic-tabs-bactery',{ref:\"tabs\",attrs:{\"names\":_vm.BacteryTabs,\"tab\":_vm.CurrentTab,\"id\":_vm.CurrentTab,\"prikazi\":_vm.sample.status != 'VERIFICIRAN' && _vm.sample.status != 'ODOBREN'}},_vm._l((_vm.SelectedBacteries),function(test){return _c('div',{key:test._id,attrs:{\"slot\":_vm.CurrentTab},slot:_vm.CurrentTab},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.opis === _vm.CurrentTab),expression:\"test.opis === CurrentTab\"}],staticClass:\"row\"},[_c('div',{staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped first-td-padding\"},[_c('thead',[_c('tr',{attrs:{\"align\":\"left\"}},[_c('td',{attrs:{\"width\":\"30%\"}},[_vm._v(_vm._s(test.antibiogram.opis))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"10%\"}},[_vm._v(_vm._s(''))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(''))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(''))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s(''))])])]),_vm._v(\" \"),_c('tbody',_vm._l((test.antibiogram.antibiotici),function(abtk){return _c('tr',{key:abtk._id,class:{'table-danger': false, 'table-success': false,'table-warning': false},attrs:{\"align\":\"left\"}},[_c('td',{attrs:{\"title\":abtk.opis}},[_vm._v(_vm._s(abtk.opis))]),_vm._v(\" \"),_c('td',[_c('bactery-radio-button',{attrs:{\"disabled\":_vm.sample.status === 'ODOBREN' || _vm.sample.status === 'VERIFICIRAN',\"label\":'',\"value\":'',\"name\":test._id + abtk._id},model:{value:(abtk.rezultat),callback:function ($$v) {_vm.$set(abtk, \"rezultat\", $$v)},expression:\"abtk.rezultat\"}})],1),_vm._v(\" \"),_c('td',[_c('postavke-radio-button',{attrs:{\"disabled\":_vm.sample.status === 'ODOBREN' || _vm.sample.status === 'VERIFICIRAN',\"label\":'Senzitivan',\"value\":'S',\"name\":test._id + abtk._id},model:{value:(abtk.rezultat),callback:function ($$v) {_vm.$set(abtk, \"rezultat\", $$v)},expression:\"abtk.rezultat\"}})],1),_vm._v(\" \"),_c('td',[_c('postavke-radio-button',{attrs:{\"disabled\":_vm.sample.status === 'ODOBREN' || _vm.sample.status === 'VERIFICIRAN',\"label\":'Intermedijaran',\"value\":'I',\"name\":test._id + abtk._id},model:{value:(abtk.rezultat),callback:function ($$v) {_vm.$set(abtk, \"rezultat\", $$v)},expression:\"abtk.rezultat\"}})],1),_vm._v(\" \"),_c('td',[_c('postavke-radio-button',{attrs:{\"disabled\":_vm.sample.status === 'ODOBREN' || _vm.sample.status === 'VERIFICIRAN',\"label\":'Rezistentan',\"value\":'R',\"name\":test._id + abtk._id},model:{value:(abtk.rezultat),callback:function ($$v) {_vm.$set(abtk, \"rezultat\", $$v)},expression:\"abtk.rezultat\"}})],1)])}))])])])])})):_vm._e()],1):_vm._e(),_vm._v(\" \"),(_vm.MicrobiologyScenario === 'MANBNeR' || _vm.MicrobiologyScenario === 'MANBPoR' || _vm.MicrobiologyScenario === 'MAIBNeR')?_c('div',{staticClass:\"col-md-12\"},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.show_table),expression:\"show_table\"}],staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped first-td-padding\"},[_c('thead',[_c('tr',{attrs:{\"align\":\"left\"}},[_c('td',[_vm._v(_vm._s('REZULTAT'))])])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.rezultati),function(test,index){return _c('tr',{directives:[{name:\"show\",rawName:\"v-show\",value:(index < 1),expression:\"index < 1\"}],key:test.labassay_id,class:{\n                        'table-danger':  (test.rezultat_m.length && test.rezultat_m[0].pozitivan), \n                        'table-success':  (test.rezultat_m.length && test.rezultat_m[0].negativan),\n                        'table-warning': false\n                      },attrs:{\"align\":\"left\"}},[(_vm.sample.status != 'ODOBREN' &&  _vm.sample.status != 'VERIFICIRAN')?_c('td',[_c('div',{staticClass:\"form-group\"},[_c('div',{staticClass:\"input-group\"},[_c('textarea',{directives:[{name:\"model\",rawName:\"v-model\",value:(test.rezultat),expression:\"test.rezultat\"}],attrs:{\"type\":\"text\",\"id\":\"simple-textarea\",\"required\":\"\"},domProps:{\"value\":(test.rezultat)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(test, \"rezultat\", $event.target.value)}}}),_vm._v(\" \"),_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"simple-textarea\"}},[_vm._v(_vm._s(''))]),_vm._v(\" \"),_c('i',{staticClass:\"bar\"})])])]):_vm._e(),_vm._v(\" \"),(_vm.sample.status === 'ODOBREN' ||  _vm.sample.status === 'VERIFICIRAN')?_c('td',[_c('div',{staticClass:\"form-group\"},[_c('div',{staticClass:\"input-group\"},[_c('input',{attrs:{\"id\":\"input-icon-left\",\"title\":\" \",\"name\":\"input-icon-left\",\"disabled\":\"\"}}),_vm._v(\" \"),(test.rezultat.length)?_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"input-icon-left\"}},[_vm._v(_vm._s(test.rezultat))]):_vm._e(),_vm._v(\" \"),(!test.rezultat.length)?_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"input-icon-left\"}},[_vm._v(_vm._s(\"Nema podataka.\"))]):_vm._e(),_vm._v(\" \"),_c('i',{staticClass:\"bar\"})])])]):_vm._e()])}))])])]):_vm._e()]):_vm._e()])]),_vm._v(\" \"),_c('vuestic-modal-micro-result',{ref:\"staticModalSelectResult\",attrs:{\"show\":_vm.show,\"sample\":_vm.sample,\"large\":_vm.ShowAllBacteries,\"neg\":_vm.ModalNegative,\"pos\":_vm.ModalPositive,\"selected\":_vm.ModalPositiveCondition,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',{staticStyle:{\"color\":\"#acb5be\"}},[_vm._v(_vm._s(_vm.MicrobiologyModalHeader)+\" |\")]),_vm._v(\" \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"Izbornik\"))])]),_vm._v(\" \"),(!_vm.ModalNegative && !_vm.ModalPositive)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-6\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-3\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-6\"},[_c('button',{staticClass:\"btn btn-secondary btn-sm wizard-back pull-left\",staticStyle:{\"text-transform\":\"none\",\"border\":\"0px\"},on:{\"click\":function($event){_vm.ModalNegative = true; _vm.ModalPositive = false;}}},[_vm._v(_vm._s('Negativan'))])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-3\"})])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-6\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-2\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-6\"},[_c('button',{staticClass:\"btn btn-secondary-danger btn-sm wizard-next pull-right\",staticStyle:{\"text-transform\":\"none\",\"border\":\"0px\"},on:{\"click\":function($event){_vm.ModalPositive = true; _vm.ModalNegative = false;}}},[_vm._v(_vm._s('Pozitivan'))])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-4\"})])])]):_vm._e(),_vm._v(\" \"),(_vm.ModalNegative && !_vm.ModalPositive)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-1\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-11\"},_vm._l((_vm.MicrobiologyResult.NegativeDescriptions),function(desc,index){return _c('vuestic-radio-button',{key:index,attrs:{\"label\":_vm.MicrobiologyResult.NegativeDescriptions[index],\"id\":_vm.MicrobiologyResult.NegativeDescriptions[index],\"value\":_vm.MicrobiologyResult.NegativeDescriptions[index],\"name\":_vm.MicrobiologyResult.NegativeDescriptions[index],\"disabled\":false},model:{value:(_vm.NegativeResultSelection),callback:function ($$v) {_vm.NegativeResultSelection=$$v},expression:\"NegativeResultSelection\"}})}))]):_vm._e(),_vm._v(\" \"),(!_vm.ModalNegative && _vm.ModalPositive && !_vm.MicrobiologyResult.DefaultBacteries.length)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-1\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-11\"},_vm._l((_vm.MicrobiologyResult.PositiveDescriptions),function(desc,index){return _c('vuestic-radio-button',{key:index,attrs:{\"label\":_vm.MicrobiologyResult.PositiveDescriptions[index],\"id\":_vm.MicrobiologyResult.PositiveDescriptions[index],\"value\":_vm.MicrobiologyResult.PositiveDescriptions[index],\"name\":_vm.MicrobiologyResult.PositiveDescriptions[index],\"disabled\":false},model:{value:(_vm.PositiveResultSelection),callback:function ($$v) {_vm.PositiveResultSelection=$$v},expression:\"PositiveResultSelection\"}})}))]):_vm._e(),_vm._v(\" \"),(!_vm.ModalNegative && _vm.ModalPositive && _vm.MicrobiologyResult.DefaultBacteries.length)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-6\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-2\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-10\"},_vm._l((_vm.MicrobiologyResult.DefaultBacteries),function(bakt,index){return _c('div',{key:index,staticClass:\"form-check abc-checkbox abc-checkbox-primary\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(bakt.chosen),expression:\"bakt.chosen\"}],staticClass:\"form-check-input\",attrs:{\"id\":bakt._id,\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(bakt.chosen)?_vm._i(bakt.chosen,null)>-1:(bakt.chosen)},on:{\"click\":function($event){_vm.SelectBactery(bakt, index)},\"change\":function($event){var $$a=bakt.chosen,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(bakt.chosen=$$a.concat([$$v]))}else{$$i>-1&&(bakt.chosen=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.$set(bakt, \"chosen\", $$c)}}}}),_vm._v(\" \"),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":\"checkbox\"}},[_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(bakt.opis))])])])}))])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-6\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-1\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-6\"},[(!_vm.ShowAllBacteries)?_c('a',{staticStyle:{\"font-size\":\"16px\",\"color\":\"#4ae387\"},attrs:{\"href\":\"#\"},on:{\"click\":function($event){$event.preventDefault();_vm.ShowAllBacteries = true}}},[_vm._v(\"Prikaži više\")]):_vm._e()]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-5\"})]),_vm._v(\" \"),(_vm.ShowAllBacteries)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-1\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-10\"},_vm._l((_vm.MicrobiologyResult.RemainingBacteries),function(bakt,index){return _c('div',{key:index,staticClass:\"form-check abc-checkbox abc-checkbox-primary\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(bakt.chosen),expression:\"bakt.chosen\"}],staticClass:\"form-check-input\",attrs:{\"id\":bakt._id,\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(bakt.chosen)?_vm._i(bakt.chosen,null)>-1:(bakt.chosen)},on:{\"click\":function($event){_vm.SelectBactery(bakt, index)},\"change\":function($event){var $$a=bakt.chosen,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(bakt.chosen=$$a.concat([$$v]))}else{$$i>-1&&(bakt.chosen=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.$set(bakt, \"chosen\", $$c)}}}}),_vm._v(\" \"),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":\"checkbox\"}},[_c('span',{staticClass:\"abc-label-text\",staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(bakt.opis))])])])}))]):_vm._e()])]):_vm._e()]),_vm._v(\" \"),_c('vuestic-modal-delete',{ref:\"staticModalDeleteSample\",attrs:{\"show\":_vm.show,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',{staticStyle:{\"color\":\"#acb5be\"}},[_vm._v(_vm._s('Brisanje uzorka: '))]),_vm._v(\" \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(_vm.sid))])]),_vm._v(\" \"),_c('div',[_c('h5',[_vm._v(_vm._s('Jeste li sigurni da želite obrisati uzorak?'))])])]),_vm._v(\" \"),_c('vuestic-modal-comment',{ref:\"staticModalComment\",attrs:{\"show\":_vm.show,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(_vm._s('Unos komentara za uzorak: ' + _vm.sid))]),_vm._v(\" \"),_c('div',[_c('h5')])]),_vm._v(\" \"),_c('vuestic-modal-edit',{ref:\"staticModalEditSample\",attrs:{\"show\":_vm.show,\"sample\":_vm.sid,\"action\":\"Edit\",\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(_vm._s('Uređivanje uzorka: ' + _vm.sid))]),_vm._v(\" \"),_c('div',[_c('h5')])]),_vm._v(\" \"),_c('vuestic-modal-mail',{ref:\"staticModalSendMail\",attrs:{\"show\":_vm.show,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"\\n        \"+_vm._s('Slanje nalaza na adresu: ')+\"\\n        \"),_c('span',{staticStyle:{\"color\":\"#4ae387\"}},[_vm._v(_vm._s(_vm.email))])]),_vm._v(\" \"),_c('div',[_c('h5',[_vm._v(_vm._s('Jeste li sigurni da želite poslati nalaz?'))])])]),_vm._v(\" \"),_c('vuestic-modal-all-results',{ref:\"staticModalAllResults\",attrs:{\"show\":_vm.show,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"\\n        \"+_vm._s('Izbor rezultata: ')+\"\\n        \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(_vm.labassay))])]),_vm._v(\" \"),_c('div',[_c('div',{staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped first-td-padding\"},[_c('thead',[_c('tr',[_c('td',[_vm._v(\"analizator\")]),_vm._v(\" \"),_c('td',[_vm._v(\"vrijeme\")]),_vm._v(\" \"),_c('td',[_vm._v(\"rezultat\")]),_vm._v(\" \"),_c('td',[_vm._v(\"jedinica\")]),_vm._v(\" \"),_c('td',[_vm._v(\"reference\")]),_vm._v(\" \"),(_vm.sample_status != 'ODOBREN' &&  _vm.sample_status != 'VERIFICIRAN')?_c('td',[_vm._v(\"izbor\")]):_vm._e(),_vm._v(\" \"),_c('td',{attrs:{\"align\":\"middle\"}})])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.vise.rezultat),function(test){return _c('tr',{directives:[{name:\"show\",rawName:\"v-show\",value:(test.rezultat_f != ''),expression:\"test.rezultat_f != ''\"}],key:test._id,class:{\n                  'table-danger': _vm.Interpretacija(_vm.vise.labassay.analit, test.rezultat_f, test.jedinice_f, _vm.vise.refd, _vm.vise.refg, _vm.$store.state.site, _vm.vise.interp, _vm.vise.extend, _vm.spec)[5] === 'Red' && !test.multidata, \n                  'table-success': _vm.Interpretacija(_vm.vise.labassay.analit, test.rezultat_f, test.jedinice_f, _vm.vise.refd, _vm.vise.refg, _vm.$store.state.site, _vm.vise.interp, _vm.vise.extend, _vm.spec)[5] === 'Green' && !test.multidata,\n                  'table-warning': _vm.Interpretacija(_vm.vise.labassay.analit, test.rezultat_f, test.jedinice_f, _vm.vise.refd, _vm.vise.refg, _vm.$store.state.site, _vm.vise.interp, _vm.vise.extend, _vm.spec)[5] === 'Yellow' && !test.multidata\n                }},[_c('td',[_vm._v(_vm._s(test.anaassay.aparat.ime))]),_vm._v(\" \"),_c('td',[_vm._v(\"\\n                  \"+_vm._s(JSON.stringify(\n                  test.updated_at\n                  ).slice(9, 11) +\n                  \".\" +\n                  JSON.stringify(\n                  test.updated_at\n                  ).slice(6, 8) +\n                  \".\" +\n                  JSON.stringify(\n                  test.updated_at\n                  ).slice(1, 5) + ' | ')+\"\\n                  \"),_c('sub',[_vm._v(\"\\n                    \"+_vm._s(JSON.stringify(\n                    test.updated_at\n                    ).slice(12, 20))+\"\\n                  \")])]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(test.rezultat_f))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(test.jedinice_f))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(_vm.Interpretacija(_vm.vise.labassay.analit, test.rezultat_f, test.jedinice_f, _vm.vise.refd, _vm.vise.refg, _vm.$store.state.site, _vm.vise.interp, _vm.vise.extend, _vm.spec)[4]))]),_vm._v(\" \"),(_vm.sample_status != 'ODOBREN' &&  _vm.sample_status != 'VERIFICIRAN')?_c('td',[(!test.izabran)?_c('i',{staticClass:\"glyphicon glyphicon-unchecked\",staticStyle:{\"font-size\":\"18px\",\"color\":\"#e34a4a\"},on:{\"click\":function($event){$event.preventDefault();_vm.IzborTesta(_vm.vise, test)}}}):_vm._e(),_vm._v(\" \"),(test.izabran)?_c('i',{staticClass:\"glyphicon glyphicon-check\",staticStyle:{\"font-size\":\"18px\",\"color\":\"#4ae387\"}}):_vm._e()]):_vm._e(),_vm._v(\" \"),_c('td',[_c('i',{class:{'fa fa-exclamation-triangle icon-right input-icon error-icon' : _vm.Interpretacija(_vm.vise.labassay.analit, test.rezultat_f, test.jedinice_f, _vm.vise.refd, _vm.vise.refg, _vm.$store.state.site, _vm.vise.interp, _vm.vise.extend, _vm.spec)[5] === 'Red'}}),_vm._v(\" \"),_c('i',{class:{'fa fa-check success-icon icon-right input-icon' : _vm.Interpretacija(_vm.vise.labassay.analit, test.rezultat_f, test.jedinice_f, _vm.vise.refd, _vm.vise.refg, _vm.$store.state.site, _vm.vise.interp, _vm.vise.extend, _vm.spec)[5] === 'Green'}})])])}))])])])]),_vm._v(\" \"),_c('vuestic-modal-error',{ref:\"staticModalError\",attrs:{\"show\":_vm.show,\"cancelText\":\"ZATVORI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"\\n        \"+_vm._s('')+\"\\n        \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s('404: Not Found'))])]),_vm._v(\" \"),_c('div',[_c('h5',[_vm._v(_vm._s('Greška prilikom čitanja nalaza.'))])])]),_vm._v(\" \"),_c('vuestic-modal-error',{ref:\"staticModalVerifyPrivilege\",attrs:{\"show\":_vm.show,\"cancelText\":\"ZATVORI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"\\n        \"+_vm._s('')+\"\\n        \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s('401: Not Authorized'))])]),_vm._v(\" \"),_c('div',[_c('h5',[_vm._v(_vm._s('Nemate odgovarajuće privilegije.'))])])]),_vm._v(\" \"),_c('vuestic-modal-exclamation',{ref:\"staticModalExclamation\",attrs:{\"show\":_vm.show,\"cancelText\":\"ZATVORI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"\\n        \"+_vm._s('')+\"\\n        \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(_vm.warning.analiza))])]),_vm._v(\" \"),_c('div',[_c('h5',[_vm._v(_vm._s(_vm.warning.control))]),_vm._v(\" \"),_c('p',[_vm._v(_vm._s(_vm.warning.text))])])]),_vm._v(\" \"),_c('vuestic-modal-reference',{ref:\"staticModalReference\",attrs:{\"show\":_vm.show,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"\\n        \"+_vm._s('Referentne vrijednosti: ')+\"\\n        \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(_vm.reference.naziv)+\" (\"+_vm._s(_vm.reference.opis)+\")\")])]),_vm._v(\" \"),_c('div',[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-1\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-2\"},[_c('div',{staticClass:\"form-group\"},[_c('div',{staticClass:\"input-group\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.reference.dref),expression:\"reference.dref\"}],staticStyle:{\"color\":\"#e34a4a\"},attrs:{\"id\":\"input-icon-left\",\"title\":\" \",\"name\":\"input-icon-left\",\"required\":\"\"},domProps:{\"value\":(_vm.reference.dref)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.reference, \"dref\", $event.target.value)}}}),_vm._v(\" \"),_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"input-icon-left\"}},[_vm._v(_vm._s('Donja'))]),_vm._v(\" \"),_c('i',{staticClass:\"bar\"})])])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-1\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-2\"},[_c('div',{staticClass:\"form-group\"},[_c('div',{staticClass:\"input-group\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.reference.gref),expression:\"reference.gref\"}],staticStyle:{\"color\":\"#e34a4a\"},attrs:{\"id\":\"input-icon-left\",\"title\":\" \",\"name\":\"input-icon-left\",\"required\":\"\"},domProps:{\"value\":(_vm.reference.gref)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.reference, \"gref\", $event.target.value)}}}),_vm._v(\" \"),_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"input-icon-left\"}},[_vm._v(_vm._s('Gornja'))]),_vm._v(\" \"),_c('i',{staticClass:\"bar\"})])])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-1\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-4\"},[(_vm.$store.state.access.level < 1)?_c('vuestic-simple-select',{staticStyle:{\"font-size\":\"14px\"},attrs:{\"label\":\"Interpretacija\",\"title\":\" \",\"options\":_vm.interpretacije},model:{value:(_vm.reference.interp),callback:function ($$v) {_vm.$set(_vm.reference, \"interp\", $$v)},expression:\"reference.interp\"}}):_vm._e(),_vm._v(\" \"),(_vm.$store.state.access.level > 0)?_c('div',{staticClass:\"form-group\"},[_c('div',{staticClass:\"input-group\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.reference.interp),expression:\"reference.interp\"}],attrs:{\"id\":\"input-icon-left\",\"title\":\" \",\"name\":\"input-icon-left\",\"required\":\"\",\"disabled\":true},domProps:{\"value\":(_vm.reference.interp)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.reference, \"interp\", $event.target.value)}}}),_vm._v(\" \"),_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"input-icon-left\"}},[_vm._v(_vm._s(_vm.reference.interp))]),_vm._v(\" \"),_c('i',{staticClass:\"bar\"})])]):_vm._e()],1),_vm._v(\" \"),_c('div',{staticClass:\"col-md-1\"})]),_vm._v(\" \"),_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-1\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-2\"},[_c('vuestic-simple-select',{staticStyle:{\"font-size\":\"14px\"},attrs:{\"label\":\"Jedinica\",\"title\":\" \",\"options\":_vm.jedinice},model:{value:(_vm.reference.jedinica),callback:function ($$v) {_vm.$set(_vm.reference, \"jedinica\", $$v)},expression:\"reference.jedinica\"}})],1),_vm._v(\" \"),_c('div',{staticClass:\"col-md-1\"}),_vm._v(\" \"),_c('div',{staticClass:\"col-md-7\"},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.reference.interp != 'spec'),expression:\"reference.interp != 'spec'\"}],staticClass:\"form-group\"},[_c('div',{staticClass:\"input-group\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.reference.extend),expression:\"reference.extend\"}],staticStyle:{\"color\":\"#e34a4a\"},attrs:{\"id\":\"input-icon-left\",\"title\":\" \",\"name\":\"input-icon-left\",\"required\":\"\"},domProps:{\"value\":(_vm.reference.extend)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.reference, \"extend\", $event.target.value)}}}),_vm._v(\" \"),_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"input-icon-left\"}},[_vm._v(_vm._s('Proširena referentna vrijednost'))]),_vm._v(\" \"),_c('i',{staticClass:\"bar\"})])]),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.reference.interp === 'spec'),expression:\"reference.interp === 'spec'\"}],staticClass:\"form-group\"},[_c('div',{staticClass:\"input-group\"},[_c('textarea',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.reference.extend),expression:\"reference.extend\"}],staticStyle:{\"color\":\"#e34a4a\"},attrs:{\"type\":\"text\",\"id\":\"simple-textarea\",\"required\":\"\"},domProps:{\"value\":(_vm.reference.extend)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.reference, \"extend\", $event.target.value)}}}),_vm._v(\" \"),_c('label',{staticClass:\"control-label\",attrs:{\"for\":\"simple-textarea\"}},[_vm._v(_vm._s('Specifična interpretacija rezultata'))]),_vm._v(\" \"),_c('i',{staticClass:\"bar\"})])])]),_vm._v(\" \"),_c('div',{staticClass:\"col-md-1\"})])])]),_vm._v(\" \"),_c('vuestic-modal-find',{ref:\"staticModalFind\",attrs:{\"show\":_vm.show,\"data_pid\":Number(_vm.data_pid),\"data_length\":Number(_vm.data_length),\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"\\n        \"+_vm._s('')+\"\\n        \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s('Redni broj pacijenta'))])]),_vm._v(\" \"),_c('div',[_c('h5')])]),_vm._v(\" \"),_c('vuestic-modal-aparati',{ref:\"staticModalAparati\",attrs:{\"show\":_vm.show,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"\\n        \"+_vm._s('Izbor analizatora: ')+\"\\n        \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(this.analiza.ime + ' (' + this.analiza.analit + ')'))])]),_vm._v(\" \"),_c('div',[_c('vuestic-accordion-obrada',_vm._l((_vm.analysers),function(element){return _c('vuestic-collapse-aparati',{key:element._id,attrs:{\"analyser\":element}},[_c('span',{attrs:{\"slot\":\"header\"},slot:\"header\"},[_vm._v(_vm._s(element.ime + ', ' + element.site.naziv))]),_vm._v(\" \"),_c('div',{attrs:{\"slot\":\"body\"},slot:\"body\"},[_c('div',{staticClass:\"va-row\"})])])}))],1)]),_vm._v(\" \"),_c('vuestic-modal-results-multi',{ref:\"staticModalResultsMulti\",attrs:{\"show\":_vm.show,\"cancelText\":\"ODUSTANI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"\\n        \"+_vm._s('Izbor rezultata: ')+\"\\n        \"),_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(_vm.multi_test))])]),_vm._v(\" \"),_c('div')]),_vm._v(\" \"),_c('patient-evaluation-single',{ref:\"staticModalEvaluationSingle\",attrs:{\"show\":_vm.show,\"cancelText\":\"ZATVORI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',[_vm._v(_vm._s(_vm.ime + ' ' + _vm.prezime))])]),_vm._v(\" \"),(_vm.Procjena.length && !_vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',{staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped table-sm color-icon-label-table\"},[_c('thead',[_c('tr',{attrs:{\"align\":\"middle\"}},[_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('REZULTAT'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('JEDINICA'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('REFERENCE'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('DATUM'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"15%\"}},[_vm._v(_vm._s('VRIJEME'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"5%\",\"align\":\"middle\"}})])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.Procjena),function(element,index){return _c('tr',{key:index,class:{\n                        'table-danger': _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Red', \n                        'table-success': _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Green',\n                        'table-warning': _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Yellow'\n                      },attrs:{\"align\":\"middle\"}},[_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.rezultat))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.jedinica))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(_vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[4]))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.datum))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"15%\"}},[_vm._v(_vm._s(element.vrijeme))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"9%\",\"align\":\"middle\"}},[_c('i',{class:{'fa fa-exclamation-triangle icon-right input-icon error-icon' : _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Red'}}),_vm._v(\" \"),_c('i',{class:{'fa fa-check success-icon icon-right input-icon' : _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Green'}})])])}))]),_vm._v(\" \"),_c('div',{staticStyle:{\"text-align\":\"center\"}},[_c('span',{staticClass:\"circle badge-info\"}),_vm._v(\"\\n              \"+_vm._s(_vm.table_header)+\"\\n            \")])])])]):_vm._e(),_vm._v(\" \"),(_vm.showLineChart && _vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('line-chart',{attrs:{\"options\":_vm.optionsLineChart,\"data\":_vm.dataLineChart,\"type\":\"line\"}})],1)]):_vm._e(),_vm._v(\" \"),(!_vm.showLineChart && _vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',[_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"Nema podataka.\"))])])])]):_vm._e()]),_vm._v(\" \"),_c('patient-evaluation-single',{ref:\"staticModalLabAssayEvalSingle\",attrs:{\"show\":_vm.show,\"cancelText\":\"ZATVORI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',{staticStyle:{\"color\":\"#4ae387\"}},[_vm._v(_vm._s(_vm.analiza_eval.ime + ' (' + _vm.analiza_eval.analit + ')'))]),_vm._v(\" \"),_c('span',[_vm._v(_vm._s(\" - Rezultati analize u zadnjih 14 dana\"))])]),_vm._v(\" \"),(_vm.Procjena.length && !_vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',{staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped table-sm color-icon-label-table\"},[_c('thead',[_c('tr',{attrs:{\"align\":\"middle\"}},[_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('REZULTAT'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('JEDINICA'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('REFERENCE'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('DATUM'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"15%\"}},[_vm._v(_vm._s('VRIJEME'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"5%\",\"align\":\"middle\"}})])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.Procjena),function(element,index){return _c('tr',{key:index,class:{\n                        'table-danger': _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Red', \n                        'table-success': _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Green',\n                        'table-warning': _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Yellow'\n                      },attrs:{\"align\":\"middle\"}},[_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.rezultat))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.jedinica))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(_vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[4]))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.datum))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"15%\"}},[_vm._v(_vm._s(element.vrijeme))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"9%\",\"align\":\"middle\"}},[_c('i',{class:{'fa fa-exclamation-triangle icon-right input-icon error-icon' : _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Red'}}),_vm._v(\" \"),_c('i',{class:{'fa fa-check success-icon icon-right input-icon' : _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Green'}})])])}))]),_vm._v(\" \"),_c('div',{staticStyle:{\"text-align\":\"center\"}},[_c('span',{staticClass:\"circle badge-info\"}),_vm._v(\"\\n              \"+_vm._s(_vm.table_header)+\"\\n            \")])])])]):_vm._e(),_vm._v(\" \"),(_vm.showLineChart && _vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('line-chart',{attrs:{\"options\":_vm.optionsLineChart,\"data\":_vm.dataLineChart,\"type\":\"line\"}})],1)]):_vm._e(),_vm._v(\" \"),(!_vm.showLineChart && _vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',[_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"Nema podataka.\"))])])])]):_vm._e()]),_vm._v(\" \"),_c('patient-evaluation-multi',{ref:\"staticModalEvaluationMulti\",attrs:{\"show\":_vm.show,\"multiparam_izbor\":_vm.multiparam_izbor,\"multiparam_izbornik\":_vm.multiparam_izbornik,\"cancelText\":\"ZATVORI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',[_vm._v(_vm._s(_vm.ime + ' ' + _vm.prezime))])]),_vm._v(\" \"),(_vm.Procjena.length && !_vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',{staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped table-sm color-icon-label-table\"},[_c('thead',[_c('tr',{attrs:{\"align\":\"middle\"}},[_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('REZULTAT'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('JEDINICA'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('REFERENCE'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('DATUM'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"15%\"}},[_vm._v(_vm._s('VRIJEME'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"5%\",\"align\":\"middle\"}})])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.Procjena),function(element,index){return _c('tr',{key:index,class:{\n                        'table-danger': _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Red', \n                        'table-success': _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Green',\n                        'table-warning': _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Yellow'\n                      },attrs:{\"align\":\"middle\"}},[_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.rezultat))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.jedinica))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(_vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[4]))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.datum))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"15%\"}},[_vm._v(_vm._s(element.vrijeme))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"9%\",\"align\":\"middle\"}},[_c('i',{class:{'fa fa-exclamation-triangle icon-right input-icon error-icon' : _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Red'}}),_vm._v(\" \"),_c('i',{class:{'fa fa-check success-icon icon-right input-icon' : _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Green'}})])])}))]),_vm._v(\" \"),_c('div',{staticStyle:{\"text-align\":\"center\"}},[_c('span',{staticClass:\"circle badge-info\"}),_vm._v(\"\\n              \"+_vm._s(_vm.table_header)+\"\\n            \")])])])]):_vm._e(),_vm._v(\" \"),(!_vm.Procjena.length && !_vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',[_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"Nema podataka.\"))])])])]):_vm._e(),_vm._v(\" \"),(_vm.showLineChart && _vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('line-chart',{attrs:{\"options\":_vm.optionsLineChart,\"data\":_vm.dataLineChart,\"type\":\"line\"}})],1)]):_vm._e(),_vm._v(\" \"),(!_vm.showLineChart && _vm.graph)?_c('div',{staticClass:\"row\"},[(!_vm.showLineChart && !_vm.spinner)?_c('div',{staticClass:\"col-md-12\"},[_c('div',[_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"Nema podataka.\"))])])]):_vm._e(),_vm._v(\" \"),(!_vm.showLineChart && _vm.spinner)?_c('div',{staticClass:\"col-md-12\",staticStyle:{\"min-height\":\"400px\"}},[_c('div',{staticStyle:{\"display\":\"flex\",\"flex-direction\":\"row\",\"justify-content\":\"center\",\"align-items\":\"center\"}},[_c('div',{staticStyle:{\"float\":\"left\"}}),_vm._v(\" \"),_c('span',{staticStyle:{\"vertical-align\":\"middle\"}},[_c('atom-spinner',{staticStyle:{\"opacity\":\"0.25\"},attrs:{\"animation-duration\":1000,\"size\":300,\"color\":'#4ae387'}})],1)])]):_vm._e()]):_vm._e()]),_vm._v(\" \"),_c('patient-evaluation-multi',{ref:\"staticModalLabAssayEvalMulti\",attrs:{\"show\":_vm.show,\"multiparam_izbor\":_vm.multiparam_izbor,\"multiparam_izbornik\":_vm.multiparam_izbornik,\"cancelText\":\"ZATVORI\",\"okText\":\"POTVRDI\"},on:{\"update:show\":function($event){_vm.show=$event}}},[_c('div',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_c('span',{staticStyle:{\"color\":\"#4ae387\"}},[_vm._v(_vm._s(_vm.analiza_eval.ime + ' (' + _vm.analiza_eval.analit + ')'))]),_vm._v(\" \"),_c('span',[_vm._v(_vm._s(\" - Rezultati analize u zadnjih 14 dana\"))])]),_vm._v(\" \"),(_vm.Procjena.length && !_vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',{staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-striped table-sm color-icon-label-table\"},[_c('thead',[_c('tr',{attrs:{\"align\":\"middle\"}},[_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('REZULTAT'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('JEDINICA'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('REFERENCE'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"20%\"}},[_vm._v(_vm._s('DATUM'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"15%\"}},[_vm._v(_vm._s('VRIJEME'))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"5%\",\"align\":\"middle\"}})])]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.Procjena),function(element,index){return _c('tr',{key:index,class:{\n                        'table-danger': _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Red', \n                        'table-success': _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Green',\n                        'table-warning': _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Yellow'\n                      },attrs:{\"align\":\"middle\"}},[_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.rezultat))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.jedinica))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(_vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[4]))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"19%\"}},[_vm._v(_vm._s(element.datum))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"15%\"}},[_vm._v(_vm._s(element.vrijeme))]),_vm._v(\" \"),_c('td',{attrs:{\"width\":\"9%\",\"align\":\"middle\"}},[_c('i',{class:{'fa fa-exclamation-triangle icon-right input-icon error-icon' : _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Red'}}),_vm._v(\" \"),_c('i',{class:{'fa fa-check success-icon icon-right input-icon' : _vm.Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, _vm.$store.state.site, element.interp, element.extend, _vm.spec)[5] === 'Green'}})])])}))]),_vm._v(\" \"),_c('div',{staticStyle:{\"text-align\":\"center\"}},[_c('span',{staticClass:\"circle badge-info\"}),_vm._v(\"\\n              \"+_vm._s(_vm.table_header)+\"\\n            \")])])])]):_vm._e(),_vm._v(\" \"),(!_vm.Procjena.length && !_vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',[_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"Nema podataka.\"))])])])]):_vm._e(),_vm._v(\" \"),(_vm.showLineChart && _vm.graph)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('line-chart',{attrs:{\"options\":_vm.optionsLineChart,\"data\":_vm.dataLineChart,\"type\":\"line\"}})],1)]):_vm._e(),_vm._v(\" \"),(!_vm.showLineChart && _vm.graph)?_c('div',{staticClass:\"row\"},[(!_vm.showLineChart && !_vm.spinner)?_c('div',{staticClass:\"col-md-12\"},[_c('div',[_c('span',{staticStyle:{\"color\":\"#e34a4a\"}},[_vm._v(_vm._s(\"Nema podataka.\"))])])]):_vm._e(),_vm._v(\" \"),(!_vm.showLineChart && _vm.spinner)?_c('div',{staticClass:\"col-md-12\",staticStyle:{\"min-height\":\"400px\"}},[_c('div',{staticStyle:{\"display\":\"flex\",\"flex-direction\":\"row\",\"justify-content\":\"center\",\"align-items\":\"center\"}},[_c('div',{staticStyle:{\"float\":\"left\"}}),_vm._v(\" \"),_c('span',{staticStyle:{\"vertical-align\":\"middle\"}},[_c('atom-spinner',{staticStyle:{\"opacity\":\"0.25\"},attrs:{\"animation-duration\":1000,\"size\":300,\"color\":'#4ae387'}})],1)])]):_vm._e()]):_vm._e()])],1):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',{staticClass:\"col-md-6\"},[_c('loading',{attrs:{\"active\":_vm.isLoading,\"can-cancel\":false,\"on-cancel\":_vm.onCancel,\"color\":\"#4ae387\",\"is-full-page\":_vm.fullPage},on:{\"update:active\":function($event){_vm.isLoading=$event}}})],1),_vm._v(\" \"),_c('div',{staticClass:\"col-md-6\"},[(false)?_c('button',{on:{\"click\":function($event){$event.preventDefault();_vm.Test($event)}}},[_vm._v(_vm._s('Loading...'))]):_vm._e()])])])])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-3f02d9e7\",\"hasScoped\":true,\"transformToRequire\":{\"video\":\"src\",\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/obrada/Obrada.vue\n// module id = IEaf\n// module chunks = 6","<template>\r\n  <div class=\"collapse-page\">\r\n    <div v-if=\"show\" class=\"flex md12\">\r\n      <!-- Prikaz nalaza -->\r\n\r\n      <div v-show=\"!main && pdf\">\r\n        <div class=\"btn-container\">\r\n          <button v-show=\"verificiran\" class=\"btn btn-secondary btn-sm\" @click.prevent=\"Nazad()\">\r\n            <span class=\"fa fa-step-backward\"></span>\r\n            {{ ' NAZAD'}}\r\n          </button>\r\n          <button\r\n            v-show=\"!verificiran\"\r\n            class=\"btn btn-secondary-danger btn-sm\"\r\n            @click.prevent=\"Nazad()\"\r\n          >\r\n            <span class=\"fa fa-step-backward\"></span>\r\n            {{ ' NAZAD'}}\r\n          </button>\r\n          <button\r\n            v-show=\"email_button && verificiran\"\r\n            class=\"btn btn-secondary btn-sm pull-right\"\r\n            :disabled=\"!Email(email)\"\r\n            @click.prevent=\"MailDialog()\"\r\n          >\r\n            <span class=\"glyphicon glyphicon-send\"></span>\r\n            {{ ' Pošalji'}}\r\n          </button>\r\n          <div v-show=\"email_button && verificiran\" class=\"form-group with-icon-left pull-right\">\r\n            <div class=\"input-group\">\r\n              <input\r\n                size=\"40\"\r\n                id=\"input-icon-left\"\r\n                name=\"input-icon-left\"\r\n                v-model=\"email\"\r\n                title=\" \"\r\n                required\r\n              />\r\n              <i class=\"fa fa-envelope-o icon-left input-icon\"></i>\r\n              <label class=\"control-label\" for=\"input-icon-left\">{{'Email adresa'}}</label>\r\n              <i class=\"bar\"></i>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <hr />\r\n\r\n        <!-- PDFObject -->\r\n\r\n        <div id=\"pdf-container\"></div>\r\n      </div>\r\n\r\n      <!-- Prikaz rezultata (Main screen) -->\r\n\r\n      <vuestic-widget\r\n        v-show=\"main\"\r\n        :headerText=\"header\"\r\n        :pagination=\"pagination\"\r\n        :main=\"main\"\r\n        :data_pid=\"Number(data_pid)\"\r\n        :data_length=\"Number(data_length)\"\r\n        :rezultati_length=\"Results.length\"\r\n        :spol=\"data_spol\"\r\n        :data_min=\"Number(data_min)\"\r\n        :datum=\"query_date\"\r\n        :today=\"today_date\"\r\n        :forward_disabled=\"forward_disabled\"\r\n        :backward_disabled=\"backward_disabled\"\r\n      >\r\n        <vuestic-accordion-obrada>\r\n          <vuestic-collapse-obrada\r\n            v-for=\"uzorak in uzorci\"\r\n            v-show=\"!uzorak.removed\"\r\n            :id=\"uzorak.sid\"\r\n            :key=\"uzorak.sid\"\r\n            :sample=\"uzorak\"\r\n          >\r\n            <span :id=\"uzorak.sid\" slot=\"header\">{{uzorak.sid}}</span>\r\n            <div slot=\"body\">\r\n              <div style=\"line-height: 10px;\">&nbsp;</div>\r\n\r\n              <!-- | Microbiology Table -->\r\n\r\n              <div v-if=\"uzorak.tip.includes('Mikrobiologija')\" class=\"va-row\">\r\n                <div v-show=\"show_table\" class=\"table-responsive\">\r\n                  <table class=\"table table-striped first-td-padding\">\r\n                    <thead>\r\n                      <tr align=\"middle\">\r\n                        <td v-if=\"uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN'\"></td>\r\n                        <td>{{'ANALIZA'}}</td>\r\n                        <td>{{'REZULTAT'}}</td>\r\n                        <td>{{'JEDINICA'}}</td>\r\n                        <td>{{'REFERENCE'}}</td>\r\n                        <td v-if=\"uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN'\"></td>\r\n                        <td\r\n                          v-if=\"uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN'\"\r\n                        >{{'PONOVI'}}</td>\r\n                        <td></td>\r\n                      </tr>\r\n                    </thead>\r\n                    <!-- Table Body -->\r\n                    <tbody>\r\n                      <tr\r\n                        align=\"middle\"\r\n                        v-for=\"(test, index) in rezultati\"\r\n                        v-show=\"index < 1\"\r\n                        :key=\"test.labassay_id\"\r\n                        v-bind:class=\"{\r\n                          'table-danger': (test.rezultat_m.length && test.rezultat_m[0].pozitivan), \r\n                          'table-success': (test.rezultat_m.length && test.rezultat_m[0].negativan),\r\n                          'table-warning': false\r\n                        }\"\r\n                      >\r\n                        <td v-if=\"uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN'\">\r\n                          <span\r\n                            v-if=\"uzorak.status === 'ZAPRIMLJEN'\"\r\n                            style=\"color:#e34a4a;\"\r\n                            @click.prevent=\"MicroResultSelect($event)\"\r\n                            class=\"fa fa-bug\"\r\n                          ></span>\r\n                          <span\r\n                            v-if=\"uzorak.status != 'ZAPRIMLJEN'\"\r\n                            @click.prevent=\"ResetSample($event)\"\r\n                            style=\"color:#e34a4a;\"\r\n                            class=\"fa fa-trash\"\r\n                          ></span>\r\n                        </td>\r\n                        <!-- ANALIZA -->\r\n                        <td :title=\"test.analit\">\r\n                          <span>{{test.ime}}</span>\r\n                        </td>\r\n                        <!-- REZULTAT -->\r\n                        <td v-if=\"test.realizovan\">\r\n                          <button\r\n                            :id=\"test.labassay_id\"\r\n                            class=\"btn btn-primary btn-micro\"\r\n                            @click.prevent=\"OpenMicro($event, test)\"\r\n                          >\r\n                            <span\r\n                              :id=\"test.labassay_id\"\r\n                              @click.prevent=\"OpenMicro($event, test)\"\r\n                              class=\"glyphicon glyphicon-search\"\r\n                            ></span>\r\n                            {{'VIŠE'}}\r\n                          </button>\r\n                        </td>\r\n                        <td v-if=\"!test.realizovan\">\r\n                          <button :id=\"test.labassay_id\" class=\"btn btn-pale btn-micro\">\r\n                            <span :id=\"test.labassay_id\" class=\"glyphicon glyphicon-ban-circle\"></span>\r\n                            {{'VIŠE'}}\r\n                          </button>\r\n                        </td>\r\n                        <!-- JEDINICA -->\r\n                        <td>{{test.unit}}</td>\r\n                        <!-- REFERENCE -->\r\n                        <td>{{'/'}}</td>\r\n                        <td v-if=\"uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN'\">\r\n                          <i\r\n                            style=\"font-size: 15px; color: #f7cc36; opacity: 0;\"\r\n                            class=\"glyphicon glyphicon-stats\"\r\n                            id=\"reference\"\r\n                            title=\" \"\r\n                          ></i>\r\n                        </td>\r\n                        <!-- PONOVI -->\r\n                        <td v-if=\"uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN'\">\r\n                          <button class=\"btn btn-pale btn-micro\">\r\n                            <span class=\"glyphicon glyphicon-ban-circle\"></span>\r\n                          </button>\r\n                        </td>\r\n                        <!--  -->\r\n                        <td>\r\n                          <i\r\n                            @click.prevent=\"Exclamation(test)\"\r\n                            v-bind:class=\"{'fa fa-exclamation-triangle icon-right input-icon error-icon' : false}\"\r\n                          ></i>\r\n                          <i\r\n                            v-bind:class=\"{'fa fa-check success-icon icon-right input-icon' : false}\"\r\n                          ></i>\r\n                        </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n\r\n              <!-- END of Microbiology Table | -->\r\n\r\n              <!-- Uzorci | Default Table -->\r\n\r\n              <div v-if=\"!uzorak.tip.includes('Mikrobiologija')\" class=\"va-row\">\r\n                <div v-show=\"show_table\" class=\"table-responsive\">\r\n                  <table class=\"table table-striped first-td-padding\">\r\n                    <thead>\r\n                      <tr align=\"middle\">\r\n                        <td v-if=\"uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN'\"></td>\r\n                        <td>{{'ANALIZA'}}</td>\r\n                        <td>{{'REZULTAT'}}</td>\r\n                        <td>{{'JEDINICA'}}</td>\r\n                        <td>{{'REFERENCE'}}</td>\r\n                        <td v-if=\"uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN'\"></td>\r\n                        <td\r\n                          v-if=\"uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN' && calculated\"\r\n                        >{{'AKCIJA'}}</td>\r\n                        <td\r\n                          v-if=\"uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN'\"\r\n                        >{{'PONOVI'}}</td>\r\n                        <td></td>\r\n                      </tr>\r\n                    </thead>\r\n                    <!-- Table Body -->\r\n                    <tbody>\r\n                      <tr\r\n                        align=\"middle\"\r\n                        v-for=\"test in rezultati\"\r\n                        :key=\"test.labassay_id\"\r\n                        v-bind:class=\"{\r\n                          'table-danger': Interpretacija(test.analit, test.rezultat, test.unit, test.dRef, test.gRef, $store.state.site, test.interp, test.extend, spec)[5] === 'Red' && !test.multidata, \r\n                          'table-success': Interpretacija(test.analit, test.rezultat, test.unit, test.dRef, test.gRef, $store.state.site, test.interp, test.extend, spec)[5] === 'Green' && !test.multidata,\r\n                          'table-warning': Interpretacija(test.analit, test.rezultat, test.unit, test.dRef, test.gRef, $store.state.site, test.interp, test.extend, spec)[5] === 'Yellow' && !test.multidata\r\n                        }\"\r\n                      >\r\n                        <td v-if=\"uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN'\">\r\n                          <i\r\n                            v-if=\"!test.multidata\"\r\n                            @click.prevent=\"SelectAnalyser(test)\"\r\n                            style=\"color:#4ae387;\"\r\n                            class=\"glyphicon glyphicon-object-align-bottom\"\r\n                          ></i>\r\n\r\n                          <span\r\n                            v-if=\"test.multidata\"\r\n                            style=\"color:#d9d9d9;\"\r\n                            class=\"glyphicon glyphicon-object-align-bottom\"\r\n                          ></span>\r\n                        </td>\r\n                        <!-- ANALIZA -->\r\n                        <td :title=\"test.analit\">\r\n                          <span\r\n                            @contextmenu=\"LabAssayEval($event, test)\"\r\n                            @click.prevent=\"Evaluation(test)\"\r\n                          >{{test.ime}}</span>\r\n                        </td>\r\n                        <!-- REZULTAT -->\r\n                        <td v-if=\"!test.multidata\">\r\n                          <div\r\n                            v-show=\"test.edit == false\"\r\n                            style=\"display:inline; font-size: 14px; line-height: 4.5px;\"\r\n                          >\r\n                            <label>\r\n                              <strong>{{ test.rezultat }}</strong>\r\n                            </label>\r\n                          </div>\r\n                          <div v-show=\"test.edit == true\" style=\"display:inline; line-height: 5px;\">\r\n                            <select\r\n                              v-if=\"test.select_options != undefined\"\r\n                              style=\"width:110px\"\r\n                              v-model=\"test.rezultat\"\r\n                            >\r\n                              <option\r\n                                v-for=\"option in test.select_options\"\r\n                                :key=\"option\"\r\n                              >{{ option }}</option>\r\n                            </select>\r\n                          </div>\r\n                          <div v-show=\"test.edit == true\" style=\"display:inline;\">\r\n                            <input\r\n                              v-if=\"test.select_options === undefined\"\r\n                              v-model=\"test.rezultat\"\r\n                              style=\"width:110px;font-size: 12px; line-height: 7px;\"\r\n                            />\r\n                          </div>\r\n                          <sup\r\n                            v-show=\"test.vise > 2\"\r\n                            @click.prevent=\"GetResults(test, uzorak.status)\"\r\n                          >\r\n                            <i\r\n                              style=\"font-size: 5px; color: #e34a4a;\"\r\n                              class=\"fa fa-star\"\r\n                              id=\"star\"\r\n                              title=\" \"\r\n                            ></i>\r\n                          </sup>\r\n                          <sup v-show=\"test.vise < 3\">\r\n                            <i\r\n                              style=\"font-size: 5px;  opacity: 0;\"\r\n                              class=\"fa fa-star-o\"\r\n                              id=\"star\"\r\n                              title=\" \"\r\n                            ></i>\r\n                          </sup>\r\n                        </td>\r\n                        <td v-if=\"test.multidata && test.realizovan\">\r\n                          <button\r\n                            :id=\"test.labassay_id\"\r\n                            class=\"btn btn-primary btn-micro\"\r\n                            @click.prevent=\"MultiGet($event, test.ime, test.analit, test.rezultat, test.odobren)\"\r\n                          >\r\n                            <span\r\n                              :id=\"test.labassay_id\"\r\n                              @click.prevent=\"MultiGet($event, test.ime, test.analit, test.rezultat, test.odobren)\"\r\n                              class=\"glyphicon glyphicon-search\"\r\n                            ></span>\r\n                            {{'VIŠE'}}\r\n                          </button>\r\n                          <sup\r\n                            v-show=\"test.multi_count > 2\"\r\n                            @click.prevent=\"GetResultsMulti(test, uzorak.status)\"\r\n                          >\r\n                            <i\r\n                              style=\"font-size: 5px; color: #e34a4a;\"\r\n                              class=\"fa fa-star\"\r\n                              id=\"star\"\r\n                              title=\" \"\r\n                            ></i>\r\n                          </sup>\r\n                          <sup v-show=\"test.multi_count < 3\">\r\n                            <i\r\n                              style=\"font-size: 5px; opacity: 0;\"\r\n                              class=\"fa fa-star-o\"\r\n                              id=\"star\"\r\n                              title=\" \"\r\n                            ></i>\r\n                          </sup>\r\n                        </td>\r\n                        <td v-if=\"test.multidata && !test.realizovan\">\r\n                          <button\r\n                            :id=\"test.labassay_id\"\r\n                            class=\"btn btn-warning btn-micro\"\r\n                            @click.prevent=\"MultiGet($event, test.ime, test.analit, test.rezultat, test.odobren)\"\r\n                          >\r\n                            <span\r\n                              :id=\"test.labassay_id\"\r\n                              @click.prevent=\"MultiGet($event, test.ime, test.analit, test.rezultat, test.odobren)\"\r\n                              class=\"glyphicon glyphicon-search\"\r\n                            ></span>\r\n                            {{'VIŠE'}}\r\n                          </button>\r\n                          <sup\r\n                            v-show=\"test.multi_count > 2\"\r\n                            @click.prevent=\"GetResultsMulti(test, uzorak.status)\"\r\n                          >\r\n                            <i\r\n                              style=\"font-size: 5px; color: #e34a4a;\"\r\n                              class=\"fa fa-star\"\r\n                              id=\"star\"\r\n                              title=\" \"\r\n                            ></i>\r\n                          </sup>\r\n                          <sup v-show=\"test.multi_count < 3\">\r\n                            <i\r\n                              style=\"font-size: 5px; opacity: 0;\"\r\n                              class=\"fa fa-star-o\"\r\n                              id=\"star\"\r\n                              title=\" \"\r\n                            ></i>\r\n                          </sup>\r\n                        </td>\r\n                        <!-- JEDINICA -->\r\n                        <td>{{test.unit}}</td>\r\n                        <!-- REFERENCE -->\r\n                        <td\r\n                          v-if=\"!test.multidata\"\r\n                        >{{Interpretacija(test.analit, test.rezultat, test.unit, test.dRef, test.gRef, $store.state.site, test.interp, test.extend, spec)[4]}}</td>\r\n                        <td v-if=\"test.multidata\">{{'/'}}</td>\r\n                        <td v-if=\"uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN'\">\r\n                          <i\r\n                            v-if=\"!test.multidata\"\r\n                            @click.prevent=\"Reference($event, test)\"\r\n                            style=\"font-size: 15px; color: #f7cc36;\"\r\n                            class=\"glyphicon glyphicon-stats\"\r\n                            id=\"reference\"\r\n                            title=\" \"\r\n                          ></i>\r\n                          <i\r\n                            v-if=\"test.multidata\"\r\n                            style=\"font-size: 15px; color: #f7cc36; opacity: 0;\"\r\n                            class=\"glyphicon glyphicon-stats\"\r\n                            id=\"reference\"\r\n                            title=\" \"\r\n                          ></i>\r\n                        </td>\r\n                        <!-- AKCIJA -->\r\n                        <td\r\n                          v-if=\"uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN' && calculated && !test.calculated\"\r\n                        >\r\n                          <button class=\"btn btn-pale btn-micro\">\r\n                            <span class=\"glyphicon glyphicon-ban-circle\"></span>\r\n                          </button>\r\n                        </td>\r\n                        <td\r\n                          v-if=\"uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN' && calculated && test.calculated\"\r\n                        >\r\n                          <button\r\n                            @click.prevent=\"Calculate($event, test.labassay_id, test.ime, test.id)\"\r\n                            :id=\"test.test\"\r\n                            class=\"btn btn-primary btn-micro\"\r\n                          >\r\n                            <span :id=\"test.test\" class=\"fa fa-calculator\"></span>\r\n                          </button>\r\n                        </td>\r\n                        <!-- PONOVI -->\r\n                        <td\r\n                          v-if=\"uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN' \r\n                          && (test.rezultat === '' || test.manual || test.calculated)\"\r\n                        >\r\n                          <button class=\"btn btn-pale btn-micro\">\r\n                            <span class=\"glyphicon glyphicon-ban-circle\"></span>\r\n                          </button>\r\n                        </td>\r\n                        <td\r\n                          v-if=\"uzorak.status != 'ODOBREN' &&  uzorak.status != 'VERIFICIRAN' \r\n                          && test.rezultat != '' && !test.manual && !test.calculated\"\r\n                        >\r\n                          <button\r\n                            v-if=\"!test.retest\"\r\n                            :id=\"test.test\"\r\n                            class=\"btn btn-primary btn-micro\"\r\n                            @click.prevent=\"RetestEnable($event)\"\r\n                          >\r\n                            <span :id=\"test.test\" class=\"fa fa-refresh\"></span>\r\n                          </button>\r\n                          <button\r\n                            v-if=\"test.retest\"\r\n                            :id=\"test.test\"\r\n                            class=\"btn btn-info btn-micro\"\r\n                            @click.prevent=\"RetestDisable($event)\"\r\n                          >\r\n                            <span :id=\"test.test\" class=\"glyphicon glyphicon-duplicate\"></span>\r\n                          </button>\r\n                        </td>\r\n                        <!--  -->\r\n                        <td>\r\n                          <i\r\n                            @click.prevent=\"Exclamation(test)\"\r\n                            v-bind:class=\"{'fa fa-exclamation-triangle icon-right input-icon error-icon' : Interpretacija(test.analit, test.rezultat, test.unit, test.dRef, test.gRef, $store.state.site, test.interp, test.extend, spec)[5] === 'Red' && !test.multidata}\"\r\n                          ></i>\r\n                          <i\r\n                            v-bind:class=\"{'fa fa-check success-icon icon-right input-icon' : Interpretacija(test.analit, test.rezultat, test.unit, test.dRef, test.gRef, $store.state.site, test.interp, test.extend, spec)[5] === 'Green' && !test.multidata}\"\r\n                          ></i>\r\n                        </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n\r\n              <!-- END of Uzorci | Default Table -->\r\n            </div>\r\n          </vuestic-collapse-obrada>\r\n        </vuestic-accordion-obrada>\r\n\r\n        <div style=\"min-height: 10px;\"></div>\r\n\r\n        <!-- Nalaz -->\r\n\r\n        <div v-if=\"verificiran\" class=\"va-row\">\r\n          <div class=\"flex md12\">\r\n            <vuestic-collapse-nalaz\r\n              :final=\"verificiran\"\r\n              :final_pdf=\"final_pdf\"\r\n              :samples=\"samples\"\r\n              :pdf=\"link\"\r\n              :pacijent=\"ime + ' ' + prezime\"\r\n            >\r\n              <span slot=\"header\">Nalaz</span>\r\n              <div slot=\"body\">\r\n                <div class=\"va-row\"></div>\r\n              </div>\r\n            </vuestic-collapse-nalaz>\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <hr />\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n          <div class=\"col-md-3\"></div>\r\n          <div class=\"col-md-6\">\r\n            <div class=\"btn-container\">\r\n              <button\r\n                class=\"btn btn-secondary btn-sm wizard-back pull-left\"\r\n                @click.prevent=\"Povratak()\"\r\n              >\r\n                <span class=\"fa fa-backward\"></span>\r\n                {{ ' POVRATAK'}}\r\n              </button>\r\n              <button\r\n                style=\"text-transform: none; color: #e34a4a;\"\r\n                v-if=\"partials_condition && !verificiran\"\r\n                class=\"btn btn-secondary-warning btn-sm wizard-back pull-right\"\r\n                @click.prevent=\"Partials()\"\r\n              >\r\n                <span style=\"color: #e34a4a;\" class=\"fa fa-file-pdf-o\"></span>\r\n                {{ ' Djelimični nalaz'}}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </vuestic-widget>\r\n\r\n      <!-- Modals -->\r\n\r\n      <!-- Prikaz Analita za Multi Testove -->\r\n\r\n      <vuestic-modal-multi\r\n        :show.sync=\"show\"\r\n        :sample=\"sample\"\r\n        ref=\"largeModalMulti\"\r\n        cancelText=\"ODUSTANI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\">{{naslov}}</div>\r\n        <div class=\"table-responsive\">\r\n          <table class=\"table table-striped first-td-padding\">\r\n            <thead>\r\n              <tr align=\"middle\">\r\n                <td width=\"10%\"></td>\r\n                <td width=\"20%\">{{'ANALIT'}}</td>\r\n                <td width=\"30%\">{{'REZULTAT'}}</td>\r\n                <td width=\"10%\">{{'JEDINICA'}}</td>\r\n                <td width=\"20%\">{{'REFERENCE'}}</td>\r\n                <td width=\"10%\"></td>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr\r\n                align=\"middle\"\r\n                v-for=\"test in analiti\"\r\n                :key=\"test.labID\"\r\n                v-bind:class=\"{\r\n                    'table-danger': Interpretacija(test.opis, test.rezultat, test.jedinica, test.refd, test.refg, $store.state.site, test.interp, test.extend, spec)[5] === 'Red' && !test.rezultat_multiple.length, \r\n                    'table-success': Interpretacija(test.opis, test.rezultat, test.jedinica, test.refd, test.refg, $store.state.site, test.interp, test.extend, spec)[5] === 'Green' && !test.rezultat_multiple.length, \r\n                    'table-warning': Interpretacija(test.opis, test.rezultat, test.jedinica, test.refd, test.refg, $store.state.site, test.interp, test.extend, spec)[5] === 'Yellow' && !test.rezultat_multiple.length                                  \r\n                  }\"\r\n              >\r\n                <td v-if=\"test.flag != ''\">{{test.flag}}</td>\r\n                <td v-if=\"test.flag === ''\">&nbsp;</td>\r\n                <td :title=\"test.opis\">{{test.naziv}}</td>\r\n                <td :id=\"test.analit\">\r\n                  <div v-show=\"test.edit == false\">\r\n                    <label>\r\n                      <strong>{{ test.rezultat }}</strong>\r\n                    </label>\r\n                  </div>\r\n                  <select\r\n                    multiple\r\n                    :size=\"test.select_options.length\"\r\n                    v-if=\"test.select_options != undefined && (test.kod === 's03' || test.kod === 's04' || test.kod === 's08' || test.kod === 's09')\"\r\n                    style=\"min-width:200px;\"\r\n                    v-show=\"test.edit == true\"\r\n                    v-model=\"test.rezultat_multiple\"\r\n                  >\r\n                    <option v-for=\"option in test.select_options\" :key=\"option\">{{ option }}</option>\r\n                  </select>\r\n                  <select\r\n                    v-if=\"test.select_options != undefined && (test.kod != 's03' && test.kod != 's04' && test.kod != 's08' && test.kod != 's09')\"\r\n                    style=\"width:200px;\"\r\n                    v-show=\"test.edit == true\"\r\n                    v-model=\"test.rezultat\"\r\n                  >\r\n                    <option v-for=\"option in test.select_options\" :key=\"option\">{{ option }}</option>\r\n                  </select>\r\n                  <input\r\n                    v-if=\"test.select_options === undefined\"\r\n                    style=\"width:200px;\"\r\n                    v-show=\"test.edit == true\"\r\n                    v-model=\"test.rezultat\"\r\n                  />\r\n                </td>\r\n                <td>{{Interpretacija(test.opis, test.rezultat, test.jedinica, test.refd, test.refg, $store.state.site, test.interp, test.extend, spec)[3]}}</td>\r\n                <td>{{Interpretacija(test.opis, test.rezultat, test.jedinica, test.refd, test.refg, $store.state.site, test.interp, test.extend, spec)[4]}}</td>\r\n                <td>\r\n                  <i\r\n                    @click.prevent=\"ExclamationMulti(test)\"\r\n                    v-bind:class=\"{'fa fa-exclamation-triangle icon-right input-icon error-icon' : Interpretacija(test.opis, test.rezultat, test.jedinica, test.refd, test.refg, $store.state.site, test.interp, test.extend, spec)[5] === 'Red' && !test.rezultat_multiple.length}\"\r\n                  ></i>\r\n                  <i\r\n                    v-bind:class=\"{'fa fa-check success-icon icon-right input-icon' : Interpretacija(test.opis, test.rezultat, test.jedinica, test.refd, test.refg, $store.state.site, test.interp, test.extend, spec)[5] === 'Green' && !test.rezultat_multiple.length}\"\r\n                  ></i>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </vuestic-modal-multi>\r\n\r\n      <!-- | Microbiology Modals -->\r\n\r\n      <vuestic-modal-micro-reset\r\n        :show.sync=\"show\"\r\n        ref=\"staticModalResetSample\"\r\n        cancelText=\"ODUSTANI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\">\r\n          <span style=\"color: #acb5be;\">{{'Brisanje rezultata: '}}</span>\r\n          <span style=\"color: #e34a4a;\">{{CurrentTest}}</span>\r\n        </div>\r\n        <div>\r\n          <h5>{{ 'Jeste li sigurni da želite obrisati rezultat?'}}</h5>\r\n        </div>\r\n      </vuestic-modal-micro-reset>\r\n\r\n      <vuestic-modal-micro-bactery\r\n        :show.sync=\"show\"\r\n        :large=\"true\"\r\n        :sample=\"sample\"\r\n        :update=\"$store.state.access.level < 1 && !ShowAntibiotics && !ShowBacteries && MicrobiologyScenario === 'MAIBPoR'\"\r\n        :povratak=\"ShowAntibiotics || ShowBacteries\"\r\n        :empty=\"TemporaryAntibiotics.length > 0 || TemporaryBacteriesAdd.length > 0\"\r\n        ref=\"staticModalMicroBactery\"\r\n        cancelText=\"ODUSTANI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\" v-if=\"!ShowAntibiotics && !ShowBacteries\">\r\n          <span style=\"color: #acb5be;\">{{'Rezultat analize: '}}</span>\r\n          <span style=\"color: #e34a4a;\">{{CurrentTest}}</span>\r\n        </div>\r\n        <div slot=\"title\" v-if=\"ShowAntibiotics && !ShowBacteries\">\r\n          <span style=\"color: #acb5be;\">{{'Antibiotici | '}}</span>\r\n          <span style=\"color: #e34a4a;\">{{\"Izbornik\"}}</span>\r\n        </div>\r\n        <div slot=\"title\" v-if=\"!ShowAntibiotics && ShowBacteries\">\r\n          <span style=\"color: #acb5be;\">{{'Bakterije | '}}</span>\r\n          <span style=\"color: #e34a4a;\">{{\"Izbornik\"}}</span>\r\n        </div>\r\n        <div>\r\n          <!--  -->\r\n          <div class=\"row\" v-if=\"show_table\">\r\n            <div\r\n              class=\"col-md-1\"\r\n              v-if=\"MicrobiologyScenario === 'MAIBPoR' && ShowBacteries && !ShowAntibiotics\"\r\n            ></div>\r\n            <div\r\n              class=\"col-md-10\"\r\n              v-if=\"MicrobiologyScenario === 'MAIBPoR' && ShowBacteries && !ShowAntibiotics\"\r\n            >\r\n              <div class=\"col-md-12\" v-if=\"TemporaryBacteries.length\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-4\">\r\n                    <div\r\n                      class=\"form-check abc-checkbox abc-checkbox-primary\"\r\n                      v-for=\"bactery in filteredBacteries(1, 3)\"\r\n                      :key=\"bactery._id\"\r\n                    >\r\n                      <input\r\n                        class=\"form-check-input\"\r\n                        :id=\"bactery._id\"\r\n                        type=\"checkbox\"\r\n                        v-model=\"bactery.chosen\"\r\n                        @click=\"AddBacteries(bactery)\"\r\n                        :disabled=\"bactery.disabled\"\r\n                      />\r\n                      <label class=\"form-check-label\" for=\"checkbox\">\r\n                        <span\r\n                          v-if=\"!bactery.chosen\"\r\n                          style=\"color: #e34a4a;\"\r\n                          class=\"abc-label-text\"\r\n                        >{{bactery.opis}}</span>\r\n                        <span\r\n                          v-if=\"bactery.chosen\"\r\n                          style=\"color: #4ae387;\"\r\n                          class=\"abc-label-text\"\r\n                        >{{bactery.opis}}</span>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-4\">\r\n                    <div\r\n                      class=\"form-check abc-checkbox abc-checkbox-primary\"\r\n                      v-for=\"bactery in filteredBacteries(2, 3)\"\r\n                      :key=\"bactery._id\"\r\n                    >\r\n                      <input\r\n                        class=\"form-check-input\"\r\n                        :id=\"bactery._id\"\r\n                        type=\"checkbox\"\r\n                        v-model=\"bactery.chosen\"\r\n                        @click=\"AddBacteries(bactery)\"\r\n                        :disabled=\"bactery.disabled\"\r\n                      />\r\n                      <label class=\"form-check-label\" for=\"checkbox\">\r\n                        <span\r\n                          v-if=\"!bactery.chosen\"\r\n                          style=\"color: #e34a4a;\"\r\n                          class=\"abc-label-text\"\r\n                        >{{bactery.opis}}</span>\r\n                        <span\r\n                          v-if=\"bactery.chosen\"\r\n                          style=\"color: #4ae387;\"\r\n                          class=\"abc-label-text\"\r\n                        >{{bactery.opis}}</span>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-4\">\r\n                    <div\r\n                      class=\"form-check abc-checkbox abc-checkbox-primary\"\r\n                      v-for=\"bactery in filteredBacteries(3, 3)\"\r\n                      :key=\"bactery._id\"\r\n                    >\r\n                      <input\r\n                        class=\"form-check-input\"\r\n                        :id=\"bactery._id\"\r\n                        type=\"checkbox\"\r\n                        v-model=\"bactery.chosen\"\r\n                        @click=\"AddBacteries(bactery)\"\r\n                        :disabled=\"bactery.disabled\"\r\n                      />\r\n                      <label class=\"form-check-label\" for=\"checkbox\">\r\n                        <span\r\n                          v-if=\"!bactery.chosen\"\r\n                          style=\"color: #e34a4a;\"\r\n                          class=\"abc-label-text\"\r\n                        >{{bactery.opis}}</span>\r\n                        <span\r\n                          v-if=\"bactery.chosen\"\r\n                          style=\"color: #4ae387;\"\r\n                          class=\"abc-label-text\"\r\n                        >{{bactery.opis}}</span>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div\r\n              class=\"col-md-1\"\r\n              v-if=\"MicrobiologyScenario === 'MAIBPoR' && ShowAntibiotics && !ShowBacteries\"\r\n            ></div>\r\n            <div\r\n              class=\"col-md-10\"\r\n              v-if=\"MicrobiologyScenario === 'MAIBPoR' && ShowAntibiotics && !ShowBacteries\"\r\n            >\r\n              <div class=\"col-md-12\" v-if=\"Antibiotics.length\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-4\">\r\n                    <div\r\n                      class=\"form-check abc-checkbox abc-checkbox-primary\"\r\n                      v-for=\"antibiotik in filteredAntibiotics(1, 3)\"\r\n                      :key=\"antibiotik._id\"\r\n                    >\r\n                      <input\r\n                        class=\"form-check-input\"\r\n                        :id=\"antibiotik._id\"\r\n                        type=\"checkbox\"\r\n                        v-model=\"antibiotik.chosen\"\r\n                        @click=\"AddAntibiotics(antibiotik)\"\r\n                        :disabled=\"antibiotik.disabled\"\r\n                      />\r\n                      <label class=\"form-check-label\" for=\"checkbox\">\r\n                        <span\r\n                          v-if=\"!antibiotik.chosen\"\r\n                          style=\"color: #e34a4a;\"\r\n                          class=\"abc-label-text\"\r\n                        >{{antibiotik.opis}}</span>\r\n                        <span\r\n                          v-if=\"antibiotik.chosen\"\r\n                          style=\"color: #4ae387;\"\r\n                          class=\"abc-label-text\"\r\n                        >{{antibiotik.opis}}</span>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-4\">\r\n                    <div\r\n                      class=\"form-check abc-checkbox abc-checkbox-primary\"\r\n                      v-for=\"antibiotik in filteredAntibiotics(2, 3)\"\r\n                      :key=\"antibiotik._id\"\r\n                    >\r\n                      <input\r\n                        class=\"form-check-input\"\r\n                        :id=\"antibiotik._id\"\r\n                        type=\"checkbox\"\r\n                        v-model=\"antibiotik.chosen\"\r\n                        @click=\"AddAntibiotics(antibiotik)\"\r\n                        :disabled=\"antibiotik.disabled\"\r\n                      />\r\n                      <label class=\"form-check-label\" for=\"checkbox\">\r\n                        <span\r\n                          v-if=\"!antibiotik.chosen\"\r\n                          style=\"color: #e34a4a;\"\r\n                          class=\"abc-label-text\"\r\n                        >{{antibiotik.opis}}</span>\r\n                        <span\r\n                          v-if=\"antibiotik.chosen\"\r\n                          style=\"color: #4ae387;\"\r\n                          class=\"abc-label-text\"\r\n                        >{{antibiotik.opis}}</span>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-4\">\r\n                    <div\r\n                      class=\"form-check abc-checkbox abc-checkbox-primary\"\r\n                      v-for=\"antibiotik in filteredAntibiotics(3, 3)\"\r\n                      :key=\"antibiotik._id\"\r\n                    >\r\n                      <input\r\n                        class=\"form-check-input\"\r\n                        :id=\"antibiotik._id\"\r\n                        type=\"checkbox\"\r\n                        v-model=\"antibiotik.chosen\"\r\n                        @click=\"AddAntibiotics(antibiotik)\"\r\n                        :disabled=\"antibiotik.disabled\"\r\n                      />\r\n                      <label class=\"form-check-label\" for=\"checkbox\">\r\n                        <span\r\n                          v-if=\"!antibiotik.chosen\"\r\n                          style=\"color: #e34a4a;\"\r\n                          class=\"abc-label-text\"\r\n                        >{{antibiotik.opis}}</span>\r\n                        <span\r\n                          v-if=\"antibiotik.chosen\"\r\n                          style=\"color: #4ae387;\"\r\n                          class=\"abc-label-text\"\r\n                        >{{antibiotik.opis}}</span>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              class=\"col-md-1\"\r\n              v-if=\"MicrobiologyScenario === 'MAIBPoR' && !ShowAntibiotics && !ShowBacteries\"\r\n            ></div>\r\n            <div\r\n              class=\"col-md-10\"\r\n              v-if=\"MicrobiologyScenario === 'MAIBPoR' && !ShowAntibiotics && !ShowBacteries\"\r\n            >\r\n              <vuestic-tabs-bactery\r\n                v-if=\"SelectedBacteries.length\"\r\n                :names=\"BacteryTabs\"\r\n                :tab=\"CurrentTab\"\r\n                :id=\"CurrentTab\"\r\n                :prikazi=\"sample.status != 'VERIFICIRAN' && sample.status != 'ODOBREN'\"\r\n                ref=\"tabs\"\r\n              >\r\n                <div :slot=\"CurrentTab\" v-for=\"test in SelectedBacteries\" :key=\"test._id\">\r\n                  <div class=\"row\" v-show=\"test.opis === CurrentTab\">\r\n                    <!-- Antibiogram -->\r\n                    <div class=\"table-responsive\">\r\n                      <table class=\"table table-striped first-td-padding\">\r\n                        <thead>\r\n                          <tr align=\"left\">\r\n                            <td width=\"30%\">{{test.antibiogram.opis}}</td>\r\n                            <td width=\"10%\">{{''}}</td>\r\n                            <td width=\"20%\">{{''}}</td>\r\n                            <td width=\"20%\">{{''}}</td>\r\n                            <td width=\"20%\">{{''}}</td>\r\n                          </tr>\r\n                        </thead>\r\n                        <!-- Table Body -->\r\n                        <tbody>\r\n                          <tr\r\n                            align=\"left\"\r\n                            v-for=\"abtk in test.antibiogram.antibiotici\"\r\n                            :key=\"abtk._id\"\r\n                            v-bind:class=\"{'table-danger': false, 'table-success': false,'table-warning': false}\"\r\n                          >\r\n                            <!-- ANALIZA -->\r\n                            <td :title=\"abtk.opis\">{{abtk.opis}}</td>\r\n                            <td>\r\n                              <bactery-radio-button\r\n                                :disabled=\"sample.status === 'ODOBREN' || sample.status === 'VERIFICIRAN'\"\r\n                                :label=\"''\"\r\n                                :value=\"''\"\r\n                                :name=\"test._id + abtk._id\"\r\n                                v-model=\"abtk.rezultat\"\r\n                              />\r\n                            </td>\r\n                            <td>\r\n                              <postavke-radio-button\r\n                                :disabled=\"sample.status === 'ODOBREN' || sample.status === 'VERIFICIRAN'\"\r\n                                :label=\"'Senzitivan'\"\r\n                                :value=\"'S'\"\r\n                                :name=\"test._id + abtk._id\"\r\n                                v-model=\"abtk.rezultat\"\r\n                              />\r\n                            </td>\r\n                            <td>\r\n                              <postavke-radio-button\r\n                                :disabled=\"sample.status === 'ODOBREN' || sample.status === 'VERIFICIRAN'\"\r\n                                :label=\"'Intermedijaran'\"\r\n                                :value=\"'I'\"\r\n                                :name=\"test._id + abtk._id\"\r\n                                v-model=\"abtk.rezultat\"\r\n                              />\r\n                            </td>\r\n                            <td>\r\n                              <postavke-radio-button\r\n                                :disabled=\"sample.status === 'ODOBREN' || sample.status === 'VERIFICIRAN'\"\r\n                                :label=\"'Rezistentan'\"\r\n                                :value=\"'R'\"\r\n                                :name=\"test._id + abtk._id\"\r\n                                v-model=\"abtk.rezultat\"\r\n                              />\r\n                            </td>\r\n                          </tr>\r\n                        </tbody>\r\n                      </table>\r\n                    </div>\r\n                    <!-- END of Antibiogram -->\r\n                  </div>\r\n                </div>\r\n              </vuestic-tabs-bactery>\r\n            </div>\r\n\r\n            <div\r\n              class=\"col-md-12\"\r\n              v-if=\"MicrobiologyScenario === 'MANBNeR' || MicrobiologyScenario === 'MANBPoR' || MicrobiologyScenario === 'MAIBNeR'\"\r\n            >\r\n              <div v-show=\"show_table\" class=\"table-responsive\">\r\n                <table class=\"table table-striped first-td-padding\">\r\n                  <thead>\r\n                    <tr align=\"left\">\r\n                      <td>{{'REZULTAT'}}</td>\r\n                    </tr>\r\n                  </thead>\r\n                  <!-- Table Body -->\r\n                  <tbody>\r\n                    <tr\r\n                      align=\"left\"\r\n                      v-for=\"(test, index) in rezultati\"\r\n                      v-show=\"index < 1\"\r\n                      :key=\"test.labassay_id\"\r\n                      v-bind:class=\"{\r\n                          'table-danger':  (test.rezultat_m.length && test.rezultat_m[0].pozitivan), \r\n                          'table-success':  (test.rezultat_m.length && test.rezultat_m[0].negativan),\r\n                          'table-warning': false\r\n                        }\"\r\n                    >\r\n                      <td v-if=\"sample.status != 'ODOBREN' &&  sample.status != 'VERIFICIRAN'\">\r\n                        <div class=\"form-group\">\r\n                          <div class=\"input-group\">\r\n                            <textarea\r\n                              type=\"text\"\r\n                              id=\"simple-textarea\"\r\n                              v-model=\"test.rezultat\"\r\n                              required\r\n                            ></textarea>\r\n                            <label class=\"control-label\" for=\"simple-textarea\">{{ '' }}</label>\r\n                            <i class=\"bar\"></i>\r\n                          </div>\r\n                        </div>\r\n                      </td>\r\n                      <td v-if=\"sample.status === 'ODOBREN' ||  sample.status === 'VERIFICIRAN'\">\r\n                        <div class=\"form-group\">\r\n                          <div class=\"input-group\">\r\n                            <input id=\"input-icon-left\" title=\" \" name=\"input-icon-left\" disabled />\r\n                            <label\r\n                              v-if=\"test.rezultat.length\"\r\n                              class=\"control-label\"\r\n                              for=\"input-icon-left\"\r\n                            >{{test.rezultat}}</label>\r\n                            <label\r\n                              v-if=\"!test.rezultat.length\"\r\n                              class=\"control-label\"\r\n                              for=\"input-icon-left\"\r\n                            >{{\"Nema podataka.\"}}</label>\r\n                            <i class=\"bar\"></i>\r\n                          </div>\r\n                        </div>\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </vuestic-modal-micro-bactery>\r\n\r\n      <vuestic-modal-micro-result\r\n        :show.sync=\"show\"\r\n        :sample=\"sample\"\r\n        :large=\"ShowAllBacteries\"\r\n        :neg=\"ModalNegative\"\r\n        :pos=\"ModalPositive\"\r\n        :selected=\"ModalPositiveCondition\"\r\n        ref=\"staticModalSelectResult\"\r\n        cancelText=\"ODUSTANI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\">\r\n          <span style=\"color: #acb5be;\">{{MicrobiologyModalHeader}} |</span>\r\n          <span style=\"color: #e34a4a;\">{{\"Izbornik\"}}</span>\r\n        </div>\r\n\r\n        <div class=\"row\" v-if=\"!ModalNegative && !ModalPositive\">\r\n          <div class=\"col-md-6\">\r\n            <div class=\"row\">\r\n              <div class=\"col-md-3\"></div>\r\n              <div class=\"col-md-6\">\r\n                <button\r\n                  style=\"text-transform: none; border: 0px;\"\r\n                  class=\"btn btn-secondary btn-sm wizard-back pull-left\"\r\n                  @click=\"ModalNegative = true; ModalPositive = false;\"\r\n                >{{'Negativan'}}</button>\r\n              </div>\r\n              <div class=\"col-md-3\"></div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-6\">\r\n            <div class=\"row\">\r\n              <div class=\"col-md-2\"></div>\r\n              <div class=\"col-md-6\">\r\n                <button\r\n                  style=\"text-transform: none; border: 0px;\"\r\n                  class=\"btn btn-secondary-danger btn-sm wizard-next pull-right\"\r\n                  @click=\"ModalPositive = true; ModalNegative = false;\"\r\n                >{{'Pozitivan'}}</button>\r\n              </div>\r\n              <div class=\"col-md-4\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row\" v-if=\"ModalNegative && !ModalPositive\">\r\n          <div class=\"col-md-1\"></div>\r\n          <div class=\"col-md-11\">\r\n            <vuestic-radio-button\r\n              v-for=\"(desc, index) in MicrobiologyResult.NegativeDescriptions\"\r\n              :key=\"index\"\r\n              :label=\"MicrobiologyResult.NegativeDescriptions[index]\"\r\n              :id=\"MicrobiologyResult.NegativeDescriptions[index]\"\r\n              :value=\"MicrobiologyResult.NegativeDescriptions[index]\"\r\n              :name=\"MicrobiologyResult.NegativeDescriptions[index]\"\r\n              :disabled=\"false\"\r\n              v-model=\"NegativeResultSelection\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          class=\"row\"\r\n          v-if=\"!ModalNegative && ModalPositive && !MicrobiologyResult.DefaultBacteries.length\"\r\n        >\r\n          <div class=\"col-md-1\"></div>\r\n          <div class=\"col-md-11\">\r\n            <vuestic-radio-button\r\n              v-for=\"(desc, index) in MicrobiologyResult.PositiveDescriptions\"\r\n              :key=\"index\"\r\n              :label=\"MicrobiologyResult.PositiveDescriptions[index]\"\r\n              :id=\"MicrobiologyResult.PositiveDescriptions[index]\"\r\n              :value=\"MicrobiologyResult.PositiveDescriptions[index]\"\r\n              :name=\"MicrobiologyResult.PositiveDescriptions[index]\"\r\n              :disabled=\"false\"\r\n              v-model=\"PositiveResultSelection\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          class=\"row\"\r\n          v-if=\"!ModalNegative && ModalPositive && MicrobiologyResult.DefaultBacteries.length\"\r\n        >\r\n          <div class=\"col-md-6\">\r\n            <div class=\"row\">\r\n              <div class=\"col-md-2\"></div>\r\n              <div class=\"col-md-10\">\r\n                <div\r\n                  class=\"form-check abc-checkbox abc-checkbox-primary\"\r\n                  v-for=\"(bakt, index) in MicrobiologyResult.DefaultBacteries\"\r\n                  :key=\"index\"\r\n                >\r\n                  <input\r\n                    class=\"form-check-input\"\r\n                    :id=\"bakt._id\"\r\n                    type=\"checkbox\"\r\n                    v-model=\"bakt.chosen\"\r\n                    @click=\"SelectBactery(bakt, index)\"\r\n                  />\r\n                  <label class=\"form-check-label\" for=\"checkbox\">\r\n                    <span style=\"color: #e34a4a;\" class=\"abc-label-text\">{{bakt.opis}}</span>\r\n                  </label>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"col-md-6\">\r\n            <div class=\"row\">\r\n              <div class=\"col-md-1\"></div>\r\n              <div class=\"col-md-6\">\r\n                <a\r\n                  v-if=\"!ShowAllBacteries\"\r\n                  href=\"#\"\r\n                  @click.prevent=\"ShowAllBacteries = true\"\r\n                  style=\"font-size: 16px; color: #4ae387;\"\r\n                >Prikaži više</a>\r\n              </div>\r\n              <div class=\"col-md-5\"></div>\r\n            </div>\r\n\r\n            <div class=\"row\" v-if=\"ShowAllBacteries\">\r\n              <div class=\"col-md-1\"></div>\r\n              <div class=\"col-md-10\">\r\n                <div\r\n                  class=\"form-check abc-checkbox abc-checkbox-primary\"\r\n                  v-for=\"(bakt, index) in MicrobiologyResult.RemainingBacteries\"\r\n                  :key=\"index\"\r\n                >\r\n                  <input\r\n                    class=\"form-check-input\"\r\n                    :id=\"bakt._id\"\r\n                    type=\"checkbox\"\r\n                    v-model=\"bakt.chosen\"\r\n                    @click=\"SelectBactery(bakt, index)\"\r\n                  />\r\n                  <label class=\"form-check-label\" for=\"checkbox\">\r\n                    <span style=\"color: #e34a4a;\" class=\"abc-label-text\">{{bakt.opis}}</span>\r\n                  </label>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </vuestic-modal-micro-result>\r\n\r\n      <!-- End of Microbiology Modal | -->\r\n\r\n      <!-- Brisanje uzorka -->\r\n\r\n      <vuestic-modal-delete\r\n        :show.sync=\"show\"\r\n        ref=\"staticModalDeleteSample\"\r\n        cancelText=\"ODUSTANI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\">\r\n          <span style=\"color: #acb5be;\">{{'Brisanje uzorka: '}}</span>\r\n          <span style=\"color: #e34a4a;\">{{sid}}</span>\r\n        </div>\r\n        <div>\r\n          <h5>{{ 'Jeste li sigurni da želite obrisati uzorak?'}}</h5>\r\n        </div>\r\n      </vuestic-modal-delete>\r\n\r\n      <!-- Unos komentara -->\r\n\r\n      <vuestic-modal-comment\r\n        :show.sync=\"show\"\r\n        ref=\"staticModalComment\"\r\n        cancelText=\"ODUSTANI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\">{{ 'Unos komentara za uzorak: ' + sid }}</div>\r\n        <div>\r\n          <h5></h5>\r\n        </div>\r\n      </vuestic-modal-comment>\r\n\r\n      <!-- Uređivanje uzorka -->\r\n\r\n      <vuestic-modal-edit\r\n        :show.sync=\"show\"\r\n        :sample=\"sid\"\r\n        action=\"Edit\"\r\n        ref=\"staticModalEditSample\"\r\n        cancelText=\"ODUSTANI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\">{{ 'Uređivanje uzorka: ' + sid }}</div>\r\n        <div>\r\n          <h5></h5>\r\n        </div>\r\n      </vuestic-modal-edit>\r\n\r\n      <!-- Email Send -->\r\n\r\n      <vuestic-modal-mail\r\n        :show.sync=\"show\"\r\n        ref=\"staticModalSendMail\"\r\n        cancelText=\"ODUSTANI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\">\r\n          {{'Slanje nalaza na adresu: '}}\r\n          <span style=\"color: #4ae387;\">{{email}}</span>\r\n        </div>\r\n        <div>\r\n          <h5>{{'Jeste li sigurni da želite poslati nalaz?'}}</h5>\r\n        </div>\r\n      </vuestic-modal-mail>\r\n\r\n      <!--  -->\r\n\r\n      <vuestic-modal-all-results\r\n        :show.sync=\"show\"\r\n        ref=\"staticModalAllResults\"\r\n        cancelText=\"ODUSTANI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\">\r\n          {{'Izbor rezultata: '}}\r\n          <span style=\"color: #e34a4a;\">{{labassay}}</span>\r\n        </div>\r\n        <div>\r\n          <div class=\"table-responsive\">\r\n            <table class=\"table table-striped first-td-padding\">\r\n              <thead>\r\n                <tr>\r\n                  <td>analizator</td>\r\n                  <td>vrijeme</td>\r\n                  <td>rezultat</td>\r\n                  <td>jedinica</td>\r\n                  <td>reference</td>\r\n                  <td v-if=\"sample_status != 'ODOBREN' &&  sample_status != 'VERIFICIRAN'\">izbor</td>\r\n                  <td align=\"middle\"></td>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr\r\n                  v-for=\"test in vise.rezultat\"\r\n                  v-show=\"test.rezultat_f != ''\"\r\n                  :key=\"test._id\"\r\n                  v-bind:class=\"{\r\n                    'table-danger': Interpretacija(vise.labassay.analit, test.rezultat_f, test.jedinice_f, vise.refd, vise.refg, $store.state.site, vise.interp, vise.extend, spec)[5] === 'Red' && !test.multidata, \r\n                    'table-success': Interpretacija(vise.labassay.analit, test.rezultat_f, test.jedinice_f, vise.refd, vise.refg, $store.state.site, vise.interp, vise.extend, spec)[5] === 'Green' && !test.multidata,\r\n                    'table-warning': Interpretacija(vise.labassay.analit, test.rezultat_f, test.jedinice_f, vise.refd, vise.refg, $store.state.site, vise.interp, vise.extend, spec)[5] === 'Yellow' && !test.multidata\r\n                  }\"\r\n                >\r\n                  <td>{{ test.anaassay.aparat.ime }}</td>\r\n\r\n                  <td>\r\n                    {{ JSON.stringify(\r\n                    test.updated_at\r\n                    ).slice(9, 11) +\r\n                    \".\" +\r\n                    JSON.stringify(\r\n                    test.updated_at\r\n                    ).slice(6, 8) +\r\n                    \".\" +\r\n                    JSON.stringify(\r\n                    test.updated_at\r\n                    ).slice(1, 5) + ' | '}}\r\n                    <sub>\r\n                      {{JSON.stringify(\r\n                      test.updated_at\r\n                      ).slice(12, 20)}}\r\n                    </sub>\r\n                  </td>\r\n                  <td>{{ test.rezultat_f }}</td>\r\n                  <td>{{ test.jedinice_f }}</td>\r\n                  <td>{{Interpretacija(vise.labassay.analit, test.rezultat_f, test.jedinice_f, vise.refd, vise.refg, $store.state.site, vise.interp, vise.extend, spec)[4]}}</td>\r\n                  <td v-if=\"sample_status != 'ODOBREN' &&  sample_status != 'VERIFICIRAN'\">\r\n                    <i\r\n                      v-if=\"!test.izabran\"\r\n                      @click.prevent=\"IzborTesta(vise, test)\"\r\n                      style=\"font-size: 18px; color:#e34a4a;\"\r\n                      class=\"glyphicon glyphicon-unchecked\"\r\n                    ></i>\r\n\r\n                    <i\r\n                      v-if=\"test.izabran\"\r\n                      style=\"font-size: 18px; color:#4ae387;\"\r\n                      class=\"glyphicon glyphicon-check\"\r\n                    ></i>\r\n                  </td>\r\n                  <td>\r\n                    <i\r\n                      v-bind:class=\"{'fa fa-exclamation-triangle icon-right input-icon error-icon' : Interpretacija(vise.labassay.analit, test.rezultat_f, test.jedinice_f, vise.refd, vise.refg, $store.state.site, vise.interp, vise.extend, spec)[5] === 'Red'}\"\r\n                    ></i>\r\n                    <i\r\n                      v-bind:class=\"{'fa fa-check success-icon icon-right input-icon' : Interpretacija(vise.labassay.analit, test.rezultat_f, test.jedinice_f, vise.refd, vise.refg, $store.state.site, vise.interp, vise.extend, spec)[5] === 'Green'}\"\r\n                    ></i>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n\r\n            <!-- END OF DRUGA TABELA -->\r\n          </div>\r\n        </div>\r\n      </vuestic-modal-all-results>\r\n\r\n      <vuestic-modal-error\r\n        :show.sync=\"show\"\r\n        ref=\"staticModalError\"\r\n        cancelText=\"ZATVORI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\">\r\n          {{''}}\r\n          <span style=\"color: #e34a4a;\">{{'404: Not Found'}}</span>\r\n        </div>\r\n        <div>\r\n          <h5>{{'Greška prilikom čitanja nalaza.'}}</h5>\r\n        </div>\r\n      </vuestic-modal-error>\r\n\r\n      <vuestic-modal-error\r\n        :show.sync=\"show\"\r\n        ref=\"staticModalVerifyPrivilege\"\r\n        cancelText=\"ZATVORI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\">\r\n          {{''}}\r\n          <span style=\"color: #e34a4a;\">{{'401: Not Authorized'}}</span>\r\n        </div>\r\n        <div>\r\n          <h5>{{'Nemate odgovarajuće privilegije.'}}</h5>\r\n        </div>\r\n      </vuestic-modal-error>\r\n\r\n      <vuestic-modal-exclamation\r\n        :show.sync=\"show\"\r\n        ref=\"staticModalExclamation\"\r\n        cancelText=\"ZATVORI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\">\r\n          {{''}}\r\n          <span style=\"color: #e34a4a;\">{{warning.analiza}}</span>\r\n        </div>\r\n        <div>\r\n          <h5>{{warning.control}}</h5>\r\n          <p>{{warning.text}}</p>\r\n        </div>\r\n      </vuestic-modal-exclamation>\r\n\r\n      <vuestic-modal-reference\r\n        :show.sync=\"show\"\r\n        ref=\"staticModalReference\"\r\n        cancelText=\"ODUSTANI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\">\r\n          {{'Referentne vrijednosti: '}}\r\n          <span\r\n            style=\"color: #e34a4a;\"\r\n          >{{reference.naziv}} ({{reference.opis}})</span>\r\n        </div>\r\n        <div>\r\n          <div class=\"row\">\r\n            <div class=\"col-md-1\"></div>\r\n            <div class=\"col-md-2\">\r\n              <div class=\"form-group\">\r\n                <div class=\"input-group\">\r\n                  <input\r\n                    style=\"color: #e34a4a;\"\r\n                    id=\"input-icon-left\"\r\n                    title=\" \"\r\n                    v-model=\"reference.dref\"\r\n                    name=\"input-icon-left\"\r\n                    required\r\n                  />\r\n                  <label class=\"control-label\" for=\"input-icon-left\">{{'Donja'}}</label>\r\n                  <i class=\"bar\"></i>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-md-1\"></div>\r\n            <div class=\"col-md-2\">\r\n              <div class=\"form-group\">\r\n                <div class=\"input-group\">\r\n                  <input\r\n                    style=\"color: #e34a4a;\"\r\n                    id=\"input-icon-left\"\r\n                    title=\" \"\r\n                    v-model=\"reference.gref\"\r\n                    name=\"input-icon-left\"\r\n                    required\r\n                  />\r\n                  <label class=\"control-label\" for=\"input-icon-left\">{{'Gornja'}}</label>\r\n                  <i class=\"bar\"></i>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-md-1\"></div>\r\n            <div class=\"col-md-4\">\r\n              <vuestic-simple-select\r\n                v-if=\"$store.state.access.level < 1\"\r\n                style=\"font-size: 14px;\"\r\n                label=\"Interpretacija\"\r\n                v-model=\"reference.interp\"\r\n                title=\" \"\r\n                v-bind:options=\"interpretacije\"\r\n              ></vuestic-simple-select>\r\n\r\n              <div v-if=\"$store.state.access.level > 0\" class=\"form-group\">\r\n                <div class=\"input-group\">\r\n                  <input\r\n                    id=\"input-icon-left\"\r\n                    title=\" \"\r\n                    v-model=\"reference.interp\"\r\n                    name=\"input-icon-left\"\r\n                    required\r\n                    :disabled=\"true\"\r\n                  />\r\n                  <label class=\"control-label\" for=\"input-icon-left\">{{reference.interp}}</label>\r\n                  <i class=\"bar\"></i>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-md-1\"></div>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <div class=\"col-md-1\"></div>\r\n            <div class=\"col-md-2\">\r\n              <vuestic-simple-select\r\n                style=\"font-size: 14px;\"\r\n                label=\"Jedinica\"\r\n                v-model=\"reference.jedinica\"\r\n                title=\" \"\r\n                v-bind:options=\"jedinice\"\r\n              ></vuestic-simple-select>\r\n            </div>\r\n            <div class=\"col-md-1\"></div>\r\n\r\n            <div class=\"col-md-7\">\r\n              <div class=\"form-group\" v-show=\"reference.interp != 'spec'\">\r\n                <div class=\"input-group\">\r\n                  <input\r\n                    style=\"color: #e34a4a;\"\r\n                    id=\"input-icon-left\"\r\n                    title=\" \"\r\n                    v-model=\"reference.extend\"\r\n                    name=\"input-icon-left\"\r\n                    required\r\n                  />\r\n\r\n                  <label\r\n                    class=\"control-label\"\r\n                    for=\"input-icon-left\"\r\n                  >{{'Proširena referentna vrijednost'}}</label>\r\n                  <i class=\"bar\"></i>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"form-group\" v-show=\"reference.interp === 'spec'\">\r\n                <div class=\"input-group\">\r\n                  <textarea\r\n                    v-model=\"reference.extend\"\r\n                    type=\"text\"\r\n                    style=\"color: #e34a4a;\"\r\n                    id=\"simple-textarea\"\r\n                    required\r\n                  ></textarea>\r\n\r\n                  <label\r\n                    class=\"control-label\"\r\n                    for=\"simple-textarea\"\r\n                  >{{'Specifična interpretacija rezultata'}}</label>\r\n                  <i class=\"bar\"></i>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-md-1\"></div>\r\n          </div>\r\n        </div>\r\n      </vuestic-modal-reference>\r\n\r\n      <vuestic-modal-find\r\n        :show.sync=\"show\"\r\n        :data_pid=\"Number(data_pid)\"\r\n        :data_length=\"Number(data_length)\"\r\n        ref=\"staticModalFind\"\r\n        cancelText=\"ODUSTANI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\">\r\n          {{''}}\r\n          <span style=\"color: #e34a4a;\">{{'Redni broj pacijenta'}}</span>\r\n        </div>\r\n        <div>\r\n          <h5></h5>\r\n        </div>\r\n      </vuestic-modal-find>\r\n\r\n      <vuestic-modal-aparati\r\n        :show.sync=\"show\"\r\n        ref=\"staticModalAparati\"\r\n        cancelText=\"ODUSTANI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\">\r\n          {{'Izbor analizatora: '}}\r\n          <span\r\n            style=\"color: #e34a4a;\"\r\n          >{{this.analiza.ime + ' (' + this.analiza.analit + ')'}}</span>\r\n        </div>\r\n        <div>\r\n          <vuestic-accordion-obrada>\r\n            <vuestic-collapse-aparati\r\n              v-for=\"element in analysers\"\r\n              :key=\"element._id\"\r\n              :analyser=\"element\"\r\n            >\r\n              <span slot=\"header\">{{element.ime + ', ' + element.site.naziv}}</span>\r\n              <div slot=\"body\">\r\n                <div class=\"va-row\"></div>\r\n              </div>\r\n            </vuestic-collapse-aparati>\r\n          </vuestic-accordion-obrada>\r\n        </div>\r\n      </vuestic-modal-aparati>\r\n\r\n      <!--  -->\r\n\r\n      <vuestic-modal-results-multi\r\n        :show.sync=\"show\"\r\n        ref=\"staticModalResultsMulti\"\r\n        cancelText=\"ODUSTANI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\">\r\n          {{'Izbor rezultata: '}}\r\n          <span style=\"color: #e34a4a;\">{{multi_test}}</span>\r\n        </div>\r\n        <div></div>\r\n      </vuestic-modal-results-multi>\r\n\r\n      <!-- Patient evaluation, Single -->\r\n\r\n      <patient-evaluation-single\r\n        :show.sync=\"show\"\r\n        ref=\"staticModalEvaluationSingle\"\r\n        cancelText=\"ZATVORI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\">\r\n          <span>{{ime + ' ' + prezime}}</span>\r\n        </div>\r\n\r\n        <div class=\"row\" v-if=\"Procjena.length && !graph\">\r\n          <div class=\"col-md-12\">\r\n            <div class=\"table-responsive\">\r\n              <table class=\"table table-striped table-sm color-icon-label-table\">\r\n                <thead>\r\n                  <tr align=\"middle\">\r\n                    <td width=\"20%\">{{'REZULTAT'}}</td>\r\n                    <td width=\"20%\">{{'JEDINICA'}}</td>\r\n                    <td width=\"20%\">{{'REFERENCE'}}</td>\r\n                    <td width=\"20%\">{{'DATUM'}}</td>\r\n                    <td width=\"15%\">{{'VRIJEME'}}</td>\r\n                    <td width=\"5%\" align=\"middle\"></td>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <!--  -->\r\n                  <tr\r\n                    align=\"middle\"\r\n                    v-for=\"(element, index) in Procjena\"\r\n                    :key=\"index\"\r\n                    v-bind:class=\"{\r\n                          'table-danger': Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, $store.state.site, element.interp, element.extend, spec)[5] === 'Red', \r\n                          'table-success': Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, $store.state.site, element.interp, element.extend, spec)[5] === 'Green',\r\n                          'table-warning': Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, $store.state.site, element.interp, element.extend, spec)[5] === 'Yellow'\r\n                        }\"\r\n                  >\r\n                    <td width=\"19%\">{{element.rezultat}}</td>\r\n                    <td width=\"19%\">{{element.jedinica}}</td>\r\n                    <td\r\n                      width=\"19%\"\r\n                    >{{Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, $store.state.site, element.interp, element.extend, spec)[4]}}</td>\r\n                    <td width=\"19%\">{{element.datum}}</td>\r\n                    <td width=\"15%\">{{element.vrijeme}}</td>\r\n                    <td width=\"9%\" align=\"middle\">\r\n                      <i\r\n                        v-bind:class=\"{'fa fa-exclamation-triangle icon-right input-icon error-icon' : Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, $store.state.site, element.interp, element.extend, spec)[5] === 'Red'}\"\r\n                      ></i>\r\n                      <i\r\n                        v-bind:class=\"{'fa fa-check success-icon icon-right input-icon' : Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, $store.state.site, element.interp, element.extend, spec)[5] === 'Green'}\"\r\n                      ></i>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n              <div style=\"text-align:center;\">\r\n                <span class=\"circle badge-info\"></span>\r\n                {{table_header}}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row\" v-if=\"showLineChart && graph\">\r\n          <div class=\"col-md-12\">\r\n            <line-chart :options=\"optionsLineChart\" :data=\"dataLineChart\" type=\"line\"></line-chart>\r\n          </div>\r\n        </div>\r\n        <div class=\"row\" v-if=\"!showLineChart && graph\">\r\n          <div class=\"col-md-12\">\r\n            <!-- <div style=\"text-align:center;\"> -->\r\n            <div>\r\n              <span style=\"color: #e34a4a;\">{{\"Nema podataka.\"}}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </patient-evaluation-single>\r\n\r\n      <!-- LabAssay evaluation, Single -->\r\n\r\n      <patient-evaluation-single\r\n        :show.sync=\"show\"\r\n        ref=\"staticModalLabAssayEvalSingle\"\r\n        cancelText=\"ZATVORI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\">\r\n          <span style=\"color: #4ae387;\">{{analiza_eval.ime + ' (' + analiza_eval.analit + ')'}}</span>\r\n          <span>{{\" - Rezultati analize u zadnjih 14 dana\"}}</span>\r\n        </div>\r\n\r\n        <div class=\"row\" v-if=\"Procjena.length && !graph\">\r\n          <div class=\"col-md-12\">\r\n            <div class=\"table-responsive\">\r\n              <table class=\"table table-striped table-sm color-icon-label-table\">\r\n                <thead>\r\n                  <tr align=\"middle\">\r\n                    <td width=\"20%\">{{'REZULTAT'}}</td>\r\n                    <td width=\"20%\">{{'JEDINICA'}}</td>\r\n                    <td width=\"20%\">{{'REFERENCE'}}</td>\r\n                    <td width=\"20%\">{{'DATUM'}}</td>\r\n                    <td width=\"15%\">{{'VRIJEME'}}</td>\r\n                    <td width=\"5%\" align=\"middle\"></td>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <!--  -->\r\n                  <tr\r\n                    align=\"middle\"\r\n                    v-for=\"(element, index) in Procjena\"\r\n                    :key=\"index\"\r\n                    v-bind:class=\"{\r\n                          'table-danger': Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, $store.state.site, element.interp, element.extend, spec)[5] === 'Red', \r\n                          'table-success': Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, $store.state.site, element.interp, element.extend, spec)[5] === 'Green',\r\n                          'table-warning': Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, $store.state.site, element.interp, element.extend, spec)[5] === 'Yellow'\r\n                        }\"\r\n                  >\r\n                    <td width=\"19%\">{{element.rezultat}}</td>\r\n                    <td width=\"19%\">{{element.jedinica}}</td>\r\n                    <td\r\n                      width=\"19%\"\r\n                    >{{Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, $store.state.site, element.interp, element.extend, spec)[4]}}</td>\r\n                    <td width=\"19%\">{{element.datum}}</td>\r\n                    <td width=\"15%\">{{element.vrijeme}}</td>\r\n                    <td width=\"9%\" align=\"middle\">\r\n                      <i\r\n                        v-bind:class=\"{'fa fa-exclamation-triangle icon-right input-icon error-icon' : Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, $store.state.site, element.interp, element.extend, spec)[5] === 'Red'}\"\r\n                      ></i>\r\n                      <i\r\n                        v-bind:class=\"{'fa fa-check success-icon icon-right input-icon' : Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, $store.state.site, element.interp, element.extend, spec)[5] === 'Green'}\"\r\n                      ></i>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n              <div style=\"text-align:center;\">\r\n                <span class=\"circle badge-info\"></span>\r\n                {{table_header}}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row\" v-if=\"showLineChart && graph\">\r\n          <div class=\"col-md-12\">\r\n            <line-chart :options=\"optionsLineChart\" :data=\"dataLineChart\" type=\"line\"></line-chart>\r\n          </div>\r\n        </div>\r\n        <div class=\"row\" v-if=\"!showLineChart && graph\">\r\n          <div class=\"col-md-12\">\r\n            <div>\r\n              <span style=\"color: #e34a4a;\">{{\"Nema podataka.\"}}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </patient-evaluation-single>\r\n\r\n      <!-- Patient evaluation, Multi -->\r\n\r\n      <patient-evaluation-multi\r\n        :show.sync=\"show\"\r\n        :multiparam_izbor=\"multiparam_izbor\"\r\n        :multiparam_izbornik=\"multiparam_izbornik\"\r\n        ref=\"staticModalEvaluationMulti\"\r\n        cancelText=\"ZATVORI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\">\r\n          <span>{{ime + ' ' + prezime}}</span>\r\n        </div>\r\n\r\n        <!--  -->\r\n\r\n        <div class=\"row\" v-if=\"Procjena.length && !graph\">\r\n          <div class=\"col-md-12\">\r\n            <div class=\"table-responsive\">\r\n              <table class=\"table table-striped table-sm color-icon-label-table\">\r\n                <thead>\r\n                  <tr align=\"middle\">\r\n                    <td width=\"20%\">{{'REZULTAT'}}</td>\r\n                    <td width=\"20%\">{{'JEDINICA'}}</td>\r\n                    <td width=\"20%\">{{'REFERENCE'}}</td>\r\n                    <td width=\"20%\">{{'DATUM'}}</td>\r\n                    <td width=\"15%\">{{'VRIJEME'}}</td>\r\n                    <td width=\"5%\" align=\"middle\"></td>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr\r\n                    align=\"middle\"\r\n                    v-for=\"(element, index) in Procjena\"\r\n                    :key=\"index\"\r\n                    v-bind:class=\"{\r\n                          'table-danger': Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, $store.state.site, element.interp, element.extend, spec)[5] === 'Red', \r\n                          'table-success': Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, $store.state.site, element.interp, element.extend, spec)[5] === 'Green',\r\n                          'table-warning': Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, $store.state.site, element.interp, element.extend, spec)[5] === 'Yellow'\r\n                        }\"\r\n                  >\r\n                    <td width=\"19%\">{{element.rezultat}}</td>\r\n                    <td width=\"19%\">{{element.jedinica}}</td>\r\n                    <td\r\n                      width=\"19%\"\r\n                    >{{Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, $store.state.site, element.interp, element.extend, spec)[4]}}</td>\r\n                    <td width=\"19%\">{{element.datum}}</td>\r\n                    <td width=\"15%\">{{element.vrijeme}}</td>\r\n                    <td width=\"9%\" align=\"middle\">\r\n                      <i\r\n                        v-bind:class=\"{'fa fa-exclamation-triangle icon-right input-icon error-icon' : Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, $store.state.site, element.interp, element.extend, spec)[5] === 'Red'}\"\r\n                      ></i>\r\n                      <i\r\n                        v-bind:class=\"{'fa fa-check success-icon icon-right input-icon' : Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, $store.state.site, element.interp, element.extend, spec)[5] === 'Green'}\"\r\n                      ></i>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n              <div style=\"text-align:center;\">\r\n                <span class=\"circle badge-info\"></span>\r\n                {{table_header}}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row\" v-if=\"!Procjena.length && !graph\">\r\n          <div class=\"col-md-12\">\r\n            <div>\r\n              <span style=\"color: #e34a4a;\">{{\"Nema podataka.\"}}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row\" v-if=\"showLineChart && graph\">\r\n          <div class=\"col-md-12\">\r\n            <line-chart :options=\"optionsLineChart\" :data=\"dataLineChart\" type=\"line\"></line-chart>\r\n          </div>\r\n        </div>\r\n        <div class=\"row\" v-if=\"!showLineChart && graph\">\r\n          <div v-if=\"!showLineChart && !spinner\" class=\"col-md-12\">\r\n            <div>\r\n              <span style=\"color: #e34a4a;\">{{\"Nema podataka.\"}}</span>\r\n            </div>\r\n          </div>\r\n          <div style=\"min-height: 400px;\" v-if=\"!showLineChart && spinner\" class=\"col-md-12\">\r\n            <div\r\n              style=\"display:flex; flex-direction: row; justify-content: center; align-items: center\"\r\n            >\r\n              <div style=\"float:left;\"></div>\r\n              <span style=\"vertical-align:middle; \">\r\n                <atom-spinner\r\n                  style=\"opacity: 0.25;\"\r\n                  :animation-duration=\"1000\"\r\n                  :size=\"300\"\r\n                  :color=\"'#4ae387'\"\r\n                />\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </patient-evaluation-multi>\r\n\r\n      <!-- LabAssay evaluation, Multi -->\r\n\r\n      <patient-evaluation-multi\r\n        :show.sync=\"show\"\r\n        :multiparam_izbor=\"multiparam_izbor\"\r\n        :multiparam_izbornik=\"multiparam_izbornik\"\r\n        ref=\"staticModalLabAssayEvalMulti\"\r\n        cancelText=\"ZATVORI\"\r\n        okText=\"POTVRDI\"\r\n      >\r\n        <div slot=\"title\">\r\n          <span style=\"color: #4ae387;\">{{analiza_eval.ime + ' (' + analiza_eval.analit + ')'}}</span>\r\n          <span>{{\" - Rezultati analize u zadnjih 14 dana\"}}</span>\r\n        </div>\r\n\r\n        <!--  -->\r\n\r\n        <div class=\"row\" v-if=\"Procjena.length && !graph\">\r\n          <div class=\"col-md-12\">\r\n            <div class=\"table-responsive\">\r\n              <table class=\"table table-striped table-sm color-icon-label-table\">\r\n                <thead>\r\n                  <tr align=\"middle\">\r\n                    <td width=\"20%\">{{'REZULTAT'}}</td>\r\n                    <td width=\"20%\">{{'JEDINICA'}}</td>\r\n                    <td width=\"20%\">{{'REFERENCE'}}</td>\r\n                    <td width=\"20%\">{{'DATUM'}}</td>\r\n                    <td width=\"15%\">{{'VRIJEME'}}</td>\r\n                    <td width=\"5%\" align=\"middle\"></td>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr\r\n                    align=\"middle\"\r\n                    v-for=\"(element, index) in Procjena\"\r\n                    :key=\"index\"\r\n                    v-bind:class=\"{\r\n                          'table-danger': Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, $store.state.site, element.interp, element.extend, spec)[5] === 'Red', \r\n                          'table-success': Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, $store.state.site, element.interp, element.extend, spec)[5] === 'Green',\r\n                          'table-warning': Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, $store.state.site, element.interp, element.extend, spec)[5] === 'Yellow'\r\n                        }\"\r\n                  >\r\n                    <td width=\"19%\">{{element.rezultat}}</td>\r\n                    <td width=\"19%\">{{element.jedinica}}</td>\r\n                    <td\r\n                      width=\"19%\"\r\n                    >{{Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, $store.state.site, element.interp, element.extend, spec)[4]}}</td>\r\n                    <td width=\"19%\">{{element.datum}}</td>\r\n                    <td width=\"15%\">{{element.vrijeme}}</td>\r\n                    <td width=\"9%\" align=\"middle\">\r\n                      <i\r\n                        v-bind:class=\"{'fa fa-exclamation-triangle icon-right input-icon error-icon' : Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, $store.state.site, element.interp, element.extend, spec)[5] === 'Red'}\"\r\n                      ></i>\r\n                      <i\r\n                        v-bind:class=\"{'fa fa-check success-icon icon-right input-icon' : Interpretacija(element.analit, element.rezultat, element.jedinica, element.refd, element.refg, $store.state.site, element.interp, element.extend, spec)[5] === 'Green'}\"\r\n                      ></i>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n              <div style=\"text-align:center;\">\r\n                <span class=\"circle badge-info\"></span>\r\n                {{table_header}}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row\" v-if=\"!Procjena.length && !graph\">\r\n          <div class=\"col-md-12\">\r\n            <div>\r\n              <span style=\"color: #e34a4a;\">{{\"Nema podataka.\"}}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row\" v-if=\"showLineChart && graph\">\r\n          <div class=\"col-md-12\">\r\n            <line-chart :options=\"optionsLineChart\" :data=\"dataLineChart\" type=\"line\"></line-chart>\r\n          </div>\r\n        </div>\r\n        <div class=\"row\" v-if=\"!showLineChart && graph\">\r\n          <div v-if=\"!showLineChart && !spinner\" class=\"col-md-12\">\r\n            <div>\r\n              <span style=\"color: #e34a4a;\">{{\"Nema podataka.\"}}</span>\r\n            </div>\r\n          </div>\r\n          <div style=\"min-height: 400px;\" v-if=\"!showLineChart && spinner\" class=\"col-md-12\">\r\n            <div\r\n              style=\"display:flex; flex-direction: row; justify-content: center; align-items: center\"\r\n            >\r\n              <div style=\"float:left;\"></div>\r\n              <span style=\"vertical-align:middle; \">\r\n                <atom-spinner\r\n                  style=\"opacity: 0.25;\"\r\n                  :animation-duration=\"1000\"\r\n                  :size=\"300\"\r\n                  :color=\"'#4ae387'\"\r\n                />\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </patient-evaluation-multi>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12\">\r\n        <div class=\"col-md-6\">\r\n          <loading\r\n            :active.sync=\"isLoading\"\r\n            :can-cancel=\"false\"\r\n            :on-cancel=\"onCancel\"\r\n            color=\"#4ae387\"\r\n            :is-full-page=\"fullPage\"\r\n          ></loading>\r\n        </div>\r\n        <div class=\"col-md-6\">\r\n          <button v-if=\"false\" @click.prevent=\"Test\">{{'Loading...'}}</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Vue from \"vue\";\r\nimport router from \"../../router\";\r\nimport store from \"vuex-store\";\r\nimport utils from \"services/utils\";\r\nimport { http } from \"../../../config/config.js\";\r\nimport { barcode } from \"../../../config/config.js\";\r\nimport BadgeColumn from \"./BadgeColumn.vue\";\r\n\r\nimport { bus } from \"../../main\";\r\nimport { server } from \"../../../config/config.js\";\r\n\r\nimport { Interpretation } from \"./functions/reference.js\";\r\nimport izbornik from \"./data-izbornik/izbornik\";\r\n\r\nimport Loading from \"vue-loading-overlay\";\r\nimport \"vue-loading-overlay/dist/vue-loading.css\";\r\n\r\nimport LineChart from \"../vuestic-components/vuestic-chart/chart-types/LineChart\";\r\nimport { AtomSpinner } from \"epic-spinners\";\r\n\r\nimport PDFObject from \"pdfobject\";\r\n\r\nVue.component(\"line-chart\", LineChart);\r\nVue.component(\"badge-column\", BadgeColumn);\r\n\r\nexport default {\r\n  name: \"collapse-obrada\",\r\n\r\n  data() {\r\n    return {\r\n      AllowGetSample: true,\r\n      MicrobiologyOrder: false,\r\n      MicrobiologySample: false,\r\n      ModalNegative: false,\r\n      ModalPositive: false,\r\n      ModalPositiveCondition: false,\r\n      ShowAllBacteries: false,\r\n      ShowAntibiotics: false,\r\n      ShowBacteries: false,\r\n      BacteryTabs: [\"\"],\r\n      CurrentTab: \"\",\r\n      CurrentTest: \"\",\r\n      MicrobiologyModalHeader: \"Predefinisani rezultati\",\r\n      SelectedBacteries: [],\r\n      NegativeResultSelection: \"\",\r\n      PositiveResultSelection: \"\",\r\n      MicrobiologyScenario: \"Unknown\",\r\n      Antibiotics: [],\r\n      TemporaryAntibiotics: [],\r\n      TemporaryBacteries: [],\r\n      TemporaryBacteriesAdd: [],\r\n      Antibiograms: [],\r\n      Bacteries: [],\r\n\r\n      MicrobiologyResult: {\r\n        negative: null,\r\n        positive: null,\r\n        BUG: null,\r\n        F_RESULT: \"\",\r\n        M_RESULT: [],\r\n        DefaultBacteries: [],\r\n        RemainingBacteries: [],\r\n        NegativeDescriptions: [],\r\n        PositiveDescriptions: []\r\n      },\r\n\r\n      multiparam_izbor: \"\",\r\n      multiparam_id: \"\",\r\n      analit: {},\r\n      multiparams: [],\r\n      Response: {},\r\n      spinner: false,\r\n      multiparam_izbornik: [],\r\n      warning: { analiza: \"\", text: \"\", control: \"\" },\r\n      main: false,\r\n      show: true,\r\n      pdf: false,\r\n      header: \"\",\r\n      lokacija: {},\r\n      timestamp: \"\",\r\n      pacijent: \"\",\r\n      ime: \"\",\r\n      prezime: \"\",\r\n      jmbg: \"\",\r\n      pid: \"\",\r\n      sid: \"\",\r\n      email: \"\",\r\n      email_tmp: \"\",\r\n      verificiran: false,\r\n      email_button: false,\r\n      final_pdf: false,\r\n      odobren: false,\r\n      approved: 0,\r\n      verified: 0,\r\n      partials: [],\r\n      partials_condition: false,\r\n      count: 0,\r\n      nalaz: {},\r\n      report: {},\r\n      path: \"\",\r\n      url: \"\",\r\n      uzorci: [],\r\n      vise: [],\r\n      samples: [],\r\n      sample_status: \"\",\r\n      labassay: \"\",\r\n      multi_test: \"\",\r\n      multi_rezultati: [],\r\n      check: \"\",\r\n      link: \"\",\r\n      spec: \"*\",\r\n      testovi: [],\r\n      rezultati: [],\r\n      analysers: [],\r\n      analyser: {},\r\n      analiza: {},\r\n      analyser_selected: {},\r\n      analyser_patient: {},\r\n      analitiprikaz: [],\r\n      analiti: [],\r\n      naslov: \"\",\r\n      calculated: false,\r\n      show_table: false,\r\n      sample: {},\r\n      resdata: {},\r\n      email_changed: false,\r\n      Previous: { pid: null },\r\n      Next: { pid: null },\r\n      Results: [],\r\n      Datum: { today: null, query: null, next: null, previous: null },\r\n      pagination: false,\r\n      forward_disabled: false,\r\n      backward_disabled: false,\r\n      data_length: 0,\r\n      data_min: 1,\r\n      data_pid: 0,\r\n      data_spol: \"\",\r\n      query_date: \"\",\r\n      today_date: \"\",\r\n      reference: {},\r\n      interpretacije: [\r\n        \"none\",\r\n        \"A\",\r\n        \"ogtt\",\r\n        \"insul\",\r\n        \"less\",\r\n        \"infekc\",\r\n        \"grt\",\r\n        \"grte\",\r\n        \"neg\",\r\n        \"urbl\",\r\n        \"reakt\",\r\n        \"norm\",\r\n        \"norma\",\r\n        \"ured\",\r\n        \"plus\",\r\n        \"morf\",\r\n        \"titar\",\r\n        \"tsh\",\r\n        \"trg\",\r\n        \"hol\",\r\n        \"hdl\",\r\n        \"ldl\",\r\n        \"fpsa\",\r\n        \"sediment\",\r\n        \"bistar\",\r\n        \"boja\",\r\n        \"nesto\",\r\n        \"exists\",\r\n        \"blst\",\r\n        \"leu\",\r\n        \"spec\"\r\n      ],\r\n      toastText: \"\",\r\n      toastIcon: \"\",\r\n      toastPosition: \"\",\r\n      toastDuration: 2500,\r\n      isToastFullWidth: false,\r\n      className: \"\",\r\n      isLoading: false,\r\n      fullPage: true,\r\n      analiza_eval: {},\r\n      showLineChart: false,\r\n      optionsLineChart: {},\r\n      dataLineChart: {},\r\n      Procjena: [],\r\n      jedinica: \"\",\r\n      jedinice: [],\r\n      graph: false,\r\n      table_header: \"\"\r\n    };\r\n  },\r\n  components: {\r\n    Loading,\r\n    AtomSpinner\r\n  },\r\n\r\n  watch: {\r\n    email: function() {\r\n      if (this.email.trim() != this.email_tmp.trim()) {\r\n        this.email_changed = true;\r\n      }\r\n    },\r\n    ModalNegative: function() {\r\n      if (this.ModalNegative) {\r\n        this.MicrobiologyModalHeader = \"Predefinisani rezultati\";\r\n        if (this.MicrobiologyScenario.includes(\"MANB\")) {\r\n          this.ModalPositiveCondition = true;\r\n        } else {\r\n          this.ModalPositiveCondition = false;\r\n        }\r\n      }\r\n    },\r\n    ModalPositive: function() {\r\n      if (this.ModalPositive) {\r\n        if (this.MicrobiologyScenario === \"MAIBNoR\") {\r\n          this.MicrobiologyModalHeader = \"Bakterije\";\r\n        } else {\r\n          this.MicrobiologyModalHeader = \"Predefinisani rezultati\";\r\n        }\r\n\r\n        if (this.MicrobiologyScenario.includes(\"MANB\")) {\r\n          this.ModalPositiveCondition = true;\r\n        } else {\r\n          this.ModalPositiveCondition = false;\r\n        }\r\n      }\r\n    },\r\n    MicrobiologyScenario: function() {\r\n      switch (this.MicrobiologyScenario) {\r\n        case \"MAIBNoR\":\r\n          this.ModalNegative = false;\r\n          this.ModalPositive = false;\r\n          this.ModalPositiveCondition = false;\r\n          this.MicrobiologyModalHeader = \"Predefinisani rezultati\";\r\n          this.NegativeResultSelection = \"\";\r\n          this.PositiveResultSelection = \"\";\r\n          this.SelectedBacteries = [];\r\n          this.ShowAllBacteries = false;\r\n\r\n          break;\r\n\r\n        case \"MAIBNeR\":\r\n          this.SelectedBacteries = [];\r\n\r\n          break;\r\n\r\n        case \"MAIBPoR\":\r\n          break;\r\n\r\n        case \"MANBNoR\":\r\n          this.ModalNegative = false;\r\n          this.ModalPositive = false;\r\n          this.ModalPositiveCondition = false;\r\n          this.MicrobiologyModalHeader = \"Predefinisani rezultati\";\r\n          this.NegativeResultSelection = \"\";\r\n          this.PositiveResultSelection = \"\";\r\n          this.SelectedBacteries = [];\r\n          this.ShowAllBacteries = false;\r\n\r\n          break;\r\n\r\n        case \"MANBNeR\":\r\n          this.SelectedBacteries = [];\r\n\r\n          break;\r\n\r\n        case \"MANBPoR\":\r\n          this.SelectedBacteries = [];\r\n\r\n          break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  },\r\n  beforeCreate() {\r\n    http\r\n      .get(\r\n        \"postavke/jedinice/mount/list?token=\" +\r\n          this.$store.state.token +\r\n          \"&site=\" +\r\n          this.$store.state.site,\r\n        {}\r\n      )\r\n      .then(res => {\r\n        this.jedinice = res.data.jedinica;\r\n      });\r\n  },\r\n  mounted() {\r\n    bus.$on(\"Parametar\", data => {\r\n      this.spinner = true;\r\n\r\n      this.analit = {};\r\n\r\n      this.multiparams.forEach(element => {\r\n        if (element.opis === data) {\r\n          this.analit = element;\r\n          this.multiparam_id = element._id;\r\n          this.multiparam_izbor = data;\r\n        }\r\n      });\r\n\r\n      if (_.isEmpty(this.analit)) {\r\n      } else {\r\n        if (!_.isEmpty(this.Response)) {\r\n          this.showLineChart = false;\r\n          let palette = store.getters.palette;\r\n\r\n          this.Procjena = [];\r\n\r\n          var obj = {};\r\n          var count = 0;\r\n\r\n          this.Response.Multi.forEach(element => {\r\n            count++;\r\n            element.multi.forEach(param => {\r\n              if (\r\n                this.multiparam_id == param.labassay &&\r\n                param.rezultat[0].rezultat_f.trim() != \"\"\r\n              ) {\r\n                obj.rezultat = param.rezultat[0].rezultat_f;\r\n                obj.jedinica = param.rezultat[0].jedinice_f;\r\n                obj.analit = \"Nema podataka\";\r\n                obj.interp = param.interp;\r\n                obj.extend = param.extend;\r\n                obj.refd = param.refd;\r\n                obj.refg = param.refg;\r\n                obj.sid = \"Nema podataka\";\r\n                obj.updated_at = new Date(param.rezultat[0].updated_at);\r\n\r\n                var datum =\r\n                  JSON.stringify(new Date(param.rezultat[0].updated_at)).slice(\r\n                    9,\r\n                    11\r\n                  ) +\r\n                  \".\" +\r\n                  JSON.stringify(new Date(param.rezultat[0].updated_at)).slice(\r\n                    6,\r\n                    8\r\n                  ) +\r\n                  \".\" +\r\n                  JSON.stringify(new Date(param.rezultat[0].updated_at)).slice(\r\n                    1,\r\n                    5\r\n                  );\r\n                var time = JSON.stringify(\r\n                  new Date(\r\n                    new Date(param.rezultat[0].updated_at).getTime() -\r\n                      new Date(\r\n                        param.rezultat[0].updated_at\r\n                      ).getTimezoneOffset() *\r\n                        60000\r\n                  ).toISOString()\r\n                ).substring(12, 17);\r\n                obj.datum = datum;\r\n                obj.vrijeme = time;\r\n                obj.kontrola = this.Interpretacija(\r\n                  \"\",\r\n                  obj.rezultat,\r\n                  obj.jedinica,\r\n                  obj.refd,\r\n                  obj.refg,\r\n                  this.$store.state.site,\r\n                  obj.interp,\r\n                  obj.extend,\r\n                  this.spec\r\n                )[5];\r\n\r\n                this.Procjena.push(obj);\r\n                obj = {};\r\n              }\r\n            });\r\n\r\n            if (count == this.Response.Multi.length) {\r\n              this.Procjena.sort(function(a, b) {\r\n                return Date.parse(a.updated_at) == Date.parse(b.updated_at)\r\n                  ? 0\r\n                  : +(Date.parse(a.updated_at) < Date.parse(b.updated_at)) ||\r\n                      -1;\r\n              });\r\n\r\n              var data = [];\r\n\r\n              if (this.Procjena.length) {\r\n                this.optionsLineChart = {\r\n                  responsive: true,\r\n                  maintainAspectRatio: false,\r\n                  title: {\r\n                    display: true,\r\n                    text: \"\"\r\n                  },\r\n                  scales: {\r\n                    xAxes: [\r\n                      {\r\n                        display: true,\r\n                        gridLines: {\r\n                          display: true,\r\n                          color: \"#eee\"\r\n                        }\r\n                      }\r\n                    ],\r\n                    yAxes: [\r\n                      {\r\n                        display: true,\r\n                        gridLines: {\r\n                          display: true,\r\n                          color: \"#eee\"\r\n                        }\r\n                      }\r\n                    ]\r\n                  }\r\n                };\r\n\r\n                var labels = [];\r\n                var kontrola = [];\r\n                var temp = \"\";\r\n\r\n                this.Procjena.forEach(element => {\r\n                  if (!isNaN(element.rezultat.trim())) {\r\n                    switch (element.kontrola) {\r\n                      case \"Red\":\r\n                        kontrola.push(palette.danger);\r\n                        break;\r\n                      case \"Green\":\r\n                        kontrola.push(palette.primary);\r\n                        break;\r\n                      case \"Yellow\":\r\n                        kontrola.push(palette.warning);\r\n                        break;\r\n\r\n                      default:\r\n                        kontrola.push(palette.info);\r\n                        break;\r\n                    }\r\n\r\n                    labels.push(element.datum);\r\n                    data.push(element.rezultat);\r\n                  }\r\n                });\r\n\r\n                this.dataLineChart = {\r\n                  labels: labels,\r\n                  datasets: [\r\n                    {\r\n                      label: this.table_header,\r\n                      backgroundColor: utils.hex2rgb(palette.info, 0.5).css,\r\n                      pointBorderColor: kontrola,\r\n                      pointBackgroundColor: kontrola,\r\n                      borderColor: palette.transparent,\r\n                      data: data\r\n                    }\r\n                  ]\r\n                };\r\n\r\n                if (data.length) {\r\n                  setTimeout(() => {\r\n                    this.showLineChart = true;\r\n                  }, 500);\r\n                }\r\n              } else {\r\n                this.spinner = false;\r\n              }\r\n            }\r\n          });\r\n        } else {\r\n        }\r\n      }\r\n    });\r\n    bus.$on(\"graph\", () => {\r\n      this.Procjena.sort(function(a, b) {\r\n        return Date.parse(a.updated_at) == Date.parse(b.updated_at)\r\n          ? 0\r\n          : +(Date.parse(a.updated_at) < Date.parse(b.updated_at)) || -1;\r\n      });\r\n\r\n      var data = [];\r\n\r\n      if (this.Procjena.length) {\r\n        let palette = store.getters.palette;\r\n        this.optionsLineChart = {\r\n          responsive: true,\r\n          maintainAspectRatio: false,\r\n          title: {\r\n            display: true,\r\n            text: \"\"\r\n          },\r\n          scales: {\r\n            xAxes: [\r\n              {\r\n                display: true,\r\n                gridLines: {\r\n                  display: true,\r\n                  color: \"#eee\"\r\n                }\r\n              }\r\n            ],\r\n            yAxes: [\r\n              {\r\n                display: true,\r\n                gridLines: {\r\n                  display: true,\r\n                  color: \"#eee\"\r\n                }\r\n              }\r\n            ]\r\n          }\r\n        };\r\n\r\n        var labels = [];\r\n        var kontrola = [];\r\n        var temp = \"\";\r\n\r\n        this.Procjena.forEach(element => {\r\n          if (!isNaN(element.rezultat.trim())) {\r\n            switch (element.kontrola) {\r\n              case \"Red\":\r\n                kontrola.push(palette.danger);\r\n                break;\r\n              case \"Green\":\r\n                kontrola.push(palette.primary);\r\n                break;\r\n              case \"Yellow\":\r\n                kontrola.push(palette.warning);\r\n                break;\r\n\r\n              default:\r\n                kontrola.push(palette.info);\r\n                break;\r\n            }\r\n\r\n            labels.push(element.datum);\r\n            data.push(element.rezultat);\r\n          }\r\n        });\r\n\r\n        this.dataLineChart = {\r\n          labels: labels,\r\n          datasets: [\r\n            {\r\n              label: this.analiza_eval.ime + \" | \" + this.analiza_eval.analit,\r\n              backgroundColor: utils.hex2rgb(palette.info, 0.5).css,\r\n              pointBorderColor: kontrola,\r\n              pointBackgroundColor: kontrola,\r\n              borderColor: palette.transparent,\r\n              data: data\r\n            }\r\n          ]\r\n        };\r\n\r\n        if (data.length) {\r\n          this.showLineChart = true;\r\n        }\r\n      } else {\r\n      }\r\n      this.graph = false;\r\n    });\r\n    bus.$on(\"table\", () => {\r\n      this.Procjena.sort(function(a, b) {\r\n        return Date.parse(a.updated_at) == Date.parse(b.updated_at)\r\n          ? 0\r\n          : +(Date.parse(a.updated_at) > Date.parse(b.updated_at)) || -1;\r\n      });\r\n\r\n      var data = [];\r\n\r\n      if (this.Procjena.length) {\r\n        let palette = store.getters.palette;\r\n        this.optionsLineChart = {\r\n          responsive: true,\r\n          maintainAspectRatio: false,\r\n          title: {\r\n            display: true,\r\n            text: \"\"\r\n          },\r\n          scales: {\r\n            xAxes: [\r\n              {\r\n                display: true,\r\n                gridLines: {\r\n                  display: true,\r\n                  color: \"#eee\"\r\n                }\r\n              }\r\n            ],\r\n            yAxes: [\r\n              {\r\n                display: true,\r\n                gridLines: {\r\n                  display: true,\r\n                  color: \"#eee\"\r\n                }\r\n              }\r\n            ]\r\n          }\r\n        };\r\n\r\n        var labels = [];\r\n        var kontrola = [];\r\n        var temp = \"\";\r\n\r\n        this.Procjena.forEach(element => {\r\n          if (!isNaN(element.rezultat.trim())) {\r\n            switch (element.kontrola) {\r\n              case \"Red\":\r\n                kontrola.push(palette.danger);\r\n                break;\r\n              case \"Green\":\r\n                kontrola.push(palette.primary);\r\n                break;\r\n              case \"Yellow\":\r\n                kontrola.push(palette.warning);\r\n                break;\r\n\r\n              default:\r\n                kontrola.push(palette.info);\r\n                break;\r\n            }\r\n\r\n            labels.push(element.datum);\r\n            data.push(element.rezultat);\r\n          }\r\n        });\r\n\r\n        this.dataLineChart = {\r\n          labels: labels,\r\n          datasets: [\r\n            {\r\n              label: this.analiza_eval.ime + \" | \" + this.analiza_eval.analit,\r\n              backgroundColor: utils.hex2rgb(palette.info, 0.5).css,\r\n              pointBorderColor: kontrola,\r\n              pointBackgroundColor: kontrola,\r\n              borderColor: palette.transparent,\r\n              data: data\r\n            }\r\n          ]\r\n        };\r\n\r\n        if (data.length) {\r\n          this.showLineChart = true;\r\n        }\r\n      } else {\r\n      }\r\n      this.graph = true;\r\n    });\r\n    bus.$on(\"trash\", data => {\r\n      this.sid = data.sid;\r\n      this.$refs.staticModalDeleteSample.open();\r\n    });\r\n    bus.$on(\"edit\", data => {\r\n      this.sid = data.sid;\r\n      this.$refs.staticModalEditSample.open();\r\n    });\r\n    bus.$on(\"comment\", data => {\r\n      this.sid = data.sid;\r\n      this.$refs.staticModalComment.open();\r\n    });\r\n    bus.$on(\"barcode\", data => {\r\n      this.BarcodePrint(data);\r\n    });\r\n    bus.$on(\"save\", data => {\r\n      this.SaveResults(this.rezultati, \"save\");\r\n    });\r\n    bus.$on(\"check\", data => {\r\n      this.Approve(this.rezultati);\r\n    });\r\n    bus.$on(\"verify\", data => {\r\n      this.Verify(data, \"verify\");\r\n    });\r\n    bus.$on(\"undo\", data => {\r\n      this.Disapprove(this.rezultati, \"undo\");\r\n    });\r\n    bus.$on(\"unlock\", data => {\r\n      this.UnVerify(data, \"unlock\");\r\n    });\r\n    bus.$on(\"Nalaz\", data => {\r\n      if (!data.final_pdf) {\r\n        this.$refs.staticModalError.open();\r\n      } else {\r\n        this.path = this.timestamp + \".pdf\";\r\n\r\n        this.url = server + \"nalazi/\" + this.path;\r\n\r\n        var options = {\r\n          width: \"100%\",\r\n          height: \"800px\"\r\n        };\r\n        PDFObject.embed(this.url, \"#pdf-container\", options);\r\n\r\n        this.email_button = true;\r\n        this.main = false;\r\n        this.pdf = true;\r\n      }\r\n    });\r\n    bus.$on(\"pdf\", data => {\r\n      if (!data.pdf_exists) {\r\n        this.$refs.staticModalError.open();\r\n      } else {\r\n        this.path = \"samples/\" + data.sid + \".pdf\";\r\n\r\n        this.url = server + \"nalazi/samples/\" + data.sid + \".pdf\";\r\n\r\n        var options = {\r\n          width: \"100%\",\r\n          height: \"800px\"\r\n        };\r\n        PDFObject.embed(this.url, \"#pdf-container\", options);\r\n\r\n        this.main = false;\r\n        this.pdf = true;\r\n      }\r\n    });\r\n    bus.$on(\"Sample\", data => {\r\n      if (data.tip.includes(\"Mikrobiologija\")) {\r\n        this.MicrobiologySample = true;\r\n      } else {\r\n        this.MicrobiologySample = false;\r\n      }\r\n\r\n      this.$store.dispatch(\"SetSample\", data.sid);\r\n      this.GetSingleSample(data);\r\n    });\r\n    bus.$on(\"Deleted\", data => {\r\n      this.DeletedSample(data);\r\n    });\r\n    bus.$on(\"Edited\", data => {\r\n      this.EditSample(data);\r\n    });\r\n    bus.$on(\"SaveMulti\", data => {\r\n      this.SaveMultiResults(this.analiti, data);\r\n    });\r\n    bus.$on(\"Mail\", () => {\r\n      this.SendMail(this.email);\r\n    });\r\n    bus.$on(\"Error\", () => {});\r\n    bus.$on(\"Analyser\", data => {\r\n      this.AnalyserSelected(data);\r\n    });\r\n    bus.$on(\"Sljedeci\", () => {\r\n      this.Sljedeci();\r\n    });\r\n    bus.$on(\"Prethodni\", () => {\r\n      this.Prethodni();\r\n    });\r\n    bus.$on(\"Search\", () => {\r\n      this.$refs.staticModalFind.open();\r\n    });\r\n    bus.$on(\"Push\", data => {\r\n      if (this.$route.params.id != data) {\r\n        this.Results.forEach(element => {\r\n          if (element.pid == data) {\r\n            router.push(\r\n              \"/obrada/rezultati/\" +\r\n                element.patient +\r\n                \"/\" +\r\n                element.pid +\r\n                \"?date=\" +\r\n                element.date\r\n            );\r\n          }\r\n        });\r\n      } else {\r\n      }\r\n    });\r\n    bus.$on(\"Reference\", () => {\r\n      this.reference.dref = Math.abs(\r\n        this.reference.dref.replace(/,/g, \".\").trim()\r\n      );\r\n      this.reference.gref = Math.abs(\r\n        this.reference.gref.replace(/,/g, \".\").trim()\r\n      );\r\n\r\n      if (this.reference.interp != \"spec\") {\r\n        this.reference.extend = this.reference.extend.replace(\r\n          /(\\r\\n|\\n|\\r)/gm,\r\n          \" \"\r\n        );\r\n      }\r\n\r\n      if (\r\n        isNaN(this.reference.dref) ||\r\n        isNaN(this.reference.gref) ||\r\n        this.reference.dref === \"\" ||\r\n        this.reference.gref === \"\" ||\r\n        this.reference.dref > this.reference.gref\r\n      ) {\r\n      } else {\r\n        document.getElementById(this.$store.state.sid).click();\r\n\r\n        http\r\n          .post(\"/rezultati/odobravanje/reference/\", {\r\n            email: this.$store.state.userId,\r\n            token: this.$store.state.token,\r\n            site: this.$store.state.site,\r\n            reference: this.reference\r\n          })\r\n          .then(res => {\r\n            setTimeout(() => {\r\n              document.getElementById(this.$store.state.sid).click();\r\n            }, 500);\r\n          });\r\n      }\r\n    });\r\n\r\n    bus.$on(\"Antibiotik\", data => {\r\n      if (\r\n        this.sample.status != \"ODOBREN\" &&\r\n        this.sample.status != \"VERIFICIRAN\"\r\n      ) {\r\n        this.TemporaryAntibiotics = [];\r\n        this.TemporaryBacteries = [];\r\n        this.TemporaryBacteriesAdd = [];\r\n\r\n        this.Antibiotics.forEach(element => {\r\n          element.chosen = false;\r\n          element.disabled = false;\r\n        });\r\n\r\n        this.SelectedBacteries.forEach(selected => {\r\n          if (selected.opis == data) {\r\n            selected.antibiogram.antibiotici.forEach(ant => {\r\n              this.Antibiotics.forEach(antibiotik => {\r\n                if (antibiotik._id == ant._id) {\r\n                  antibiotik.disabled = true;\r\n                  antibiotik.chosen = true;\r\n                  antibiotik.rezultat = ant.rezultat;\r\n                }\r\n              });\r\n            });\r\n          }\r\n        });\r\n\r\n        this.ShowAntibiotics = true;\r\n      }\r\n    });\r\n\r\n    bus.$on(\"tabChanged\", data => {\r\n      this.CurrentTab = data;\r\n    });\r\n\r\n    bus.$on(\"AllowClick\", data => {\r\n      if (this.MicrobiologySample) {\r\n        if (data) {\r\n          this.AllowGetSample = false;\r\n        } else {\r\n          this.AllowGetSample = true;\r\n        }\r\n      }\r\n    });\r\n\r\n    bus.$on(\"MicroReset\", () => {\r\n      this.rezultati[0].rezultat = \"\";\r\n      this.rezultati[0].rezultat_m = [];\r\n      this.rezultati[0].realizovan = false;\r\n\r\n      this.MicrobiologyResult.DefaultBacteries.forEach(element => {\r\n        element.chosen = false;\r\n      });\r\n\r\n      this.MicrobiologyResult.RemainingBacteries.forEach(element => {\r\n        element.chosen = false;\r\n      });\r\n\r\n      this.selectedBacteries = [];\r\n      this.ShowAllBacteries = false;\r\n\r\n      if (this.MicrobiologyScenario.includes(\"MAIB\")) {\r\n        this.isLoading = true;\r\n\r\n        http\r\n          .post(\"/rezultati/odobravanje/sacuvaj/\" + this.$store.state.sid, {\r\n            email: this.$store.state.userId,\r\n            token: this.$store.state.token,\r\n            site: this.$store.state.site,\r\n            rezultati: this.rezultati\r\n          })\r\n          .then(res => {\r\n            http\r\n              .get(\r\n                \"rezultati/odobravanje/samples/\" +\r\n                  this.$route.params.patient +\r\n                  \"/\" +\r\n                  this.$route.params.id +\r\n                  \"?token=\" +\r\n                  this.$store.state.token +\r\n                  \"&site=\" +\r\n                  this.$store.state.site +\r\n                  \"&date=\" +\r\n                  this.$route.query.date,\r\n                {}\r\n              )\r\n              .then(res => {\r\n                this.uzorci = [];\r\n\r\n                res.data.results.forEach(element => {\r\n                  var check = 0;\r\n                  var zaprimljen = 0;\r\n                  var realizovan = 0;\r\n\r\n                  if (element.verificiran) {\r\n                    var status_uzorka = \"VERIFICIRAN\";\r\n                  } else {\r\n                    var status_uzorka = element.status;\r\n                  }\r\n\r\n                  element.rezultati.forEach(test => {\r\n                    check++;\r\n\r\n                    if (\r\n                      test.rezultat[test.rezultat.length - 1].rezultat_f === \"\"\r\n                    ) {\r\n                      zaprimljen++;\r\n                    }\r\n\r\n                    if (\r\n                      test.rezultat[test.rezultat.length - 1].rezultat_f != \"\"\r\n                    ) {\r\n                      realizovan++;\r\n                    }\r\n\r\n                    if (check === element.rezultati.length) {\r\n                      if (status_uzorka === \"VERIFICIRAN\") {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"VERIFICIRAN\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false\r\n                        });\r\n                      } else if (status_uzorka === \"ODOBREN\") {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"ODOBREN\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false\r\n                        });\r\n                      } else if (zaprimljen < 1) {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"REALIZOVAN\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false\r\n                        });\r\n                      } else if (realizovan < 1) {\r\n                        var stat = \"ZAPRIMLJEN\";\r\n                        if (element.sample.tip.includes(\"Mikrobiologija\")) {\r\n                          if (\r\n                            element.rezultati[0].rezultat[0].rezultat_m.length\r\n                          ) {\r\n                            stat = \"REALIZOVAN\";\r\n                          }\r\n                        }\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: stat,\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false\r\n                        });\r\n                      } else {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"U OBRADI\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false\r\n                        });\r\n                      }\r\n                    }\r\n                  });\r\n                });\r\n\r\n                this.uzorci = this.uzorci.sort(function(a, b) {\r\n                  return a.sid.localeCompare(b.sid, undefined, {\r\n                    numeric: true,\r\n                    sensitivity: \"base\"\r\n                  });\r\n                });\r\n              })\r\n              .then(res => {\r\n                this.MicrobiologyScenario = \"MAIBNoR\";\r\n                this.isLoading = false;\r\n              });\r\n          });\r\n      } else if (this.MicrobiologyScenario.includes(\"MANB\")) {\r\n        this.isLoading = true;\r\n\r\n        http\r\n          .post(\"/rezultati/odobravanje/sacuvaj/\" + this.$store.state.sid, {\r\n            email: this.$store.state.userId,\r\n            token: this.$store.state.token,\r\n            site: this.$store.state.site,\r\n            rezultati: this.rezultati\r\n          })\r\n          .then(res => {\r\n            http\r\n              .get(\r\n                \"rezultati/odobravanje/samples/\" +\r\n                  this.$route.params.patient +\r\n                  \"/\" +\r\n                  this.$route.params.id +\r\n                  \"?token=\" +\r\n                  this.$store.state.token +\r\n                  \"&site=\" +\r\n                  this.$store.state.site +\r\n                  \"&date=\" +\r\n                  this.$route.query.date,\r\n                {}\r\n              )\r\n              .then(res => {\r\n                this.uzorci = [];\r\n\r\n                res.data.results.forEach(element => {\r\n                  var check = 0;\r\n                  var zaprimljen = 0;\r\n                  var realizovan = 0;\r\n\r\n                  if (element.verificiran) {\r\n                    var status_uzorka = \"VERIFICIRAN\";\r\n                  } else {\r\n                    var status_uzorka = element.status;\r\n                  }\r\n\r\n                  element.rezultati.forEach(test => {\r\n                    check++;\r\n\r\n                    if (\r\n                      test.rezultat[test.rezultat.length - 1].rezultat_f === \"\"\r\n                    ) {\r\n                      zaprimljen++;\r\n                    }\r\n\r\n                    if (\r\n                      test.rezultat[test.rezultat.length - 1].rezultat_f != \"\"\r\n                    ) {\r\n                      realizovan++;\r\n                    }\r\n\r\n                    if (check === element.rezultati.length) {\r\n                      if (status_uzorka === \"VERIFICIRAN\") {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"VERIFICIRAN\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false\r\n                        });\r\n                      } else if (status_uzorka === \"ODOBREN\") {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"ODOBREN\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false\r\n                        });\r\n                      } else if (zaprimljen < 1) {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"REALIZOVAN\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false\r\n                        });\r\n                      } else if (realizovan < 1) {\r\n                        var stat = \"ZAPRIMLJEN\";\r\n                        if (element.sample.tip.includes(\"Mikrobiologija\")) {\r\n                          if (\r\n                            element.rezultati[0].rezultat[0].rezultat_m.length\r\n                          ) {\r\n                            stat = \"REALIZOVAN\";\r\n                          }\r\n                        }\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: stat,\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false\r\n                        });\r\n                      } else {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"U OBRADI\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false\r\n                        });\r\n                      }\r\n                    }\r\n                  });\r\n                });\r\n\r\n                this.uzorci = this.uzorci.sort(function(a, b) {\r\n                  return a.sid.localeCompare(b.sid, undefined, {\r\n                    numeric: true,\r\n                    sensitivity: \"base\"\r\n                  });\r\n                });\r\n              })\r\n              .then(res => {\r\n                this.MicrobiologyScenario = \"MANBNoR\";\r\n                this.isLoading = false;\r\n              });\r\n          });\r\n      } else {\r\n      }\r\n    });\r\n\r\n    bus.$on(\"MicroResult\", () => {\r\n      switch (this.MicrobiologyScenario) {\r\n        case \"MAIBNoR\":\r\n          this.rezultati[0].rezultat_m = [\r\n            {\r\n              bakterija: false,\r\n              negativan: this.ModalNegative,\r\n              pozitivan: this.ModalPositive,\r\n              _id: null,\r\n              naziv: null,\r\n              opis: null,\r\n              antibiogram: {\r\n                _id: null,\r\n                naziv: null,\r\n                opis: null,\r\n                antibiotici: [\r\n                  {\r\n                    _id: null,\r\n                    rbr_a: null,\r\n                    naziv: null,\r\n                    opis: null,\r\n                    rezultat: null\r\n                  }\r\n                ]\r\n              }\r\n            }\r\n          ];\r\n\r\n          if (this.ModalNegative) {\r\n            this.rezultati[0].rezultat = this.NegativeResultSelection;\r\n            this.isLoading = true;\r\n\r\n            http\r\n              .post(\"/rezultati/odobravanje/sacuvaj/\" + this.$store.state.sid, {\r\n                email: this.$store.state.userId,\r\n                token: this.$store.state.token,\r\n                site: this.$store.state.site,\r\n                rezultati: this.rezultati\r\n              })\r\n              .then(res => {\r\n                http\r\n                  .get(\r\n                    \"rezultati/odobravanje/samples/\" +\r\n                      this.$route.params.patient +\r\n                      \"/\" +\r\n                      this.$route.params.id +\r\n                      \"?token=\" +\r\n                      this.$store.state.token +\r\n                      \"&site=\" +\r\n                      this.$store.state.site +\r\n                      \"&date=\" +\r\n                      this.$route.query.date,\r\n                    {}\r\n                  )\r\n                  .then(res => {\r\n                    this.uzorci = [];\r\n\r\n                    res.data.results.forEach(element => {\r\n                      var check = 0;\r\n                      var zaprimljen = 0;\r\n                      var realizovan = 0;\r\n\r\n                      if (element.verificiran) {\r\n                        var status_uzorka = \"VERIFICIRAN\";\r\n                      } else {\r\n                        var status_uzorka = element.status;\r\n                      }\r\n\r\n                      element.rezultati.forEach(test => {\r\n                        check++;\r\n\r\n                        if (\r\n                          test.rezultat[test.rezultat.length - 1].rezultat_f ===\r\n                          \"\"\r\n                        ) {\r\n                          zaprimljen++;\r\n                        }\r\n\r\n                        if (\r\n                          test.rezultat[test.rezultat.length - 1].rezultat_f !=\r\n                          \"\"\r\n                        ) {\r\n                          realizovan++;\r\n                        }\r\n\r\n                        if (check === element.rezultati.length) {\r\n                          if (status_uzorka === \"VERIFICIRAN\") {\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: \"VERIFICIRAN\",\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false\r\n                            });\r\n                          } else if (status_uzorka === \"ODOBREN\") {\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: \"ODOBREN\",\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false\r\n                            });\r\n                          } else if (zaprimljen < 1) {\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: \"REALIZOVAN\",\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false\r\n                            });\r\n                          } else if (realizovan < 1) {\r\n                            var stat = \"ZAPRIMLJEN\";\r\n                            if (element.sample.tip.includes(\"Mikrobiologija\")) {\r\n                              if (\r\n                                element.rezultati[0].rezultat[0].rezultat_m\r\n                                  .length\r\n                              ) {\r\n                                stat = \"REALIZOVAN\";\r\n                              }\r\n                            }\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: stat,\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false\r\n                            });\r\n                          } else {\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: \"U OBRADI\",\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false\r\n                            });\r\n                          }\r\n                        }\r\n                      });\r\n                    });\r\n\r\n                    this.uzorci = this.uzorci.sort(function(a, b) {\r\n                      return a.sid.localeCompare(b.sid, undefined, {\r\n                        numeric: true,\r\n                        sensitivity: \"base\"\r\n                      });\r\n                    });\r\n                  })\r\n                  .then(res => {\r\n                    bus.$emit(\"CloseMicroResult\");\r\n                    this.rezultati[0].realizovan = true;\r\n                    this.MicrobiologyScenario = \"MAIBNeR\";\r\n                    this.isLoading = false;\r\n                  });\r\n              });\r\n          } else {\r\n            this.PositiveResultSelection = \"\";\r\n            this.SelectedBacteries.forEach(element => {\r\n              this.PositiveResultSelection =\r\n                this.PositiveResultSelection + element.opis + \"\\n\";\r\n              var Antibiotici = [];\r\n              var antibiotik = {};\r\n\r\n              this.Antibiotics.forEach(antibiotik => {\r\n                element.antibiogram.antibiotici.forEach(ant => {\r\n                  if (antibiotik._id == ant) {\r\n                    antibiotik = {\r\n                      _id: antibiotik._id,\r\n                      rbr_a: antibiotik.rbr_a,\r\n                      naziv: antibiotik.naziv,\r\n                      opis: antibiotik.opis,\r\n                      disabled: false,\r\n                      rezultat: \"\"\r\n                    };\r\n                    Antibiotici.push(antibiotik);\r\n                    antibiotik = {};\r\n                  }\r\n                });\r\n              });\r\n\r\n              this.rezultati[0].rezultat_m.push({\r\n                bakterija: true,\r\n                negativan: this.largeModalneg,\r\n                pozitivan: this.largeModalpos,\r\n                _id: element._id,\r\n                naziv: element.naziv,\r\n                opis: element.opis,\r\n                antibiogram: {\r\n                  _id: element.antibiogram._id,\r\n                  naziv: element.antibiogram.naziv,\r\n                  opis: element.antibiogram.opis,\r\n                  antibiotici: [...Antibiotici]\r\n                }\r\n              });\r\n            });\r\n\r\n            this.rezultati[0].rezultat = this.PositiveResultSelection.trim();\r\n\r\n            http\r\n              .post(\"/rezultati/odobravanje/sacuvaj/\" + this.$store.state.sid, {\r\n                email: this.$store.state.userId,\r\n                token: this.$store.state.token,\r\n                site: this.$store.state.site,\r\n                rezultati: this.rezultati\r\n              })\r\n              .then(res => {\r\n                http\r\n                  .get(\r\n                    \"rezultati/odobravanje/samples/\" +\r\n                      this.$route.params.patient +\r\n                      \"/\" +\r\n                      this.$route.params.id +\r\n                      \"?token=\" +\r\n                      this.$store.state.token +\r\n                      \"&site=\" +\r\n                      this.$store.state.site +\r\n                      \"&date=\" +\r\n                      this.$route.query.date,\r\n                    {}\r\n                  )\r\n                  .then(res => {\r\n                    this.uzorci = [];\r\n\r\n                    res.data.results.forEach(element => {\r\n                      var check = 0;\r\n                      var zaprimljen = 0;\r\n                      var realizovan = 0;\r\n\r\n                      if (element.verificiran) {\r\n                        var status_uzorka = \"VERIFICIRAN\";\r\n                      } else {\r\n                        var status_uzorka = element.status;\r\n                      }\r\n\r\n                      element.rezultati.forEach(test => {\r\n                        check++;\r\n\r\n                        if (\r\n                          test.rezultat[test.rezultat.length - 1].rezultat_f ===\r\n                          \"\"\r\n                        ) {\r\n                          zaprimljen++;\r\n                        }\r\n\r\n                        if (\r\n                          test.rezultat[test.rezultat.length - 1].rezultat_f !=\r\n                          \"\"\r\n                        ) {\r\n                          realizovan++;\r\n                        }\r\n\r\n                        if (check === element.rezultati.length) {\r\n                          if (status_uzorka === \"VERIFICIRAN\") {\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: \"VERIFICIRAN\",\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false\r\n                            });\r\n                          } else if (status_uzorka === \"ODOBREN\") {\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: \"ODOBREN\",\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false\r\n                            });\r\n                          } else if (zaprimljen < 1) {\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: \"REALIZOVAN\",\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false\r\n                            });\r\n                          } else if (realizovan < 1) {\r\n                            var stat = \"ZAPRIMLJEN\";\r\n                            if (element.sample.tip.includes(\"Mikrobiologija\")) {\r\n                              if (\r\n                                element.rezultati[0].rezultat[0].rezultat_m\r\n                                  .length\r\n                              ) {\r\n                                stat = \"REALIZOVAN\";\r\n                              }\r\n                            }\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: stat,\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false\r\n                            });\r\n                          } else {\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: \"U OBRADI\",\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false\r\n                            });\r\n                          }\r\n                        }\r\n                      });\r\n                    });\r\n\r\n                    this.uzorci = this.uzorci.sort(function(a, b) {\r\n                      return a.sid.localeCompare(b.sid, undefined, {\r\n                        numeric: true,\r\n                        sensitivity: \"base\"\r\n                      });\r\n                    });\r\n                  })\r\n                  .then(res => {\r\n                    bus.$emit(\"CloseMicroResult\");\r\n                    this.rezultati[0].realizovan = true;\r\n                    this.MicrobiologyScenario = \"MAIBPoR\";\r\n                    this.isLoading = false;\r\n                  });\r\n              });\r\n          }\r\n\r\n          break;\r\n\r\n        case \"MANBNoR\":\r\n          this.rezultati[0].rezultat_m = [\r\n            {\r\n              bakterija: false,\r\n              negativan: this.ModalNegative,\r\n              pozitivan: this.ModalPositive,\r\n              _id: null,\r\n              naziv: null,\r\n              opis: null,\r\n              antibiogram: {\r\n                _id: null,\r\n                naziv: null,\r\n                opis: null,\r\n                antibiotici: [\r\n                  {\r\n                    _id: null,\r\n                    rbr_a: null,\r\n                    naziv: null,\r\n                    opis: null,\r\n                    rezultat: null\r\n                  }\r\n                ]\r\n              }\r\n            }\r\n          ];\r\n\r\n          if (this.ModalNegative) {\r\n            this.rezultati[0].rezultat = this.NegativeResultSelection;\r\n            this.isLoading = true;\r\n\r\n            http\r\n              .post(\"/rezultati/odobravanje/sacuvaj/\" + this.$store.state.sid, {\r\n                email: this.$store.state.userId,\r\n                token: this.$store.state.token,\r\n                site: this.$store.state.site,\r\n                rezultati: this.rezultati\r\n              })\r\n              .then(res => {\r\n                http\r\n                  .get(\r\n                    \"rezultati/odobravanje/samples/\" +\r\n                      this.$route.params.patient +\r\n                      \"/\" +\r\n                      this.$route.params.id +\r\n                      \"?token=\" +\r\n                      this.$store.state.token +\r\n                      \"&site=\" +\r\n                      this.$store.state.site +\r\n                      \"&date=\" +\r\n                      this.$route.query.date,\r\n                    {}\r\n                  )\r\n                  .then(res => {\r\n                    this.uzorci = [];\r\n\r\n                    res.data.results.forEach(element => {\r\n                      var check = 0;\r\n                      var zaprimljen = 0;\r\n                      var realizovan = 0;\r\n\r\n                      if (element.verificiran) {\r\n                        var status_uzorka = \"VERIFICIRAN\";\r\n                      } else {\r\n                        var status_uzorka = element.status;\r\n                      }\r\n\r\n                      element.rezultati.forEach(test => {\r\n                        check++;\r\n\r\n                        if (\r\n                          test.rezultat[test.rezultat.length - 1].rezultat_f ===\r\n                          \"\"\r\n                        ) {\r\n                          zaprimljen++;\r\n                        }\r\n\r\n                        if (\r\n                          test.rezultat[test.rezultat.length - 1].rezultat_f !=\r\n                          \"\"\r\n                        ) {\r\n                          realizovan++;\r\n                        }\r\n\r\n                        if (check === element.rezultati.length) {\r\n                          if (status_uzorka === \"VERIFICIRAN\") {\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: \"VERIFICIRAN\",\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false\r\n                            });\r\n                          } else if (status_uzorka === \"ODOBREN\") {\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: \"ODOBREN\",\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false\r\n                            });\r\n                          } else if (zaprimljen < 1) {\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: \"REALIZOVAN\",\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false\r\n                            });\r\n                          } else if (realizovan < 1) {\r\n                            var stat = \"ZAPRIMLJEN\";\r\n                            if (element.sample.tip.includes(\"Mikrobiologija\")) {\r\n                              if (\r\n                                element.rezultati[0].rezultat[0].rezultat_m\r\n                                  .length\r\n                              ) {\r\n                                stat = \"REALIZOVAN\";\r\n                              }\r\n                            }\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: stat,\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false\r\n                            });\r\n                          } else {\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: \"U OBRADI\",\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false\r\n                            });\r\n                          }\r\n                        }\r\n                      });\r\n                    });\r\n\r\n                    this.uzorci = this.uzorci.sort(function(a, b) {\r\n                      return a.sid.localeCompare(b.sid, undefined, {\r\n                        numeric: true,\r\n                        sensitivity: \"base\"\r\n                      });\r\n                    });\r\n                  })\r\n                  .then(res => {\r\n                    bus.$emit(\"CloseMicroResult\");\r\n                    this.rezultati[0].realizovan = true;\r\n                    this.MicrobiologyScenario = \"MANBNeR\";\r\n                    this.isLoading = false;\r\n                  });\r\n              });\r\n          } else {\r\n            this.rezultati[0].rezultat = this.PositiveResultSelection;\r\n            this.isLoading = true;\r\n\r\n            http\r\n              .post(\"/rezultati/odobravanje/sacuvaj/\" + this.$store.state.sid, {\r\n                email: this.$store.state.userId,\r\n                token: this.$store.state.token,\r\n                site: this.$store.state.site,\r\n                rezultati: this.rezultati\r\n              })\r\n              .then(res => {\r\n                http\r\n                  .get(\r\n                    \"rezultati/odobravanje/samples/\" +\r\n                      this.$route.params.patient +\r\n                      \"/\" +\r\n                      this.$route.params.id +\r\n                      \"?token=\" +\r\n                      this.$store.state.token +\r\n                      \"&site=\" +\r\n                      this.$store.state.site +\r\n                      \"&date=\" +\r\n                      this.$route.query.date,\r\n                    {}\r\n                  )\r\n                  .then(res => {\r\n                    this.uzorci = [];\r\n\r\n                    res.data.results.forEach(element => {\r\n                      var check = 0;\r\n                      var zaprimljen = 0;\r\n                      var realizovan = 0;\r\n\r\n                      if (element.verificiran) {\r\n                        var status_uzorka = \"VERIFICIRAN\";\r\n                      } else {\r\n                        var status_uzorka = element.status;\r\n                      }\r\n\r\n                      element.rezultati.forEach(test => {\r\n                        check++;\r\n\r\n                        if (\r\n                          test.rezultat[test.rezultat.length - 1].rezultat_f ===\r\n                          \"\"\r\n                        ) {\r\n                          zaprimljen++;\r\n                        }\r\n\r\n                        if (\r\n                          test.rezultat[test.rezultat.length - 1].rezultat_f !=\r\n                          \"\"\r\n                        ) {\r\n                          realizovan++;\r\n                        }\r\n\r\n                        if (check === element.rezultati.length) {\r\n                          if (status_uzorka === \"VERIFICIRAN\") {\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: \"VERIFICIRAN\",\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false\r\n                            });\r\n                          } else if (status_uzorka === \"ODOBREN\") {\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: \"ODOBREN\",\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false\r\n                            });\r\n                          } else if (zaprimljen < 1) {\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: \"REALIZOVAN\",\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false\r\n                            });\r\n                          } else if (realizovan < 1) {\r\n                            var stat = \"ZAPRIMLJEN\";\r\n                            if (element.sample.tip.includes(\"Mikrobiologija\")) {\r\n                              if (\r\n                                element.rezultati[0].rezultat[0].rezultat_m\r\n                                  .length\r\n                              ) {\r\n                                stat = \"REALIZOVAN\";\r\n                              }\r\n                            }\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: stat,\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false\r\n                            });\r\n                          } else {\r\n                            this.uzorci.push({\r\n                              sid: element.id,\r\n                              status: \"U OBRADI\",\r\n                              pdf_exists: element.pdf_exists,\r\n                              tip: element.sample.tip,\r\n                              _id: element._id,\r\n                              removed: false\r\n                            });\r\n                          }\r\n                        }\r\n                      });\r\n                    });\r\n\r\n                    this.uzorci = this.uzorci.sort(function(a, b) {\r\n                      return a.sid.localeCompare(b.sid, undefined, {\r\n                        numeric: true,\r\n                        sensitivity: \"base\"\r\n                      });\r\n                    });\r\n                  })\r\n                  .then(res => {\r\n                    bus.$emit(\"CloseMicroResult\");\r\n                    this.rezultati[0].realizovan = true;\r\n                    this.MicrobiologyScenario = \"MANBPoR\";\r\n                    this.isLoading = false;\r\n                  });\r\n              });\r\n          }\r\n\r\n          break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n\r\n    bus.$on(\"ResetResultSelection\", () => {\r\n      switch (this.MicrobiologyScenario) {\r\n        case \"MAIBNoR\":\r\n          this.ModalNegative = false;\r\n          this.ModalPositive = false;\r\n          this.ModalPositiveCondition = false;\r\n          this.MicrobiologyModalHeader = \"Predefinisani rezultati\";\r\n          this.NegativeResultSelection = \"\";\r\n          this.PositiveResultSelection = \"\";\r\n          this.SelectedBacteries = [];\r\n          this.ShowAllBacteries = false;\r\n\r\n          break;\r\n\r\n        case \"MAIBNeR\":\r\n          this.SelectedBacteries = [];\r\n\r\n          break;\r\n\r\n        case \"MAIBPoR\":\r\n          break;\r\n\r\n        case \"MANBNoR\":\r\n          this.ModalNegative = false;\r\n          this.ModalPositive = false;\r\n          this.ModalPositiveCondition = false;\r\n          this.MicrobiologyModalHeader = \"Predefinisani rezultati\";\r\n          this.NegativeResultSelection = \"\";\r\n          this.PositiveResultSelection = \"\";\r\n          this.SelectedBacteries = [];\r\n          this.ShowAllBacteries = false;\r\n\r\n          break;\r\n\r\n        case \"MANBNeR\":\r\n          this.SelectedBacteries = [];\r\n\r\n          break;\r\n\r\n        case \"MANBPoR\":\r\n          this.SelectedBacteries = [];\r\n\r\n          break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n\r\n      this.MicrobiologyResult.DefaultBacteries.forEach(element => {\r\n        element.chosen = false;\r\n      });\r\n\r\n      this.MicrobiologyResult.RemainingBacteries.forEach(element => {\r\n        element.chosen = false;\r\n      });\r\n\r\n      this.selectedBacteries = [];\r\n      this.ShowAllBacteries = false;\r\n    });\r\n\r\n    bus.$on(\"CancelMicroResult\", () => {\r\n      switch (this.MicrobiologyScenario) {\r\n        case \"MAIBNoR\":\r\n          this.ModalNegative = false;\r\n          this.ModalPositive = false;\r\n          this.ModalPositiveCondition = false;\r\n          this.MicrobiologyModalHeader = \"Predefinisani rezultati\";\r\n          this.NegativeResultSelection = \"\";\r\n          this.PositiveResultSelection = \"\";\r\n          this.SelectedBacteries = [];\r\n          this.ShowAllBacteries = false;\r\n\r\n          break;\r\n\r\n        case \"MAIBNeR\":\r\n          this.SelectedBacteries = [];\r\n\r\n          break;\r\n\r\n        case \"MAIBPoR\":\r\n          break;\r\n\r\n        case \"MANBNoR\":\r\n          this.ModalNegative = false;\r\n          this.ModalPositive = false;\r\n          this.ModalPositiveCondition = false;\r\n          this.MicrobiologyModalHeader = \"Predefinisani rezultati\";\r\n          this.NegativeResultSelection = \"\";\r\n          this.PositiveResultSelection = \"\";\r\n          this.SelectedBacteries = [];\r\n          this.ShowAllBacteries = false;\r\n\r\n          break;\r\n\r\n        case \"MANBNeR\":\r\n          this.SelectedBacteries = [];\r\n\r\n          break;\r\n\r\n        case \"MANBPoR\":\r\n          this.SelectedBacteries = [];\r\n\r\n          break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n\r\n      this.MicrobiologyResult.DefaultBacteries.forEach(element => {\r\n        element.chosen = false;\r\n      });\r\n\r\n      this.MicrobiologyResult.RemainingBacteries.forEach(element => {\r\n        element.chosen = false;\r\n      });\r\n\r\n      this.selectedBacteries = [];\r\n      this.ShowAllBacteries = false;\r\n    });\r\n\r\n    bus.$on(\"MicroBactery\", () => {\r\n      this.isLoading = true;\r\n\r\n      http\r\n        .post(\"/rezultati/odobravanje/sacuvaj/\" + this.$store.state.sid, {\r\n          email: this.$store.state.userId,\r\n          token: this.$store.state.token,\r\n          site: this.$store.state.site,\r\n          rezultati: this.rezultati\r\n        })\r\n        .then(res => {\r\n          http\r\n            .get(\r\n              \"rezultati/odobravanje/samples/\" +\r\n                this.$route.params.patient +\r\n                \"/\" +\r\n                this.$route.params.id +\r\n                \"?token=\" +\r\n                this.$store.state.token +\r\n                \"&site=\" +\r\n                this.$store.state.site +\r\n                \"&date=\" +\r\n                this.$route.query.date,\r\n              {}\r\n            )\r\n            .then(res => {\r\n              this.uzorci = [];\r\n\r\n              res.data.results.forEach(element => {\r\n                var check = 0;\r\n                var zaprimljen = 0;\r\n                var realizovan = 0;\r\n\r\n                if (element.verificiran) {\r\n                  var status_uzorka = \"VERIFICIRAN\";\r\n                } else {\r\n                  var status_uzorka = element.status;\r\n                }\r\n\r\n                element.rezultati.forEach(test => {\r\n                  check++;\r\n\r\n                  if (\r\n                    test.rezultat[test.rezultat.length - 1].rezultat_f === \"\"\r\n                  ) {\r\n                    zaprimljen++;\r\n                  }\r\n\r\n                  if (\r\n                    test.rezultat[test.rezultat.length - 1].rezultat_f != \"\"\r\n                  ) {\r\n                    realizovan++;\r\n                  }\r\n\r\n                  if (check === element.rezultati.length) {\r\n                    if (status_uzorka === \"VERIFICIRAN\") {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"VERIFICIRAN\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false\r\n                      });\r\n                    } else if (status_uzorka === \"ODOBREN\") {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"ODOBREN\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false\r\n                      });\r\n                    } else if (zaprimljen < 1) {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"REALIZOVAN\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false\r\n                      });\r\n                    } else if (realizovan < 1) {\r\n                      var stat = \"ZAPRIMLJEN\";\r\n                      if (element.sample.tip.includes(\"Mikrobiologija\")) {\r\n                        if (\r\n                          element.rezultati[0].rezultat[0].rezultat_m.length\r\n                        ) {\r\n                          stat = \"REALIZOVAN\";\r\n                        }\r\n                      }\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: stat,\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false\r\n                      });\r\n                    } else {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"U OBRADI\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false\r\n                      });\r\n                    }\r\n                  }\r\n                });\r\n              });\r\n\r\n              this.uzorci = this.uzorci.sort(function(a, b) {\r\n                return a.sid.localeCompare(b.sid, undefined, {\r\n                  numeric: true,\r\n                  sensitivity: \"base\"\r\n                });\r\n              });\r\n            })\r\n            .then(res => {\r\n              bus.$emit(\"CloseMicroBactery\");\r\n              this.isLoading = false;\r\n            });\r\n        });\r\n    });\r\n\r\n    bus.$on(\"CancelMicroBactery\", () => {});\r\n\r\n    bus.$on(\"PovratakMicroBactery\", () => {\r\n      this.ShowAntibiotics = false;\r\n      this.ShowBacteries = false;\r\n    });\r\n\r\n    bus.$on(\"SpasiMicroBactery\", () => {\r\n      if (this.TemporaryBacteriesAdd.length) {\r\n        var bakterija = {};\r\n        var antibiogram = {};\r\n        var antibiotik = {};\r\n\r\n        this.TemporaryBacteriesAdd.forEach(element => {\r\n          this.Antibiograms.forEach(antibgr => {\r\n            if (\r\n              JSON.stringify(element.antibiogram._id) ===\r\n              JSON.stringify(antibgr._id)\r\n            ) {\r\n              antibiogram = antibgr;\r\n            }\r\n          });\r\n\r\n          antibiogram.antibiotici.forEach(antbtk => {\r\n            antbtk.disabled = false;\r\n            antbtk.rezultat = \"\";\r\n          });\r\n\r\n          bakterija.bakterija = true;\r\n          bakterija._id = element._id;\r\n          bakterija.naziv = element.naziv;\r\n          bakterija.opis = element.opis;\r\n          bakterija.antibiogram = antibiogram;\r\n\r\n          console.log(bakterija);\r\n\r\n          this.SelectedBacteries.push(bakterija);\r\n          this.BacteryTabs.push(bakterija.opis);\r\n          this.rezultati[0].rezultat_m.push(bakterija);\r\n          bakterija = {};\r\n          antibiogram = {};\r\n        });\r\n\r\n        /* var element = {\r\n          chosen: true,\r\n          disabled: false,\r\n          _id: \"5d95cfe793a77e0fec61aa6a\",\r\n          naziv: \"Bakterija 3\",\r\n          opis: \"Bakterija 3\",\r\n          antibiogram: {\r\n            antibiotici: [\r\n              \"5d90ae5e89d972109c76c1b1\",\r\n              \"5d90aed589d972109c76c1b3\",\r\n              \"5d90af2389d972109c76c1b4\",\r\n              \"5d90ae8289d972109c76c1b2\",\r\n              \"5d90afe089d972109c76c1b8\",\r\n              \"5d90b00f89d972109c76c1b9\",\r\n              \"5d90b02289d972109c76c1ba\"\r\n            ],\r\n            _id: \"5d94750593a77e0fec61a8e9\",\r\n            naziv: \"Antibiogram 2\",\r\n            opis: \"Antibiogram 2\",\r\n            __v: 0\r\n          },\r\n          __v: 0\r\n        }; */\r\n\r\n        /* var bakterija = {\r\n          bakterija: true,\r\n          _id: \"5d94751193a77e0fec61a8ea\",\r\n          naziv: \"Bakterija 1\",\r\n          opis: \"Bakterija 1\",\r\n          antibiogram: {\r\n            _id: \"5d9474f893a77e0fec61a8e8\",\r\n            naziv: \"Antibiogram 1\",\r\n            opis: \"Antibiogram 1\",\r\n            antibiotici: [\r\n              {\r\n                _id: \"5d90ae3489d972109c76c1b0\",\r\n                rbr_a: \"0\",\r\n                naziv: \"FOX\",\r\n                opis: \"Cefoxitin\",\r\n                disabled: false,\r\n                rezultat: \"S\"\r\n              },\r\n              {\r\n                _id: \"5d90ae8289d972109c76c1b2\",\r\n                rbr_a: \"0\",\r\n                naziv: \"Cd\",\r\n                opis: \"Clindamycin\",\r\n                disabled: false,\r\n                rezultat: \"\"\r\n              },\r\n              {\r\n                _id: \"5d90af2389d972109c76c1b4\",\r\n                rbr_a: \"0\",\r\n                naziv: \"C\",\r\n                opis: \"Chloramphenicol \",\r\n                disabled: false,\r\n                rezultat: \"\"\r\n              },\r\n              {\r\n                _id: \"5d90af6e89d972109c76c1b6\",\r\n                rbr_a: \"0\",\r\n                naziv: \"TE\",\r\n                opis: \"Tetracycline\",\r\n                disabled: false,\r\n                rezultat: \"\"\r\n              }\r\n            ]\r\n          }\r\n        }; */\r\n      }\r\n\r\n      if (\r\n        this.TemporaryAntibiotics.length ||\r\n        this.TemporaryBacteriesAdd.length\r\n      ) {\r\n        this.TemporaryAntibiotics.forEach(element => {\r\n          this.rezultati[0].rezultat_m.forEach(selected => {\r\n            if (selected.opis == this.CurrentTab) {\r\n              selected.antibiogram.antibiotici.push(element);\r\n            }\r\n          });\r\n        });\r\n\r\n        this.isLoading = true;\r\n\r\n        http\r\n          .post(\"/rezultati/odobravanje/sacuvaj/\" + this.$store.state.sid, {\r\n            email: this.$store.state.userId,\r\n            token: this.$store.state.token,\r\n            site: this.$store.state.site,\r\n            rezultati: this.rezultati\r\n          })\r\n          .then(res => {\r\n            http\r\n              .get(\r\n                \"rezultati/odobravanje/samples/\" +\r\n                  this.$route.params.patient +\r\n                  \"/\" +\r\n                  this.$route.params.id +\r\n                  \"?token=\" +\r\n                  this.$store.state.token +\r\n                  \"&site=\" +\r\n                  this.$store.state.site +\r\n                  \"&date=\" +\r\n                  this.$route.query.date,\r\n                {}\r\n              )\r\n              .then(res => {\r\n                this.uzorci = [];\r\n\r\n                res.data.results.forEach(element => {\r\n                  var check = 0;\r\n                  var zaprimljen = 0;\r\n                  var realizovan = 0;\r\n\r\n                  if (element.verificiran) {\r\n                    var status_uzorka = \"VERIFICIRAN\";\r\n                  } else {\r\n                    var status_uzorka = element.status;\r\n                  }\r\n\r\n                  element.rezultati.forEach(test => {\r\n                    check++;\r\n\r\n                    if (\r\n                      test.rezultat[test.rezultat.length - 1].rezultat_f === \"\"\r\n                    ) {\r\n                      zaprimljen++;\r\n                    }\r\n\r\n                    if (\r\n                      test.rezultat[test.rezultat.length - 1].rezultat_f != \"\"\r\n                    ) {\r\n                      realizovan++;\r\n                    }\r\n\r\n                    if (check === element.rezultati.length) {\r\n                      if (status_uzorka === \"VERIFICIRAN\") {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"VERIFICIRAN\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false\r\n                        });\r\n                      } else if (status_uzorka === \"ODOBREN\") {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"ODOBREN\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false\r\n                        });\r\n                      } else if (zaprimljen < 1) {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"REALIZOVAN\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false\r\n                        });\r\n                      } else if (realizovan < 1) {\r\n                        var stat = \"ZAPRIMLJEN\";\r\n                        if (element.sample.tip.includes(\"Mikrobiologija\")) {\r\n                          if (\r\n                            element.rezultati[0].rezultat[0].rezultat_m.length\r\n                          ) {\r\n                            stat = \"REALIZOVAN\";\r\n                          }\r\n                        }\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: stat,\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false\r\n                        });\r\n                      } else {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"U OBRADI\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false\r\n                        });\r\n                      }\r\n                    }\r\n                  });\r\n                });\r\n\r\n                this.uzorci = this.uzorci.sort(function(a, b) {\r\n                  return a.sid.localeCompare(b.sid, undefined, {\r\n                    numeric: true,\r\n                    sensitivity: \"base\"\r\n                  });\r\n                });\r\n              })\r\n              .then(res => {\r\n                this.MicrobiologyScenario = \"MAIBPoR\";\r\n                this.ShowAntibiotics = false;\r\n                this.ShowBacteries = false;\r\n                this.isLoading = false;\r\n\r\n                if (this.TemporaryBacteriesAdd.length) {\r\n                  this.CurrentTab = this.BacteryTabs[\r\n                    this.BacteryTabs.length - 1\r\n                  ];\r\n                }\r\n              });\r\n          });\r\n      } else {\r\n        this.MicrobiologyScenario = \"MAIBPoR\";\r\n        this.ShowAntibiotics = false;\r\n        this.ShowBacteries = false;\r\n      }\r\n    });\r\n\r\n    bus.$on(\"UpdateMicroBactery\", data => {\r\n      if (\r\n        this.$store.state.access.level < 1 &&\r\n        !this.ShowAntibiotics &&\r\n        !this.ShowBacteries &&\r\n        this.MicrobiologyScenario === \"MAIBPoR\"\r\n      ) {\r\n        if (\r\n          this.sample.status != \"ODOBREN\" &&\r\n          this.sample.status != \"VERIFICIRAN\"\r\n        ) {\r\n          this.TemporaryAntibiotics = [];\r\n          this.TemporaryBacteries = [];\r\n          this.TemporaryBacteriesAdd = [];\r\n          var obj = {};\r\n\r\n          this.Bacteries.forEach(element => {\r\n            obj.chosen = false;\r\n            obj.disabled = false;\r\n            obj._id = element._id;\r\n            obj.naziv = element.naziv;\r\n            obj.opis = element.opis;\r\n            obj.antibiogram = element.antibiogram;\r\n            obj.__v = element.__v;\r\n            obj.chosen = element.chosen;\r\n            this.TemporaryBacteries.push(obj);\r\n            obj = {};\r\n          });\r\n\r\n          this.TemporaryBacteries.forEach(element => {\r\n            this.SelectedBacteries.forEach(selected => {\r\n              if (selected._id == element._id) {\r\n                element.chosen = true;\r\n                element.disabled = true;\r\n              }\r\n            });\r\n          });\r\n\r\n          this.ShowBacteries = true;\r\n        }\r\n      }\r\n    });\r\n  },\r\n\r\n  beforeDestroy() {\r\n    bus.$off(\"Parametar\");\r\n    bus.$off(\"trash\");\r\n    bus.$off(\"edit\");\r\n    bus.$off(\"comment\");\r\n    bus.$off(\"barcode\");\r\n    bus.$off(\"save\");\r\n    bus.$off(\"check\");\r\n    bus.$off(\"verify\");\r\n    bus.$off(\"undo\");\r\n    bus.$off(\"unlock\");\r\n    bus.$off(\"Nalaz\");\r\n    bus.$off(\"pdf\");\r\n    bus.$off(\"Sample\");\r\n    bus.$off(\"Deleted\");\r\n    bus.$off(\"Edited\");\r\n    bus.$off(\"SaveMulti\");\r\n    bus.$off(\"Mail\");\r\n    bus.$off(\"Error\");\r\n    bus.$off(\"Analyser\");\r\n    bus.$off(\"Sljedeci\");\r\n    bus.$off(\"Prethodni\");\r\n    bus.$off(\"Search\");\r\n    bus.$off(\"Push\");\r\n    bus.$off(\"Reference\");\r\n    bus.$off(\"graph\");\r\n    bus.$off(\"table\");\r\n    // VuesticTabsBactery\r\n    bus.$off(\"tabChanged\");\r\n    bus.$off(\"Antibiotik\");\r\n    // VuesticModalMicroResult, bus.$emit(\"CloseMicroResult\")\r\n    bus.$off(\"MicroResult\");\r\n    bus.$off(\"ResetResultSelection\");\r\n    bus.$off(\"CancelMicroResult\");\r\n    // VuesticModalMicroReset\r\n    bus.$off(\"MicroReset\");\r\n    // VuesticCollapseObrada\r\n    bus.$off(\"AllowClick\");\r\n    // VuesticModalMicroBactery, bus.$emit(\"CloseMicroBactery\")\r\n    bus.$off(\"MicroBactery\");\r\n    bus.$off(\"CancelMicroBactery\");\r\n    bus.$off(\"PovratakMicroBactery\");\r\n    bus.$off(\"SpasiMicroBactery\");\r\n    bus.$off(\"UpdateMicroBactery\");\r\n  },\r\n\r\n  created() {\r\n    this.Created();\r\n\r\n    this.Previous.pid = Number(this.$route.params.id) - 1;\r\n    this.Next.pid = Number(this.$route.params.id) + 1;\r\n    this.query_date =\r\n      this.$route.query.date.substring(8, 10) +\r\n      \".\" +\r\n      this.$route.query.date.substring(5, 7) +\r\n      \".\" +\r\n      this.$route.query.date.substring(0, 4);\r\n\r\n    this.Datum.today = new Date(\r\n      JSON.stringify(\r\n        new Date(new Date().setDate(new Date().getDate()))\r\n      ).substring(1, 11) + \"T00:00:00\"\r\n    );\r\n\r\n    this.today_date =\r\n      JSON.stringify(new Date(new Date().setDate(new Date().getDate())))\r\n        .substring(1, 11)\r\n        .substring(8, 10) +\r\n      \".\" +\r\n      JSON.stringify(new Date(new Date().setDate(new Date().getDate())))\r\n        .substring(1, 11)\r\n        .substring(5, 7) +\r\n      \".\" +\r\n      JSON.stringify(new Date(new Date().setDate(new Date().getDate())))\r\n        .substring(1, 11)\r\n        .substring(0, 4);\r\n\r\n    this.Datum.query = new Date(\r\n      this.$route.query.date.substring(0, 10) + \"T00:00:00\"\r\n    );\r\n\r\n    this.Datum.next = new Date(\r\n      new Date(this.$route.query.date.substring(0, 10) + \"T00:00:00\").setDate(\r\n        this.Datum.query.getDate() + 1\r\n      )\r\n    );\r\n\r\n    this.Datum.previous = new Date(\r\n      new Date(this.$route.query.date.substring(0, 10) + \"T00:00:00\").setDate(\r\n        this.Datum.query.getDate() - 1\r\n      )\r\n    );\r\n\r\n    if (new Date(this.Datum.today) > new Date(this.Datum.query)) {\r\n      this.pagination = false;\r\n    } else if (new Date(this.Datum.today) < new Date(this.Datum.query)) {\r\n      this.pagination = false;\r\n    } else {\r\n      this.pagination = true;\r\n    }\r\n\r\n    this.interpretacije = this.interpretacije.sort(function(a, b) {\r\n      return a.localeCompare(b, undefined, {\r\n        numeric: true,\r\n        sensitivity: \"base\"\r\n      });\r\n    });\r\n  },\r\n\r\n  methods: {\r\n    ExclamationMulti(test) {\r\n      this.warning = { analiza: \"\", text: \"\", napomena: \"\", control: \"\" };\r\n      var rezultat = test.rezultat\r\n        .replace(/,/g, \".\")\r\n        .replace(/</g, \"\")\r\n        .replace(/>/g, \"\");\r\n\r\n      var m_interp = {};\r\n      var m_opis = \"\";\r\n\r\n      this.analitiprikaz.forEach(element => {\r\n        element.labassay.multiparam.forEach(param => {\r\n          if (JSON.stringify(param._id) == JSON.stringify(test.analit)) {\r\n            m_interp = param.interpretacija;\r\n            m_opis = param.opis;\r\n          }\r\n        });\r\n      });\r\n\r\n      switch (\r\n        this.Interpretacija(\r\n          test.opis,\r\n          rezultat,\r\n          test.jedinica,\r\n          test.refd,\r\n          test.refg,\r\n          this.$store.state.site,\r\n          test.interp,\r\n          \"\",\r\n          this.spec\r\n        )[2]\r\n      ) {\r\n        case \"L\":\r\n          this.warning = {\r\n            analiza: m_opis,\r\n            text: m_interp.snizeno.text.trim(),\r\n            napomena: m_interp.napomena.trim(),\r\n            control: \"Sniženo\"\r\n          };\r\n          break;\r\n\r\n        case \"H\":\r\n          switch (test.interp) {\r\n            case \"neg\":\r\n              this.warning = {\r\n                analiza: m_opis,\r\n                text: m_interp.poviseno.text.trim(),\r\n                napomena: m_interp.napomena.trim(),\r\n                control: \"Pozitivan\"\r\n              };\r\n              break;\r\n\r\n            default:\r\n              this.warning = {\r\n                analiza: m_opis,\r\n                text: m_interp.poviseno.text.trim(),\r\n                napomena: m_interp.napomena.trim(),\r\n                control: \"Povišeno\"\r\n              };\r\n              break;\r\n          }\r\n\r\n          break;\r\n\r\n        default:\r\n          this.warning = { analiza: \"\", text: \"\", napomena: \"\", control: \"\" };\r\n          break;\r\n      }\r\n\r\n      if (this.warning.text && this.warning.text != \"\") {\r\n        // console.log(this.warning.analiza + \" | \" + this.warning.control + \" - \" + this.warning.text);\r\n        // this.$refs.staticModalExclamation.open();\r\n      }\r\n    },\r\n    Exclamation(test) {\r\n      this.warning = { analiza: \"\", text: \"\", napomena: \"\", control: \"\" };\r\n      var rezultat = test.rezultat\r\n        .replace(/,/g, \".\")\r\n        .replace(/</g, \"\")\r\n        .replace(/>/g, \"\");\r\n\r\n      switch (\r\n        this.Interpretacija(\r\n          test.opis,\r\n          rezultat,\r\n          test.jedinica,\r\n          test.dRef,\r\n          test.gRef,\r\n          this.$store.state.site,\r\n          test.interp,\r\n          test.extend,\r\n          this.spec\r\n        )[2]\r\n      ) {\r\n        case \"L\":\r\n          this.warning = {\r\n            analiza: test.analit,\r\n            text: test.interpretacija.snizeno.text.trim(),\r\n            napomena: test.interpretacija.napomena.trim(),\r\n            control: \"Sniženo\"\r\n          };\r\n          break;\r\n\r\n        case \"H\":\r\n          switch (test.interp) {\r\n            case \"neg\":\r\n              this.warning = {\r\n                analiza: test.analit,\r\n                text: test.interpretacija.poviseno.text.trim(),\r\n                napomena: test.interpretacija.napomena.trim(),\r\n                control: \"Pozitivan\"\r\n              };\r\n              break;\r\n\r\n            default:\r\n              this.warning = {\r\n                analiza: test.analit,\r\n                text: test.interpretacija.poviseno.text.trim(),\r\n                napomena: test.interpretacija.napomena.trim(),\r\n                control: \"Povišeno\"\r\n              };\r\n              break;\r\n          }\r\n\r\n          break;\r\n\r\n        default:\r\n          this.warning = { analiza: \"\", text: \"\", napomena: \"\", control: \"\" };\r\n          break;\r\n      }\r\n\r\n      if (this.warning.text && this.warning.text != \"\") {\r\n        this.$refs.staticModalExclamation.open();\r\n      }\r\n    },\r\n    LabAssayEval(e, test) {\r\n      this.analiza_eval = test;\r\n      e.preventDefault();\r\n      this.spinner = false;\r\n      this.showLineChart = false;\r\n      let palette = store.getters.palette;\r\n      this.table_header = test.ime + \" | \" + test.analit;\r\n      if (!test.multidata) {\r\n        this.isLoading = true;\r\n        this.Procjena = [];\r\n\r\n        http\r\n          .get(\r\n            \"/labassay/evaluation/single\" +\r\n              \"?token=\" +\r\n              this.$store.state.token +\r\n              \"&site=\" +\r\n              this.$store.state.site +\r\n              \"&range=\" +\r\n              \"14\",\r\n            {}\r\n          )\r\n          .then(response => {\r\n            if (response.data.Results.length) {\r\n              var obj = {};\r\n              var count = 0;\r\n\r\n              response.data.Results.forEach(element => {\r\n                count++;\r\n                element.rezultati.forEach(rez => {\r\n                  if (\r\n                    rez.labassay === test.labassay_id &&\r\n                    element.verificiran &&\r\n                    rez.rezultat[rez.rezultat.length - 1].rezultat_f.trim() !=\r\n                      \"\"\r\n                  ) {\r\n                    obj.rezultat =\r\n                      rez.rezultat[rez.rezultat.length - 1].rezultat_f;\r\n                    obj.jedinica =\r\n                      rez.rezultat[rez.rezultat.length - 1].jedinice_f;\r\n                    obj.analit = \"\";\r\n                    obj.interp = rez.interp;\r\n                    obj.extend = rez.extend;\r\n                    obj.refd = rez.refd;\r\n                    obj.refg = rez.refg;\r\n                    obj.sid = element.id;\r\n                    obj.updated_at =\r\n                      rez.rezultat[rez.rezultat.length - 1].updated_at;\r\n\r\n                    var datum =\r\n                      JSON.stringify(\r\n                        rez.rezultat[rez.rezultat.length - 1].updated_at\r\n                      ).slice(9, 11) +\r\n                      \".\" +\r\n                      JSON.stringify(\r\n                        rez.rezultat[rez.rezultat.length - 1].updated_at\r\n                      ).slice(6, 8) +\r\n                      \".\" +\r\n                      JSON.stringify(\r\n                        rez.rezultat[rez.rezultat.length - 1].updated_at\r\n                      ).slice(1, 5);\r\n                    var time = JSON.stringify(\r\n                      new Date(\r\n                        new Date(\r\n                          rez.rezultat[rez.rezultat.length - 1].updated_at\r\n                        ).getTime() -\r\n                          new Date(\r\n                            rez.rezultat[rez.rezultat.length - 1].updated_at\r\n                          ).getTimezoneOffset() *\r\n                            60000\r\n                      ).toISOString()\r\n                    ).substring(12, 17);\r\n\r\n                    obj.datum = datum;\r\n                    obj.vrijeme = time;\r\n                    obj.kontrola = this.Interpretacija(\r\n                      \"\",\r\n                      obj.rezultat,\r\n                      obj.jedinica,\r\n                      obj.refd,\r\n                      obj.refg,\r\n                      this.$store.state.site,\r\n                      obj.interp,\r\n                      obj.extend,\r\n                      this.spec\r\n                    )[5];\r\n\r\n                    this.Procjena.push(obj);\r\n                    obj = {};\r\n                  }\r\n                });\r\n\r\n                if (count == response.data.Results.length) {\r\n                  this.Procjena.sort(function(a, b) {\r\n                    return Date.parse(a.updated_at) == Date.parse(b.updated_at)\r\n                      ? 0\r\n                      : +(\r\n                          Date.parse(a.updated_at) < Date.parse(b.updated_at)\r\n                        ) || -1;\r\n                  });\r\n\r\n                  var data = [];\r\n\r\n                  if (this.Procjena.length) {\r\n                    this.optionsLineChart = {\r\n                      responsive: true,\r\n                      maintainAspectRatio: false,\r\n                      title: {\r\n                        display: true,\r\n                        text: \"\"\r\n                      },\r\n                      scales: {\r\n                        xAxes: [\r\n                          {\r\n                            display: true,\r\n                            gridLines: {\r\n                              display: true,\r\n                              color: \"#eee\"\r\n                            }\r\n                          }\r\n                        ],\r\n                        yAxes: [\r\n                          {\r\n                            display: true,\r\n                            gridLines: {\r\n                              display: true,\r\n                              color: \"#eee\"\r\n                            }\r\n                          }\r\n                        ]\r\n                      }\r\n                    };\r\n\r\n                    var labels = [];\r\n                    var kontrola = [];\r\n                    var temp = \"\";\r\n\r\n                    this.Procjena.forEach(element => {\r\n                      if (!isNaN(element.rezultat.trim())) {\r\n                        switch (element.kontrola) {\r\n                          case \"Red\":\r\n                            kontrola.push(palette.danger);\r\n                            break;\r\n                          case \"Green\":\r\n                            kontrola.push(palette.primary);\r\n                            break;\r\n                          case \"Yellow\":\r\n                            kontrola.push(palette.warning);\r\n                            break;\r\n\r\n                          default:\r\n                            kontrola.push(palette.info);\r\n                            break;\r\n                        }\r\n\r\n                        labels.push(element.datum);\r\n                        data.push(element.rezultat);\r\n                      }\r\n                    });\r\n\r\n                    this.dataLineChart = {\r\n                      labels: labels,\r\n                      datasets: [\r\n                        {\r\n                          label: test.ime + \" | \" + test.analit,\r\n                          backgroundColor: utils.hex2rgb(palette.info, 0.5).css,\r\n                          pointBorderColor: kontrola,\r\n                          pointBackgroundColor: kontrola,\r\n                          borderColor: palette.transparent,\r\n                          data: data\r\n                        }\r\n                      ]\r\n                    };\r\n\r\n                    if (data.length) {\r\n                      this.showLineChart = true;\r\n                    }\r\n                    this.$refs.staticModalLabAssayEvalSingle.open();\r\n                  } else {\r\n                  }\r\n                }\r\n              });\r\n            } else {\r\n            }\r\n            this.isLoading = false;\r\n          });\r\n      } else {\r\n        this.multiparam_izbor = test.multiparam[0].opis;\r\n        this.multiparam_id = test.multiparam[0]._id;\r\n\r\n        this.multiparams = [];\r\n\r\n        this.multiparam_izbornik = [];\r\n\r\n        test.multiparam.forEach(element => {\r\n          this.multiparam_izbornik.push(element.opis);\r\n          this.multiparams.push(element);\r\n        });\r\n\r\n        this.isLoading = true;\r\n        this.Procjena = [];\r\n\r\n        http\r\n          .get(\r\n            \"/labassay/evaluation/multi\" +\r\n              \"?token=\" +\r\n              this.$store.state.token +\r\n              \"&site=\" +\r\n              this.$store.state.site +\r\n              \"&labassay=\" +\r\n              test.labassay_id +\r\n              \"&range=\" +\r\n              \"14\",\r\n            {}\r\n          )\r\n          .then(response => {\r\n            if (response.data.Multi.length) {\r\n              this.Response = response.data;\r\n\r\n              var obj = {};\r\n              var count = 0;\r\n\r\n              response.data.Multi.forEach(element => {\r\n                count++;\r\n                element.multi.forEach(param => {\r\n                  if (\r\n                    this.multiparam_id == param.labassay &&\r\n                    param.rezultat[0].rezultat_f.trim() != \"\"\r\n                  ) {\r\n                    obj.rezultat = param.rezultat[0].rezultat_f;\r\n                    obj.jedinica = param.rezultat[0].jedinice_f;\r\n                    obj.analit = \"Nema podataka\";\r\n                    obj.interp = param.interp;\r\n                    obj.extend = param.extend;\r\n                    obj.refd = param.refd;\r\n                    obj.refg = param.refg;\r\n                    obj.sid = \"Nema podataka\";\r\n                    obj.updated_at = new Date(param.rezultat[0].updated_at);\r\n\r\n                    var datum =\r\n                      JSON.stringify(\r\n                        new Date(param.rezultat[0].updated_at)\r\n                      ).slice(9, 11) +\r\n                      \".\" +\r\n                      JSON.stringify(\r\n                        new Date(param.rezultat[0].updated_at)\r\n                      ).slice(6, 8) +\r\n                      \".\" +\r\n                      JSON.stringify(\r\n                        new Date(param.rezultat[0].updated_at)\r\n                      ).slice(1, 5);\r\n                    var time = JSON.stringify(\r\n                      new Date(\r\n                        new Date(param.rezultat[0].updated_at).getTime() -\r\n                          new Date(\r\n                            param.rezultat[0].updated_at\r\n                          ).getTimezoneOffset() *\r\n                            60000\r\n                      ).toISOString()\r\n                    ).substring(12, 17);\r\n                    obj.datum = datum;\r\n                    obj.vrijeme = time;\r\n                    obj.kontrola = this.Interpretacija(\r\n                      \"\",\r\n                      obj.rezultat,\r\n                      obj.jedinica,\r\n                      obj.refd,\r\n                      obj.refg,\r\n                      this.$store.state.site,\r\n                      obj.interp,\r\n                      obj.extend,\r\n                      this.spec\r\n                    )[5];\r\n\r\n                    this.Procjena.push(obj);\r\n                    obj = {};\r\n                  }\r\n                });\r\n\r\n                if (count == response.data.Multi.length) {\r\n                  this.Procjena.sort(function(a, b) {\r\n                    return Date.parse(a.updated_at) == Date.parse(b.updated_at)\r\n                      ? 0\r\n                      : +(\r\n                          Date.parse(a.updated_at) < Date.parse(b.updated_at)\r\n                        ) || -1;\r\n                  });\r\n\r\n                  var data = [];\r\n\r\n                  if (this.Procjena.length) {\r\n                    this.optionsLineChart = {\r\n                      responsive: true,\r\n                      maintainAspectRatio: false,\r\n                      title: {\r\n                        display: true,\r\n                        text: \"\"\r\n                      },\r\n                      scales: {\r\n                        xAxes: [\r\n                          {\r\n                            display: true,\r\n                            gridLines: {\r\n                              display: true,\r\n                              color: \"#eee\"\r\n                            }\r\n                          }\r\n                        ],\r\n                        yAxes: [\r\n                          {\r\n                            display: true,\r\n                            gridLines: {\r\n                              display: true,\r\n                              color: \"#eee\"\r\n                            }\r\n                          }\r\n                        ]\r\n                      }\r\n                    };\r\n\r\n                    var labels = [];\r\n                    var kontrola = [];\r\n                    var temp = \"\";\r\n\r\n                    this.Procjena.forEach(element => {\r\n                      if (!isNaN(element.rezultat.trim())) {\r\n                        switch (element.kontrola) {\r\n                          case \"Red\":\r\n                            kontrola.push(palette.danger);\r\n                            break;\r\n                          case \"Green\":\r\n                            kontrola.push(palette.primary);\r\n                            break;\r\n                          case \"Yellow\":\r\n                            kontrola.push(palette.warning);\r\n                            break;\r\n\r\n                          default:\r\n                            kontrola.push(palette.info);\r\n                            break;\r\n                        }\r\n\r\n                        labels.push(element.datum);\r\n                        data.push(element.rezultat);\r\n                      }\r\n                    });\r\n\r\n                    this.dataLineChart = {\r\n                      labels: labels,\r\n                      datasets: [\r\n                        {\r\n                          label: test.ime + \" | \" + test.analit,\r\n                          backgroundColor: utils.hex2rgb(palette.info, 0.5).css,\r\n                          pointBorderColor: kontrola,\r\n                          pointBackgroundColor: kontrola,\r\n                          borderColor: palette.transparent,\r\n                          data: data\r\n                        }\r\n                      ]\r\n                    };\r\n\r\n                    if (data.length) {\r\n                      this.showLineChart = true;\r\n                    }\r\n\r\n                    this.$refs.staticModalLabAssayEvalMulti.open();\r\n                  } else {\r\n                  }\r\n                }\r\n              });\r\n            } else {\r\n            }\r\n            this.isLoading = false;\r\n          });\r\n      }\r\n    },\r\n    Evaluation(test) {\r\n      this.analiza_eval = test;\r\n      this.spinner = false;\r\n      if (true) {\r\n        this.showLineChart = false;\r\n        let palette = store.getters.palette;\r\n        this.table_header = test.ime + \" | \" + test.analit;\r\n\r\n        if (test.multidata) {\r\n          this.multiparam_izbor = test.multiparam[0].opis;\r\n          this.multiparam_id = test.multiparam[0]._id;\r\n\r\n          this.multiparams = [];\r\n\r\n          this.multiparam_izbornik = [];\r\n\r\n          test.multiparam.forEach(element => {\r\n            this.multiparam_izbornik.push(element.opis);\r\n            this.multiparams.push(element);\r\n          });\r\n\r\n          this.isLoading = true;\r\n          this.Procjena = [];\r\n\r\n          http\r\n            .get(\r\n              \"/patient/evaluation/multi\" +\r\n                \"?token=\" +\r\n                this.$store.state.token +\r\n                \"&site=\" +\r\n                this.$store.state.site +\r\n                \"&patient=\" +\r\n                this.pacijent +\r\n                \"&labassay=\" +\r\n                test.labassay_id,\r\n              {}\r\n            )\r\n            .then(response => {\r\n              if (response.data.Multi.length) {\r\n                this.Response = response.data;\r\n\r\n                var obj = {};\r\n                var count = 0;\r\n\r\n                response.data.Multi.forEach(element => {\r\n                  count++;\r\n                  element.multi.forEach(param => {\r\n                    if (\r\n                      this.multiparam_id == param.labassay &&\r\n                      param.rezultat[0].rezultat_f.trim() != \"\"\r\n                    ) {\r\n                      obj.rezultat = param.rezultat[0].rezultat_f;\r\n                      obj.jedinica = param.rezultat[0].jedinice_f;\r\n                      obj.analit = \"Nema podataka\";\r\n                      obj.interp = param.interp;\r\n                      obj.extend = param.extend;\r\n                      obj.refd = param.refd;\r\n                      obj.refg = param.refg;\r\n                      obj.sid = \"Nema podataka\";\r\n                      obj.updated_at = new Date(param.rezultat[0].updated_at);\r\n\r\n                      var datum =\r\n                        JSON.stringify(\r\n                          new Date(param.rezultat[0].updated_at)\r\n                        ).slice(9, 11) +\r\n                        \".\" +\r\n                        JSON.stringify(\r\n                          new Date(param.rezultat[0].updated_at)\r\n                        ).slice(6, 8) +\r\n                        \".\" +\r\n                        JSON.stringify(\r\n                          new Date(param.rezultat[0].updated_at)\r\n                        ).slice(1, 5);\r\n                      var time = JSON.stringify(\r\n                        new Date(\r\n                          new Date(param.rezultat[0].updated_at).getTime() -\r\n                            new Date(\r\n                              param.rezultat[0].updated_at\r\n                            ).getTimezoneOffset() *\r\n                              60000\r\n                        ).toISOString()\r\n                      ).substring(12, 17);\r\n                      obj.datum = datum;\r\n                      obj.vrijeme = time;\r\n                      obj.kontrola = this.Interpretacija(\r\n                        \"\",\r\n                        obj.rezultat,\r\n                        obj.jedinica,\r\n                        obj.refd,\r\n                        obj.refg,\r\n                        this.$store.state.site,\r\n                        obj.interp,\r\n                        obj.extend,\r\n                        this.spec\r\n                      )[5];\r\n\r\n                      this.Procjena.push(obj);\r\n                      obj = {};\r\n                    }\r\n                  });\r\n\r\n                  if (count == response.data.Multi.length) {\r\n                    this.Procjena.sort(function(a, b) {\r\n                      return Date.parse(a.updated_at) ==\r\n                        Date.parse(b.updated_at)\r\n                        ? 0\r\n                        : +(\r\n                            Date.parse(a.updated_at) < Date.parse(b.updated_at)\r\n                          ) || -1;\r\n                    });\r\n\r\n                    var data = [];\r\n\r\n                    if (this.Procjena.length) {\r\n                      this.optionsLineChart = {\r\n                        responsive: true,\r\n                        maintainAspectRatio: false,\r\n                        title: {\r\n                          display: true,\r\n                          text: \"\"\r\n                        },\r\n                        scales: {\r\n                          xAxes: [\r\n                            {\r\n                              display: true,\r\n                              gridLines: {\r\n                                display: true,\r\n                                color: \"#eee\"\r\n                              }\r\n                            }\r\n                          ],\r\n                          yAxes: [\r\n                            {\r\n                              display: true,\r\n                              gridLines: {\r\n                                display: true,\r\n                                color: \"#eee\"\r\n                              }\r\n                            }\r\n                          ]\r\n                        }\r\n                      };\r\n\r\n                      var labels = [];\r\n                      var kontrola = [];\r\n                      var temp = \"\";\r\n\r\n                      this.Procjena.forEach(element => {\r\n                        if (!isNaN(element.rezultat.trim())) {\r\n                          switch (element.kontrola) {\r\n                            case \"Red\":\r\n                              kontrola.push(palette.danger);\r\n                              break;\r\n                            case \"Green\":\r\n                              kontrola.push(palette.primary);\r\n                              break;\r\n                            case \"Yellow\":\r\n                              kontrola.push(palette.warning);\r\n                              break;\r\n\r\n                            default:\r\n                              kontrola.push(palette.info);\r\n                              break;\r\n                          }\r\n\r\n                          labels.push(element.datum);\r\n                          data.push(element.rezultat);\r\n                        }\r\n                      });\r\n\r\n                      this.dataLineChart = {\r\n                        labels: labels,\r\n                        datasets: [\r\n                          {\r\n                            label: test.ime + \" | \" + test.analit,\r\n                            backgroundColor: utils.hex2rgb(palette.info, 0.5)\r\n                              .css,\r\n                            pointBorderColor: kontrola,\r\n                            pointBackgroundColor: kontrola,\r\n                            borderColor: palette.transparent,\r\n                            data: data\r\n                          }\r\n                        ]\r\n                      };\r\n\r\n                      if (data.length) {\r\n                        this.showLineChart = true;\r\n                      }\r\n\r\n                      this.$refs.staticModalEvaluationMulti.open();\r\n                    } else {\r\n                    }\r\n                  }\r\n                });\r\n              } else {\r\n              }\r\n              this.isLoading = false;\r\n            });\r\n        } else {\r\n          this.isLoading = true;\r\n          this.Procjena = [];\r\n\r\n          http\r\n            .get(\r\n              \"/patient/evaluation/single\" +\r\n                \"?token=\" +\r\n                this.$store.state.token +\r\n                \"&site=\" +\r\n                this.$store.state.site +\r\n                \"&patient=\" +\r\n                this.pacijent,\r\n              {}\r\n            )\r\n            .then(response => {\r\n              if (response.data.Results.length) {\r\n                var obj = {};\r\n                var count = 0;\r\n\r\n                response.data.Results.forEach(element => {\r\n                  count++;\r\n                  element.rezultati.forEach(rez => {\r\n                    if (\r\n                      rez.labassay === test.labassay_id &&\r\n                      element.verificiran &&\r\n                      rez.rezultat[rez.rezultat.length - 1].rezultat_f.trim() !=\r\n                        \"\"\r\n                    ) {\r\n                      obj.rezultat =\r\n                        rez.rezultat[rez.rezultat.length - 1].rezultat_f;\r\n                      obj.jedinica =\r\n                        rez.rezultat[rez.rezultat.length - 1].jedinice_f;\r\n                      obj.analit = \"\";\r\n                      obj.interp = rez.interp;\r\n                      obj.extend = rez.extend;\r\n                      obj.refd = rez.refd;\r\n                      obj.refg = rez.refg;\r\n                      obj.sid = element.id;\r\n                      obj.updated_at =\r\n                        rez.rezultat[rez.rezultat.length - 1].updated_at;\r\n\r\n                      var datum =\r\n                        JSON.stringify(\r\n                          rez.rezultat[rez.rezultat.length - 1].updated_at\r\n                        ).slice(9, 11) +\r\n                        \".\" +\r\n                        JSON.stringify(\r\n                          rez.rezultat[rez.rezultat.length - 1].updated_at\r\n                        ).slice(6, 8) +\r\n                        \".\" +\r\n                        JSON.stringify(\r\n                          rez.rezultat[rez.rezultat.length - 1].updated_at\r\n                        ).slice(1, 5);\r\n                      var time = JSON.stringify(\r\n                        new Date(\r\n                          new Date(\r\n                            rez.rezultat[rez.rezultat.length - 1].updated_at\r\n                          ).getTime() -\r\n                            new Date(\r\n                              rez.rezultat[rez.rezultat.length - 1].updated_at\r\n                            ).getTimezoneOffset() *\r\n                              60000\r\n                        ).toISOString()\r\n                      ).substring(12, 17);\r\n\r\n                      obj.datum = datum;\r\n                      obj.vrijeme = time;\r\n                      obj.kontrola = this.Interpretacija(\r\n                        \"\",\r\n                        obj.rezultat,\r\n                        obj.jedinica,\r\n                        obj.refd,\r\n                        obj.refg,\r\n                        this.$store.state.site,\r\n                        obj.interp,\r\n                        obj.extend,\r\n                        this.spec\r\n                      )[5];\r\n\r\n                      this.Procjena.push(obj);\r\n                      obj = {};\r\n                    }\r\n                  });\r\n\r\n                  if (count == response.data.Results.length) {\r\n                    this.Procjena.sort(function(a, b) {\r\n                      return Date.parse(a.updated_at) ==\r\n                        Date.parse(b.updated_at)\r\n                        ? 0\r\n                        : +(\r\n                            Date.parse(a.updated_at) < Date.parse(b.updated_at)\r\n                          ) || -1;\r\n                    });\r\n\r\n                    var data = [];\r\n\r\n                    if (this.Procjena.length) {\r\n                      this.optionsLineChart = {\r\n                        responsive: true,\r\n                        maintainAspectRatio: false,\r\n                        title: {\r\n                          display: true,\r\n                          text: \"\"\r\n                        },\r\n                        scales: {\r\n                          xAxes: [\r\n                            {\r\n                              display: true,\r\n                              gridLines: {\r\n                                display: true,\r\n                                color: \"#eee\"\r\n                              }\r\n                            }\r\n                          ],\r\n                          yAxes: [\r\n                            {\r\n                              display: true,\r\n                              gridLines: {\r\n                                display: true,\r\n                                color: \"#eee\"\r\n                              }\r\n                            }\r\n                          ]\r\n                        }\r\n                      };\r\n\r\n                      var labels = [];\r\n                      var kontrola = [];\r\n                      var temp = \"\";\r\n\r\n                      this.Procjena.forEach(element => {\r\n                        if (!isNaN(element.rezultat.trim())) {\r\n                          switch (element.kontrola) {\r\n                            case \"Red\":\r\n                              kontrola.push(palette.danger);\r\n                              break;\r\n                            case \"Green\":\r\n                              kontrola.push(palette.primary);\r\n                              break;\r\n                            case \"Yellow\":\r\n                              kontrola.push(palette.warning);\r\n                              break;\r\n\r\n                            default:\r\n                              kontrola.push(palette.info);\r\n                              break;\r\n                          }\r\n\r\n                          labels.push(element.datum);\r\n                          data.push(element.rezultat);\r\n                        }\r\n                      });\r\n\r\n                      this.dataLineChart = {\r\n                        labels: labels,\r\n                        datasets: [\r\n                          {\r\n                            label: test.ime + \" | \" + test.analit,\r\n                            backgroundColor: utils.hex2rgb(palette.info, 0.5)\r\n                              .css,\r\n                            pointBorderColor: kontrola,\r\n                            pointBackgroundColor: kontrola,\r\n                            borderColor: palette.transparent,\r\n                            data: data\r\n                          }\r\n                        ]\r\n                      };\r\n\r\n                      if (data.length) {\r\n                        this.showLineChart = true;\r\n                      }\r\n\r\n                      this.$refs.staticModalEvaluationSingle.open();\r\n                    } else {\r\n                    }\r\n                  }\r\n                });\r\n              } else {\r\n              }\r\n              this.isLoading = false;\r\n            });\r\n        }\r\n      }\r\n    },\r\n    filteredAntibiotics(column, columns) {\r\n      return this.Antibiotics.filter(\r\n        item => this.Antibiotics.indexOf(item) % columns === column - 1\r\n      );\r\n    },\r\n    filteredBacteries(column, columns) {\r\n      return this.TemporaryBacteries.filter(\r\n        item => this.TemporaryBacteries.indexOf(item) % columns === column - 1\r\n      );\r\n    },\r\n    AddAntibiotics(data) {\r\n      var obj = {};\r\n\r\n      if (!data.chosen) {\r\n        (obj._id = data._id),\r\n          (obj.rbr_a = data.rbr_a),\r\n          (obj.naziv = data.naziv),\r\n          (obj.opis = data.opis),\r\n          (obj.rezultat = \"\");\r\n        this.TemporaryAntibiotics.push(obj);\r\n      } else {\r\n        for (var i = 0; i < this.TemporaryAntibiotics.length; i++) {\r\n          if (this.TemporaryAntibiotics[i]._id === data._id) {\r\n            this.TemporaryAntibiotics.splice(i, 1);\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    },\r\n    AddBacteries(data) {\r\n      if (!data.chosen) {\r\n        this.TemporaryBacteriesAdd.push(data);\r\n      } else {\r\n        for (var i = 0; i < this.TemporaryBacteriesAdd.length; i++) {\r\n          if (this.TemporaryBacteriesAdd[i]._id === data._id) {\r\n            this.TemporaryBacteriesAdd.splice(i, 1);\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    },\r\n    OpenMicro($event, test) {\r\n      this.show_table = false;\r\n      this.CurrentTab = \"\";\r\n      this.testovi = [];\r\n      this.rezultati = [];\r\n      this.analitiprikaz = [];\r\n      this.calculated = false;\r\n\r\n      var topcije = null;\r\n      topcije = izbornik.rez;\r\n\r\n      http\r\n        .get(\r\n          \"rezultati/showsingle/\" +\r\n            this.$store.state.sid +\r\n            \"?token=\" +\r\n            this.$store.state.token +\r\n            \"&site=\" +\r\n            this.$store.state.site,\r\n          {}\r\n        )\r\n        .then(res => {\r\n          var test = {};\r\n\r\n          if (res.data.data.length) {\r\n            res.data.data.sort(function(a, b) {\r\n              return a.testovi.labassay.grupa + a.testovi.labassay.grouporder ==\r\n                b.testovi.labassay.grupa + b.testovi.labassay.grouporder\r\n                ? 0\r\n                : +(\r\n                    a.testovi.labassay.grupa + a.testovi.labassay.grouporder >\r\n                    b.testovi.labassay.grupa + b.testovi.labassay.grouporder\r\n                  ) || -1;\r\n            });\r\n\r\n            this.testovi = res.data.data;\r\n            this.analitiprikaz = res.data.multidata;\r\n\r\n            res.data.data.forEach(element => {\r\n              test = {};\r\n              test.realizovan = false;\r\n\r\n              test.ime = element.testovi.labassay.naziv;\r\n              test.test = element.testovi.labassay.sifra;\r\n              test.analit = element.testovi.labassay.analit;\r\n              test.IDE = element.testovi._id;\r\n              test.labassay_id = element.testovi.labassay._id;\r\n\r\n              test.multi_count = 0;\r\n              test.multi_rezultati = [];\r\n\r\n              res.data.multidata.forEach(multi => {\r\n                if (multi.labassay._id === element.testovi.labassay._id) {\r\n                  test.multi_rezultati = multi.rezultat;\r\n                  test.multi_count = multi.rezultat[0].rezultat.length;\r\n                }\r\n              });\r\n\r\n              test.kategorija = element.testovi.labassay.kategorija;\r\n              test.analyser = element.testovi.labassay.analyser;\r\n              test.multiparam = element.testovi.labassay.multiparam;\r\n              test.vise = element.testovi.rezultat.length;\r\n              test.calculated = element.testovi.labassay.calculated;\r\n              test.manual = element.testovi.labassay.manual;\r\n\r\n              test.select_options = eval(\r\n                \"topcije.\" +\r\n                  element.testovi.interp\r\n                    .replace(\"%\", \"_\")\r\n                    .replace(\"/\", \"_\")\r\n                    .replace(\" \", \"_\")\r\n                    .replace(/-/g, \"_\")\r\n                    .replace(\"#\", \"_\")\r\n                    .replace(/^\\d+/, \"\")\r\n              );\r\n\r\n              element.testovi.rezultat.forEach(rezultat => {\r\n                test.sekcija = rezultat.anaassay.sekcija;\r\n                test.rezultat = rezultat.rezultat_f;\r\n                test.result = rezultat;\r\n                test.anaassay = rezultat.anaassay;\r\n\r\n                if (rezultat.rezultat_f != \"\") {\r\n                  test.realizovan = true;\r\n                }\r\n\r\n                test.unit = rezultat.jedinice_f;\r\n\r\n                if (res.data.verificiran || res.data.status === \"ODOBREN\") {\r\n                  test.odobren = \"ODOBREN\";\r\n                  test.edit = false;\r\n                } else {\r\n                  test.odobren != \"ODOBREN\";\r\n                  test.edit = true;\r\n                }\r\n\r\n                test.jedinica = rezultat.jedinice_f;\r\n                test.id = rezultat._id;\r\n                test.multidata = element.testovi.labassay.multi;\r\n                test.rezultat_m = rezultat.rezultat_m;\r\n                test.bakterije = element.testovi.labassay.bakterije;\r\n                test.neg_description = element.testovi.labassay.neg_description;\r\n                test.pos_description = element.testovi.labassay.pos_description;\r\n                test.refSet = element.testovi.grupa;\r\n                test.dRef = element.testovi.refd;\r\n                test.gRef = element.testovi.refg;\r\n                test.interp = element.testovi.interp;\r\n                test.extend = element.testovi.extend;\r\n                test.retest = element.testovi.retest;\r\n                test.interpretacija = element.testovi.labassay.interpretacija;\r\n              });\r\n\r\n              if (\r\n                test.select_options != undefined &&\r\n                !test.select_options.includes(test.rezultat)\r\n              ) {\r\n                test.select_options.unshift(test.rezultat);\r\n              }\r\n              this.rezultati.push(test);\r\n            });\r\n\r\n            if (this.MicrobiologySample && this.AllowGetSample) {\r\n              var bakterioloski = false;\r\n              var negativan = false;\r\n              var pozitivan = false;\r\n              var bakterijed = [];\r\n              var bakterijei = [];\r\n              var neg_rezultati = [];\r\n              var poz_rezultati = [];\r\n\r\n              this.CurrentTest = this.rezultati[0].analit;\r\n\r\n              neg_rezultati = [...this.rezultati[0].neg_description];\r\n              poz_rezultati = [...this.rezultati[0].pos_description];\r\n\r\n              if (this.rezultati[0].bakterije.length) {\r\n                bakterioloski = true;\r\n\r\n                var counter = 0;\r\n                var ima = false;\r\n\r\n                this.Bacteries.forEach(element => {\r\n                  element.chosen = false;\r\n                  counter = 0;\r\n                  ima = false;\r\n                  this.rezultati[0].bakterije.forEach(bakt => {\r\n                    counter++;\r\n                    if (element._id == bakt) {\r\n                      ima = true;\r\n                    }\r\n\r\n                    if (\r\n                      counter === this.rezultati[0].bakterije.length &&\r\n                      !ima\r\n                    ) {\r\n                      bakterijed.push(element);\r\n                    }\r\n\r\n                    if (counter === this.rezultati[0].bakterije.length && ima) {\r\n                      bakterijei.push(element);\r\n                    }\r\n                  });\r\n                });\r\n\r\n                switch (this.rezultati[0].rezultat_m.length) {\r\n                  case 0:\r\n                    this.MicrobiologyScenario = \"MAIBNoR\";\r\n                    this.SelectedBacteries = [];\r\n                    break;\r\n                  case 1:\r\n                    this.MicrobiologyScenario = \"MAIBNeR\";\r\n                    this.SelectedBacteries = [];\r\n\r\n                    negativan = true;\r\n\r\n                    if (\r\n                      !neg_rezultati.includes(this.rezultati[0].rezultat.trim())\r\n                    ) {\r\n                      neg_rezultati.unshift(this.rezultati[0].rezultat.trim());\r\n                    }\r\n\r\n                    break;\r\n\r\n                  default:\r\n                    this.MicrobiologyScenario = \"MAIBPoR\";\r\n                    this.SelectedBacteries = [];\r\n                    this.BacteryTabs = [];\r\n\r\n                    this.rezultati[0].rezultat_m.forEach(element => {\r\n                      if (element.bakterija) {\r\n                        this.SelectedBacteries.push(element);\r\n                        this.BacteryTabs.push(element.opis);\r\n                      }\r\n                    });\r\n\r\n                    let maxVal = this.SelectedBacteries.reduce((max, val) =>\r\n                      max.antibiogram.antibiotici.length >\r\n                      val.antibiogram.antibiotici.length\r\n                        ? max\r\n                        : val\r\n                    );\r\n\r\n                    if (this.CurrentTab == \"\") {\r\n                      // this.CurrentTab = maxVal.opis;\r\n                    }\r\n                    this.CurrentTab = this.SelectedBacteries[0].opis;\r\n\r\n                    bakterijed.forEach(element => {\r\n                      this.SelectedBacteries.forEach(bact => {\r\n                        if (element._id == bact._id) {\r\n                          element.chosen = true;\r\n                        }\r\n                      });\r\n                    });\r\n\r\n                    bakterijei.forEach(element => {\r\n                      this.SelectedBacteries.forEach(bact => {\r\n                        if (element._id == bact._id) {\r\n                          element.chosen = true;\r\n                        }\r\n                      });\r\n                    });\r\n\r\n                    pozitivan = true;\r\n                    if (\r\n                      !poz_rezultati.includes(this.rezultati[0].rezultat.trim())\r\n                    ) {\r\n                      poz_rezultati.unshift(this.rezultati[0].rezultat.trim());\r\n                    }\r\n\r\n                    break;\r\n                }\r\n              } else {\r\n                bakterioloski = false;\r\n                this.SelectedBacteries = [];\r\n\r\n                switch (this.rezultati[0].rezultat_m.length) {\r\n                  case 0:\r\n                    this.MicrobiologyScenario = \"MANBNoR\";\r\n                    neg_rezultati = this.rezultati[0].neg_description;\r\n                    poz_rezultati = this.rezultati[0].pos_description;\r\n\r\n                    break;\r\n\r\n                  case 1:\r\n                    if (this.rezultati[0].rezultat_m[0].negativan === true) {\r\n                      this.MicrobiologyScenario = \"MANBNeR\";\r\n\r\n                      negativan = true;\r\n\r\n                      if (\r\n                        !neg_rezultati.includes(\r\n                          this.rezultati[0].rezultat.trim()\r\n                        )\r\n                      ) {\r\n                        neg_rezultati.unshift(\r\n                          this.rezultati[0].rezultat.trim()\r\n                        );\r\n                      }\r\n                    } else {\r\n                      this.MicrobiologyScenario = \"MANBPoR\";\r\n\r\n                      pozitivan = true;\r\n\r\n                      if (\r\n                        !poz_rezultati.includes(\r\n                          this.rezultati[0].rezultat.trim()\r\n                        )\r\n                      ) {\r\n                        poz_rezultati.unshift(\r\n                          this.rezultati[0].rezultat.trim()\r\n                        );\r\n                      }\r\n                    }\r\n\r\n                    break;\r\n\r\n                  default:\r\n                    this.MicrobiologyScenario = \"Unknown\";\r\n\r\n                    break;\r\n                }\r\n              }\r\n\r\n              this.MicrobiologyResult = {\r\n                negative: negativan,\r\n                positive: pozitivan,\r\n                BUG: bakterioloski,\r\n                F_RESULT: this.rezultati[0].rezultat,\r\n                M_RESULT: [...this.rezultati[0].rezultat_m],\r\n                DefaultBacteries: [...bakterijei],\r\n                RemainingBacteries: [...bakterijed],\r\n                NegativeDescriptions: [...neg_rezultati],\r\n                PositiveDescriptions: [...poz_rezultati]\r\n              };\r\n            } else {\r\n              this.MicrobiologyScenario = \"Unknown\";\r\n\r\n              this.MicrobiologyResult = {\r\n                negative: null,\r\n                positive: null,\r\n                BUG: null,\r\n                F_RESULT: \"\",\r\n                M_RESULT: [],\r\n                DefaultBacteries: [],\r\n                RemainingBacteries: [],\r\n                NegativeDescriptions: [],\r\n                PositiveDescriptions: []\r\n              };\r\n            }\r\n\r\n            this.rezultati.forEach(element => {\r\n              if (element.calculated) {\r\n                this.calculated = true;\r\n              }\r\n            });\r\n\r\n            this.show_table = true;\r\n          }\r\n        })\r\n        .then(() => {\r\n          this.ShowAntibiotics = false;\r\n          this.ShowBacteries = false;\r\n          this.$refs.staticModalMicroBactery.open();\r\n        });\r\n    },\r\n\r\n    SelectBactery(data) {\r\n      if (!data.chosen) {\r\n        this.SelectedBacteries.push(data);\r\n      } else {\r\n        for (var i = this.SelectedBacteries.length - 1; i >= 0; i--) {\r\n          if (this.SelectedBacteries[i]._id === data._id) {\r\n            this.SelectedBacteries.splice(i, 1);\r\n          }\r\n        }\r\n      }\r\n\r\n      if (this.SelectedBacteries.length > 0) {\r\n        this.ModalPositiveCondition = true;\r\n      } else {\r\n        this.ModalPositiveCondition = false;\r\n      }\r\n    },\r\n\r\n    MicroResultSelect(event) {\r\n      this.uzorci.forEach(element => {\r\n        if (element.sid === this.$store.state.sid) {\r\n          this.sample.status = \"ZAPRIMLJEN\";\r\n        }\r\n      });\r\n      this.$refs.staticModalSelectResult.open();\r\n    },\r\n\r\n    ResetSample(event) {\r\n      this.$refs.staticModalResetSample.open();\r\n    },\r\n\r\n    onCancel() {},\r\n\r\n    Prethodni() {\r\n      this.pagination = false;\r\n\r\n      var check = 0;\r\n      var found = false;\r\n      this.Results.forEach(element => {\r\n        check++;\r\n        if (element.pid == this.Previous.pid) {\r\n          found = true;\r\n          router.push(\r\n            \"/obrada/rezultati/\" +\r\n              element.patient +\r\n              \"/\" +\r\n              element.pid +\r\n              \"?date=\" +\r\n              element.date\r\n          );\r\n        }\r\n      });\r\n\r\n      if (check === this.Results.length) {\r\n        if (found) {\r\n          http\r\n            .get(\r\n              \"/rezultati/pagination\" +\r\n                \"?token=\" +\r\n                this.$store.state.token +\r\n                \"&site=\" +\r\n                this.$store.state.site +\r\n                \"&pid=\" +\r\n                this.Previous.pid.toString() +\r\n                \"&date=\" +\r\n                this.$route.query.date,\r\n              {}\r\n            )\r\n            .then(res => {\r\n              res.data.rezultati = res.data.rezultati.sort(function(a, b) {\r\n                return a.pid.localeCompare(b.pid, undefined, {\r\n                  numeric: true,\r\n                  sensitivity: \"base\"\r\n                });\r\n              });\r\n\r\n              this.data_length =\r\n                res.data.rezultati[res.data.rezultati.length - 1].pid;\r\n              this.data_min = res.data.rezultati[0].pid;\r\n              if (Object.getOwnPropertyNames(res.data).length === 0) {\r\n                this.pagination = true;\r\n                this.backward_disabled = true;\r\n              } else {\r\n                this.data_pid = res.data.data.pid;\r\n                this.Results = res.data.rezultati;\r\n\r\n                router.push(\r\n                  \"/obrada/rezultati/\" +\r\n                    res.data.data.patient +\r\n                    \"/\" +\r\n                    res.data.data.pid +\r\n                    \"?date=\" +\r\n                    res.data.data.date\r\n                );\r\n              }\r\n            });\r\n        } else {\r\n          this.Previous.pid = this.Previous.pid - 1;\r\n          if (this.Previous.pid > 0) {\r\n            this.Prethodni();\r\n          } else {\r\n          }\r\n        }\r\n      } else {\r\n      }\r\n    },\r\n    Sljedeci() {\r\n      this.pagination = false;\r\n\r\n      var check = 0;\r\n      var found = false;\r\n      this.Results.forEach(element => {\r\n        check++;\r\n        if (element.pid == this.Next.pid) {\r\n          found = true;\r\n          router.push(\r\n            \"/obrada/rezultati/\" +\r\n              element.patient +\r\n              \"/\" +\r\n              element.pid +\r\n              \"?date=\" +\r\n              element.date\r\n          );\r\n        }\r\n      });\r\n\r\n      if (check === this.Results.length) {\r\n        if (found) {\r\n          http\r\n            .get(\r\n              \"/rezultati/pagination\" +\r\n                \"?token=\" +\r\n                this.$store.state.token +\r\n                \"&site=\" +\r\n                this.$store.state.site +\r\n                \"&pid=\" +\r\n                this.Next.pid.toString() +\r\n                \"&date=\" +\r\n                this.$route.query.date,\r\n              {}\r\n            )\r\n            .then(res => {\r\n              res.data.rezultati = res.data.rezultati.sort(function(a, b) {\r\n                return a.pid.localeCompare(b.pid, undefined, {\r\n                  numeric: true,\r\n                  sensitivity: \"base\"\r\n                });\r\n              });\r\n\r\n              this.data_length =\r\n                res.data.rezultati[res.data.rezultati.length - 1].pid;\r\n              this.data_min = res.data.rezultati[0].pid;\r\n              if (Object.getOwnPropertyNames(res.data).length === 0) {\r\n                this.pagination = true;\r\n                this.forward_disabled = true;\r\n              } else {\r\n                this.data_pid = res.data.data.pid;\r\n                this.Results = res.data.rezultati;\r\n\r\n                router.push(\r\n                  \"/obrada/rezultati/\" +\r\n                    res.data.data.patient +\r\n                    \"/\" +\r\n                    res.data.data.pid +\r\n                    \"?date=\" +\r\n                    res.data.data.date\r\n                );\r\n              }\r\n            });\r\n        } else {\r\n          this.Next.pid = this.Next.pid + 1;\r\n          this.Sljedeci();\r\n        }\r\n      } else {\r\n      }\r\n    },\r\n    Created() {\r\n      this.MicrobiologyOrder = false;\r\n\r\n      http\r\n        .get(\r\n          \"rezultati/odobravanje/samples/\" +\r\n            this.$route.params.patient +\r\n            \"/\" +\r\n            this.$route.params.id +\r\n            \"?token=\" +\r\n            this.$store.state.token +\r\n            \"&site=\" +\r\n            this.$store.state.site +\r\n            \"&date=\" +\r\n            this.$route.query.date,\r\n          {}\r\n        )\r\n        .then(res => {\r\n          this.header =\r\n            res.data.results[0].patient.ime +\r\n            \" \" +\r\n            res.data.results[0].patient.prezime;\r\n          this.lokacija = res.data.lokacija;\r\n          this.final_pdf = res.data.final_pdf;\r\n\r\n          this.analyser_patient = res.data.results[0].patient;\r\n\r\n          this.timestamp = res.data.results[0].timestamp;\r\n\r\n          this.pacijent = res.data.results[0].patient._id;\r\n          this.ime = res.data.results[0].patient.ime;\r\n          this.prezime = res.data.results[0].patient.prezime;\r\n          this.data_spol = res.data.results[0].patient.spol;\r\n          this.jmbg = res.data.results[0].patient.jmbg;\r\n          this.pid = res.data.results[0].sample.pid;\r\n\r\n          this.email = res.data.results[0].patient.email.trim();\r\n          this.email_tmp = res.data.results[0].patient.email.trim();\r\n\r\n          if (!this.Email(this.email)) {\r\n            this.email = \"\";\r\n            this.email_tmp = \"\";\r\n          }\r\n\r\n          this.count = res.data.results.length;\r\n          this.approved = 0;\r\n          this.verified = 0;\r\n\r\n          this.odobren = true;\r\n          this.verificiran = true;\r\n          this.partials = [];\r\n          this.partials_condition = false;\r\n\r\n          res.data.results.forEach(element => {\r\n            if (element.verificiran) {\r\n              this.verified++;\r\n              this.partials.push(element._id);\r\n            }\r\n            if (\r\n              element.status === \"ODOBREN\" ||\r\n              element.status === \"VERIFICIRAN\"\r\n            ) {\r\n              this.approved++;\r\n            }\r\n            if (\r\n              element.status != \"ODOBREN\" &&\r\n              element.status != \"VERIFICIRAN\"\r\n            ) {\r\n              this.odobren = false;\r\n            }\r\n            if (!element.verificiran) {\r\n              this.verificiran = false;\r\n            }\r\n          });\r\n\r\n          if (this.count > this.verified && this.verified > 1) {\r\n            this.partials_condition = true;\r\n          }\r\n\r\n          this.uzorci = [];\r\n\r\n          this.nalaz.patient = res.data.results[0].patient._id;\r\n          this.nalaz.samples = [];\r\n\r\n          res.data.results.forEach(element => {\r\n            var check = 0;\r\n            var zaprimljen = 0;\r\n            var realizovan = 0;\r\n\r\n            if (element.verificiran) {\r\n              var status_uzorka = \"VERIFICIRAN\";\r\n            } else {\r\n              var status_uzorka = element.status;\r\n            }\r\n\r\n            this.nalaz.samples.push(element._id);\r\n\r\n            element.rezultati.forEach(test => {\r\n              check++;\r\n\r\n              if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\r\n                zaprimljen++;\r\n              }\r\n\r\n              if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\r\n                realizovan++;\r\n              }\r\n\r\n              if (check === element.rezultati.length) {\r\n                if (element.sample.tip.includes(\"Mikrobiologija\")) {\r\n                  this.MicrobiologyOrder = true;\r\n                }\r\n\r\n                if (status_uzorka === \"VERIFICIRAN\") {\r\n                  this.uzorci.push({\r\n                    sid: element.id,\r\n                    status: \"VERIFICIRAN\",\r\n                    pdf_exists: element.pdf_exists,\r\n                    tip: element.sample.tip,\r\n                    _id: element._id,\r\n                    removed: false\r\n                  });\r\n                } else if (status_uzorka === \"ODOBREN\") {\r\n                  this.uzorci.push({\r\n                    sid: element.id,\r\n                    status: \"ODOBREN\",\r\n                    pdf_exists: element.pdf_exists,\r\n                    tip: element.sample.tip,\r\n                    _id: element._id,\r\n                    removed: false\r\n                  });\r\n                } else if (zaprimljen < 1) {\r\n                  this.uzorci.push({\r\n                    sid: element.id,\r\n                    status: \"REALIZOVAN\",\r\n                    pdf_exists: element.pdf_exists,\r\n                    tip: element.sample.tip,\r\n                    _id: element._id,\r\n                    removed: false\r\n                  });\r\n                } else if (realizovan < 1) {\r\n                  var stat = \"ZAPRIMLJEN\";\r\n                  if (element.sample.tip.includes(\"Mikrobiologija\")) {\r\n                    if (element.rezultati[0].rezultat[0].rezultat_m.length) {\r\n                      stat = \"REALIZOVAN\";\r\n                    }\r\n                  }\r\n                  this.uzorci.push({\r\n                    sid: element.id,\r\n                    status: stat,\r\n                    pdf_exists: element.pdf_exists,\r\n                    tip: element.sample.tip,\r\n                    _id: element._id,\r\n                    removed: false\r\n                  });\r\n                } else {\r\n                  this.uzorci.push({\r\n                    sid: element.id,\r\n                    status: \"U OBRADI\",\r\n                    pdf_exists: element.pdf_exists,\r\n                    tip: element.sample.tip,\r\n                    _id: element._id,\r\n                    removed: false\r\n                  });\r\n                }\r\n              }\r\n            });\r\n          });\r\n\r\n          this.uzorci = this.uzorci.sort(function(a, b) {\r\n            return a.sid.localeCompare(b.sid, undefined, {\r\n              numeric: true,\r\n              sensitivity: \"base\"\r\n            });\r\n          });\r\n          this.main = true;\r\n\r\n          this.pagination = true;\r\n\r\n          http\r\n            .get(\r\n              \"/rezultati/pagination\" +\r\n                \"?token=\" +\r\n                this.$store.state.token +\r\n                \"&site=\" +\r\n                this.$store.state.site +\r\n                \"&pid=\" +\r\n                this.$route.params.id +\r\n                \"&date=\" +\r\n                this.$route.query.date,\r\n              {}\r\n            )\r\n            .then(res => {\r\n              res.data.rezultati = res.data.rezultati.sort(function(a, b) {\r\n                return a.pid.localeCompare(b.pid, undefined, {\r\n                  numeric: true,\r\n                  sensitivity: \"base\"\r\n                });\r\n              });\r\n\r\n              this.data_length =\r\n                res.data.rezultati[res.data.rezultati.length - 1].pid;\r\n              this.data_min = res.data.rezultati[0].pid;\r\n              if (Object.getOwnPropertyNames(res.data).length === 0) {\r\n                this.pagination = true;\r\n              } else {\r\n                this.data_pid = res.data.data.pid;\r\n                this.Results = res.data.rezultati;\r\n              }\r\n\r\n              if (this.MicrobiologyOrder) {\r\n                http\r\n                  .get(\r\n                    \"mikrobiologija/bakterije/get?token=\" +\r\n                      this.$store.state.token +\r\n                      \"&site=\" +\r\n                      this.$store.state.site,\r\n                    {}\r\n                  )\r\n                  .then(res => {\r\n                    this.Bacteries = res.data.bakterije;\r\n                    http\r\n                      .get(\r\n                        \"mikrobiologija/antibiogrami/get?token=\" +\r\n                          this.$store.state.token +\r\n                          \"&site=\" +\r\n                          this.$store.state.site,\r\n                        {}\r\n                      )\r\n                      .then(res => {\r\n                        this.Antibiograms = res.data.antibiogrami;\r\n\r\n                        this.Antibiograms.sort(function(a, b) {\r\n                          return a.naziv.localeCompare(b.naziv, undefined, {\r\n                            numeric: true,\r\n                            sensitivity: \"base\"\r\n                          });\r\n                        });\r\n\r\n                        http\r\n                          .get(\r\n                            \"mikrobiologija/antibiotici/get?token=\" +\r\n                              this.$store.state.token +\r\n                              \"&site=\" +\r\n                              this.$store.state.site,\r\n                            {}\r\n                          )\r\n                          .then(res => {\r\n                            res.data.antibiotici.sort(function(a, b) {\r\n                              return a.rbr_a.localeCompare(b.rbr_a, undefined, {\r\n                                numeric: true,\r\n                                sensitivity: \"base\"\r\n                              });\r\n                            });\r\n\r\n                            this.Antibiotics = [];\r\n\r\n                            res.data.antibiotici.forEach(element => {\r\n                              element.chosen = false;\r\n                              element.disabled = false;\r\n                              this.Antibiotics.push(element);\r\n                            });\r\n                          });\r\n                      });\r\n                  });\r\n              }\r\n            });\r\n        });\r\n    },\r\n    Povratak() {\r\n      router.push(\"/obrada/pregled/\" + \"?sekcija=\" + \"SVE\");\r\n    },\r\n    Nazad() {\r\n      this.email_button = false;\r\n      this.main = true;\r\n      this.pdf = false;\r\n    },\r\n    Email: function(email) {\r\n      if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email)) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    },\r\n    GetSingleSample(data) {\r\n      this.testovi = [];\r\n      this.rezultati = [];\r\n      this.analitiprikaz = [];\r\n      this.calculated = false;\r\n\r\n      var topcije = null;\r\n      topcije = izbornik.rez;\r\n\r\n      this.show_table = false;\r\n\r\n      http\r\n        .get(\r\n          \"rezultati/showsingle/\" +\r\n            data.sid +\r\n            \"?token=\" +\r\n            this.$store.state.token +\r\n            \"&site=\" +\r\n            this.$store.state.site,\r\n          {}\r\n        )\r\n        .then(res => {\r\n          var test = {};\r\n\r\n          if (res.data.data.length) {\r\n            res.data.data.sort(function(a, b) {\r\n              return a.testovi.labassay.grupa + a.testovi.labassay.grouporder ==\r\n                b.testovi.labassay.grupa + b.testovi.labassay.grouporder\r\n                ? 0\r\n                : +(\r\n                    a.testovi.labassay.grupa + a.testovi.labassay.grouporder >\r\n                    b.testovi.labassay.grupa + b.testovi.labassay.grouporder\r\n                  ) || -1;\r\n            });\r\n\r\n            this.testovi = res.data.data;\r\n            this.analitiprikaz = res.data.multidata;\r\n\r\n            res.data.data.forEach(element => {\r\n              test = {};\r\n              test.realizovan = false;\r\n\r\n              test.ime = element.testovi.labassay.naziv;\r\n              test.test = element.testovi.labassay.sifra;\r\n              test.analit = element.testovi.labassay.analit;\r\n              test.IDE = element.testovi._id;\r\n              test.labassay_id = element.testovi.labassay._id;\r\n\r\n              test.multi_count = 0;\r\n              test.multi_rezultati = [];\r\n\r\n              res.data.multidata.forEach(multi => {\r\n                if (multi.labassay._id === element.testovi.labassay._id) {\r\n                  test.multi_rezultati = multi.rezultat;\r\n                  test.multi_count = multi.rezultat[0].rezultat.length;\r\n                }\r\n              });\r\n\r\n              test.kategorija = element.testovi.labassay.kategorija;\r\n              test.analyser = element.testovi.labassay.analyser;\r\n              test.multiparam = element.testovi.labassay.multiparam;\r\n              test.vise = element.testovi.rezultat.length;\r\n              test.calculated = element.testovi.labassay.calculated;\r\n              test.manual = element.testovi.labassay.manual;\r\n\r\n              test.select_options = eval(\r\n                \"topcije.\" +\r\n                  element.testovi.interp\r\n                    .replace(\"%\", \"_\")\r\n                    .replace(\"/\", \"_\")\r\n                    .replace(\" \", \"_\")\r\n                    .replace(/-/g, \"_\")\r\n                    .replace(\"#\", \"_\")\r\n                    .replace(/^\\d+/, \"\")\r\n              );\r\n\r\n              element.testovi.rezultat.forEach(rezultat => {\r\n                test.sekcija = rezultat.anaassay.sekcija;\r\n                test.rezultat = rezultat.rezultat_f;\r\n                test.result = rezultat;\r\n                test.anaassay = rezultat.anaassay;\r\n\r\n                if (rezultat.rezultat_f != \"\") {\r\n                  test.realizovan = true;\r\n                }\r\n\r\n                test.unit = rezultat.jedinice_f;\r\n\r\n                if (res.data.verificiran || res.data.status === \"ODOBREN\") {\r\n                  test.odobren = \"ODOBREN\";\r\n                  test.edit = false;\r\n                } else {\r\n                  test.odobren != \"ODOBREN\";\r\n                  test.edit = true;\r\n                }\r\n\r\n                test.jedinica = rezultat.jedinice_f;\r\n                test.id = rezultat._id;\r\n                test.multidata = element.testovi.labassay.multi;\r\n                test.rezultat_m = rezultat.rezultat_m;\r\n                test.bakterije = element.testovi.labassay.bakterije;\r\n                test.neg_description = element.testovi.labassay.neg_description;\r\n                test.pos_description = element.testovi.labassay.pos_description;\r\n                test.refSet = element.testovi.grupa;\r\n                test.dRef = element.testovi.refd;\r\n                test.gRef = element.testovi.refg;\r\n                test.interp = element.testovi.interp;\r\n                test.extend = element.testovi.extend;\r\n                test.retest = element.testovi.retest;\r\n                test.interpretacija = element.testovi.labassay.interpretacija;\r\n              });\r\n\r\n              if (\r\n                test.select_options != undefined &&\r\n                !test.select_options.includes(test.rezultat)\r\n              ) {\r\n                test.select_options.unshift(test.rezultat);\r\n              }\r\n              this.rezultati.push(test);\r\n            });\r\n\r\n            if (this.MicrobiologySample && this.AllowGetSample) {\r\n              var bakterioloski = false;\r\n              var negativan = false;\r\n              var pozitivan = false;\r\n              var bakterijed = [];\r\n              var bakterijei = [];\r\n              var neg_rezultati = [];\r\n              var poz_rezultati = [];\r\n\r\n              this.CurrentTest = this.rezultati[0].analit;\r\n\r\n              neg_rezultati = [...this.rezultati[0].neg_description];\r\n              poz_rezultati = [...this.rezultati[0].pos_description];\r\n\r\n              if (this.rezultati[0].bakterije.length) {\r\n                bakterioloski = true;\r\n\r\n                var counter = 0;\r\n                var ima = false;\r\n\r\n                this.Bacteries.forEach(element => {\r\n                  element.chosen = false;\r\n                  counter = 0;\r\n                  ima = false;\r\n                  this.rezultati[0].bakterije.forEach(bakt => {\r\n                    counter++;\r\n                    if (element._id == bakt) {\r\n                      ima = true;\r\n                    }\r\n\r\n                    if (\r\n                      counter === this.rezultati[0].bakterije.length &&\r\n                      !ima\r\n                    ) {\r\n                      bakterijed.push(element);\r\n                    }\r\n\r\n                    if (counter === this.rezultati[0].bakterije.length && ima) {\r\n                      bakterijei.push(element);\r\n                    }\r\n                  });\r\n                });\r\n\r\n                switch (this.rezultati[0].rezultat_m.length) {\r\n                  case 0:\r\n                    this.MicrobiologyScenario = \"MAIBNoR\";\r\n                    this.SelectedBacteries = [];\r\n                    break;\r\n                  case 1:\r\n                    this.MicrobiologyScenario = \"MAIBNeR\";\r\n                    this.SelectedBacteries = [];\r\n\r\n                    negativan = true;\r\n\r\n                    if (\r\n                      !neg_rezultati.includes(this.rezultati[0].rezultat.trim())\r\n                    ) {\r\n                      neg_rezultati.unshift(this.rezultati[0].rezultat.trim());\r\n                    }\r\n\r\n                    break;\r\n\r\n                  default:\r\n                    this.MicrobiologyScenario = \"MAIBPoR\";\r\n                    this.SelectedBacteries = [];\r\n                    this.BacteryTabs = [];\r\n\r\n                    this.rezultati[0].rezultat_m.forEach(element => {\r\n                      if (element.bakterija) {\r\n                        this.SelectedBacteries.push(element);\r\n                        this.BacteryTabs.push(element.opis);\r\n                      }\r\n                    });\r\n\r\n                    let maxVal = this.SelectedBacteries.reduce((max, val) =>\r\n                      max.antibiogram.antibiotici.length >\r\n                      val.antibiogram.antibiotici.length\r\n                        ? max\r\n                        : val\r\n                    );\r\n\r\n                    if (this.CurrentTab == \"\") {\r\n                      // this.CurrentTab = maxVal.opis;\r\n                    }\r\n                    this.CurrentTab = this.SelectedBacteries[0].opis;\r\n\r\n                    bakterijed.forEach(element => {\r\n                      this.SelectedBacteries.forEach(bact => {\r\n                        if (element._id == bact._id) {\r\n                          element.chosen = true;\r\n                        }\r\n                      });\r\n                    });\r\n\r\n                    bakterijei.forEach(element => {\r\n                      this.SelectedBacteries.forEach(bact => {\r\n                        if (element._id == bact._id) {\r\n                          element.chosen = true;\r\n                        }\r\n                      });\r\n                    });\r\n\r\n                    pozitivan = true;\r\n                    if (\r\n                      !poz_rezultati.includes(this.rezultati[0].rezultat.trim())\r\n                    ) {\r\n                      poz_rezultati.unshift(this.rezultati[0].rezultat.trim());\r\n                    }\r\n\r\n                    break;\r\n                }\r\n              } else {\r\n                bakterioloski = false;\r\n                this.SelectedBacteries = [];\r\n\r\n                switch (this.rezultati[0].rezultat_m.length) {\r\n                  case 0:\r\n                    this.MicrobiologyScenario = \"MANBNoR\";\r\n                    neg_rezultati = this.rezultati[0].neg_description;\r\n                    poz_rezultati = this.rezultati[0].pos_description;\r\n\r\n                    break;\r\n\r\n                  case 1:\r\n                    if (this.rezultati[0].rezultat_m[0].negativan === true) {\r\n                      this.MicrobiologyScenario = \"MANBNeR\";\r\n\r\n                      negativan = true;\r\n\r\n                      if (\r\n                        !neg_rezultati.includes(\r\n                          this.rezultati[0].rezultat.trim()\r\n                        )\r\n                      ) {\r\n                        neg_rezultati.unshift(\r\n                          this.rezultati[0].rezultat.trim()\r\n                        );\r\n                      }\r\n                    } else {\r\n                      this.MicrobiologyScenario = \"MANBPoR\";\r\n\r\n                      pozitivan = true;\r\n\r\n                      if (\r\n                        !poz_rezultati.includes(\r\n                          this.rezultati[0].rezultat.trim()\r\n                        )\r\n                      ) {\r\n                        poz_rezultati.unshift(\r\n                          this.rezultati[0].rezultat.trim()\r\n                        );\r\n                      }\r\n                    }\r\n\r\n                    break;\r\n\r\n                  default:\r\n                    this.MicrobiologyScenario = \"Unknown\";\r\n\r\n                    break;\r\n                }\r\n              }\r\n\r\n              this.MicrobiologyResult = {\r\n                negative: negativan,\r\n                positive: pozitivan,\r\n                BUG: bakterioloski,\r\n                F_RESULT: this.rezultati[0].rezultat,\r\n                M_RESULT: [...this.rezultati[0].rezultat_m],\r\n                DefaultBacteries: [...bakterijei],\r\n                RemainingBacteries: [...bakterijed],\r\n                NegativeDescriptions: [...neg_rezultati],\r\n                PositiveDescriptions: [...poz_rezultati]\r\n              };\r\n            } else {\r\n              this.MicrobiologyScenario = \"Unknown\";\r\n\r\n              this.MicrobiologyResult = {\r\n                negative: null,\r\n                positive: null,\r\n                BUG: null,\r\n                F_RESULT: \"\",\r\n                M_RESULT: [],\r\n                DefaultBacteries: [],\r\n                RemainingBacteries: [],\r\n                NegativeDescriptions: [],\r\n                PositiveDescriptions: []\r\n              };\r\n            }\r\n\r\n            this.rezultati.forEach(element => {\r\n              if (element.calculated) {\r\n                this.calculated = true;\r\n              }\r\n            });\r\n\r\n            this.sample = data;\r\n            this.show_table = true;\r\n          }\r\n        })\r\n        .then(() => {\r\n          bus.$emit(\"SetClientHeight\", data.sid);\r\n        });\r\n    },\r\n    SelectAnalyser(test) {\r\n      http\r\n        .get(\r\n          \"rezultati/odobravanje/analysers\" +\r\n            \"?token=\" +\r\n            this.$store.state.token +\r\n            \"&site=\" +\r\n            this.$store.state.site +\r\n            \"&test=\" +\r\n            test.labassay_id,\r\n          {}\r\n        )\r\n        .then(res => {\r\n          this.analysers = [];\r\n\r\n          res.data.anaassays.forEach(element => {\r\n            element.aparat.site = element.site;\r\n            this.analysers.push(element.aparat);\r\n          });\r\n\r\n          this.analysers.forEach(analyser => {\r\n            analyser.selected = false;\r\n          });\r\n\r\n          this.analiza = test;\r\n\r\n          this.rezultati.forEach(element => {\r\n            this.analysers.forEach(analyser => {\r\n              if (\r\n                element.ime === this.analiza.ime &&\r\n                element.anaassay.aparat === analyser._id\r\n              ) {\r\n                analyser.selected = true;\r\n                this.analyser_selected = analyser;\r\n              }\r\n            });\r\n          });\r\n          this.$refs.staticModalAparati.open();\r\n        });\r\n    },\r\n    AnalyserSelected(analyser) {\r\n      this.analyser = analyser;\r\n\r\n      if (this.analyser_selected._id === analyser._id) {\r\n        this.$refs.staticModalAparati.close();\r\n      } else {\r\n        http\r\n          .post(\"rezultati/odobravanje/references\", {\r\n            token: this.$store.state.token,\r\n            site: this.$store.state.site,\r\n            id: this.sample.sid,\r\n            pacijent: this.analyser_patient,\r\n            analiza: this.analiza,\r\n            analyser: this.analyser\r\n          })\r\n          .then(res => {\r\n            if (res.data.success) {\r\n              var data = {};\r\n\r\n              this.uzorci.forEach(element => {\r\n                if (element.sid === this.$store.state.sid) {\r\n                  data = element;\r\n                }\r\n              });\r\n\r\n              this.testovi = [];\r\n              this.rezultati = [];\r\n              this.analitiprikaz = [];\r\n              this.calculated = false;\r\n\r\n              var topcije = null;\r\n              topcije = izbornik.rez;\r\n\r\n              this.show_table = false;\r\n\r\n              http\r\n                .get(\r\n                  \"rezultati/showsingle/\" +\r\n                    data.sid +\r\n                    \"?token=\" +\r\n                    this.$store.state.token +\r\n                    \"&site=\" +\r\n                    this.$store.state.site,\r\n                  {}\r\n                )\r\n                .then(res => {\r\n                  var test = {};\r\n\r\n                  if (res.data.data.length) {\r\n                    res.data.data.sort(function(a, b) {\r\n                      return a.testovi.labassay.grupa +\r\n                        a.testovi.labassay.grouporder ==\r\n                        b.testovi.labassay.grupa + b.testovi.labassay.grouporder\r\n                        ? 0\r\n                        : +(\r\n                            a.testovi.labassay.grupa +\r\n                              a.testovi.labassay.grouporder >\r\n                            b.testovi.labassay.grupa +\r\n                              b.testovi.labassay.grouporder\r\n                          ) || -1;\r\n                    });\r\n\r\n                    this.testovi = res.data.data;\r\n                    this.analitiprikaz = res.data.multidata;\r\n\r\n                    res.data.data.forEach(element => {\r\n                      test = {};\r\n                      test.realizovan = false;\r\n\r\n                      test.ime = element.testovi.labassay.naziv;\r\n                      test.test = element.testovi.labassay.sifra;\r\n                      test.analit = element.testovi.labassay.analit;\r\n                      test.IDE = element.testovi._id;\r\n                      test.labassay_id = element.testovi.labassay._id;\r\n\r\n                      test.multi_count = 0;\r\n                      test.multi_rezultati = [];\r\n\r\n                      res.data.multidata.forEach(multi => {\r\n                        if (\r\n                          multi.labassay._id === element.testovi.labassay._id\r\n                        ) {\r\n                          test.multi_rezultati = multi.rezultat;\r\n                          test.multi_count = multi.rezultat[0].rezultat.length;\r\n                        }\r\n                      });\r\n\r\n                      test.kategorija = element.testovi.labassay.kategorija;\r\n                      test.analyser = element.testovi.labassay.analyser;\r\n                      test.multiparam = element.testovi.labassay.multiparam;\r\n                      test.vise = element.testovi.rezultat.length;\r\n                      test.calculated = element.testovi.labassay.calculated;\r\n                      test.manual = element.testovi.labassay.manual;\r\n\r\n                      test.select_options = eval(\r\n                        \"topcije.\" +\r\n                          element.testovi.interp\r\n                            .replace(\"%\", \"_\")\r\n                            .replace(\"/\", \"_\")\r\n                            .replace(\" \", \"_\")\r\n                            .replace(/-/g, \"_\")\r\n                            .replace(\"#\", \"_\")\r\n                            .replace(/^\\d+/, \"\")\r\n                      );\r\n\r\n                      element.testovi.rezultat.forEach(rezultat => {\r\n                        test.sekcija = rezultat.anaassay.sekcija;\r\n                        test.rezultat = rezultat.rezultat_f;\r\n                        test.result = rezultat;\r\n                        test.anaassay = rezultat.anaassay;\r\n\r\n                        if (rezultat.rezultat_f != \"\") {\r\n                          test.realizovan = true;\r\n                        }\r\n\r\n                        test.unit = rezultat.jedinice_f;\r\n\r\n                        if (\r\n                          res.data.verificiran ||\r\n                          res.data.status === \"ODOBREN\"\r\n                        ) {\r\n                          test.odobren = \"ODOBREN\";\r\n                          test.edit = false;\r\n                        } else {\r\n                          test.odobren != \"ODOBREN\";\r\n                          test.edit = true;\r\n                        }\r\n\r\n                        test.jedinica = rezultat.jedinice_f;\r\n                        test.id = rezultat._id;\r\n                        test.multidata = element.testovi.labassay.multi;\r\n                        test.rezultat_m = rezultat.rezultat_m;\r\n                        test.bakterije = element.testovi.labassay.bakterije;\r\n                        test.neg_description =\r\n                          element.testovi.labassay.neg_description;\r\n                        test.pos_description =\r\n                          element.testovi.labassay.pos_description;\r\n                        test.refSet = element.testovi.grupa;\r\n                        test.dRef = element.testovi.refd;\r\n                        test.gRef = element.testovi.refg;\r\n                        test.interp = element.testovi.interp;\r\n                        test.extend = element.testovi.extend;\r\n                        test.retest = element.testovi.retest;\r\n                        test.interpretacija =\r\n                          element.testovi.labassay.interpretacija;\r\n                      });\r\n\r\n                      if (\r\n                        test.select_options != undefined &&\r\n                        !test.select_options.includes(test.rezultat)\r\n                      ) {\r\n                        test.select_options.unshift(test.rezultat);\r\n                      }\r\n                      this.rezultati.push(test);\r\n                    });\r\n\r\n                    this.rezultati.forEach(element => {\r\n                      if (element.calculated) {\r\n                        this.calculated = true;\r\n                      }\r\n                    });\r\n\r\n                    this.sample = data;\r\n                    this.show_table = true;\r\n                  }\r\n                });\r\n              this.$refs.staticModalAparati.close();\r\n            } else {\r\n            }\r\n          });\r\n      }\r\n    },\r\n    Reference(event, test) {\r\n      this.reference = {\r\n        sample: this.$store.state.sid,\r\n        labassay: test.labassay_id,\r\n        naziv: test.ime,\r\n        opis: test.analit,\r\n        dref: test.dRef,\r\n        gref: test.gRef,\r\n        interp: test.interp,\r\n        extend: test.extend,\r\n        jedinica: test.jedinica\r\n      };\r\n      this.$refs.staticModalReference.open();\r\n    },\r\n    BarcodePrint(data) {\r\n      var link = barcode + data.sid + \".png\";\r\n\r\n      http\r\n        .get(\r\n          \"uzorci/barcode/\" +\r\n            data.sid +\r\n            \"?token=\" +\r\n            this.$store.state.token +\r\n            \"&site=\" +\r\n            this.$store.state.site,\r\n          {}\r\n        )\r\n        .then(res => {\r\n          printEPL(\r\n            res.data.name + \" \" + res.data.surname,\r\n            this.sid,\r\n            res.data.pacijentRBr,\r\n            res.data.godiste,\r\n            res.data.datum,\r\n            link,\r\n            res.data.code,\r\n            this.$store.state.site,\r\n            undefined,\r\n            undefined\r\n          );\r\n        });\r\n    },\r\n    SaveResults(rezultati, from) {\r\n      this.isLoading = true;\r\n\r\n      if (!this.MicrobiologySample) {\r\n        rezultati.forEach(element => {\r\n          element.rezultat = element.rezultat.replace(/,/g, \".\");\r\n        });\r\n\r\n        rezultati[0].rezultat_m = [];\r\n      }\r\n\r\n      http\r\n        .post(\"/rezultati/odobravanje/sacuvaj/\" + this.$store.state.sid, {\r\n          email: this.$store.state.userId,\r\n          token: this.$store.state.token,\r\n          site: this.$store.state.site,\r\n          rezultati: rezultati\r\n        })\r\n        .then(res => {\r\n          http\r\n            .get(\r\n              \"rezultati/odobravanje/samples/\" +\r\n                this.$route.params.patient +\r\n                \"/\" +\r\n                this.$route.params.id +\r\n                \"?token=\" +\r\n                this.$store.state.token +\r\n                \"&site=\" +\r\n                this.$store.state.site +\r\n                \"&date=\" +\r\n                this.$route.query.date,\r\n              {}\r\n            )\r\n            .then(res => {\r\n              this.uzorci = [];\r\n\r\n              res.data.results.forEach(element => {\r\n                var check = 0;\r\n                var zaprimljen = 0;\r\n                var realizovan = 0;\r\n\r\n                if (element.verificiran) {\r\n                  var status_uzorka = \"VERIFICIRAN\";\r\n                } else {\r\n                  var status_uzorka = element.status;\r\n                }\r\n\r\n                element.rezultati.forEach(test => {\r\n                  check++;\r\n\r\n                  if (\r\n                    test.rezultat[test.rezultat.length - 1].rezultat_f === \"\"\r\n                  ) {\r\n                    zaprimljen++;\r\n                  }\r\n\r\n                  if (\r\n                    test.rezultat[test.rezultat.length - 1].rezultat_f != \"\"\r\n                  ) {\r\n                    realizovan++;\r\n                  }\r\n\r\n                  if (check === element.rezultati.length) {\r\n                    if (status_uzorka === \"VERIFICIRAN\") {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"VERIFICIRAN\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false\r\n                      });\r\n                    } else if (status_uzorka === \"ODOBREN\") {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"ODOBREN\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false\r\n                      });\r\n                    } else if (zaprimljen < 1) {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"REALIZOVAN\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false\r\n                      });\r\n                    } else if (realizovan < 1) {\r\n                      var stat = \"ZAPRIMLJEN\";\r\n                      if (element.sample.tip.includes(\"Mikrobiologija\")) {\r\n                        if (\r\n                          element.rezultati[0].rezultat[0].rezultat_m.length\r\n                        ) {\r\n                          stat = \"REALIZOVAN\";\r\n                        }\r\n                      }\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: stat,\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false\r\n                      });\r\n                    } else {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"U OBRADI\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false\r\n                      });\r\n                    }\r\n                  }\r\n                });\r\n              });\r\n\r\n              this.uzorci = this.uzorci.sort(function(a, b) {\r\n                return a.sid.localeCompare(b.sid, undefined, {\r\n                  numeric: true,\r\n                  sensitivity: \"base\"\r\n                });\r\n              });\r\n\r\n              this.isLoading = false;\r\n            });\r\n        });\r\n    },\r\n\r\n    DeletedSample(data) {\r\n      this.uzorci.forEach(element => {\r\n        if (element.sid === data) {\r\n          element.removed = false;\r\n        }\r\n      });\r\n\r\n      for (var i = 0; i < this.uzorci.length; i++) {\r\n        if (this.uzorci[i].sid === data) {\r\n          this.uzorci.splice(i, 1);\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (this.uzorci.length) {\r\n        this.show = false;\r\n        this.main = false;\r\n        http\r\n          .get(\r\n            \"rezultati/odobravanje/samples/\" +\r\n              this.$route.params.patient +\r\n              \"/\" +\r\n              this.$route.params.id +\r\n              \"?token=\" +\r\n              this.$store.state.token +\r\n              \"&site=\" +\r\n              this.$store.state.site +\r\n              \"&date=\" +\r\n              this.$route.query.date,\r\n            {}\r\n          )\r\n          .then(res => {\r\n            this.count = res.data.results.length;\r\n            this.approved = 0;\r\n\r\n            this.odobren = true;\r\n            this.verificiran = true;\r\n\r\n            this.resdata = {};\r\n\r\n            this.resdata = res.data.results;\r\n\r\n            res.data.results.forEach(element => {\r\n              if (\r\n                element.status === \"ODOBREN\" ||\r\n                element.status === \"VERIFICIRAN\"\r\n              ) {\r\n                this.approved++;\r\n              }\r\n              if (\r\n                element.status != \"ODOBREN\" &&\r\n                element.status != \"VERIFICIRAN\"\r\n              ) {\r\n                this.odobren = false;\r\n              }\r\n              if (!element.verificiran) {\r\n                this.verificiran = false;\r\n              }\r\n            });\r\n\r\n            if (this.count == this.approved) {\r\n              var report = [];\r\n\r\n              this.uzorci.forEach(element => {\r\n                report.push(element._id);\r\n              });\r\n\r\n              http\r\n                .post(\"nalazi/create\", {\r\n                  token: this.$store.state.token,\r\n                  site: this.$store.state.site,\r\n                  type: \"multi\",\r\n                  uzorci: this.uzorci,\r\n                  samples: report,\r\n                  timestamp: this.timestamp,\r\n                  napomena: \"\",\r\n                  status: false,\r\n                  idNalaza: \"\",\r\n                  location: \"/\",\r\n                  naziv: this.timestamp\r\n                })\r\n                .then(res => {\r\n                  if (res.data.success) {\r\n                    http\r\n                      .post(\"nalazi/memo\", {\r\n                        token: this.$store.state.token,\r\n                        site: this.$store.state.site,\r\n                        timestamp: this.timestamp,\r\n                        height: res.data.memo,\r\n                        location: \"/\",\r\n                        naziv: this.timestamp\r\n                      })\r\n                      .then(res => {\r\n                        this.final_pdf = true;\r\n\r\n                        this.uzorci = [];\r\n\r\n                        this.resdata.forEach(element => {\r\n                          var check = 0;\r\n                          var zaprimljen = 0;\r\n                          var realizovan = 0;\r\n\r\n                          if (element.verificiran) {\r\n                            var status_uzorka = \"VERIFICIRAN\";\r\n                          } else {\r\n                            var status_uzorka = element.status;\r\n                          }\r\n\r\n                          element.rezultati.forEach(test => {\r\n                            check++;\r\n\r\n                            if (\r\n                              test.rezultat[test.rezultat.length - 1]\r\n                                .rezultat_f === \"\"\r\n                            ) {\r\n                              zaprimljen++;\r\n                            }\r\n\r\n                            if (\r\n                              test.rezultat[test.rezultat.length - 1]\r\n                                .rezultat_f != \"\"\r\n                            ) {\r\n                              realizovan++;\r\n                            }\r\n\r\n                            if (check === element.rezultati.length) {\r\n                              if (status_uzorka === \"VERIFICIRAN\") {\r\n                                this.uzorci.push({\r\n                                  sid: element.id,\r\n                                  status: \"VERIFICIRAN\",\r\n                                  pdf_exists: element.pdf_exists,\r\n                                  tip: element.sample.tip,\r\n                                  _id: element._id,\r\n                                  removed: false\r\n                                });\r\n                              } else if (status_uzorka === \"ODOBREN\") {\r\n                                this.uzorci.push({\r\n                                  sid: element.id,\r\n                                  status: \"ODOBREN\",\r\n                                  pdf_exists: element.pdf_exists,\r\n                                  tip: element.sample.tip,\r\n                                  _id: element._id,\r\n                                  removed: false\r\n                                });\r\n                              } else if (zaprimljen < 1) {\r\n                                this.uzorci.push({\r\n                                  sid: element.id,\r\n                                  status: \"REALIZOVAN\",\r\n                                  pdf_exists: element.pdf_exists,\r\n                                  tip: element.sample.tip,\r\n                                  _id: element._id,\r\n                                  removed: false\r\n                                });\r\n                              } else if (realizovan < 1) {\r\n                                var stat = \"ZAPRIMLJEN\";\r\n                                if (\r\n                                  element.sample.tip.includes(\"Mikrobiologija\")\r\n                                ) {\r\n                                  if (\r\n                                    element.rezultati[0].rezultat[0].rezultat_m\r\n                                      .length\r\n                                  ) {\r\n                                    stat = \"REALIZOVAN\";\r\n                                  }\r\n                                }\r\n                                this.uzorci.push({\r\n                                  sid: element.id,\r\n                                  status: stat,\r\n                                  pdf_exists: element.pdf_exists,\r\n                                  tip: element.sample.tip,\r\n                                  _id: element._id,\r\n                                  removed: false\r\n                                });\r\n                              } else {\r\n                                this.uzorci.push({\r\n                                  sid: element.id,\r\n                                  status: \"U OBRADI\",\r\n                                  pdf_exists: element.pdf_exists,\r\n                                  tip: element.sample.tip,\r\n                                  _id: element._id,\r\n                                  removed: false\r\n                                });\r\n                              }\r\n                            }\r\n                          });\r\n                        });\r\n\r\n                        this.uzorci = this.uzorci.sort(function(a, b) {\r\n                          return a.sid.localeCompare(b.sid, undefined, {\r\n                            numeric: true,\r\n                            sensitivity: \"base\"\r\n                          });\r\n                        });\r\n\r\n                        this.main = true;\r\n                        this.show = true;\r\n                      });\r\n                  }\r\n                });\r\n            } else {\r\n              this.uzorci = [];\r\n\r\n              res.data.results.forEach(element => {\r\n                var check = 0;\r\n                var zaprimljen = 0;\r\n                var realizovan = 0;\r\n\r\n                if (element.verificiran) {\r\n                  var status_uzorka = \"VERIFICIRAN\";\r\n                } else {\r\n                  var status_uzorka = element.status;\r\n                }\r\n\r\n                element.rezultati.forEach(test => {\r\n                  check++;\r\n\r\n                  if (\r\n                    test.rezultat[test.rezultat.length - 1].rezultat_f === \"\"\r\n                  ) {\r\n                    zaprimljen++;\r\n                  }\r\n\r\n                  if (\r\n                    test.rezultat[test.rezultat.length - 1].rezultat_f != \"\"\r\n                  ) {\r\n                    realizovan++;\r\n                  }\r\n\r\n                  if (check === element.rezultati.length) {\r\n                    if (status_uzorka === \"VERIFICIRAN\") {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"VERIFICIRAN\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false\r\n                      });\r\n                    } else if (status_uzorka === \"ODOBREN\") {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"ODOBREN\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false\r\n                      });\r\n                    } else if (zaprimljen < 1) {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"REALIZOVAN\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false\r\n                      });\r\n                    } else if (realizovan < 1) {\r\n                      var stat = \"ZAPRIMLJEN\";\r\n                      if (element.sample.tip.includes(\"Mikrobiologija\")) {\r\n                        if (\r\n                          element.rezultati[0].rezultat[0].rezultat_m.length\r\n                        ) {\r\n                          stat = \"REALIZOVAN\";\r\n                        }\r\n                      }\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: stat,\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false\r\n                      });\r\n                    } else {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"U OBRADI\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false\r\n                      });\r\n                    }\r\n                  }\r\n                });\r\n              });\r\n\r\n              this.uzorci = this.uzorci.sort(function(a, b) {\r\n                return a.sid.localeCompare(b.sid, undefined, {\r\n                  numeric: true,\r\n                  sensitivity: \"base\"\r\n                });\r\n              });\r\n\r\n              this.main = true;\r\n              this.show = true;\r\n            }\r\n          });\r\n      } else {\r\n        router.push(\"/obrada/pregled\");\r\n      }\r\n    },\r\n    EditSample(data) {\r\n      document.getElementById(data).click();\r\n\r\n      http\r\n        .get(\r\n          \"rezultati/odobravanje/samples/\" +\r\n            this.$route.params.patient +\r\n            \"/\" +\r\n            this.$route.params.id +\r\n            \"?token=\" +\r\n            this.$store.state.token +\r\n            \"&site=\" +\r\n            this.$store.state.site +\r\n            \"&date=\" +\r\n            this.$route.query.date,\r\n          {}\r\n        )\r\n        .then(res => {\r\n          this.uzorci = [];\r\n\r\n          res.data.results.forEach(element => {\r\n            var check = 0;\r\n            var zaprimljen = 0;\r\n            var realizovan = 0;\r\n\r\n            if (element.verificiran) {\r\n              var status_uzorka = \"VERIFICIRAN\";\r\n            } else {\r\n              var status_uzorka = element.status;\r\n            }\r\n\r\n            element.rezultati.forEach(test => {\r\n              check++;\r\n\r\n              if (test.rezultat[test.rezultat.length - 1].rezultat_f === \"\") {\r\n                zaprimljen++;\r\n              }\r\n\r\n              if (test.rezultat[test.rezultat.length - 1].rezultat_f != \"\") {\r\n                realizovan++;\r\n              }\r\n\r\n              if (check === element.rezultati.length) {\r\n                if (status_uzorka === \"VERIFICIRAN\") {\r\n                  this.uzorci.push({\r\n                    sid: element.id,\r\n                    status: \"VERIFICIRAN\",\r\n                    pdf_exists: element.pdf_exists,\r\n                    tip: element.sample.tip,\r\n                    _id: element._id,\r\n                    removed: false\r\n                  });\r\n                } else if (status_uzorka === \"ODOBREN\") {\r\n                  this.uzorci.push({\r\n                    sid: element.id,\r\n                    status: \"ODOBREN\",\r\n                    pdf_exists: element.pdf_exists,\r\n                    tip: element.sample.tip,\r\n                    _id: element._id,\r\n                    removed: false\r\n                  });\r\n                } else if (zaprimljen < 1) {\r\n                  this.uzorci.push({\r\n                    sid: element.id,\r\n                    status: \"REALIZOVAN\",\r\n                    pdf_exists: element.pdf_exists,\r\n                    tip: element.sample.tip,\r\n                    _id: element._id,\r\n                    removed: false\r\n                  });\r\n                } else if (realizovan < 1) {\r\n                  var stat = \"ZAPRIMLJEN\";\r\n                  if (element.sample.tip.includes(\"Mikrobiologija\")) {\r\n                    if (element.rezultati[0].rezultat[0].rezultat_m.length) {\r\n                      stat = \"REALIZOVAN\";\r\n                    }\r\n                  }\r\n                  this.uzorci.push({\r\n                    sid: element.id,\r\n                    status: stat,\r\n                    pdf_exists: element.pdf_exists,\r\n                    tip: element.sample.tip,\r\n                    _id: element._id,\r\n                    removed: false\r\n                  });\r\n                } else {\r\n                  this.uzorci.push({\r\n                    sid: element.id,\r\n                    status: \"U OBRADI\",\r\n                    pdf_exists: element.pdf_exists,\r\n                    tip: element.sample.tip,\r\n                    _id: element._id,\r\n                    removed: false\r\n                  });\r\n                }\r\n              }\r\n            });\r\n          });\r\n\r\n          this.uzorci = this.uzorci.sort(function(a, b) {\r\n            return a.sid.localeCompare(b.sid, undefined, {\r\n              numeric: true,\r\n              sensitivity: \"base\"\r\n            });\r\n          });\r\n        })\r\n        .then(() => {\r\n          setTimeout(() => {\r\n            document.getElementById(this.$store.state.sid).click();\r\n          }, 500);\r\n        });\r\n    },\r\n    RetestEnable: function(event) {\r\n      http\r\n        .post(\"rezultati/odobravanje/retest/da/\", {\r\n          id_u: this.$store.state.sid,\r\n          id_t: event.target.id,\r\n          site: this.$store.state.site,\r\n          token: this.$store.state.token\r\n        })\r\n        .then(res => {\r\n          if (res.data.success) {\r\n            this.rezultati.forEach(element => {\r\n              if (element.test === event.target.id) {\r\n                element.retest = true;\r\n              }\r\n            });\r\n          }\r\n        });\r\n    },\r\n    RetestDisable: function(event) {\r\n      http\r\n        .post(\"rezultati/odobravanje/retest/ne/\", {\r\n          id_u: this.$store.state.sid,\r\n          id_t: event.target.id,\r\n          site: this.$store.state.site,\r\n          token: this.$store.state.token\r\n        })\r\n        .then(res => {\r\n          if (res.data.success) {\r\n            this.rezultati.forEach(element => {\r\n              if (element.test === event.target.id) {\r\n                element.retest = false;\r\n              }\r\n            });\r\n          }\r\n        });\r\n    },\r\n    MultiGet: function(event, naziv, ana, rezultat, odobren) {\r\n      this.naslov = \"Rezultati testa: \" + naziv + \" (\" + ana + \")\";\r\n      this.analiti = [];\r\n      var single = {};\r\n      var i = 0;\r\n      var kontrola = false;\r\n\r\n      this.uzorci.forEach(element => {\r\n        if (element.sid === this.$store.state.sid) {\r\n          this.check = element.status;\r\n        }\r\n      });\r\n\r\n      this.analitiprikaz.forEach(element => {\r\n        i++;\r\n        single = {};\r\n\r\n        var opcije = null;\r\n        opcije = izbornik.data;\r\n\r\n        if (event.target.id === element.labassay._id) {\r\n          element.rezultat.forEach(analit => {\r\n            single.kod = analit.rezultat[0].module_sn;\r\n            single.select_options = eval(\r\n              \"opcije.\" +\r\n                analit.rezultat[0].module_sn\r\n                  .replace(\"%\", \"_\")\r\n                  .replace(\"/\", \"_\")\r\n                  .replace(\" \", \"_\")\r\n                  .replace(/-/g, \"_\")\r\n                  .replace(\"#\", \"_\")\r\n                  .replace(/^\\d+/, \"\")\r\n            );\r\n\r\n            var tmpOptionsAna = [];\r\n            if (single.select_options != undefined) {\r\n              tmpOptionsAna = single.select_options.slice();\r\n              single.select_options = tmpOptionsAna.slice();\r\n            }\r\n\r\n            if (\r\n              analit.rezultat[0].rezultat_f.trim() != \"\" &&\r\n              single.select_options != undefined &&\r\n              !single.select_options.includes(analit.rezultat[0].rezultat_f)\r\n            ) {\r\n              // Sediment urina (Epitelne ćelije, Kristali i Soli)\r\n              if (\r\n                single.kod != \"s03\" &&\r\n                single.kod != \"s04\" &&\r\n                single.kod != \"s08\" &&\r\n                single.kod != \"s09\"\r\n              ) {\r\n                single.select_options.unshift(analit.rezultat[0].rezultat_f);\r\n              }\r\n            }\r\n\r\n            single.refd = analit.refd;\r\n            single.labID = event.target.id;\r\n            single.refg = analit.refg;\r\n            single.interp = analit.interp;\r\n            single.interpretacija = null;\r\n            single.nazivTesta = naziv;\r\n            single.grupa = analit.grupa;\r\n            single.naziv = analit.rezultat[0].sn;\r\n            single.opis = analit.rezultat[0].dilucija;\r\n            single.jedinica = analit.rezultat[0].jedinice_f;\r\n            single.rezultat = analit.rezultat[0].rezultat_f;\r\n            single.flag = analit.rezultat[0].rezultat_i;\r\n            single.manual = element.labassay.manual;\r\n            single.odobren = odobren;\r\n\r\n            if (\r\n              single.select_options != undefined &&\r\n              (single.kod === \"s03\" ||\r\n                single.kod === \"s04\" ||\r\n                single.kod === \"s08\" ||\r\n                single.kod === \"s09\")\r\n            ) {\r\n              // Sediment urina (Epitelne ćelije, Kristali i Soli)\r\n              single.rezultat_multiple = single.rezultat.split(\";\");\r\n              for (var i = single.rezultat_multiple.length - 1; i >= 0; i--) {\r\n                single.rezultat_multiple[i] = single.rezultat_multiple[\r\n                  i\r\n                ].trim();\r\n                if (single.rezultat_multiple[i] === \"\") {\r\n                  single.rezultat_multiple.splice(i, 1);\r\n                }\r\n              }\r\n            } else {\r\n              single.rezultat_multiple = [];\r\n            }\r\n\r\n            if (this.check === \"ODOBREN\" || this.check === \"VERIFICIRAN\") {\r\n              single.edit = false;\r\n            } else {\r\n              single.edit = true;\r\n            }\r\n\r\n            if (\r\n              ana === \"Opšti pregled urina\" &&\r\n              this.check != \"ODOBREN\" &&\r\n              this.check != \"VERIFICIRAN\"\r\n            ) {\r\n              if (\r\n                analit.rezultat[0].rezultat_f === \"\" &&\r\n                single.select_options != undefined\r\n              ) {\r\n                single.rezultat = single.select_options[1];\r\n              }\r\n            }\r\n\r\n            single.analit = analit.rezultat[0].anaassay;\r\n            single.izbor = ana;\r\n\r\n            this.analiti.push(single);\r\n\r\n            single = {};\r\n          });\r\n        }\r\n\r\n        if (i === this.analitiprikaz.length) {\r\n          kontrola = true;\r\n        }\r\n      });\r\n\r\n      if (kontrola) {\r\n        this.$refs.largeModalMulti.open();\r\n      }\r\n    },\r\n    Interpretacija: function(\r\n      test,\r\n      rezultat,\r\n      jedinica,\r\n      refd,\r\n      refg,\r\n      site,\r\n      interp,\r\n      extend,\r\n      spec\r\n    ) {\r\n      return Interpretation(\r\n        test,\r\n        rezultat,\r\n        jedinica,\r\n        refd,\r\n        refg,\r\n        site,\r\n        interp,\r\n        extend,\r\n        spec\r\n      );\r\n    },\r\n    MailDialog() {\r\n      this.$refs.staticModalSendMail.open();\r\n    },\r\n    SendMail(email) {\r\n      this.isLoading = true;\r\n\r\n      http\r\n        .post(\"nalazi/mail\", {\r\n          token: this.$store.state.token,\r\n          site: this.$store.state.site,\r\n          email: email,\r\n          timestamp: this.timestamp,\r\n          location: \"/\",\r\n          naziv: this.timestamp\r\n        })\r\n        .then(res => {\r\n          this.isLoading = false;\r\n\r\n          if (res.data.success) {\r\n            this.toastText = \"Nalaz uspješno poslan.\";\r\n            this.toastIcon = \"fa-check\";\r\n            this.toastPosition = \"top-right\";\r\n            this.className = \"vuestic-toast-primary\";\r\n\r\n            this.showToast(this.toastText, {\r\n              icon: this.toastIcon,\r\n              position: this.toastPosition,\r\n              duration: 2500,\r\n              fullWidth: this.false,\r\n              className: this.className\r\n            });\r\n\r\n            if (this.email_changed) {\r\n              http\r\n                .post(\"pacijenti/detalji/update/\" + this.pacijent, {\r\n                  email: email.trim(),\r\n                  token: this.$store.state.token,\r\n                  site: this.$store.state.site\r\n                })\r\n                .then(res => {});\r\n            }\r\n          } else {\r\n            this.toastText = \"Greška prilikom slanja nalaza!\";\r\n            this.toastIcon = \"fa-remove\";\r\n            this.toastPosition = \"top-right\";\r\n            this.className = \"vuestic-toast-danger\";\r\n\r\n            this.showToast(this.toastText, {\r\n              icon: this.toastIcon,\r\n              position: this.toastPosition,\r\n              duration: 2500,\r\n              fullWidth: this.false,\r\n              className: this.className\r\n            });\r\n          }\r\n        });\r\n    },\r\n    SaveMultiResults(analiti, data) {\r\n      analiti.forEach(analit => {\r\n        analit.rezultat = analit.rezultat.replace(/,/g, \".\");\r\n\r\n        if (analit.rezultat_multiple.length) {\r\n          analit.rezultat = \"\";\r\n\r\n          analit.rezultat_multiple.forEach(element => {\r\n            if (element === \"\") {\r\n            } else {\r\n              analit.rezultat = analit.rezultat + element + \";\";\r\n            }\r\n          });\r\n\r\n          analit.rezultat = analit.rezultat\r\n            .trim()\r\n            .slice(0, analit.rezultat.length - 1);\r\n        }\r\n      });\r\n\r\n      this.isLoading = true;\r\n\r\n      http\r\n        .post(\"/rezultati/odobravanje/analiti/\" + this.$store.state.sid, {\r\n          analiti: analiti,\r\n          site: this.$store.state.site,\r\n          token: this.$store.state.token\r\n        })\r\n        .then(res => {\r\n          http\r\n            .get(\r\n              \"rezultati/odobravanje/samples/\" +\r\n                this.$route.params.patient +\r\n                \"/\" +\r\n                this.$route.params.id +\r\n                \"?token=\" +\r\n                this.$store.state.token +\r\n                \"&site=\" +\r\n                this.$store.state.site +\r\n                \"&date=\" +\r\n                this.$route.query.date,\r\n              {}\r\n            )\r\n            .then(res => {\r\n              this.uzorci = [];\r\n\r\n              res.data.results.forEach(element => {\r\n                var check = 0;\r\n                var zaprimljen = 0;\r\n                var realizovan = 0;\r\n\r\n                if (element.verificiran) {\r\n                  var status_uzorka = \"VERIFICIRAN\";\r\n                } else {\r\n                  var status_uzorka = element.status;\r\n                }\r\n\r\n                element.rezultati.forEach(test => {\r\n                  check++;\r\n\r\n                  if (\r\n                    test.rezultat[test.rezultat.length - 1].rezultat_f === \"\"\r\n                  ) {\r\n                    zaprimljen++;\r\n                  }\r\n\r\n                  if (\r\n                    test.rezultat[test.rezultat.length - 1].rezultat_f != \"\"\r\n                  ) {\r\n                    realizovan++;\r\n                  }\r\n\r\n                  if (check === element.rezultati.length) {\r\n                    if (status_uzorka === \"VERIFICIRAN\") {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"VERIFICIRAN\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false\r\n                      });\r\n                    } else if (status_uzorka === \"ODOBREN\") {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"ODOBREN\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false\r\n                      });\r\n                    } else if (zaprimljen < 1) {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"REALIZOVAN\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false\r\n                      });\r\n                    } else if (realizovan < 1) {\r\n                      var stat = \"ZAPRIMLJEN\";\r\n                      if (element.sample.tip.includes(\"Mikrobiologija\")) {\r\n                        if (\r\n                          element.rezultati[0].rezultat[0].rezultat_m.length\r\n                        ) {\r\n                          stat = \"REALIZOVAN\";\r\n                        }\r\n                      }\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: stat,\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false\r\n                      });\r\n                    } else {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"U OBRADI\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false\r\n                      });\r\n                    }\r\n                  }\r\n                });\r\n              });\r\n\r\n              this.uzorci = this.uzorci.sort(function(a, b) {\r\n                return a.sid.localeCompare(b.sid, undefined, {\r\n                  numeric: true,\r\n                  sensitivity: \"base\"\r\n                });\r\n              });\r\n\r\n              this.isLoading = false;\r\n            });\r\n        })\r\n        .then(res => {\r\n          var data = {};\r\n\r\n          this.uzorci.forEach(element => {\r\n            if (element.sid === this.$store.state.sid) {\r\n              data = element;\r\n            }\r\n          });\r\n\r\n          this.testovi = [];\r\n          this.rezultati = [];\r\n          this.analitiprikaz = [];\r\n          this.calculated = false;\r\n\r\n          var topcije = null;\r\n          topcije = izbornik.rez;\r\n\r\n          this.show_table = false;\r\n\r\n          http\r\n            .get(\r\n              \"rezultati/showsingle/\" +\r\n                data.sid +\r\n                \"?token=\" +\r\n                this.$store.state.token +\r\n                \"&site=\" +\r\n                this.$store.state.site,\r\n              {}\r\n            )\r\n            .then(res => {\r\n              var test = {};\r\n\r\n              if (res.data.data.length) {\r\n                res.data.data.sort(function(a, b) {\r\n                  return a.testovi.labassay.grupa +\r\n                    a.testovi.labassay.grouporder ==\r\n                    b.testovi.labassay.grupa + b.testovi.labassay.grouporder\r\n                    ? 0\r\n                    : +(\r\n                        a.testovi.labassay.grupa +\r\n                          a.testovi.labassay.grouporder >\r\n                        b.testovi.labassay.grupa + b.testovi.labassay.grouporder\r\n                      ) || -1;\r\n                });\r\n\r\n                this.testovi = res.data.data;\r\n                this.analitiprikaz = res.data.multidata;\r\n\r\n                res.data.data.forEach(element => {\r\n                  test = {};\r\n                  test.realizovan = false;\r\n\r\n                  test.ime = element.testovi.labassay.naziv;\r\n                  test.test = element.testovi.labassay.sifra;\r\n                  test.analit = element.testovi.labassay.analit;\r\n                  test.IDE = element.testovi._id;\r\n                  test.labassay_id = element.testovi.labassay._id;\r\n\r\n                  test.multi_count = 0;\r\n                  test.multi_rezultati = [];\r\n\r\n                  res.data.multidata.forEach(multi => {\r\n                    if (multi.labassay._id === element.testovi.labassay._id) {\r\n                      test.multi_rezultati = multi.rezultat;\r\n                      test.multi_count = multi.rezultat[0].rezultat.length;\r\n                    }\r\n                  });\r\n\r\n                  test.kategorija = element.testovi.labassay.kategorija;\r\n                  test.analyser = element.testovi.labassay.analyser;\r\n                  test.multiparam = element.testovi.labassay.multiparam;\r\n                  test.vise = element.testovi.rezultat.length;\r\n                  test.calculated = element.testovi.labassay.calculated;\r\n                  test.manual = element.testovi.labassay.manual;\r\n\r\n                  test.select_options = eval(\r\n                    \"topcije.\" +\r\n                      element.testovi.interp\r\n                        .replace(\"%\", \"_\")\r\n                        .replace(\"/\", \"_\")\r\n                        .replace(\" \", \"_\")\r\n                        .replace(/-/g, \"_\")\r\n                        .replace(\"#\", \"_\")\r\n                        .replace(/^\\d+/, \"\")\r\n                  );\r\n\r\n                  element.testovi.rezultat.forEach(rezultat => {\r\n                    test.sekcija = rezultat.anaassay.sekcija;\r\n                    test.rezultat = rezultat.rezultat_f;\r\n                    test.result = rezultat;\r\n                    test.anaassay = rezultat.anaassay;\r\n\r\n                    if (rezultat.rezultat_f != \"\") {\r\n                      test.realizovan = true;\r\n                    }\r\n\r\n                    test.unit = rezultat.jedinice_f;\r\n\r\n                    if (res.data.verificiran || res.data.status === \"ODOBREN\") {\r\n                      test.odobren = \"ODOBREN\";\r\n                      test.edit = false;\r\n                    } else {\r\n                      test.odobren != \"ODOBREN\";\r\n                      test.edit = true;\r\n                    }\r\n\r\n                    test.jedinica = rezultat.jedinice_f;\r\n                    test.id = rezultat._id;\r\n                    test.multidata = element.testovi.labassay.multi;\r\n                    test.rezultat_m = rezultat.rezultat_m;\r\n                    test.bakterije = element.testovi.labassay.bakterije;\r\n                    test.neg_description =\r\n                      element.testovi.labassay.neg_description;\r\n                    test.pos_description =\r\n                      element.testovi.labassay.pos_description;\r\n                    test.refSet = element.testovi.grupa;\r\n                    test.dRef = element.testovi.refd;\r\n                    test.gRef = element.testovi.refg;\r\n                    test.interp = element.testovi.interp;\r\n                    test.extend = element.testovi.extend;\r\n                    test.retest = element.testovi.retest;\r\n                    test.interpretacija =\r\n                      element.testovi.labassay.interpretacija;\r\n                  });\r\n\r\n                  if (\r\n                    test.select_options != undefined &&\r\n                    !test.select_options.includes(test.rezultat)\r\n                  ) {\r\n                    test.select_options.unshift(test.rezultat);\r\n                  }\r\n                  this.rezultati.push(test);\r\n                });\r\n\r\n                this.rezultati.forEach(element => {\r\n                  if (element.calculated) {\r\n                    this.calculated = true;\r\n                  }\r\n                });\r\n\r\n                this.sample = data;\r\n                this.show_table = true;\r\n              }\r\n            });\r\n        });\r\n    },\r\n    Calculate: function(event, id, ime, edited) {\r\n      http\r\n        .post(\"/rezultati/odobravanje/calculate/\" + this.$store.state.sid, {\r\n          _id: id,\r\n          token: this.$store.state.token,\r\n          site: this.$store.state.site,\r\n          ime: ime,\r\n          pid: this.pid\r\n        })\r\n        .then(res => {\r\n          http\r\n            .get(\r\n              \"rezultati/odobravanje/samples/\" +\r\n                this.$route.params.patient +\r\n                \"/\" +\r\n                this.$route.params.id +\r\n                \"?token=\" +\r\n                this.$store.state.token +\r\n                \"&site=\" +\r\n                this.$store.state.site +\r\n                \"&date=\" +\r\n                this.$route.query.date,\r\n              {}\r\n            )\r\n            .then(res => {\r\n              this.uzorci = [];\r\n\r\n              res.data.results.forEach(element => {\r\n                var check = 0;\r\n                var zaprimljen = 0;\r\n                var realizovan = 0;\r\n\r\n                if (element.verificiran) {\r\n                  var status_uzorka = \"VERIFICIRAN\";\r\n                } else {\r\n                  var status_uzorka = element.status;\r\n                }\r\n\r\n                element.rezultati.forEach(test => {\r\n                  check++;\r\n\r\n                  if (\r\n                    test.rezultat[test.rezultat.length - 1].rezultat_f === \"\"\r\n                  ) {\r\n                    zaprimljen++;\r\n                  }\r\n\r\n                  if (\r\n                    test.rezultat[test.rezultat.length - 1].rezultat_f != \"\"\r\n                  ) {\r\n                    realizovan++;\r\n                  }\r\n\r\n                  if (check === element.rezultati.length) {\r\n                    if (status_uzorka === \"VERIFICIRAN\") {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"VERIFICIRAN\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false\r\n                      });\r\n                    } else if (status_uzorka === \"ODOBREN\") {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"ODOBREN\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false\r\n                      });\r\n                    } else if (zaprimljen < 1) {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"REALIZOVAN\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false\r\n                      });\r\n                    } else if (realizovan < 1) {\r\n                      var stat = \"ZAPRIMLJEN\";\r\n                      if (element.sample.tip.includes(\"Mikrobiologija\")) {\r\n                        if (\r\n                          element.rezultati[0].rezultat[0].rezultat_m.length\r\n                        ) {\r\n                          stat = \"REALIZOVAN\";\r\n                        }\r\n                      }\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: stat,\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false\r\n                      });\r\n                    } else {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"U OBRADI\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false\r\n                      });\r\n                    }\r\n                  }\r\n                });\r\n              });\r\n\r\n              this.uzorci = this.uzorci.sort(function(a, b) {\r\n                return a.sid.localeCompare(b.sid, undefined, {\r\n                  numeric: true,\r\n                  sensitivity: \"base\"\r\n                });\r\n              });\r\n            });\r\n        })\r\n        .then(res => {\r\n          var data = {};\r\n\r\n          this.uzorci.forEach(element => {\r\n            if (element.sid === this.$store.state.sid) {\r\n              data = element;\r\n            }\r\n          });\r\n\r\n          this.testovi = [];\r\n          this.rezultati = [];\r\n          this.analitiprikaz = [];\r\n          this.calculated = false;\r\n\r\n          var topcije = null;\r\n          topcije = izbornik.rez;\r\n\r\n          http\r\n            .get(\r\n              \"rezultati/showsingle/\" +\r\n                data.sid +\r\n                \"?token=\" +\r\n                this.$store.state.token +\r\n                \"&site=\" +\r\n                this.$store.state.site,\r\n              {}\r\n            )\r\n            .then(res => {\r\n              var test = {};\r\n\r\n              if (res.data.data.length) {\r\n                res.data.data.sort(function(a, b) {\r\n                  return a.testovi.labassay.grupa +\r\n                    a.testovi.labassay.grouporder ==\r\n                    b.testovi.labassay.grupa + b.testovi.labassay.grouporder\r\n                    ? 0\r\n                    : +(\r\n                        a.testovi.labassay.grupa +\r\n                          a.testovi.labassay.grouporder >\r\n                        b.testovi.labassay.grupa + b.testovi.labassay.grouporder\r\n                      ) || -1;\r\n                });\r\n\r\n                this.testovi = res.data.data;\r\n                this.analitiprikaz = res.data.multidata;\r\n\r\n                res.data.data.forEach(element => {\r\n                  test = {};\r\n                  test.realizovan = false;\r\n\r\n                  test.ime = element.testovi.labassay.naziv;\r\n                  test.test = element.testovi.labassay.sifra;\r\n                  test.analit = element.testovi.labassay.analit;\r\n                  test.IDE = element.testovi._id;\r\n                  test.labassay_id = element.testovi.labassay._id;\r\n\r\n                  test.multi_count = 0;\r\n                  test.multi_rezultati = [];\r\n\r\n                  res.data.multidata.forEach(multi => {\r\n                    if (multi.labassay._id === element.testovi.labassay._id) {\r\n                      test.multi_rezultati = multi.rezultat;\r\n                      test.multi_count = multi.rezultat[0].rezultat.length;\r\n                    }\r\n                  });\r\n\r\n                  test.kategorija = element.testovi.labassay.kategorija;\r\n                  test.analyser = element.testovi.labassay.analyser;\r\n                  test.multiparam = element.testovi.labassay.multiparam;\r\n                  test.vise = element.testovi.rezultat.length;\r\n                  test.calculated = element.testovi.labassay.calculated;\r\n                  test.manual = element.testovi.labassay.manual;\r\n\r\n                  test.select_options = eval(\r\n                    \"topcije.\" +\r\n                      element.testovi.interp\r\n                        .replace(\"%\", \"_\")\r\n                        .replace(\"/\", \"_\")\r\n                        .replace(\" \", \"_\")\r\n                        .replace(/-/g, \"_\")\r\n                        .replace(\"#\", \"_\")\r\n                        .replace(/^\\d+/, \"\")\r\n                  );\r\n\r\n                  element.testovi.rezultat.forEach(rezultat => {\r\n                    test.sekcija = rezultat.anaassay.sekcija;\r\n                    test.rezultat = rezultat.rezultat_f;\r\n                    test.result = rezultat;\r\n                    test.anaassay = rezultat.anaassay;\r\n\r\n                    if (rezultat.rezultat_f != \"\") {\r\n                      test.realizovan = true;\r\n                    }\r\n\r\n                    test.unit = rezultat.jedinice_f;\r\n\r\n                    if (res.data.verificiran || res.data.status === \"ODOBREN\") {\r\n                      test.odobren = \"ODOBREN\";\r\n                      test.edit = false;\r\n                    } else {\r\n                      test.odobren != \"ODOBREN\";\r\n                      test.edit = true;\r\n                    }\r\n\r\n                    test.jedinica = rezultat.jedinice_f;\r\n                    test.id = rezultat._id;\r\n                    test.multidata = element.testovi.labassay.multi;\r\n                    test.rezultat_m = rezultat.rezultat_m;\r\n                    test.bakterije = element.testovi.labassay.bakterije;\r\n                    test.neg_description =\r\n                      element.testovi.labassay.neg_description;\r\n                    test.pos_description =\r\n                      element.testovi.labassay.pos_description;\r\n                    test.refSet = element.testovi.grupa;\r\n                    test.dRef = element.testovi.refd;\r\n                    test.gRef = element.testovi.refg;\r\n                    test.interp = element.testovi.interp;\r\n                    test.extend = element.testovi.extend;\r\n                    test.retest = element.testovi.retest;\r\n                    test.interpretacija =\r\n                      element.testovi.labassay.interpretacija;\r\n                  });\r\n\r\n                  if (\r\n                    test.select_options != undefined &&\r\n                    !test.select_options.includes(test.rezultat)\r\n                  ) {\r\n                    test.select_options.unshift(test.rezultat);\r\n                  }\r\n                  this.rezultati.push(test);\r\n                });\r\n\r\n                this.rezultati.forEach(element => {\r\n                  if (element.calculated) {\r\n                    this.calculated = true;\r\n                  }\r\n                });\r\n\r\n                this.sample = data;\r\n              }\r\n            });\r\n        });\r\n    },\r\n    Approve(rezultati) {\r\n      this.rezultati.forEach(element => {\r\n        element.edit = false;\r\n      });\r\n\r\n      this.calculated = false;\r\n\r\n      if (!this.MicrobiologySample) {\r\n        rezultati.forEach(element => {\r\n          element.rezultat = element.rezultat.replace(/,/g, \".\");\r\n        });\r\n\r\n        rezultati[0].rezultat_m = [];\r\n      }\r\n\r\n      http\r\n        .post(\"/rezultati/odobravanje/sacuvaj/\" + this.$store.state.sid, {\r\n          email: this.$store.state.userId,\r\n          token: this.$store.state.token,\r\n          site: this.$store.state.site,\r\n          rezultati: rezultati\r\n        })\r\n        .then(res => {\r\n          this.isLoading = true;\r\n          http\r\n            .post(\"/rezultati/odobravanje/odobri/\" + this.$store.state.sid, {\r\n              testovi: rezultati,\r\n              site: this.$store.state.site,\r\n              token: this.$store.state.token\r\n            })\r\n            .then(res => {\r\n              this.sample.status = \"ODOBREN\";\r\n\r\n              this.report = {};\r\n\r\n              this.uzorci.forEach(element => {\r\n                if (element.sid === this.$store.state.sid) {\r\n                  this.report = element;\r\n                }\r\n              });\r\n\r\n              var sample = [];\r\n              sample.push(this.report._id);\r\n\r\n              http\r\n                .post(\"nalazi/create\", {\r\n                  token: this.$store.state.token,\r\n                  site: this.$store.state.site,\r\n                  type: \"single\",\r\n                  uzorci: this.uzorci,\r\n                  samples: sample,\r\n                  timestamp: this.timestamp,\r\n                  napomena: \"\",\r\n                  status: false,\r\n                  idNalaza: \"\",\r\n                  location: \"/samples\",\r\n                  naziv: this.report.sid\r\n                })\r\n                .then(res => {\r\n                  http\r\n                    .get(\r\n                      \"rezultati/odobravanje/samples/\" +\r\n                        this.$route.params.patient +\r\n                        \"/\" +\r\n                        this.$route.params.id +\r\n                        \"?token=\" +\r\n                        this.$store.state.token +\r\n                        \"&site=\" +\r\n                        this.$store.state.site +\r\n                        \"&date=\" +\r\n                        this.$route.query.date,\r\n                      {}\r\n                    )\r\n                    .then(res => {\r\n                      this.final_pdf = res.data.final_pdf;\r\n\r\n                      this.count = res.data.results.length;\r\n                      this.approved = 0;\r\n\r\n                      this.odobren = true;\r\n                      this.verificiran = true;\r\n\r\n                      res.data.results.forEach(element => {\r\n                        if (\r\n                          element.status === \"ODOBREN\" ||\r\n                          element.status === \"VERIFICIRAN\"\r\n                        ) {\r\n                          this.approved++;\r\n                        }\r\n                        if (\r\n                          element.status != \"ODOBREN\" &&\r\n                          element.status != \"VERIFICIRAN\"\r\n                        ) {\r\n                          this.odobren = false;\r\n                        }\r\n                        if (!element.verificiran) {\r\n                          this.verificiran = false;\r\n                        }\r\n                      });\r\n\r\n                      var response = res.data.results;\r\n\r\n                      if (this.count == this.approved) {\r\n                        var report = [];\r\n\r\n                        this.uzorci.forEach(element => {\r\n                          report.push(element._id);\r\n                        });\r\n\r\n                        http\r\n                          .post(\"nalazi/create\", {\r\n                            token: this.$store.state.token,\r\n                            site: this.$store.state.site,\r\n                            type: \"multi\",\r\n                            uzorci: this.uzorci,\r\n                            samples: report,\r\n                            timestamp: this.timestamp,\r\n                            napomena: \"\",\r\n                            status: false,\r\n                            idNalaza: \"\",\r\n                            location: \"/\",\r\n                            naziv: this.timestamp\r\n                          })\r\n                          .then(res => {\r\n                            if (res.data.success) {\r\n                              http\r\n                                .post(\"nalazi/memo\", {\r\n                                  token: this.$store.state.token,\r\n                                  site: this.$store.state.site,\r\n                                  timestamp: this.timestamp,\r\n                                  height: res.data.memo,\r\n                                  location: \"/\",\r\n                                  naziv: this.timestamp\r\n                                })\r\n                                .then(res => {\r\n                                  this.uzorci = [];\r\n\r\n                                  response.forEach(element => {\r\n                                    var check = 0;\r\n                                    var zaprimljen = 0;\r\n                                    var realizovan = 0;\r\n\r\n                                    if (element.verificiran) {\r\n                                      var status_uzorka = \"VERIFICIRAN\";\r\n                                    } else {\r\n                                      var status_uzorka = element.status;\r\n                                    }\r\n\r\n                                    element.rezultati.forEach(test => {\r\n                                      check++;\r\n\r\n                                      if (\r\n                                        test.rezultat[test.rezultat.length - 1]\r\n                                          .rezultat_f === \"\"\r\n                                      ) {\r\n                                        zaprimljen++;\r\n                                      }\r\n\r\n                                      if (\r\n                                        test.rezultat[test.rezultat.length - 1]\r\n                                          .rezultat_f != \"\"\r\n                                      ) {\r\n                                        realizovan++;\r\n                                      }\r\n\r\n                                      if (check === element.rezultati.length) {\r\n                                        if (status_uzorka === \"VERIFICIRAN\") {\r\n                                          this.uzorci.push({\r\n                                            sid: element.id,\r\n                                            status: \"VERIFICIRAN\",\r\n                                            pdf_exists: element.pdf_exists,\r\n                                            tip: element.sample.tip,\r\n                                            _id: element._id,\r\n                                            removed: false\r\n                                          });\r\n                                        } else if (\r\n                                          status_uzorka === \"ODOBREN\"\r\n                                        ) {\r\n                                          this.uzorci.push({\r\n                                            sid: element.id,\r\n                                            status: \"ODOBREN\",\r\n                                            pdf_exists: element.pdf_exists,\r\n                                            tip: element.sample.tip,\r\n                                            _id: element._id,\r\n                                            removed: false\r\n                                          });\r\n                                        } else if (zaprimljen < 1) {\r\n                                          this.uzorci.push({\r\n                                            sid: element.id,\r\n                                            status: \"REALIZOVAN\",\r\n                                            pdf_exists: element.pdf_exists,\r\n                                            tip: element.sample.tip,\r\n                                            _id: element._id,\r\n                                            removed: false\r\n                                          });\r\n                                        } else if (realizovan < 1) {\r\n                                          var stat = \"ZAPRIMLJEN\";\r\n                                          if (\r\n                                            element.sample.tip.includes(\r\n                                              \"Mikrobiologija\"\r\n                                            )\r\n                                          ) {\r\n                                            if (\r\n                                              element.rezultati[0].rezultat[0]\r\n                                                .rezultat_m.length\r\n                                            ) {\r\n                                              stat = \"REALIZOVAN\";\r\n                                            }\r\n                                          }\r\n                                          this.uzorci.push({\r\n                                            sid: element.id,\r\n                                            status: stat,\r\n                                            pdf_exists: element.pdf_exists,\r\n                                            tip: element.sample.tip,\r\n                                            _id: element._id,\r\n                                            removed: false\r\n                                          });\r\n                                        } else {\r\n                                          this.uzorci.push({\r\n                                            sid: element.id,\r\n                                            status: \"U OBRADI\",\r\n                                            pdf_exists: element.pdf_exists,\r\n                                            tip: element.sample.tip,\r\n                                            _id: element._id,\r\n                                            removed: false\r\n                                          });\r\n                                        }\r\n                                      }\r\n                                    });\r\n                                  });\r\n\r\n                                  this.uzorci = this.uzorci.sort(function(\r\n                                    a,\r\n                                    b\r\n                                  ) {\r\n                                    return a.sid.localeCompare(\r\n                                      b.sid,\r\n                                      undefined,\r\n                                      {\r\n                                        numeric: true,\r\n                                        sensitivity: \"base\"\r\n                                      }\r\n                                    );\r\n                                  });\r\n\r\n                                  this.main = true;\r\n                                  this.isLoading = false;\r\n                                });\r\n                            }\r\n                          });\r\n                      } else {\r\n                        this.uzorci = [];\r\n\r\n                        res.data.results.forEach(element => {\r\n                          var check = 0;\r\n                          var zaprimljen = 0;\r\n                          var realizovan = 0;\r\n\r\n                          if (element.verificiran) {\r\n                            var status_uzorka = \"VERIFICIRAN\";\r\n                          } else {\r\n                            var status_uzorka = element.status;\r\n                          }\r\n\r\n                          element.rezultati.forEach(test => {\r\n                            check++;\r\n\r\n                            if (\r\n                              test.rezultat[test.rezultat.length - 1]\r\n                                .rezultat_f === \"\"\r\n                            ) {\r\n                              zaprimljen++;\r\n                            }\r\n\r\n                            if (\r\n                              test.rezultat[test.rezultat.length - 1]\r\n                                .rezultat_f != \"\"\r\n                            ) {\r\n                              realizovan++;\r\n                            }\r\n\r\n                            if (check === element.rezultati.length) {\r\n                              if (status_uzorka === \"VERIFICIRAN\") {\r\n                                this.uzorci.push({\r\n                                  sid: element.id,\r\n                                  status: \"VERIFICIRAN\",\r\n                                  pdf_exists: element.pdf_exists,\r\n                                  tip: element.sample.tip,\r\n                                  _id: element._id,\r\n                                  removed: false\r\n                                });\r\n                              } else if (status_uzorka === \"ODOBREN\") {\r\n                                this.uzorci.push({\r\n                                  sid: element.id,\r\n                                  status: \"ODOBREN\",\r\n                                  pdf_exists: element.pdf_exists,\r\n                                  tip: element.sample.tip,\r\n                                  _id: element._id,\r\n                                  removed: false\r\n                                });\r\n                              } else if (zaprimljen < 1) {\r\n                                this.uzorci.push({\r\n                                  sid: element.id,\r\n                                  status: \"REALIZOVAN\",\r\n                                  pdf_exists: element.pdf_exists,\r\n                                  tip: element.sample.tip,\r\n                                  _id: element._id,\r\n                                  removed: false\r\n                                });\r\n                              } else if (realizovan < 1) {\r\n                                var stat = \"ZAPRIMLJEN\";\r\n                                if (\r\n                                  element.sample.tip.includes(\"Mikrobiologija\")\r\n                                ) {\r\n                                  if (\r\n                                    element.rezultati[0].rezultat[0].rezultat_m\r\n                                      .length\r\n                                  ) {\r\n                                    stat = \"REALIZOVAN\";\r\n                                  }\r\n                                }\r\n                                this.uzorci.push({\r\n                                  sid: element.id,\r\n                                  status: stat,\r\n                                  pdf_exists: element.pdf_exists,\r\n                                  tip: element.sample.tip,\r\n                                  _id: element._id,\r\n                                  removed: false\r\n                                });\r\n                              } else {\r\n                                this.uzorci.push({\r\n                                  sid: element.id,\r\n                                  status: \"U OBRADI\",\r\n                                  pdf_exists: element.pdf_exists,\r\n                                  tip: element.sample.tip,\r\n                                  _id: element._id,\r\n                                  removed: false\r\n                                });\r\n                              }\r\n                            }\r\n                          });\r\n                        });\r\n\r\n                        this.uzorci = this.uzorci.sort(function(a, b) {\r\n                          return a.sid.localeCompare(b.sid, undefined, {\r\n                            numeric: true,\r\n                            sensitivity: \"base\"\r\n                          });\r\n                        });\r\n\r\n                        this.main = true;\r\n                        this.isLoading = false;\r\n                      }\r\n                    })\r\n                    .then(res => {});\r\n                });\r\n            });\r\n        });\r\n    },\r\n    Disapprove(rezultati, from) {\r\n      this.rezultati.forEach(element => {\r\n        if (element.calculated) {\r\n          this.calculated = true;\r\n        }\r\n      });\r\n\r\n      http\r\n        .post(\"/rezultati/odobravanje/ukloni/\" + this.$store.state.sid, {\r\n          testovi: rezultati,\r\n          site: this.$store.state.site,\r\n          token: this.$store.state.token\r\n        })\r\n        .then(res => {\r\n          this.isLoading = true;\r\n\r\n          http\r\n            .get(\r\n              \"rezultati/odobravanje/samples/\" +\r\n                this.$route.params.patient +\r\n                \"/\" +\r\n                this.$route.params.id +\r\n                \"?token=\" +\r\n                this.$store.state.token +\r\n                \"&site=\" +\r\n                this.$store.state.site +\r\n                \"&date=\" +\r\n                this.$route.query.date,\r\n              {}\r\n            )\r\n            .then(res => {\r\n              this.sample.status = \"REALIZOVAN\";\r\n\r\n              this.final_pdf = res.data.final_pdf;\r\n\r\n              this.count = res.data.results.length;\r\n              this.approved = 0;\r\n\r\n              this.odobren = true;\r\n              this.verificiran = true;\r\n\r\n              res.data.results.forEach(element => {\r\n                if (\r\n                  element.status === \"ODOBREN\" ||\r\n                  element.status === \"VERIFICIRAN\"\r\n                ) {\r\n                  this.approved++;\r\n                }\r\n                if (\r\n                  element.status != \"ODOBREN\" &&\r\n                  element.status != \"VERIFICIRAN\"\r\n                ) {\r\n                  this.odobren = false;\r\n                }\r\n                if (!element.verificiran) {\r\n                  this.verificiran = false;\r\n                }\r\n              });\r\n\r\n              this.uzorci = [];\r\n\r\n              res.data.results.forEach(element => {\r\n                var check = 0;\r\n                var zaprimljen = 0;\r\n                var realizovan = 0;\r\n\r\n                if (element.verificiran) {\r\n                  var status_uzorka = \"VERIFICIRAN\";\r\n                } else {\r\n                  var status_uzorka = element.status;\r\n                }\r\n\r\n                element.rezultati.forEach(test => {\r\n                  check++;\r\n\r\n                  if (\r\n                    test.rezultat[test.rezultat.length - 1].rezultat_f === \"\"\r\n                  ) {\r\n                    zaprimljen++;\r\n                  }\r\n\r\n                  if (\r\n                    test.rezultat[test.rezultat.length - 1].rezultat_f != \"\"\r\n                  ) {\r\n                    realizovan++;\r\n                  }\r\n\r\n                  if (check === element.rezultati.length) {\r\n                    if (status_uzorka === \"VERIFICIRAN\") {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"VERIFICIRAN\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false\r\n                      });\r\n                    } else if (status_uzorka === \"ODOBREN\") {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"ODOBREN\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false\r\n                      });\r\n                    } else if (zaprimljen < 1) {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"REALIZOVAN\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false\r\n                      });\r\n                    } else if (realizovan < 1) {\r\n                      var stat = \"ZAPRIMLJEN\";\r\n                      if (element.sample.tip.includes(\"Mikrobiologija\")) {\r\n                        if (\r\n                          element.rezultati[0].rezultat[0].rezultat_m.length\r\n                        ) {\r\n                          stat = \"REALIZOVAN\";\r\n                        }\r\n                      }\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: stat,\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false\r\n                      });\r\n                    } else {\r\n                      this.uzorci.push({\r\n                        sid: element.id,\r\n                        status: \"U OBRADI\",\r\n                        pdf_exists: element.pdf_exists,\r\n                        tip: element.sample.tip,\r\n                        _id: element._id,\r\n                        removed: false\r\n                      });\r\n                    }\r\n                  }\r\n                });\r\n              });\r\n\r\n              this.uzorci = this.uzorci.sort(function(a, b) {\r\n                return a.sid.localeCompare(b.sid, undefined, {\r\n                  numeric: true,\r\n                  sensitivity: \"base\"\r\n                });\r\n              });\r\n\r\n              this.main = true;\r\n            });\r\n\r\n          this.rezultati.forEach(element => {\r\n            element.edit = true;\r\n          });\r\n\r\n          this.isLoading = false;\r\n        });\r\n    },\r\n    Verify(data) {\r\n      if (!this.$store.state.access.verify) {\r\n        this.$refs.staticModalVerifyPrivilege.open();\r\n      } else {\r\n        http\r\n          .post(\"/rezultati/obrada/verifikacija/\" + this.$store.state.sid, {\r\n            site: this.$store.state.site,\r\n            token: this.$store.state.token,\r\n            verify: true\r\n          })\r\n          .then(res => {\r\n            http\r\n              .get(\r\n                \"rezultati/odobravanje/samples/\" +\r\n                  this.$route.params.patient +\r\n                  \"/\" +\r\n                  this.$route.params.id +\r\n                  \"?token=\" +\r\n                  this.$store.state.token +\r\n                  \"&site=\" +\r\n                  this.$store.state.site +\r\n                  \"&date=\" +\r\n                  this.$route.query.date,\r\n                {}\r\n              )\r\n              .then(res => {\r\n                this.sample.status = \"VERIFICIRAN\";\r\n\r\n                this.final_pdf = res.data.final_pdf;\r\n\r\n                this.count = res.data.results.length;\r\n                this.approved = 0;\r\n                this.verified = 0;\r\n\r\n                this.odobren = true;\r\n                this.verificiran = true;\r\n                this.partials = [];\r\n                this.partials_condition = false;\r\n\r\n                res.data.results.forEach(element => {\r\n                  if (element.verificiran) {\r\n                    this.partials.push(element._id);\r\n                    this.verified++;\r\n                  }\r\n                  if (\r\n                    element.status === \"ODOBREN\" ||\r\n                    element.status === \"VERIFICIRAN\"\r\n                  ) {\r\n                    this.approved++;\r\n                  }\r\n                  if (\r\n                    element.status != \"ODOBREN\" &&\r\n                    element.status != \"VERIFICIRAN\"\r\n                  ) {\r\n                    this.odobren = false;\r\n                  }\r\n                  if (!element.verificiran) {\r\n                    this.verificiran = false;\r\n                  }\r\n                });\r\n\r\n                if (this.count > this.verified && this.verified > 1) {\r\n                  this.partials_condition = true;\r\n                }\r\n\r\n                this.uzorci = [];\r\n\r\n                res.data.results.forEach(element => {\r\n                  var check = 0;\r\n                  var zaprimljen = 0;\r\n                  var realizovan = 0;\r\n\r\n                  if (element.verificiran) {\r\n                    var status_uzorka = \"VERIFICIRAN\";\r\n                  } else {\r\n                    var status_uzorka = element.status;\r\n                  }\r\n\r\n                  element.rezultati.forEach(test => {\r\n                    check++;\r\n\r\n                    if (\r\n                      test.rezultat[test.rezultat.length - 1].rezultat_f === \"\"\r\n                    ) {\r\n                      zaprimljen++;\r\n                    }\r\n\r\n                    if (\r\n                      test.rezultat[test.rezultat.length - 1].rezultat_f != \"\"\r\n                    ) {\r\n                      realizovan++;\r\n                    }\r\n\r\n                    if (check === element.rezultati.length) {\r\n                      if (status_uzorka === \"VERIFICIRAN\") {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"VERIFICIRAN\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false\r\n                        });\r\n                      } else if (status_uzorka === \"ODOBREN\") {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"ODOBREN\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false\r\n                        });\r\n                      } else if (zaprimljen < 1) {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"REALIZOVAN\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false\r\n                        });\r\n                      } else if (realizovan < 1) {\r\n                        var stat = \"ZAPRIMLJEN\";\r\n                        if (element.sample.tip.includes(\"Mikrobiologija\")) {\r\n                          if (\r\n                            element.rezultati[0].rezultat[0].rezultat_m.length\r\n                          ) {\r\n                            stat = \"REALIZOVAN\";\r\n                          }\r\n                        }\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: stat,\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false\r\n                        });\r\n                      } else {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"U OBRADI\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false\r\n                        });\r\n                      }\r\n                    }\r\n                  });\r\n                });\r\n\r\n                this.uzorci = this.uzorci.sort(function(a, b) {\r\n                  return a.sid.localeCompare(b.sid, undefined, {\r\n                    numeric: true,\r\n                    sensitivity: \"base\"\r\n                  });\r\n                });\r\n\r\n                if (this.verificiran) {\r\n                  http\r\n                    .post(\"rezultati/nalazi/status\", {\r\n                      token: this.$store.state.token,\r\n                      site: this.$store.state.site,\r\n                      timestamp: this.timestamp,\r\n                      location: \"/\",\r\n                      naziv: this.timestamp,\r\n                      status: true\r\n                    })\r\n                    .then(res => {\r\n                      this.main = true;\r\n\r\n                      if (this.lokacija.sendEmail) {\r\n                        http\r\n                          .post(\"nalazi/mail\", {\r\n                            token: this.$store.state.token,\r\n                            site: this.$store.state.site,\r\n                            email: this.lokacija.email,\r\n                            timestamp: this.timestamp,\r\n                            location: \"/\",\r\n                            naziv: this.timestamp\r\n                          })\r\n                          .then(res => {\r\n                            if (res.data.success) {\r\n                            } else {\r\n                              this.toastText = \"Greška prilikom slanja nalaza!\";\r\n                              this.toastIcon = \"fa-remove\";\r\n                              this.toastPosition = \"top-right\";\r\n                              this.className = \"vuestic-toast-danger\";\r\n\r\n                              this.showToast(this.toastText, {\r\n                                icon: this.toastIcon,\r\n                                position: this.toastPosition,\r\n                                duration: 2500,\r\n                                fullWidth: this.false,\r\n                                className: this.className\r\n                              });\r\n                            }\r\n                          });\r\n                      } else {\r\n                      }\r\n                    });\r\n                } else {\r\n                  this.main = true;\r\n                }\r\n              });\r\n          });\r\n      }\r\n    },\r\n    UnVerify(data) {\r\n      if (!this.$store.state.access.verify) {\r\n        this.$refs.staticModalVerifyPrivilege.open();\r\n      } else {\r\n        this.verificiran = false;\r\n        this.sid = data.sid;\r\n\r\n        http\r\n          .post(\"/rezultati/obrada/verifikacija/\" + data.sid, {\r\n            site: this.$store.state.site,\r\n            token: this.$store.state.token,\r\n            verify: false\r\n          })\r\n          .then(res => {\r\n            http\r\n              .get(\r\n                \"rezultati/odobravanje/samples/\" +\r\n                  this.$route.params.patient +\r\n                  \"/\" +\r\n                  this.$route.params.id +\r\n                  \"?token=\" +\r\n                  this.$store.state.token +\r\n                  \"&site=\" +\r\n                  this.$store.state.site +\r\n                  \"&date=\" +\r\n                  this.$route.query.date,\r\n                {}\r\n              )\r\n              .then(res => {\r\n                this.sample.status = \"ODOBREN\";\r\n\r\n                this.final_pdf = res.data.final_pdf;\r\n\r\n                this.count = res.data.results.length;\r\n                this.approved = 0;\r\n\r\n                this.odobren = true;\r\n                this.verificiran = true;\r\n                this.verified = 0;\r\n                this.partials = [];\r\n                this.partials_condition = false;\r\n\r\n                res.data.results.forEach(element => {\r\n                  if (element.verificiran) {\r\n                    this.verified++;\r\n                    this.partials.push(element._id);\r\n                  }\r\n                  if (\r\n                    element.status === \"ODOBREN\" ||\r\n                    element.status === \"VERIFICIRAN\"\r\n                  ) {\r\n                    this.approved++;\r\n                  }\r\n                  if (\r\n                    element.status != \"ODOBREN\" &&\r\n                    element.status != \"VERIFICIRAN\"\r\n                  ) {\r\n                    this.odobren = false;\r\n                  }\r\n                  if (!element.verificiran) {\r\n                    this.verificiran = false;\r\n                  }\r\n                });\r\n\r\n                if (this.count > this.verified && this.verified > 1) {\r\n                  this.partials_condition = true;\r\n                }\r\n\r\n                this.uzorci = [];\r\n\r\n                res.data.results.forEach(element => {\r\n                  var check = 0;\r\n                  var zaprimljen = 0;\r\n                  var realizovan = 0;\r\n\r\n                  if (element.verificiran) {\r\n                    var status_uzorka = \"VERIFICIRAN\";\r\n                  } else {\r\n                    var status_uzorka = element.status;\r\n                  }\r\n\r\n                  element.rezultati.forEach(test => {\r\n                    check++;\r\n\r\n                    if (\r\n                      test.rezultat[test.rezultat.length - 1].rezultat_f === \"\"\r\n                    ) {\r\n                      zaprimljen++;\r\n                    }\r\n\r\n                    if (\r\n                      test.rezultat[test.rezultat.length - 1].rezultat_f != \"\"\r\n                    ) {\r\n                      realizovan++;\r\n                    }\r\n\r\n                    if (check === element.rezultati.length) {\r\n                      if (status_uzorka === \"VERIFICIRAN\") {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"VERIFICIRAN\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false\r\n                        });\r\n                      } else if (status_uzorka === \"ODOBREN\") {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"ODOBREN\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false\r\n                        });\r\n                      } else if (zaprimljen < 1) {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"REALIZOVAN\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false\r\n                        });\r\n                      } else if (realizovan < 1) {\r\n                        var stat = \"ZAPRIMLJEN\";\r\n                        if (element.sample.tip.includes(\"Mikrobiologija\")) {\r\n                          if (\r\n                            element.rezultati[0].rezultat[0].rezultat_m.length\r\n                          ) {\r\n                            stat = \"REALIZOVAN\";\r\n                          }\r\n                        }\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: stat,\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false\r\n                        });\r\n                      } else {\r\n                        this.uzorci.push({\r\n                          sid: element.id,\r\n                          status: \"U OBRADI\",\r\n                          pdf_exists: element.pdf_exists,\r\n                          tip: element.sample.tip,\r\n                          _id: element._id,\r\n                          removed: false\r\n                        });\r\n                      }\r\n                    }\r\n                  });\r\n                });\r\n\r\n                this.uzorci = this.uzorci.sort(function(a, b) {\r\n                  return a.sid.localeCompare(b.sid, undefined, {\r\n                    numeric: true,\r\n                    sensitivity: \"base\"\r\n                  });\r\n                });\r\n\r\n                if (!this.verificiran) {\r\n                  http\r\n                    .post(\"rezultati/nalazi/status\", {\r\n                      token: this.$store.state.token,\r\n                      site: this.$store.state.site,\r\n                      timestamp: this.timestamp,\r\n                      location: \"/\",\r\n                      naziv: this.timestamp,\r\n                      status: false\r\n                    })\r\n                    .then(res => {\r\n                      this.main = true;\r\n                    });\r\n                } else {\r\n                  this.main = true;\r\n                }\r\n              });\r\n          });\r\n      }\r\n    },\r\n    GetResults(data, status) {\r\n      this.sample_status = status;\r\n      this.vise = [];\r\n      this.labassay = \"\";\r\n      http\r\n        .post(\r\n          \"/rezultati/odobravanje/results\" +\r\n            \"?token=\" +\r\n            this.$store.state.token +\r\n            \"&site=\" +\r\n            this.$store.state.site,\r\n          {\r\n            id: this.sample.sid,\r\n            labassay: data.labassay_id\r\n          }\r\n        )\r\n        .then(res => {\r\n          if (res.data.success) {\r\n            this.vise = res.data.element;\r\n            this.labassay =\r\n              this.vise.labassay.naziv + \" (\" + this.vise.labassay.analit + \")\";\r\n\r\n            var i = 0;\r\n            res.data.element.rezultat.forEach(element => {\r\n              i++;\r\n              if (res.data.element.rezultat.length == i) {\r\n                element.izabran = true;\r\n              } else {\r\n                element.izabran = false;\r\n              }\r\n            });\r\n\r\n            this.vise.rezultat.sort(function(a, b) {\r\n              return Date.parse(a.created_at) == Date.parse(b.created_at)\r\n                ? 0\r\n                : +(Date.parse(a.created_at) < Date.parse(b.created_at)) || -1;\r\n            });\r\n\r\n            this.$refs.staticModalAllResults.open();\r\n          }\r\n        });\r\n    },\r\n    GetResultsMulti(data, status) {\r\n      this.sample_status = status;\r\n\r\n      this.multi_rezultati = [];\r\n      this.multi_test = data.ime + \" (\" + data.analit + \")\";\r\n\r\n      data.multi_rezultati.forEach(element => {\r\n        element.rezultat.forEach(rez => {});\r\n      });\r\n    },\r\n    IzborTesta(vise, test) {\r\n      document.getElementById(this.sample.sid).click();\r\n\r\n      http\r\n        .post(\r\n          \"/rezultati/odobravanje/choose\" +\r\n            \"?token=\" +\r\n            this.$store.state.token +\r\n            \"&site=\" +\r\n            this.$store.state.site,\r\n          {\r\n            id: this.sample.sid,\r\n            labassay: vise.labassay._id,\r\n            picked: test._id\r\n          }\r\n        )\r\n        .then(res => {\r\n          document.getElementById(this.sample.sid).click();\r\n          this.$refs.staticModalAllResults.close();\r\n        });\r\n    },\r\n    Partials() {\r\n      http\r\n        .post(\"nalazi/create\", {\r\n          token: this.$store.state.token,\r\n          site: this.$store.state.site,\r\n          type: \"partial\",\r\n          uzorci: this.uzorci,\r\n          samples: this.partials,\r\n          timestamp: this.timestamp,\r\n          napomena: \"\",\r\n          status: false,\r\n          idNalaza: \"\",\r\n          location: \"/partials\",\r\n          naziv: this.timestamp\r\n        })\r\n        .then(res => {\r\n          if (res.data.success) {\r\n            if (!res.data.success) {\r\n              this.$refs.staticModalError.open();\r\n            } else {\r\n              this.path = this.timestamp + \".pdf\";\r\n\r\n              this.url = server + \"nalazi/partials/\" + this.path;\r\n\r\n              var options = {\r\n                width: \"100%\",\r\n                height: \"800px\"\r\n              };\r\n              PDFObject.embed(this.url, \"#pdf-container\", options);\r\n\r\n              this.email_button = true;\r\n              this.main = false;\r\n              this.pdf = true;\r\n            }\r\n          }\r\n        });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.collapse-page {\r\n  &__content {\r\n    padding: 2rem;\r\n    &__title {\r\n      font-size: 1.375rem;\r\n      font-weight: bold;\r\n    }\r\n  }\r\n}\r\n\r\n.icon-bar a {\r\n  color: #fff;\r\n  text-decoration: none;\r\n}\r\n\r\n.icon-bar a:hover {\r\n  color: #4ae387;\r\n}\r\n\r\ni:hover {\r\n  color: #4ae387 !important;\r\n}\r\n\r\n.circle {\r\n  width: 1rem;\r\n  opacity: 0.5;\r\n  height: 1rem;\r\n  border-radius: 50%;\r\n  display: inline-block;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/obrada/Obrada.vue","exports = module.exports = require(\"../../css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \".vld-overlay{bottom:0;left:0;position:absolute;right:0;top:0;align-items:center;display:none;justify-content:center;overflow:hidden;z-index:1}.vld-overlay.is-active{display:flex}.vld-overlay.is-full-page{z-index:999;position:fixed}.vld-overlay .vld-background{bottom:0;left:0;position:absolute;right:0;top:0;background:#fff;opacity:.5}.vld-overlay .vld-icon,.vld-parent{position:relative}\", \"\", {\"version\":3,\"sources\":[\"C:/Projects/extralab/client/node_modules/vue-loading-overlay/dist/vue-loading.css\"],\"names\":[],\"mappings\":\"AAAA,aACE,SAAU,AACV,OAAQ,AACR,kBAAmB,AACnB,QAAS,AACT,MAAO,AACP,mBAAoB,AACpB,aAAc,AACd,uBAAwB,AACxB,gBAAiB,AACjB,SAAU,CACX,AAED,uBACE,YAAa,CACd,AAED,0BACE,YAAa,AACb,cAAe,CAChB,AAED,6BACE,SAAU,AACV,OAAQ,AACR,kBAAmB,AACnB,QAAS,AACT,MAAO,AACP,gBAAiB,AACjB,UAAY,CACb,AAED,mCACE,iBAAkB,CACnB\",\"file\":\"vue-loading.css\",\"sourcesContent\":[\".vld-overlay {\\n  bottom: 0;\\n  left: 0;\\n  position: absolute;\\n  right: 0;\\n  top: 0;\\n  align-items: center;\\n  display: none;\\n  justify-content: center;\\n  overflow: hidden;\\n  z-index: 1\\n}\\n\\n.vld-overlay.is-active {\\n  display: flex\\n}\\n\\n.vld-overlay.is-full-page {\\n  z-index: 999;\\n  position: fixed\\n}\\n\\n.vld-overlay .vld-background {\\n  bottom: 0;\\n  left: 0;\\n  position: absolute;\\n  right: 0;\\n  top: 0;\\n  background: #fff;\\n  opacity: 0.5\\n}\\n\\n.vld-overlay .vld-icon, .vld-parent {\\n  position: relative\\n}\\n\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader?{\"minimize\":true,\"sourceMap\":true}!./node_modules/vue-loading-overlay/dist/vue-loading.css\n// module id = MbHo\n// module chunks = 0 1 2 3 5 6 7 8 9 10 11 12 13 14 22 25 26 27 28 29 30 31 32 33 34 35 36","<template>\r\n  <span class=\"circle\" :class=\"classObject\"></span>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"badgeColumn\",\r\n  props: {\r\n    rowData: {\r\n      type: Object,\r\n      required: true\r\n    },\r\n    rowIndex: {\r\n      type: Number\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      classObject: {\r\n        \"badge-warning\": this.rowIndex % 6 === 0,\r\n        \"badge-primary\": this.rowIndex % 6 === 1,\r\n        \"badge-danger\": this.rowIndex % 6 === 2,\r\n        \"badge-info\": this.rowIndex % 6 === 3,\r\n        \"badge-violet\": this.rowIndex % 6 === 4,\r\n        \"badge-dark-blue\": this.rowIndex % 6 === 5\r\n      }\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.circle {\r\n  width: 0.4rem;\r\n  height: 0.4rem;\r\n  border-radius: 50%;\r\n  display: inline-block;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/obrada/BadgeColumn.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('span',{staticClass:\"circle\",class:_vm.classObject})}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-1099f53e\",\"hasScoped\":true,\"transformToRequire\":{\"video\":\"src\",\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/obrada/BadgeColumn.vue\n// module id = RHNw\n// module chunks = 6 15 23 42","// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window\nvar toIObject = require('./_to-iobject');\nvar gOPN = require('./_object-gopn').f;\nvar toString = {}.toString;\n\nvar windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames\n  ? Object.getOwnPropertyNames(window) : [];\n\nvar getWindowNames = function (it) {\n  try {\n    return gOPN(it);\n  } catch (e) {\n    return windowNames.slice();\n  }\n};\n\nmodule.exports.f = function getOwnPropertyNames(it) {\n  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_object-gopn-ext.js\n// module id = Rrel\n// module chunks = 6","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../css-loader/index.js??ref--7-2!./vue-loading.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../vue-style-loader/lib/addStylesClient.js\")(\"745170b4\", content, true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loading-overlay/dist/vue-loading.css\n// module id = SYh3\n// module chunks = 0 1 2 3 5 6 7 8 9 10 11 12 13 14 22 25 26 27 28 29 30 31 32 33 34 35 36","/*global ActiveXObject, window, console, define, module, jQuery */\n//jshint unused:false, strict: false\n\n/*\n    PDFObject v2.1.1\n    https://github.com/pipwerks/PDFObject\n    Copyright (c) 2008-2018 Philip Hutchison\n    MIT-style license: http://pipwerks.mit-license.org/\n    UMD module pattern from https://github.com/umdjs/umd/blob/master/templates/returnExports.js\n*/\n\n(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define([], factory);\n    } else if (typeof module === 'object' && module.exports) {\n        // Node. Does not work with strict CommonJS, but\n        // only CommonJS-like environments that support module.exports,\n        // like Node.\n        module.exports = factory();\n    } else {\n        // Browser globals (root is window)\n        root.PDFObject = factory();\n  }\n}(this, function () {\n\n    \"use strict\";\n    //jshint unused:true\n\n    //PDFObject is designed for client-side (browsers), not server-side (node)\n    //Will choke on undefined navigator and window vars when run on server\n    //Return boolean false and exit function when running server-side\n\n    if(typeof window === \"undefined\" || typeof navigator === \"undefined\"){ return false; }\n\n    var pdfobjectversion = \"2.1.1\",\n        ua = window.navigator.userAgent,\n\n        //declare booleans\n        supportsPDFs,\n        isIE,\n        supportsPdfMimeType = (typeof navigator.mimeTypes['application/pdf'] !== \"undefined\"),\n        supportsPdfActiveX,\n        isModernBrowser = (function (){ return (typeof window.Promise !== \"undefined\"); })(),\n        isFirefox = (function (){ return (ua.indexOf(\"irefox\") !== -1); } )(),\n        isFirefoxWithPDFJS = (function (){\n            //Firefox started shipping PDF.js in Firefox 19.\n            //If this is Firefox 19 or greater, assume PDF.js is available\n            if(!isFirefox){ return false; }\n            //parse userAgent string to get release version (\"rv\")\n            //ex: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.12; rv:57.0) Gecko/20100101 Firefox/57.0\n            return (parseInt(ua.split(\"rv:\")[1].split(\".\")[0], 10) > 18);\n        })(),\n        isIOS = (function (){ return (/iphone|ipad|ipod/i.test(ua.toLowerCase())); })(),\n\n        //declare functions\n        createAXO,\n        buildFragmentString,\n        log,\n        embedError,\n        embed,\n        getTargetElement,\n        generatePDFJSiframe,\n        generateEmbedElement;\n\n\n    /* ----------------------------------------------------\n       Supporting functions\n       ---------------------------------------------------- */\n\n    createAXO = function (type){\n        var ax;\n        try {\n            ax = new ActiveXObject(type);\n        } catch (e) {\n            ax = null; //ensure ax remains null\n        }\n        return ax;\n    };\n\n    //IE11 still uses ActiveX for Adobe Reader, but IE 11 doesn't expose\n    //window.ActiveXObject the same way previous versions of IE did\n    //window.ActiveXObject will evaluate to false in IE 11, but \"ActiveXObject\" in window evaluates to true\n    //so check the first one for older IE, and the second for IE11\n    //FWIW, MS Edge (replacing IE11) does not support ActiveX at all, both will evaluate false\n    //Constructed as a method (not a prop) to avoid unneccesarry overhead -- will only be evaluated if needed\n    isIE = function (){ return !!(window.ActiveXObject || \"ActiveXObject\" in window); };\n\n    //If either ActiveX support for \"AcroPDF.PDF\" or \"PDF.PdfCtrl\" are found, return true\n    //Constructed as a method (not a prop) to avoid unneccesarry overhead -- will only be evaluated if needed\n    supportsPdfActiveX = function (){ return !!(createAXO(\"AcroPDF.PDF\") || createAXO(\"PDF.PdfCtrl\")); };\n\n    //Determines whether PDF support is available\n    supportsPDFs = (\n        //as of iOS 12, inline PDF rendering is still not supported in Safari or native webview\n        //3rd-party browsers (eg Chrome, Firefox) use Apple's webview for rendering, and thus the same result as Safari\n        //Therefore if iOS, we shall assume that PDF support is not available\n        !isIOS && (\n            //Modern versions of Firefox come bundled with PDFJS\n            isFirefoxWithPDFJS || \n            //Browsers that still support the original MIME type check\n            supportsPdfMimeType || (\n                //Pity the poor souls still using IE\n                isIE() && supportsPdfActiveX()\n            )\n        )\n    );\n\n    //Create a fragment identifier for using PDF Open parameters when embedding PDF\n    buildFragmentString = function(pdfParams){\n\n        var string = \"\",\n            prop;\n\n        if(pdfParams){\n\n            for (prop in pdfParams) {\n                if (pdfParams.hasOwnProperty(prop)) {\n                    string += encodeURIComponent(prop) + \"=\" + encodeURIComponent(pdfParams[prop]) + \"&\";\n                }\n            }\n\n            //The string will be empty if no PDF Params found\n            if(string){\n\n                string = \"#\" + string;\n\n                //Remove last ampersand\n                string = string.slice(0, string.length - 1);\n\n            }\n\n        }\n\n        return string;\n\n    };\n\n    log = function (msg){\n        if(typeof console !== \"undefined\" && console.log){\n            console.log(\"[PDFObject] \" + msg);\n        }\n    };\n\n    embedError = function (msg){\n        log(msg);\n        return false;\n    };\n\n    getTargetElement = function (targetSelector){\n\n        //Default to body for full-browser PDF\n        var targetNode = document.body;\n\n        //If a targetSelector is specified, check to see whether\n        //it's passing a selector, jQuery object, or an HTML element\n\n        if(typeof targetSelector === \"string\"){\n\n            //Is CSS selector\n            targetNode = document.querySelector(targetSelector);\n\n        } else if (typeof jQuery !== \"undefined\" && targetSelector instanceof jQuery && targetSelector.length) {\n\n            //Is jQuery element. Extract HTML node\n            targetNode = targetSelector.get(0);\n\n        } else if (typeof targetSelector.nodeType !== \"undefined\" && targetSelector.nodeType === 1){\n\n            //Is HTML element\n            targetNode = targetSelector;\n\n        }\n\n        return targetNode;\n\n    };\n\n    generatePDFJSiframe = function (targetNode, url, pdfOpenFragment, PDFJS_URL, id){\n\n        var fullURL = PDFJS_URL + \"?file=\" + encodeURIComponent(url) + pdfOpenFragment;\n        var scrollfix = (isIOS) ? \"-webkit-overflow-scrolling: touch; overflow-y: scroll; \" : \"overflow: hidden; \";\n        var iframe = \"<div style='\" + scrollfix + \"position: absolute; top: 0; right: 0; bottom: 0; left: 0;'><iframe  \" + id + \" src='\" + fullURL + \"' style='border: none; width: 100%; height: 100%;' frameborder='0'></iframe></div>\";\n        targetNode.className += \" pdfobject-container\";\n        targetNode.style.position = \"relative\";\n        targetNode.style.overflow = \"auto\";\n        targetNode.innerHTML = iframe;\n        return targetNode.getElementsByTagName(\"iframe\")[0];\n\n    };\n\n    generateEmbedElement = function (targetNode, targetSelector, url, pdfOpenFragment, width, height, id){\n\n        var style = \"\";\n\n        if(targetSelector && targetSelector !== document.body){\n            style = \"width: \" + width + \"; height: \" + height + \";\";\n        } else {\n            style = \"position: absolute; top: 0; right: 0; bottom: 0; left: 0; width: 100%; height: 100%;\";\n        }\n\n        targetNode.className += \" pdfobject-container\";\n        targetNode.innerHTML = \"<embed \" + id + \" class='pdfobject' src='\" + url + pdfOpenFragment + \"' type='application/pdf' style='overflow: auto; \" + style + \"'/>\";\n\n        return targetNode.getElementsByTagName(\"embed\")[0];\n\n    };\n\n    embed = function(url, targetSelector, options){\n\n        //Ensure URL is available. If not, exit now.\n        if(typeof url !== \"string\"){ return embedError(\"URL is not valid\"); }\n\n        //If targetSelector is not defined, convert to boolean\n        targetSelector = (typeof targetSelector !== \"undefined\") ? targetSelector : false;\n\n        //Ensure options object is not undefined -- enables easier error checking below\n        options = (typeof options !== \"undefined\") ? options : {};\n\n        //Get passed options, or set reasonable defaults\n        var id = (options.id && typeof options.id === \"string\") ? \"id='\" + options.id + \"'\" : \"\",\n            page = (options.page) ? options.page : false,\n            pdfOpenParams = (options.pdfOpenParams) ? options.pdfOpenParams : {},\n            fallbackLink = (typeof options.fallbackLink !== \"undefined\") ? options.fallbackLink : true,\n            width = (options.width) ? options.width : \"100%\",\n            height = (options.height) ? options.height : \"100%\",\n            assumptionMode = (typeof options.assumptionMode === \"boolean\") ? options.assumptionMode : true,\n            forcePDFJS = (typeof options.forcePDFJS === \"boolean\") ? options.forcePDFJS : false,\n            PDFJS_URL = (options.PDFJS_URL) ? options.PDFJS_URL : false,\n            targetNode = getTargetElement(targetSelector),\n            fallbackHTML = \"\",\n            pdfOpenFragment = \"\",\n            fallbackHTML_default = \"<p>This browser does not support inline PDFs. Please download the PDF to view it: <a href='[url]'>Download PDF</a></p>\";\n\n        //If target element is specified but is not valid, exit without doing anything\n        if(!targetNode){ return embedError(\"Target element cannot be determined\"); }\n\n\n        //page option overrides pdfOpenParams, if found\n        if(page){\n            pdfOpenParams.page = page;\n        }\n\n        //Stringify optional Adobe params for opening document (as fragment identifier)\n        pdfOpenFragment = buildFragmentString(pdfOpenParams);\n\n        //Do the dance\n\n        //If the forcePDFJS option is invoked, skip everything else and embed as directed\n        if(forcePDFJS && PDFJS_URL){\n\n            return generatePDFJSiframe(targetNode, url, pdfOpenFragment, PDFJS_URL, id);\n\n        //If traditional support is provided, or if this is a modern browser and not iOS (see comment for supportsPDFs declaration)\n        } else if(supportsPDFs || (assumptionMode && isModernBrowser && !isIOS)){\n\n            return generateEmbedElement(targetNode, targetSelector, url, pdfOpenFragment, width, height, id);\n\n        //If everything else has failed and a PDFJS fallback is provided, try to use it\n        } else if(PDFJS_URL){\n\n            return generatePDFJSiframe(targetNode, url, pdfOpenFragment, PDFJS_URL, id);\n\n        } else {\n\n            //Display the fallback link if available\n            if(fallbackLink){\n\n                fallbackHTML = (typeof fallbackLink === \"string\") ? fallbackLink : fallbackHTML_default;\n                targetNode.innerHTML = fallbackHTML.replace(/\\[url\\]/g, url);\n\n            }\n\n            return embedError(\"This browser does not support embedded PDFs\");\n\n        }\n\n    };\n\n    return {\n        embed: function (a,b,c){ return embed(a,b,c); },\n        pdfobjectversion: (function () { return pdfobjectversion; })(),\n        supportsPDFs: (function (){ return supportsPDFs; })()\n    };\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pdfobject/pdfobject.js\n// module id = UqI+\n// module chunks = 6 22 24","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-1099f53e\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./BadgeColumn.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./BadgeColumn.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-1099f53e\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":\\\"src\\\",\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./BadgeColumn.vue\"\n/* template functional */\n  var __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-1099f53e\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/obrada/BadgeColumn.vue\n// module id = XMpX\n// module chunks = 6 15 23 42","!function(t,e){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(\"VueLoading\",[],e):\"object\"==typeof exports?exports.VueLoading=e():t.VueLoading=e()}(\"undefined\"!=typeof self?self:this,function(){return function(t){var e={};function i(n){if(e[n])return e[n].exports;var r=e[n]={i:n,l:!1,exports:{}};return t[n].call(r.exports,r,r.exports,i),r.l=!0,r.exports}return i.m=t,i.c=e,i.d=function(t,e,n){i.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},i.r=function(t){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})},i.t=function(t,e){if(1&e&&(t=i(t)),8&e)return t;if(4&e&&\"object\"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(i.r(n),Object.defineProperty(n,\"default\",{enumerable:!0,value:t}),2&e&&\"string\"!=typeof t)for(var r in t)i.d(n,r,function(e){return t[e]}.bind(null,r));return n},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,\"a\",e),e},i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},i.p=\"\",i(i.s=1)}([function(t,e,i){},function(t,e,i){\"use strict\";i.r(e);var n=\"undefined\"!=typeof window?window.HTMLElement:Object,r={mounted:function(){document.addEventListener(\"focusin\",this.focusIn)},methods:{focusIn:function(t){if(this.isActive&&t.target!==this.$el&&!this.$el.contains(t.target)){var e=this.container?this.container:this.isFullPage?null:this.$el.parentElement;(this.isFullPage||e&&e.contains(t.target))&&(t.preventDefault(),this.$el.focus())}}},beforeDestroy:function(){document.removeEventListener(\"focusin\",this.focusIn)}};function a(t,e,i,n,r,a,o,s){var u,l=\"function\"==typeof t?t.options:t;if(e&&(l.render=e,l.staticRenderFns=i,l._compiled=!0),n&&(l.functional=!0),a&&(l._scopeId=\"data-v-\"+a),o?(u=function(t){(t=t||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||\"undefined\"==typeof __VUE_SSR_CONTEXT__||(t=__VUE_SSR_CONTEXT__),r&&r.call(this,t),t&&t._registeredComponents&&t._registeredComponents.add(o)},l._ssrRegister=u):r&&(u=s?function(){r.call(this,this.$root.$options.shadowRoot)}:r),u)if(l.functional){l._injectStyles=u;var c=l.render;l.render=function(t,e){return u.call(e),c(t,e)}}else{var d=l.beforeCreate;l.beforeCreate=d?[].concat(d,u):[u]}return{exports:t,options:l}}var o=a({name:\"spinner\",props:{color:{type:String,default:\"#000\"},height:{type:Number,default:64},width:{type:Number,default:64}}},function(){var t=this.$createElement,e=this._self._c||t;return e(\"svg\",{attrs:{viewBox:\"0 0 38 38\",xmlns:\"http://www.w3.org/2000/svg\",width:this.width,height:this.height,stroke:this.color}},[e(\"g\",{attrs:{fill:\"none\",\"fill-rule\":\"evenodd\"}},[e(\"g\",{attrs:{transform:\"translate(1 1)\",\"stroke-width\":\"2\"}},[e(\"circle\",{attrs:{\"stroke-opacity\":\".25\",cx:\"18\",cy:\"18\",r:\"18\"}}),e(\"path\",{attrs:{d:\"M36 18c0-9.94-8.06-18-18-18\"}},[e(\"animateTransform\",{attrs:{attributeName:\"transform\",type:\"rotate\",from:\"0 18 18\",to:\"360 18 18\",dur:\"0.8s\",repeatCount:\"indefinite\"}})],1)])])])},[],!1,null,null,null).exports,s=a({name:\"dots\",props:{color:{type:String,default:\"#000\"},height:{type:Number,default:240},width:{type:Number,default:60}}},function(){var t=this.$createElement,e=this._self._c||t;return e(\"svg\",{attrs:{viewBox:\"0 0 120 30\",xmlns:\"http://www.w3.org/2000/svg\",fill:this.color,width:this.width,height:this.height}},[e(\"circle\",{attrs:{cx:\"15\",cy:\"15\",r:\"15\"}},[e(\"animate\",{attrs:{attributeName:\"r\",from:\"15\",to:\"15\",begin:\"0s\",dur:\"0.8s\",values:\"15;9;15\",calcMode:\"linear\",repeatCount:\"indefinite\"}}),e(\"animate\",{attrs:{attributeName:\"fill-opacity\",from:\"1\",to:\"1\",begin:\"0s\",dur:\"0.8s\",values:\"1;.5;1\",calcMode:\"linear\",repeatCount:\"indefinite\"}})]),e(\"circle\",{attrs:{cx:\"60\",cy:\"15\",r:\"9\",\"fill-opacity\":\"0.3\"}},[e(\"animate\",{attrs:{attributeName:\"r\",from:\"9\",to:\"9\",begin:\"0s\",dur:\"0.8s\",values:\"9;15;9\",calcMode:\"linear\",repeatCount:\"indefinite\"}}),e(\"animate\",{attrs:{attributeName:\"fill-opacity\",from:\"0.5\",to:\"0.5\",begin:\"0s\",dur:\"0.8s\",values:\".5;1;.5\",calcMode:\"linear\",repeatCount:\"indefinite\"}})]),e(\"circle\",{attrs:{cx:\"105\",cy:\"15\",r:\"15\"}},[e(\"animate\",{attrs:{attributeName:\"r\",from:\"15\",to:\"15\",begin:\"0s\",dur:\"0.8s\",values:\"15;9;15\",calcMode:\"linear\",repeatCount:\"indefinite\"}}),e(\"animate\",{attrs:{attributeName:\"fill-opacity\",from:\"1\",to:\"1\",begin:\"0s\",dur:\"0.8s\",values:\"1;.5;1\",calcMode:\"linear\",repeatCount:\"indefinite\"}})])])},[],!1,null,null,null).exports,u=a({name:\"bars\",props:{color:{type:String,default:\"#000\"},height:{type:Number,default:40},width:{type:Number,default:40}}},function(){var t=this.$createElement,e=this._self._c||t;return e(\"svg\",{attrs:{xmlns:\"http://www.w3.org/2000/svg\",viewBox:\"0 0 30 30\",height:this.height,width:this.width,fill:this.color}},[e(\"rect\",{attrs:{x:\"0\",y:\"13\",width:\"4\",height:\"5\"}},[e(\"animate\",{attrs:{attributeName:\"height\",attributeType:\"XML\",values:\"5;21;5\",begin:\"0s\",dur:\"0.6s\",repeatCount:\"indefinite\"}}),e(\"animate\",{attrs:{attributeName:\"y\",attributeType:\"XML\",values:\"13; 5; 13\",begin:\"0s\",dur:\"0.6s\",repeatCount:\"indefinite\"}})]),e(\"rect\",{attrs:{x:\"10\",y:\"13\",width:\"4\",height:\"5\"}},[e(\"animate\",{attrs:{attributeName:\"height\",attributeType:\"XML\",values:\"5;21;5\",begin:\"0.15s\",dur:\"0.6s\",repeatCount:\"indefinite\"}}),e(\"animate\",{attrs:{attributeName:\"y\",attributeType:\"XML\",values:\"13; 5; 13\",begin:\"0.15s\",dur:\"0.6s\",repeatCount:\"indefinite\"}})]),e(\"rect\",{attrs:{x:\"20\",y:\"13\",width:\"4\",height:\"5\"}},[e(\"animate\",{attrs:{attributeName:\"height\",attributeType:\"XML\",values:\"5;21;5\",begin:\"0.3s\",dur:\"0.6s\",repeatCount:\"indefinite\"}}),e(\"animate\",{attrs:{attributeName:\"y\",attributeType:\"XML\",values:\"13; 5; 13\",begin:\"0.3s\",dur:\"0.6s\",repeatCount:\"indefinite\"}})])])},[],!1,null,null,null).exports,l=a({name:\"vue-loading\",mixins:[r],props:{active:Boolean,programmatic:Boolean,container:[Object,Function,n],isFullPage:{type:Boolean,default:!0},transition:{type:String,default:\"fade\"},canCancel:Boolean,onCancel:{type:Function,default:function(){}},color:String,backgroundColor:String,opacity:Number,width:Number,height:Number,zIndex:Number,loader:{type:String,default:\"spinner\"}},data:function(){return{isActive:this.active}},components:{Spinner:o,Dots:s,Bars:u},beforeMount:function(){this.programmatic&&(this.container?(this.isFullPage=!1,this.container.appendChild(this.$el)):document.body.appendChild(this.$el))},mounted:function(){this.programmatic&&(this.isActive=!0),document.addEventListener(\"keyup\",this.keyPress)},methods:{cancel:function(){this.canCancel&&this.isActive&&(this.hide(),this.onCancel.apply(null,arguments))},hide:function(){var t=this;this.$emit(\"hide\"),this.$emit(\"update:active\",!1),this.programmatic&&(this.isActive=!1,setTimeout(function(){var e;t.$destroy(),void 0!==(e=t.$el).remove?e.remove():e.parentNode.removeChild(e)},150))},keyPress:function(t){27===t.keyCode&&this.cancel()}},watch:{active:function(t){this.isActive=t}},beforeDestroy:function(){document.removeEventListener(\"keyup\",this.keyPress)}},function(){var t=this,e=t.$createElement,i=t._self._c||e;return i(\"transition\",{attrs:{name:t.transition}},[i(\"div\",{directives:[{name:\"show\",rawName:\"v-show\",value:t.isActive,expression:\"isActive\"}],staticClass:\"vld-overlay is-active\",class:{\"is-full-page\":t.isFullPage},style:{zIndex:this.zIndex},attrs:{tabindex:\"0\",\"aria-busy\":t.isActive,\"aria-label\":\"Loading\"}},[i(\"div\",{staticClass:\"vld-background\",style:{background:this.backgroundColor,opacity:this.opacity},on:{click:function(e){return e.preventDefault(),t.cancel(e)}}}),i(\"div\",{staticClass:\"vld-icon\"},[t._t(\"before\"),t._t(\"default\",[i(t.loader,{tag:\"component\",attrs:{color:t.color,width:t.width,height:t.height}})]),t._t(\"after\")],2)])])},[],!1,null,null,null).exports,c=function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return{show:function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:e,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:i,a=Object.assign({},e,n,{programmatic:!0}),o=new(t.extend(l))({el:document.createElement(\"div\"),propsData:a}),s=Object.assign({},i,r);return Object.keys(s).map(function(t){o.$slots[t]=s[t]}),o}}};i(0);l.install=function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},n=c(t,e,i);t.$loading=n,t.prototype.$loading=n};e.default=l}]).default});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loading-overlay/dist/vue-loading.min.js\n// module id = ZZvs\n// module chunks = 0 1 2 3 5 6 7 8 9 10 11 12 13 14 22 25 26 27 28 29 30 31 32 33 34 35 36","module.exports = { \"default\": require(\"core-js/library/fn/object/get-own-property-names\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/core-js/object/get-own-property-names.js\n// module id = aFK5\n// module chunks = 6","var interpretacija = require(\"./interpretacija\");\r\n\r\nmodule.exports = {\r\n  Interpretation: function(test, result, jedinica, dref, gref, site, interp, extend, spec) {\r\n   \r\n    var rezultat = result.trim()\r\n\r\n    switch (interp) {\r\n     case \"none\":\r\n        return [test, rezultat, interpretacija.None(rezultat, dref, gref)[0], jedinica, \"/\", interpretacija.None(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"A\":\r\n        return [test, rezultat, interpretacija.Standard(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.Standard(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"ogtt\":        \r\n        if(dref == \"0\" && gref == \"0\"){\r\n          var reference = \"/\"\r\n        }else{\r\n          var reference = dref + \" - \" + gref\r\n        }\r\n        return [test, rezultat, interpretacija.Standard(rezultat, dref, gref)[0], jedinica, reference, interpretacija.Standard(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"insul\":\r\n        if(dref == \"0\" && gref == \"0\"){\r\n          var reference = \"/\"\r\n        }else{\r\n          var reference = dref + \" - \" + gref\r\n        }\r\n        return [test, rezultat, interpretacija.Standard(rezultat, dref, gref)[0], jedinica, reference, interpretacija.Standard(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"less\":\r\n        if(dref === gref){\r\n          return [test, rezultat, interpretacija.Less(rezultat, dref, gref)[0], jedinica, \" < \" + gref, interpretacija.Less(rezultat, dref, gref)[1], extend];  \r\n        }else{\r\n          return [test, rezultat, interpretacija.Less(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.Less(rezultat, dref, gref)[1], extend];\r\n        }                \r\n        break; \r\n      case \"infekc\":\r\n        return [test, rezultat, interpretacija.Infekcija(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.Infekcija(rezultat, dref, gref)[1], extend];             \r\n        break; \r\n      case \"grt\":\r\n        return [test, rezultat, interpretacija.Greater(rezultat, dref, gref)[0], jedinica, \" > \" + gref, interpretacija.Greater(rezultat, dref, gref)[1], extend];        \r\n        break; \r\n      case \"grte\":\r\n        return [test, rezultat, interpretacija.GreaterEqual(rezultat, dref, gref)[0], jedinica, \" ≥ \" + gref, interpretacija.GreaterEqual(rezultat, dref, gref)[1], extend];        \r\n        break;  \r\n      case \"neg\":\r\n        return [test, rezultat, interpretacija.Negativan(rezultat, dref, gref)[0], jedinica, \"negativan\", interpretacija.Negativan(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"reakt\":\r\n        return [test, rezultat, interpretacija.Reaktivan(rezultat, dref, gref)[0], jedinica, \"negativan\", interpretacija.Reaktivan(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"norm\":\r\n        return [test, rezultat, interpretacija.Normalan(rezultat, dref, gref)[0], jedinica, \"normalna\", interpretacija.Normalan(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"norma\":\r\n        return [test, rezultat, interpretacija.Normalan(rezultat, dref, gref)[0], jedinica, \"normalan\", interpretacija.Normalan(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"ured\":\r\n        return [test, rezultat, interpretacija.Uredan(rezultat, dref, gref)[0], jedinica, \"uredna\", interpretacija.Uredan(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"plus\":\r\n        return [test, rezultat, interpretacija.Plus(rezultat, dref, gref)[0], jedinica, \"+ + +\", interpretacija.Plus(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"morf\":\r\n        return [test, rezultat, interpretacija.Morf(rezultat, dref, gref)[0], jedinica, gref, interpretacija.Morf(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"titar\":\r\n          return [test, rezultat, interpretacija.Titar(rezultat, dref, gref)[0], jedinica, \"< \" + dref + \":\" + gref, interpretacija.Titar(rezultat, dref, gref)[1], extend];\r\n          break;\r\n      case \"tsh\":\r\n        return [test, rezultat, interpretacija.TSH(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.TSH(rezultat, dref, gref)[1], extend];\r\n        break; \r\n      case \"trg\":      \r\n        return [test, rezultat, interpretacija.TRG(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.TRG(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"hol\":      \r\n        return [test, rezultat, interpretacija.HOL(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.HOL(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"hdl\":      \r\n        return [test, rezultat, interpretacija.HDL(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.HDL(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"ldl\":      \r\n        return [test, rezultat, interpretacija.LDL(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.LDL(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"fpsa\":      \r\n        return [test, rezultat, interpretacija.fPSA(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.fPSA(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"sediment\":\r\n        return [test, rezultat, interpretacija.Sedimentacija(rezultat, dref, gref)[0], jedinica, \"< \" + gref, interpretacija.Sedimentacija(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"bistar\":\r\n        return [test, rezultat, interpretacija.Bistar(rezultat, dref, gref)[0], jedinica, \"bistar\", interpretacija.Bistar(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"boja\":\r\n        return [test, rezultat, interpretacija.Boja(rezultat, dref, gref)[0], jedinica, \"svjetlo žut\", interpretacija.Boja(rezultat, dref, gref)[1], extend];\r\n        break;      \r\n      case \"nesto\":\r\n        return [test, rezultat, interpretacija.Nesto(rezultat, dref, gref)[0], jedinica, \"nešto\", interpretacija.Nesto(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"exists\":\r\n        return [test, rezultat, interpretacija.Exists(rezultat, dref, gref)[0], jedinica, \" \", interpretacija.Exists(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"blst\":\r\n        return [test, rezultat, interpretacija.Blasti(rezultat, dref, gref)[0], jedinica, gref, interpretacija.Blasti(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"leu\":      \r\n        return [test, rezultat, interpretacija.LeuErc(rezultat, dref, gref)[0], jedinica, dref + \" - \" + gref, interpretacija.LeuErc(rezultat, dref, gref)[1], extend];\r\n        break;\r\n      case \"spec\":      \r\n        return [test, rezultat, interpretacija.Specific(rezultat, dref, gref)[0], jedinica, spec, interpretacija.Specific(rezultat, dref, gref)[1], extend];\r\n        break;      \r\n      default:\r\n        return [test, rezultat, interpretacija.None(rezultat, dref, gref)[0], jedinica, \"/\", interpretacija.None(rezultat, dref, gref)[1], extend];\r\n        break;\r\n    }\r\n  }\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/obrada/functions/reference.js","require('../../modules/es6.object.get-own-property-names');\nvar $Object = require('../../modules/_core').Object;\nmodule.exports = function getOwnPropertyNames(it) {\n  return $Object.getOwnPropertyNames(it);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/fn/object/get-own-property-names.js\n// module id = gAsd\n// module chunks = 6","export default {\r\n  hex2rgb(hex, opacity) {\r\n    hex = (hex + \"\").trim();\r\n\r\n    let rgb = null;\r\n    let match = hex.match(/^#?(([0-9a-zA-Z]{3}){1,3})$/);\r\n\r\n    if (!match) {\r\n      return null;\r\n    }\r\n\r\n    rgb = {};\r\n\r\n    hex = match[1];\r\n\r\n    if (hex.length === 6) {\r\n      rgb.r = parseInt(hex.substring(0, 2), 16);\r\n      rgb.g = parseInt(hex.substring(2, 4), 16);\r\n      rgb.b = parseInt(hex.substring(4, 6), 16);\r\n    } else if (hex.length === 3) {\r\n      rgb.r = parseInt(hex.substring(0, 1) + hex.substring(0, 1), 16);\r\n      rgb.g = parseInt(hex.substring(1, 2) + hex.substring(1, 2), 16);\r\n      rgb.b = parseInt(hex.substring(2, 3) + hex.substring(2, 3), 16);\r\n    }\r\n\r\n    rgb.css = \"rgb\" + (opacity ? \"a\" : \"\") + \"(\";\r\n    rgb.css += rgb.r + \",\" + rgb.g + \",\" + rgb.b;\r\n    rgb.css += (opacity ? \",\" + opacity : \"\") + \")\";\r\n\r\n    return rgb;\r\n  }\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/utils.js","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \".circle[data-v-1099f53e]{width:.4rem;height:.4rem;border-radius:50%;display:inline-block}\", \"\", {\"version\":3,\"sources\":[\"C:/Projects/extralab/client/src/components/obrada/BadgeColumn.vue\"],\"names\":[],\"mappings\":\"AACA,yBACE,YAAc,AACd,aAAe,AACf,kBAAmB,AACnB,oBAAsB,CACvB\",\"file\":\"BadgeColumn.vue\",\"sourcesContent\":[\"\\n.circle[data-v-1099f53e] {\\n  width: 0.4rem;\\n  height: 0.4rem;\\n  border-radius: 50%;\\n  display: inline-block;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader?{\"minimize\":true,\"sourceMap\":true}!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-1099f53e\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/sass-loader/lib/loader.js?{\"sourceMap\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/components/obrada/BadgeColumn.vue\n// module id = iF2Y\n// module chunks = 6 15 23 42","// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)\nvar $keys = require('./_object-keys-internal');\nvar hiddenKeys = require('./_enum-bug-keys').concat('length', 'prototype');\n\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return $keys(O, hiddenKeys);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_object-gopn.js\n// module id = n0T6\n// module chunks = 6"],"sourceRoot":""}